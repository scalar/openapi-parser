openapi: 3.0.0
info:
  version: 2018-04-01
  x-release: v4
  title: Amazon QuickSight
  description: <fullname>Amazon QuickSight API Reference</fullname> <p>Amazon QuickSight is a fully managed, serverless business intelligence service for the Amazon Web Services Cloud that makes it easy to extend data and insights to every user in your organization. This API reference contains documentation for a programming interface that you can use to manage Amazon QuickSight. </p>
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: quicksight
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/quicksight-2018-04-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/quicksight/
servers:
  - url: http://quicksight.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon QuickSight multi-region endpoint
  - url: https://quicksight.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Amazon QuickSight multi-region endpoint
  - url: http://quicksight.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon QuickSight endpoint for China (Beijing) and China (Ningxia)
  - url: https://quicksight.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Amazon QuickSight endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions/{IngestionId}":
    delete:
      operationId: CancelIngestion
      description: Cancels an ongoing ingestion of data into SPICE.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelIngestionResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          schema:
            type: string
        - name: IngestionId
          in: path
          required: true
          description: An ID for the ingestion.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9-_]+$
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: CreateIngestion
      description: <p>Creates and starts a new SPICE ingestion for a dataset. You can manually refresh datasets in an Enterprise edition account 32 times in a 24-hour period. You can manually refresh datasets in a Standard edition account 8 times in a 24-hour period. Each 24-hour period is measured starting 24 hours before the current date and time.</p> <p>Any ingestions operating on tagged datasets inherit the same tags automatically for use in access control. For an example, see <a href="http://aws.amazon.com/premiumsupport/knowledge-center/iam-ec2-resource-tags/">How do I create an IAM policy to control access to Amazon EC2 resources using tags?</a> in the Amazon Web Services Knowledge Center. Tags are visible on the tagged dataset, but not on the ingestion resource.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateIngestionResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          schema:
            type: string
        - name: IngestionId
          in: path
          required: true
          description: An ID for the ingestion.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9-_]+$
            minLength: 1
            maxLength: 128
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IngestionType:
                  description: This defines the type of ingestion user wants to trigger. This is part of create ingestion request.
                  type: string
                  enum:
                    - INCREMENTAL_REFRESH
                    - FULL_REFRESH
    get:
      operationId: DescribeIngestion
      description: Describes a SPICE ingestion.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeIngestionResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          schema:
            type: string
        - name: IngestionId
          in: path
          required: true
          description: An ID for the ingestion.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9-_]+$
            minLength: 1
            maxLength: 128
  "/accounts/{AwsAccountId}/customizations":
    post:
      operationId: CreateAccountCustomization
      description: <p>Creates Amazon QuickSight customizations for the current Amazon Web Services Region. Currently, you can add a custom default theme by using the <code>CreateAccountCustomization</code> or <code>UpdateAccountCustomization</code> API operation. To further customize Amazon QuickSight by removing Amazon QuickSight sample assets and videos for all new users, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-quicksight.html">Customizing Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide.</i> </p> <p>You can create customizations for your Amazon Web Services account or, if you specify a namespace, for a QuickSight namespace instead. Customizations that apply to a namespace always override customizations that apply to an Amazon Web Services account. To find out which customizations apply, use the <code>DescribeAccountCustomization</code> API operation.</p> <p>Before you use the <code>CreateAccountCustomization</code> API operation to add a theme as the namespace default, make sure that you first share the theme with the namespace. If you don't share it with the namespace, the theme isn't visible to your users even if you make it the default theme. To check if the theme is shared, view the current permissions by using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeThemePermissions.html">DescribeThemePermissions</a> </code> API operation. To share the theme, grant permissions by using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateThemePermissions.html">UpdateThemePermissions</a> </code> API operation. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccountCustomizationResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "487":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that you want to customize Amazon QuickSight for.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: namespace
          in: query
          required: false
          description: The Amazon QuickSight namespace that you want to add customizations to.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountCustomization
              properties:
                AccountCustomization:
                  description: The Amazon QuickSight customizations associated with your Amazon Web Services account or a QuickSight namespace in a specific Amazon Web Services Region.
                  type: object
                  properties:
                    DefaultTheme:
                      allOf:
                        - $ref: "#/components/schemas/Arn"
                        - description: The default theme for this Amazon QuickSight subscription.
                    DefaultEmailCustomizationTemplate:
                      allOf:
                        - $ref: "#/components/schemas/Arn"
                        - description: The default email customization template.
                Tags:
                  description: A list of the tags that you want to attach to this resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteAccountCustomization
      description: Deletes all Amazon QuickSight customizations in this Amazon Web Services Region for the specified Amazon Web Services account and Amazon QuickSight namespace.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAccountCustomizationResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that you want to delete Amazon QuickSight customizations from in this Amazon Web Services Region.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: namespace
          in: query
          required: false
          description: The Amazon QuickSight namespace that you're deleting the customizations from.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    get:
      operationId: DescribeAccountCustomization
      description: <p>Describes the customizations associated with the provided Amazon Web Services account and Amazon Amazon QuickSight namespace in an Amazon Web Services Region. The Amazon QuickSight console evaluates which customizations to apply by running this API operation with the <code>Resolved</code> flag included. </p> <p>To determine what customizations display when you run this command, it can help to visualize the relationship of the entities involved. </p> <ul> <li> <p> <code>Amazon Web Services account</code> - The Amazon Web Services account exists at the top of the hierarchy. It has the potential to use all of the Amazon Web Services Regions and Amazon Web Services Services. When you subscribe to Amazon QuickSight, you choose one Amazon Web Services Region to use as your home Region. That's where your free SPICE capacity is located. You can use Amazon QuickSight in any supported Amazon Web Services Region. </p> </li> <li> <p> <code>Amazon Web Services Region</code> - In each Amazon Web Services Region where you sign in to Amazon QuickSight at least once, Amazon QuickSight acts as a separate instance of the same service. If you have a user directory, it resides in us-east-1, which is the US East (N. Virginia). Generally speaking, these users have access to Amazon QuickSight in any Amazon Web Services Region, unless they are constrained to a namespace. </p> <p>To run the command in a different Amazon Web Services Region, you change your Region settings. If you're using the CLI, you can use one of the following options:</p> <ul> <li> <p>Use <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-options.html">command line options</a>. </p> </li> <li> <p>Use <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-profiles.html">named profiles</a>. </p> </li> <li> <p>Run <code>aws configure</code> to change your default Amazon Web Services Region. Use Enter to key the same settings for your keys. For more information, see <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html">Configuring the CLI</a>.</p> </li> </ul> </li> <li> <p> <code>Namespace</code> - A QuickSight namespace is a partition that contains users and assets (data sources, datasets, dashboards, and so on). To access assets that are in a specific namespace, users and groups must also be part of the same namespace. People who share a namespace are completely isolated from users and assets in other namespaces, even if they are in the same Amazon Web Services account and Amazon Web Services Region.</p> </li> <li> <p> <code>Applied customizations</code> - Within an Amazon Web Services Region, a set of Amazon QuickSight customizations can apply to an Amazon Web Services account or to a namespace. Settings that you apply to a namespace override settings that you apply to an Amazon Web Services account. All settings are isolated to a single Amazon Web Services Region. To apply them in other Amazon Web Services Regions, run the <code>CreateAccountCustomization</code> command in each Amazon Web Services Region where you want to apply the same customizations. </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAccountCustomizationResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "485":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that you want to describe Amazon QuickSight customizations for.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: namespace
          in: query
          required: false
          description: The Amazon QuickSight namespace that you want to describe Amazon QuickSight customizations for.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
        - name: resolved
          in: query
          required: false
          description: "The <code>Resolved</code> flag works with the other parameters to determine which view of Amazon QuickSight customizations is returned. You can add this flag to your command to use the same view that Amazon QuickSight uses to identify which customizations to apply to the console. Omit this flag, or set it to <code>no-resolved</code>, to reveal customizations that are configured at different levels. "
          schema:
            type: boolean
    put:
      operationId: UpdateAccountCustomization
      description: <p>Updates Amazon QuickSight customizations for the current Amazon Web Services Region. Currently, the only customization that you can use is a theme.</p> <p>You can use customizations for your Amazon Web Services account or, if you specify a namespace, for a Amazon QuickSight namespace instead. Customizations that apply to a namespace override customizations that apply to an Amazon Web Services account. To find out which customizations apply, use the <code>DescribeAccountCustomization</code> API operation. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAccountCustomizationResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that you want to update Amazon QuickSight customizations for.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: namespace
          in: query
          required: false
          description: The namespace that you want to update Amazon QuickSight customizations for.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountCustomization
              properties:
                AccountCustomization:
                  description: The Amazon QuickSight customizations associated with your Amazon Web Services account or a QuickSight namespace in a specific Amazon Web Services Region.
                  type: object
                  properties:
                    DefaultTheme:
                      allOf:
                        - $ref: "#/components/schemas/Arn"
                        - description: The default theme for this Amazon QuickSight subscription.
                    DefaultEmailCustomizationTemplate:
                      allOf:
                        - $ref: "#/components/schemas/Arn"
                        - description: The default email customization template.
  "/account/{AwsAccountId}":
    post:
      operationId: CreateAccountSubscription
      description: <p>Creates an Amazon QuickSight account, or subscribes to Amazon QuickSight Q.</p> <p>The Amazon Web Services Region for the account is derived from what is configured in the CLI or SDK. This operation isn't supported in the US East (Ohio) Region, South America (Sao Paulo) Region, or Asia Pacific (Singapore) Region. </p> <p>Before you use this operation, make sure that you can connect to an existing Amazon Web Services account. If you don't have an Amazon Web Services account, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/setting-up-aws-sign-up.html">Sign up for Amazon Web Services</a> in the <i>Amazon QuickSight User Guide</i>. The person who signs up for Amazon QuickSight needs to have the correct Identity and Access Management (IAM) permissions. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/iam-policy-examples.html">IAM Policy Examples for Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>If your IAM policy includes both the <code>Subscribe</code> and <code>CreateAccountSubscription</code> actions, make sure that both actions are set to <code>Allow</code>. If either action is set to <code>Deny</code>, the <code>Deny</code> action prevails and your API call fails.</p> <p>You can't pass an existing IAM role to access other Amazon Web Services services using this API operation. To pass your existing IAM role to Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/security_iam_service-with-iam.html#security-create-iam-role">Passing IAM roles to Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>You can't set default resource access on the new account from the Amazon QuickSight API. Instead, add default resource access from the Amazon QuickSight console. For more information about setting default resource access to Amazon Web Services services, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/scoping-policies-defaults.html">Setting default resource access to Amazon Web Services services</a> in the <i>Amazon QuickSight User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccountSubscriptionResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "485":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "486":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "488":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID of the account that you're using to create your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Edition
                - AuthenticationMethod
                - AccountName
                - NotificationEmail
              properties:
                Edition:
                  description: <p>The edition of Amazon QuickSight that you want your account to have. Currently, you can choose from <code>ENTERPRISE</code> or <code>ENTERPRISE_AND_Q</code>.</p> <p>If you choose <code>ENTERPRISE_AND_Q</code>, the following parameters are required:</p> <ul> <li> <p> <code>FirstName</code> </p> </li> <li> <p> <code>LastName</code> </p> </li> <li> <p> <code>EmailAddress</code> </p> </li> <li> <p> <code>ContactNumber</code> </p> </li> </ul>
                  type: string
                  enum:
                    - STANDARD
                    - ENTERPRISE
                    - ENTERPRISE_AND_Q
                AuthenticationMethod:
                  description: <p>The method that you want to use to authenticate your Amazon QuickSight account. Currently, the valid values for this parameter are <code>IAM_AND_QUICKSIGHT</code>, <code>IAM_ONLY</code>, and <code>ACTIVE_DIRECTORY</code>.</p> <p>If you choose <code>ACTIVE_DIRECTORY</code>, provide an <code>ActiveDirectoryName</code> and an <code>AdminGroup</code> associated with your Active Directory.</p>
                  type: string
                  enum:
                    - IAM_AND_QUICKSIGHT
                    - IAM_ONLY
                    - ACTIVE_DIRECTORY
                AccountName:
                  description: The name of your Amazon QuickSight account. This name is unique over all of Amazon Web Services, and it appears only when users sign in. You can't change <code>AccountName</code> value after the Amazon QuickSight account is created.
                  type: string
                NotificationEmail:
                  description: The email address that you want Amazon QuickSight to send notifications to regarding your Amazon QuickSight account or Amazon QuickSight subscription.
                  type: string
                ActiveDirectoryName:
                  description: The name of your Active Directory. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account.
                  type: string
                Realm:
                  description: The realm of the Active Directory that is associated with your Amazon QuickSight account. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account.
                  type: string
                DirectoryId:
                  description: The ID of the Active Directory that is associated with your Amazon QuickSight account.
                  type: string
                AdminGroup:
                  description: The admin group associated with your Active Directory. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account. For more information about using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the Amazon QuickSight User Guide.
                  type: array
                  items:
                    $ref: "#/components/schemas/String"
                AuthorGroup:
                  description: The author group associated with your Active Directory. For more information about using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the Amazon QuickSight User Guide.
                  type: array
                  items:
                    $ref: "#/components/schemas/String"
                ReaderGroup:
                  description: The reader group associated with your Active Direcrtory. For more information about using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the <i>Amazon QuickSight User Guide</i>.
                  type: array
                  items:
                    $ref: "#/components/schemas/String"
                FirstName:
                  description: The first name of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
                  type: string
                LastName:
                  description: The last name of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
                  type: string
                EmailAddress:
                  description: The email address of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
                  type: string
                ContactNumber:
                  description: A 10-digit phone number for the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteAccountSubscription
      description: Use the <code>DeleteAccountSubscription</code> operation to delete an Amazon QuickSight account. This operation will result in an error message if you have configured your account termination protection settings to <code>True</code>. To change this setting and delete your account, call the <code>UpdateAccountSettings</code> API and set the value of the <code>TerminationProtectionEnabled</code> parameter to <code>False</code>, then make another call to the <code>DeleteAccountSubscription</code> API.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAccountSubscriptionResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID of the account that you want to delete.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
    get:
      operationId: DescribeAccountSubscription
      description: Use the DescribeAccountSubscription operation to receive a description of an Amazon QuickSight account's subscription. A successful API call returns an <code>AccountInfo</code> object that includes an account's name, subscription status, authentication type, edition, and notification email address.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAccountSubscriptionResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "485":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID associated with your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
  "/accounts/{AwsAccountId}/analyses/{AnalysisId}":
    post:
      operationId: CreateAnalysis
      description: Creates an analysis in Amazon QuickSight. Analyses can be created either from a template or from an <code>AnalysisDefinition</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAnalysisResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account where you are creating an analysis.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID for the analysis that you're creating. This ID displays in the URL of the analysis.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: "A descriptive name for the analysis that you're creating. This name displays for the analysis in the Amazon QuickSight console. "
                  type: string
                  minLength: 1
                  maxLength: 2048
                Parameters:
                  description: A list of Amazon QuickSight parameters and the list's override values.
                  type: object
                  properties:
                    StringParameters:
                      allOf:
                        - $ref: "#/components/schemas/StringParameterList"
                        - description: The parameters that have a data type of string.
                    IntegerParameters:
                      allOf:
                        - $ref: "#/components/schemas/IntegerParameterList"
                        - description: The parameters that have a data type of integer.
                    DecimalParameters:
                      allOf:
                        - $ref: "#/components/schemas/DecimalParameterList"
                        - description: The parameters that have a data type of decimal.
                    DateTimeParameters:
                      allOf:
                        - $ref: "#/components/schemas/DateTimeParameterList"
                        - description: The parameters that have a data type of date-time.
                Permissions:
                  description: <p>A structure that describes the principals and the resource-level permissions on an analysis. You can use the <code>Permissions</code> structure to grant permissions by providing a list of Identity and Access Management (IAM) action information for each principal listed by Amazon Resource Name (ARN). </p> <p>To specify no permissions, omit <code>Permissions</code>.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
                SourceEntity:
                  description: The source entity of an analysis.
                  type: object
                  properties:
                    SourceTemplate:
                      allOf:
                        - $ref: "#/components/schemas/AnalysisSourceTemplate"
                        - description: The source template for the source entity of the analysis.
                ThemeArn:
                  description: The ARN for the theme to apply to the analysis that you're creating. To see the theme in the Amazon QuickSight console, make sure that you have access to it.
                  type: string
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the analysis.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 200
                Definition:
                  description: The definition of an analysis.
                  type: object
                  properties:
                    DataSetIdentifierDeclarations:
                      allOf:
                        - $ref: "#/components/schemas/DataSetIdentifierDeclarationList"
                        - description: An array of dataset identifier declarations. This mapping allows the usage of dataset identifiers instead of dataset ARNs throughout analysis sub-structures.
                    Sheets:
                      allOf:
                        - $ref: "#/components/schemas/SheetDefinitionList"
                        - description: An array of sheet definitions for an analysis. Each <code>SheetDefinition</code> provides detailed information about a sheet within this analysis.
                    CalculatedFields:
                      allOf:
                        - $ref: "#/components/schemas/CalculatedFields"
                        - description: An array of calculated field definitions for the analysis.
                    ParameterDeclarations:
                      allOf:
                        - $ref: "#/components/schemas/ParameterDeclarationList"
                        - description: <p>An array of parameter declarations for an analysis.</p> <p>Parameters are named variables that can transfer a value for use by an action or an object.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
                    FilterGroups:
                      allOf:
                        - $ref: "#/components/schemas/FilterGroupList"
                        - description: <p>Filter definitions for an analysis.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/adding-a-filter.html">Filtering Data in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
                    ColumnConfigurations:
                      allOf:
                        - $ref: "#/components/schemas/ColumnConfigurationList"
                        - description: " An array of analysis-level column configurations. Column configurations can be used to set default formatting for a column to be used throughout an analysis. "
                    AnalysisDefaults:
                      $ref: "#/components/schemas/AnalysisDefaults"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteAnalysis
      description: <p>Deletes an analysis from Amazon QuickSight. You can optionally include a recovery window during which you can restore the analysis. If you don't specify a recovery window value, the operation defaults to 30 days. Amazon QuickSight attaches a <code>DeletionTime</code> stamp to the response that specifies the end of the recovery window. At the end of the recovery window, Amazon QuickSight deletes the analysis permanently.</p> <p>At any time before recovery window ends, you can use the <code>RestoreAnalysis</code> API operation to remove the <code>DeletionTime</code> stamp and cancel the deletion of the analysis. The analysis remains visible in the API until it's deleted, so you can describe it but you can't make a template from it.</p> <p>An analysis that's scheduled for deletion isn't accessible in the Amazon QuickSight console. To access it in the console, restore it. Deleting an analysis doesn't delete the dashboards that you publish from it.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAnalysisResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account where you want to delete an analysis.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID of the analysis that you're deleting.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: recovery-window-in-days
          in: query
          required: false
          description: A value that specifies the number of days that Amazon QuickSight waits before it deletes the analysis. You can't use this parameter with the <code>ForceDeleteWithoutRecovery</code> option in the same API call. The default value is 30.
          schema:
            type: integer
            minimum: 7
            maximum: 30
        - name: force-delete-without-recovery
          in: query
          required: false
          description: "This option defaults to the value <code>NoForceDeleteWithoutRecovery</code>. To immediately delete the analysis, add the <code>ForceDeleteWithoutRecovery</code> option. You can't restore an analysis after it's deleted. "
          schema:
            type: boolean
    get:
      operationId: DescribeAnalysis
      description: Provides a summary of the metadata for an analysis.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAnalysisResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the analysis. You must be using the Amazon Web Services account that the analysis is in.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID of the analysis that you're describing. The ID is part of the URL of the analysis.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
    put:
      operationId: UpdateAnalysis
      description: Updates an analysis in Amazon QuickSight
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAnalysisResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the analysis that you're updating.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID for the analysis that you're updating. This ID displays in the URL of the analysis.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: A descriptive name for the analysis that you're updating. This name displays for the analysis in the Amazon QuickSight console.
                  type: string
                  minLength: 1
                  maxLength: 2048
                Parameters:
                  description: A list of Amazon QuickSight parameters and the list's override values.
                  type: object
                  properties:
                    StringParameters:
                      allOf:
                        - $ref: "#/components/schemas/StringParameterList"
                        - description: The parameters that have a data type of string.
                    IntegerParameters:
                      allOf:
                        - $ref: "#/components/schemas/IntegerParameterList"
                        - description: The parameters that have a data type of integer.
                    DecimalParameters:
                      allOf:
                        - $ref: "#/components/schemas/DecimalParameterList"
                        - description: The parameters that have a data type of decimal.
                    DateTimeParameters:
                      allOf:
                        - $ref: "#/components/schemas/DateTimeParameterList"
                        - description: The parameters that have a data type of date-time.
                SourceEntity:
                  description: The source entity of an analysis.
                  type: object
                  properties:
                    SourceTemplate:
                      allOf:
                        - $ref: "#/components/schemas/AnalysisSourceTemplate"
                        - description: The source template for the source entity of the analysis.
                ThemeArn:
                  description: The Amazon Resource Name (ARN) for the theme to apply to the analysis that you're creating. To see the theme in the Amazon QuickSight console, make sure that you have access to it.
                  type: string
                Definition:
                  description: The definition of an analysis.
                  type: object
                  properties:
                    DataSetIdentifierDeclarations:
                      allOf:
                        - $ref: "#/components/schemas/DataSetIdentifierDeclarationList"
                        - description: An array of dataset identifier declarations. This mapping allows the usage of dataset identifiers instead of dataset ARNs throughout analysis sub-structures.
                    Sheets:
                      allOf:
                        - $ref: "#/components/schemas/SheetDefinitionList"
                        - description: An array of sheet definitions for an analysis. Each <code>SheetDefinition</code> provides detailed information about a sheet within this analysis.
                    CalculatedFields:
                      allOf:
                        - $ref: "#/components/schemas/CalculatedFields"
                        - description: An array of calculated field definitions for the analysis.
                    ParameterDeclarations:
                      allOf:
                        - $ref: "#/components/schemas/ParameterDeclarationList"
                        - description: <p>An array of parameter declarations for an analysis.</p> <p>Parameters are named variables that can transfer a value for use by an action or an object.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
                    FilterGroups:
                      allOf:
                        - $ref: "#/components/schemas/FilterGroupList"
                        - description: <p>Filter definitions for an analysis.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/adding-a-filter.html">Filtering Data in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
                    ColumnConfigurations:
                      allOf:
                        - $ref: "#/components/schemas/ColumnConfigurationList"
                        - description: " An array of analysis-level column configurations. Column configurations can be used to set default formatting for a column to be used throughout an analysis. "
                    AnalysisDefaults:
                      $ref: "#/components/schemas/AnalysisDefaults"
  "/accounts/{AwsAccountId}/dashboards/{DashboardId}":
    post:
      operationId: CreateDashboard
      description: <p>Creates a dashboard from either a template or directly with a <code>DashboardDefinition</code>. To first create a template, see the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CreateTemplate.html">CreateTemplate</a> </code> API operation.</p> <p>A dashboard is an entity in Amazon QuickSight that identifies Amazon QuickSight reports, created from analyses. You can share Amazon QuickSight dashboards. With the right permissions, you can create scheduled email reports from them. If you have the correct permissions, you can create a dashboard from a template that exists in a different Amazon Web Services account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDashboardResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account where you want to create the dashboard.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard, also added to the IAM policy.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The display name of the dashboard.
                  type: string
                  minLength: 1
                  maxLength: 2048
                Parameters:
                  description: A list of Amazon QuickSight parameters and the list's override values.
                  type: object
                  properties:
                    StringParameters:
                      allOf:
                        - $ref: "#/components/schemas/StringParameterList"
                        - description: The parameters that have a data type of string.
                    IntegerParameters:
                      allOf:
                        - $ref: "#/components/schemas/IntegerParameterList"
                        - description: The parameters that have a data type of integer.
                    DecimalParameters:
                      allOf:
                        - $ref: "#/components/schemas/DecimalParameterList"
                        - description: The parameters that have a data type of decimal.
                    DateTimeParameters:
                      allOf:
                        - $ref: "#/components/schemas/DateTimeParameterList"
                        - description: The parameters that have a data type of date-time.
                Permissions:
                  description: <p>A structure that contains the permissions of the dashboard. You can use this structure for granting permissions by providing a list of IAM action information for each principal ARN. </p> <p>To specify no permissions, omit the permissions list.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
                SourceEntity:
                  description: Dashboard source entity.
                  type: object
                  properties:
                    SourceTemplate:
                      allOf:
                        - $ref: "#/components/schemas/DashboardSourceTemplate"
                        - description: Source template.
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 200
                VersionDescription:
                  description: A description for the first version of the dashboard being created.
                  type: string
                  minLength: 1
                  maxLength: 512
                DashboardPublishOptions:
                  description: Dashboard publish options.
                  type: object
                  properties:
                    AdHocFilteringOption:
                      allOf:
                        - $ref: "#/components/schemas/AdHocFilteringOption"
                        - description: Ad hoc (one-time) filtering option.
                    ExportToCSVOption:
                      allOf:
                        - $ref: "#/components/schemas/ExportToCSVOption"
                        - description: Export to .csv option.
                    SheetControlsOption:
                      allOf:
                        - $ref: "#/components/schemas/SheetControlsOption"
                        - description: Sheet controls option.
                    VisualPublishOptions:
                      allOf:
                        - $ref: "#/components/schemas/DashboardVisualPublishOptions"
                        - deprecated: true
                          description: The visual publish options of a visual in a dashboard.VisualPublishOptions property will reach its end of standard support in a future release. To perform this action, use ExportWithHiddenFields.
                    SheetLayoutElementMaximizationOption:
                      allOf:
                        - $ref: "#/components/schemas/SheetLayoutElementMaximizationOption"
                        - description: The sheet layout maximization options of a dashbaord.
                    VisualMenuOption:
                      allOf:
                        - $ref: "#/components/schemas/VisualMenuOption"
                        - description: The menu options of a visual in a dashboard.
                    VisualAxisSortOption:
                      allOf:
                        - $ref: "#/components/schemas/VisualAxisSortOption"
                        - description: The axis sort options of a dashboard.
                    ExportWithHiddenFieldsOption:
                      allOf:
                        - $ref: "#/components/schemas/ExportWithHiddenFieldsOption"
                        - description: Determines if hidden fields are exported with a dashboard.
                    DataPointDrillUpDownOption:
                      allOf:
                        - $ref: "#/components/schemas/DataPointDrillUpDownOption"
                        - description: The drill-down options of data points in a dashboard.
                    DataPointMenuLabelOption:
                      allOf:
                        - $ref: "#/components/schemas/DataPointMenuLabelOption"
                        - description: The data point menu label options of a dashboard.
                    DataPointTooltipOption:
                      allOf:
                        - $ref: "#/components/schemas/DataPointTooltipOption"
                        - description: The data point tool tip options of a dashboard.
                ThemeArn:
                  description: The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that is used in the source entity. The theme ARN must exist in the same Amazon Web Services account where you create the dashboard.
                  type: string
                Definition:
                  description: The contents of a dashboard.
                  type: object
                  properties:
                    DataSetIdentifierDeclarations:
                      allOf:
                        - $ref: "#/components/schemas/DataSetIdentifierDeclarationList"
                        - description: An array of dataset identifier declarations. With this mapping,you can use dataset identifiers instead of dataset Amazon Resource Names (ARNs) throughout the dashboard's sub-structures.
                    Sheets:
                      allOf:
                        - $ref: "#/components/schemas/SheetDefinitionList"
                        - description: An array of sheet definitions for a dashboard.
                    CalculatedFields:
                      allOf:
                        - $ref: "#/components/schemas/CalculatedFields"
                        - description: An array of calculated field definitions for the dashboard.
                    ParameterDeclarations:
                      allOf:
                        - $ref: "#/components/schemas/ParameterDeclarationList"
                        - description: <p>The parameter declarations for a dashboard. Parameters are named variables that can transfer a value for use by an action or an object.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
                    FilterGroups:
                      allOf:
                        - $ref: "#/components/schemas/FilterGroupList"
                        - description: <p>The filter definitions for a dashboard.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/adding-a-filter.html">Filtering Data in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
                    ColumnConfigurations:
                      allOf:
                        - $ref: "#/components/schemas/ColumnConfigurationList"
                        - description: "An array of dashboard-level column configurations. Column configurations are used to set the default formatting for a column that is used throughout a dashboard. "
                    AnalysisDefaults:
                      $ref: "#/components/schemas/AnalysisDefaults"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteDashboard
      description: Deletes a dashboard.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDashboardResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the dashboard that you're deleting.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: version-number
          in: query
          required: false
          description: The version number of the dashboard. If the version number property is provided, only the specified version of the dashboard is deleted.
          schema:
            type: integer
            minimum: 1
    get:
      operationId: DescribeDashboard
      description: Provides a summary for a dashboard.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDashboardResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the dashboard that you're describing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: version-number
          in: query
          required: false
          description: "The version number for the dashboard. If a version number isn't passed, the latest published dashboard version is described. "
          schema:
            type: integer
            minimum: 1
        - name: alias-name
          in: query
          required: false
          description: The alias name.
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateDashboard
      description: <p>Updates a dashboard in an Amazon Web Services account.</p> <note> <p>Updating a Dashboard creates a new dashboard version but does not immediately publish the new version. You can update the published version of a dashboard by using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateDashboardPublishedVersion.html">UpdateDashboardPublishedVersion</a> </code> API operation.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDashboardResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the dashboard that you're updating.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The display name of the dashboard.
                  type: string
                  minLength: 1
                  maxLength: 2048
                SourceEntity:
                  description: Dashboard source entity.
                  type: object
                  properties:
                    SourceTemplate:
                      allOf:
                        - $ref: "#/components/schemas/DashboardSourceTemplate"
                        - description: Source template.
                Parameters:
                  description: A list of Amazon QuickSight parameters and the list's override values.
                  type: object
                  properties:
                    StringParameters:
                      allOf:
                        - $ref: "#/components/schemas/StringParameterList"
                        - description: The parameters that have a data type of string.
                    IntegerParameters:
                      allOf:
                        - $ref: "#/components/schemas/IntegerParameterList"
                        - description: The parameters that have a data type of integer.
                    DecimalParameters:
                      allOf:
                        - $ref: "#/components/schemas/DecimalParameterList"
                        - description: The parameters that have a data type of decimal.
                    DateTimeParameters:
                      allOf:
                        - $ref: "#/components/schemas/DateTimeParameterList"
                        - description: The parameters that have a data type of date-time.
                VersionDescription:
                  description: A description for the first version of the dashboard being created.
                  type: string
                  minLength: 1
                  maxLength: 512
                DashboardPublishOptions:
                  description: Dashboard publish options.
                  type: object
                  properties:
                    AdHocFilteringOption:
                      allOf:
                        - $ref: "#/components/schemas/AdHocFilteringOption"
                        - description: Ad hoc (one-time) filtering option.
                    ExportToCSVOption:
                      allOf:
                        - $ref: "#/components/schemas/ExportToCSVOption"
                        - description: Export to .csv option.
                    SheetControlsOption:
                      allOf:
                        - $ref: "#/components/schemas/SheetControlsOption"
                        - description: Sheet controls option.
                    VisualPublishOptions:
                      allOf:
                        - $ref: "#/components/schemas/DashboardVisualPublishOptions"
                        - deprecated: true
                          description: The visual publish options of a visual in a dashboard.VisualPublishOptions property will reach its end of standard support in a future release. To perform this action, use ExportWithHiddenFields.
                    SheetLayoutElementMaximizationOption:
                      allOf:
                        - $ref: "#/components/schemas/SheetLayoutElementMaximizationOption"
                        - description: The sheet layout maximization options of a dashbaord.
                    VisualMenuOption:
                      allOf:
                        - $ref: "#/components/schemas/VisualMenuOption"
                        - description: The menu options of a visual in a dashboard.
                    VisualAxisSortOption:
                      allOf:
                        - $ref: "#/components/schemas/VisualAxisSortOption"
                        - description: The axis sort options of a dashboard.
                    ExportWithHiddenFieldsOption:
                      allOf:
                        - $ref: "#/components/schemas/ExportWithHiddenFieldsOption"
                        - description: Determines if hidden fields are exported with a dashboard.
                    DataPointDrillUpDownOption:
                      allOf:
                        - $ref: "#/components/schemas/DataPointDrillUpDownOption"
                        - description: The drill-down options of data points in a dashboard.
                    DataPointMenuLabelOption:
                      allOf:
                        - $ref: "#/components/schemas/DataPointMenuLabelOption"
                        - description: The data point menu label options of a dashboard.
                    DataPointTooltipOption:
                      allOf:
                        - $ref: "#/components/schemas/DataPointTooltipOption"
                        - description: The data point tool tip options of a dashboard.
                ThemeArn:
                  description: The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that was originally associated with the entity. The theme ARN must exist in the same Amazon Web Services account where you create the dashboard.
                  type: string
                Definition:
                  description: The contents of a dashboard.
                  type: object
                  properties:
                    DataSetIdentifierDeclarations:
                      allOf:
                        - $ref: "#/components/schemas/DataSetIdentifierDeclarationList"
                        - description: An array of dataset identifier declarations. With this mapping,you can use dataset identifiers instead of dataset Amazon Resource Names (ARNs) throughout the dashboard's sub-structures.
                    Sheets:
                      allOf:
                        - $ref: "#/components/schemas/SheetDefinitionList"
                        - description: An array of sheet definitions for a dashboard.
                    CalculatedFields:
                      allOf:
                        - $ref: "#/components/schemas/CalculatedFields"
                        - description: An array of calculated field definitions for the dashboard.
                    ParameterDeclarations:
                      allOf:
                        - $ref: "#/components/schemas/ParameterDeclarationList"
                        - description: <p>The parameter declarations for a dashboard. Parameters are named variables that can transfer a value for use by an action or an object.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
                    FilterGroups:
                      allOf:
                        - $ref: "#/components/schemas/FilterGroupList"
                        - description: <p>The filter definitions for a dashboard.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/adding-a-filter.html">Filtering Data in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
                    ColumnConfigurations:
                      allOf:
                        - $ref: "#/components/schemas/ColumnConfigurationList"
                        - description: "An array of dashboard-level column configurations. Column configurations are used to set the default formatting for a column that is used throughout a dashboard. "
                    AnalysisDefaults:
                      $ref: "#/components/schemas/AnalysisDefaults"
  "/accounts/{AwsAccountId}/data-sets":
    post:
      operationId: CreateDataSet
      description: Creates a dataset. This operation doesn't support datasets that include uploaded files as a source.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDataSetResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "487":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "488":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DataSetId
                - Name
                - PhysicalTableMap
                - ImportMode
              properties:
                DataSetId:
                  description: An ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
                  type: string
                Name:
                  description: The display name for the dataset.
                  type: string
                  minLength: 1
                  maxLength: 128
                PhysicalTableMap:
                  description: Declares the physical tables that are available in the underlying data sources.
                  type: object
                  minProperties: 0
                  maxProperties: 32
                  additionalProperties:
                    $ref: "#/components/schemas/PhysicalTable"
                LogicalTableMap:
                  description: Configures the combination and transformation of the data from the physical tables.
                  type: object
                  minProperties: 1
                  maxProperties: 64
                  additionalProperties:
                    $ref: "#/components/schemas/LogicalTable"
                ImportMode:
                  description: Indicates whether you want to import the data into SPICE.
                  type: string
                  enum:
                    - SPICE
                    - DIRECT_QUERY
                ColumnGroups:
                  description: Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.
                  type: array
                  items:
                    $ref: "#/components/schemas/ColumnGroup"
                  minItems: 1
                  maxItems: 8
                FieldFolders:
                  description: The folder that contains fields and nested subfolders for your dataset.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/FieldFolder"
                Permissions:
                  description: A list of resource permissions on the dataset.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
                RowLevelPermissionDataSet:
                  description: <p>Information about a dataset that contains permissions for row-level security (RLS). The permissions dataset maps fields to users or groups. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is not supported for new RLS datasets.</p>
                  type: object
                  properties:
                    Namespace:
                      allOf:
                        - $ref: "#/components/schemas/Namespace"
                        - description: The namespace associated with the dataset that contains permissions for RLS.
                    Arn:
                      allOf:
                        - $ref: "#/components/schemas/Arn"
                        - description: The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.
                    PermissionPolicy:
                      allOf:
                        - $ref: "#/components/schemas/RowLevelPermissionPolicy"
                        - description: The type of permissions to use when interpreting the permissions for RLS. <code>DENY_ACCESS</code> is included for backward compatibility only.
                    FormatVersion:
                      allOf:
                        - $ref: "#/components/schemas/RowLevelPermissionFormatVersion"
                        - description: <p>The user or group rules associated with the dataset that contains permissions for RLS.</p> <p>By default, <code>FormatVersion</code> is <code>VERSION_1</code>. When <code>FormatVersion</code> is <code>VERSION_1</code>, <code>UserName</code> and <code>GroupName</code> are required. When <code>FormatVersion</code> is <code>VERSION_2</code>, <code>UserARN</code> and <code>GroupARN</code> are required, and <code>Namespace</code> must not exist.</p>
                    Status:
                      allOf:
                        - $ref: "#/components/schemas/Status"
                        - description: The status of the row-level security permission dataset. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.
                RowLevelPermissionTagConfiguration:
                  description: "The configuration of tags on a dataset to set row-level security. "
                  type: object
                  properties:
                    Status:
                      allOf:
                        - $ref: "#/components/schemas/Status"
                        - description: The status of row-level security tags. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.
                    TagRules:
                      allOf:
                        - $ref: "#/components/schemas/RowLevelPermissionTagRuleList"
                        - description: A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.
                    TagRuleConfigurations:
                      allOf:
                        - $ref: "#/components/schemas/RowLevelPermissionTagRuleConfigurationList"
                        - description: A list of tag configuration rules to apply to a dataset. All tag configurations have the OR condition. Tags within each tile will be joined (AND). At least one rule in this structure must have all tag values assigned to it to apply Row-level security (RLS) to the dataset.
                ColumnLevelPermissionRules:
                  description: A set of one or more definitions of a <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html">ColumnLevelPermissionRule</a> </code>.
                  type: array
                  items:
                    $ref: "#/components/schemas/ColumnLevelPermissionRule"
                  minItems: 1
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 200
                DataSetUsageConfiguration:
                  description: The usage configuration to apply to child datasets that reference this dataset as a source.
                  type: object
                  properties:
                    DisableUseAsDirectQuerySource:
                      allOf:
                        - $ref: "#/components/schemas/Boolean"
                        - description: An option that controls whether a child dataset of a direct query can use this dataset as a source.
                    DisableUseAsImportedSource:
                      allOf:
                        - $ref: "#/components/schemas/Boolean"
                        - description: An option that controls whether a child dataset that's stored in QuickSight can use this dataset as a source.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListDataSets
      description: <p>Lists all of the datasets belonging to the current Amazon Web Services account in an Amazon Web Services Region.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/*</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDataSetsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  "/accounts/{AwsAccountId}/data-sources":
    post:
      operationId: CreateDataSource
      description: Creates a data source.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDataSourceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "486":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DataSourceId
                - Name
                - Type
              properties:
                DataSourceId:
                  description: "An ID for the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account. "
                  type: string
                Name:
                  description: A display name for the data source.
                  type: string
                  minLength: 1
                  maxLength: 128
                Type:
                  description: <p>The type of the data source. To return a list of all data sources, use <code>ListDataSources</code>.</p> <p>Use <code>AMAZON_ELASTICSEARCH</code> for Amazon OpenSearch Service.</p>
                  type: string
                  enum:
                    - ADOBE_ANALYTICS
                    - AMAZON_ELASTICSEARCH
                    - ATHENA
                    - AURORA
                    - AURORA_POSTGRESQL
                    - AWS_IOT_ANALYTICS
                    - GITHUB
                    - JIRA
                    - MARIADB
                    - MYSQL
                    - ORACLE
                    - POSTGRESQL
                    - PRESTO
                    - REDSHIFT
                    - S3
                    - SALESFORCE
                    - SERVICENOW
                    - SNOWFLAKE
                    - SPARK
                    - SQLSERVER
                    - TERADATA
                    - TWITTER
                    - TIMESTREAM
                    - AMAZON_OPENSEARCH
                    - EXASOL
                    - DATABRICKS
                DataSourceParameters:
                  description: The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
                  type: object
                  properties:
                    AmazonElasticsearchParameters:
                      allOf:
                        - $ref: "#/components/schemas/AmazonElasticsearchParameters"
                        - description: The parameters for OpenSearch.
                    AthenaParameters:
                      allOf:
                        - $ref: "#/components/schemas/AthenaParameters"
                        - description: The parameters for Amazon Athena.
                    AuroraParameters:
                      allOf:
                        - $ref: "#/components/schemas/AuroraParameters"
                        - description: The parameters for Amazon Aurora MySQL.
                    AuroraPostgreSqlParameters:
                      allOf:
                        - $ref: "#/components/schemas/AuroraPostgreSqlParameters"
                        - description: The parameters for Amazon Aurora.
                    AwsIotAnalyticsParameters:
                      allOf:
                        - $ref: "#/components/schemas/AwsIotAnalyticsParameters"
                        - description: The parameters for IoT Analytics.
                    JiraParameters:
                      allOf:
                        - $ref: "#/components/schemas/JiraParameters"
                        - description: The parameters for Jira.
                    MariaDbParameters:
                      allOf:
                        - $ref: "#/components/schemas/MariaDbParameters"
                        - description: The parameters for MariaDB.
                    MySqlParameters:
                      allOf:
                        - $ref: "#/components/schemas/MySqlParameters"
                        - description: The parameters for MySQL.
                    OracleParameters:
                      allOf:
                        - $ref: "#/components/schemas/OracleParameters"
                        - description: The parameters for Oracle.
                    PostgreSqlParameters:
                      allOf:
                        - $ref: "#/components/schemas/PostgreSqlParameters"
                        - description: The parameters for PostgreSQL.
                    PrestoParameters:
                      allOf:
                        - $ref: "#/components/schemas/PrestoParameters"
                        - description: The parameters for Presto.
                    RdsParameters:
                      allOf:
                        - $ref: "#/components/schemas/RdsParameters"
                        - description: The parameters for Amazon RDS.
                    RedshiftParameters:
                      allOf:
                        - $ref: "#/components/schemas/RedshiftParameters"
                        - description: The parameters for Amazon Redshift.
                    S3Parameters:
                      allOf:
                        - $ref: "#/components/schemas/S3Parameters"
                        - description: The parameters for S3.
                    ServiceNowParameters:
                      allOf:
                        - $ref: "#/components/schemas/ServiceNowParameters"
                        - description: The parameters for ServiceNow.
                    SnowflakeParameters:
                      allOf:
                        - $ref: "#/components/schemas/SnowflakeParameters"
                        - description: The parameters for Snowflake.
                    SparkParameters:
                      allOf:
                        - $ref: "#/components/schemas/SparkParameters"
                        - description: The parameters for Spark.
                    SqlServerParameters:
                      allOf:
                        - $ref: "#/components/schemas/SqlServerParameters"
                        - description: The parameters for SQL Server.
                    TeradataParameters:
                      allOf:
                        - $ref: "#/components/schemas/TeradataParameters"
                        - description: The parameters for Teradata.
                    TwitterParameters:
                      allOf:
                        - $ref: "#/components/schemas/TwitterParameters"
                        - description: The parameters for Twitter.
                    AmazonOpenSearchParameters:
                      allOf:
                        - $ref: "#/components/schemas/AmazonOpenSearchParameters"
                        - description: The parameters for OpenSearch.
                    ExasolParameters:
                      allOf:
                        - $ref: "#/components/schemas/ExasolParameters"
                        - description: The parameters for Exasol.
                    DatabricksParameters:
                      allOf:
                        - $ref: "#/components/schemas/DatabricksParameters"
                        - description: The required parameters that are needed to connect to a Databricks data source.
                Credentials:
                  description: Data source credentials. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
                  type: object
                  properties:
                    CredentialPair:
                      allOf:
                        - $ref: "#/components/schemas/CredentialPair"
                        - description: Credential pair. For more information, see <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CredentialPair.html">CredentialPair</a> </code>.
                    CopySourceArn:
                      allOf:
                        - $ref: "#/components/schemas/CopySourceArn"
                        - description: The Amazon Resource Name (ARN) of a data source that has the credential pair that you want to use. When <code>CopySourceArn</code> is not null, the credential pair from the data source in the ARN is used as the credentials for the <code>DataSourceCredentials</code> structure.
                    SecretArn:
                      allOf:
                        - $ref: "#/components/schemas/SecretArn"
                        - description: The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.
                Permissions:
                  description: A list of resource permissions on the data source.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
                VpcConnectionProperties:
                  description: VPC connection properties.
                  type: object
                  properties:
                    VpcConnectionArn:
                      allOf:
                        - $ref: "#/components/schemas/Arn"
                        - description: The Amazon Resource Name (ARN) for the VPC connection.
                SslProperties:
                  description: Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying data source.
                  type: object
                  properties:
                    DisableSsl:
                      allOf:
                        - $ref: "#/components/schemas/Boolean"
                        - description: A Boolean option to control whether SSL should be disabled.
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListDataSources
      description: Lists data sources in current Amazon Web Services Region that belong to this Amazon Web Services account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDataSourcesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  "/accounts/{AwsAccountId}/folders/{FolderId}":
    post:
      operationId: CreateFolder
      description: Creates an empty shared folder.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFolderResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "487":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "488":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account where you want to create the folder.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The ID of the folder.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the folder.
                  type: string
                  minLength: 1
                  maxLength: 200
                FolderType:
                  description: The type of folder. By default, <code>folderType</code> is <code>SHARED</code>.
                  type: string
                  enum:
                    - SHARED
                ParentFolderArn:
                  description: <p>The Amazon Resource Name (ARN) for the parent folder.</p> <p> <code>ParentFolderArn</code> can be null. An empty <code>parentFolderArn</code> creates a root-level folder.</p>
                  type: string
                Permissions:
                  description: <p>A structure that describes the principals and the resource-level permissions of a folder.</p> <p>To specify no permissions, omit <code>Permissions</code>.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
                Tags:
                  description: Tags for the folder.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteFolder
      description: Deletes an empty folder.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteFolderResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the folder.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The ID of the folder.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
    get:
      operationId: DescribeFolder
      description: Describes a folder.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFolderResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the folder.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The ID of the folder.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateFolder
      description: Updates the name of a folder.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFolderResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the folder to update.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The ID of the folder.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: The name of the folder.
                  type: string
                  minLength: 1
                  maxLength: 200
  "/accounts/{AwsAccountId}/folders/{FolderId}/members/{MemberType}/{MemberId}":
    put:
      operationId: CreateFolderMembership
      description: Adds an asset, such as a dashboard, analysis, or dataset into a folder.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFolderMembershipResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the folder.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The ID of the folder.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
        - name: MemberId
          in: path
          required: true
          description: The ID of the asset (the dashboard, analysis, or dataset).
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
        - name: MemberType
          in: path
          required: true
          description: The type of the member, including <code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code>.
          schema:
            type: string
            enum:
              - DASHBOARD
              - ANALYSIS
              - DATASET
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteFolderMembership
      description: Removes an asset, such as a dashboard, analysis, or dataset, from a folder.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteFolderMembershipResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the folder.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The Folder ID.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
        - name: MemberId
          in: path
          required: true
          description: The ID of the asset (the dashboard, analysis, or dataset) that you want to delete.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
        - name: MemberType
          in: path
          required: true
          description: "The type of the member, including <code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code> "
          schema:
            type: string
            enum:
              - DASHBOARD
              - ANALYSIS
              - DATASET
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups":
    post:
      operationId: CreateGroup
      description: <p>Use the <code>CreateGroup</code> operation to create a group in Amazon QuickSight. You can create up to 10,000 groups in a namespace. If you want to create more than 10,000 groups in a namespace, contact AWS Support.</p> <p>The permissions resource is <code>arn:aws:quicksight:&lt;your-region&gt;:<i>&lt;relevant-aws-account-id&gt;</i>:group/default/<i>&lt;group-name&gt;</i> </code>.</p> <p>The response is a group object.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGroupResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "486":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "488":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace that you want the group to be a part of.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - GroupName
              properties:
                GroupName:
                  description: A name for the group that you want to create.
                  type: string
                  pattern: "[\\u0020-\\u00FF]+"
                  minLength: 1
                Description:
                  description: A description for the group that you want to create.
                  type: string
                  minLength: 1
                  maxLength: 512
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListGroups
      description: "Lists all user groups in Amazon QuickSight. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "487":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: Namespace
          in: path
          required: true
          description: The namespace that you want a list of groups from.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members/{MemberName}":
    put:
      operationId: CreateGroupMembership
      description: "Adds an Amazon QuickSight user to an Amazon QuickSight group. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGroupMembershipResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: MemberName
          in: path
          required: true
          description: The name of the user that you want to add to the group membership.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
            maxLength: 256
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to add the user to.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace that you want the user to be a part of.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteGroupMembership
      description: Removes a user from a group so that the user is no longer a member of the group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroupMembershipResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: MemberName
          in: path
          required: true
          description: The name of the user that you want to delete from the group membership.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
            maxLength: 256
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to delete the user from.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace of the group that you want to remove a user from.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    get:
      operationId: DescribeGroupMembership
      description: Use the <code>DescribeGroupMembership</code> operation to determine if a user is a member of the specified group. If the user exists and is a member of the specified group, an associated <code>GroupMember</code> object is returned.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeGroupMembershipResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: MemberName
          in: path
          required: true
          description: The user name of the user that you want to search for.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
            maxLength: 256
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to search.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace that includes the group you are searching within.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/":
    post:
      operationId: CreateIAMPolicyAssignment
      description: Creates an assignment with one specified IAM policy, identified by its Amazon Resource Name (ARN). This policy assignment is attached to the specified groups or users of Amazon QuickSight. Assignment names are unique per Amazon Web Services account. To avoid overwriting rules in other namespaces, use assignment names that are unique.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateIAMPolicyAssignmentResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: ConcurrentUpdatingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdatingException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account where you want to assign an IAM policy to Amazon QuickSight users or groups.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace that contains the assignment.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AssignmentName
                - AssignmentStatus
              properties:
                AssignmentName:
                  description: The name of the assignment, also called a rule. It must be unique within an Amazon Web Services account.
                  type: string
                  pattern: (?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$
                  minLength: 1
                AssignmentStatus:
                  description: <p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>
                  type: string
                  enum:
                    - ENABLED
                    - DRAFT
                    - DISABLED
                PolicyArn:
                  description: The ARN for the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
                  type: string
                Identities:
                  description: The Amazon QuickSight users, groups, or both that you want to assign the policy to.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/IdentityNameList"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}":
    post:
      operationId: CreateNamespace
      description: <p>(Enterprise edition only) Creates a new namespace for you to use with Amazon QuickSight.</p> <p>A namespace allows you to isolate the Amazon QuickSight users and groups that are registered for that namespace. Users that access the namespace can share assets only with other users or groups in the same namespace. They can't see users and groups in other namespaces. You can create a namespace after your Amazon Web Services account is subscribed to Amazon QuickSight. The namespace must be unique within the Amazon Web Services account. By default, there is a limit of 100 namespaces per Amazon Web Services account. To increase your limit, create a ticket with Amazon Web Services Support. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNamespaceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "486":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "487":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "488":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "489":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that you want to create the Amazon QuickSight namespace in.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Namespace
                - IdentityStore
              properties:
                Namespace:
                  description: The name that you want to use to describe the new namespace.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  maxLength: 64
                IdentityStore:
                  description: Specifies the type of your user identity directory. Currently, this supports users with an identity type of <code>QUICKSIGHT</code>.
                  type: string
                  enum:
                    - QUICKSIGHT
                Tags:
                  description: The tags that you want to associate with the namespace that you're creating.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/data-sets/{DataSetId}/refresh-schedules":
    post:
      operationId: CreateRefreshSchedule
      description: Creates a refresh schedule for a dataset. You can create up to 5 different schedules for a single dataset.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRefreshScheduleResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "486":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset.
          schema:
            type: string
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Schedule
              properties:
                Schedule:
                  description: The refresh schedule of a dataset.
                  type: object
                  properties:
                    ScheduleId:
                      allOf:
                        - $ref: "#/components/schemas/String"
                        - description: An identifier for the refresh schedule.
                    ScheduleFrequency:
                      allOf:
                        - $ref: "#/components/schemas/RefreshFrequency"
                        - description: The frequency for the refresh schedule.
                    StartAfterDateTime:
                      allOf:
                        - $ref: "#/components/schemas/Timestamp"
                        - description: Time after which the refresh schedule can be started, expressed in <code>YYYY-MM-DDTHH:MM:SS</code> format.
                    RefreshType:
                      allOf:
                        - $ref: "#/components/schemas/IngestionType"
                        - description: '<p>The type of refresh that a datset undergoes. Valid values are as follows:</p> <ul> <li> <p> <code>FULL_REFRESH</code>: A complete refresh of a dataset.</p> </li> <li> <p> <code>INCREMENTAL_REFRESH</code>: A partial refresh of some rows of a dataset, based on the time window specified.</p> </li> </ul> <p>For more information on full and incremental refreshes, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/refreshing-imported-data.html">Refreshing SPICE data</a> in the <i>Amazon QuickSight User Guide</i>.</p>'
                    Arn:
                      allOf:
                        - $ref: "#/components/schemas/Arn"
                        - description: The Amazon Resource Name (ARN) for the refresh schedule.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListRefreshSchedules
      description: "Lists the refresh schedules of a dataset. Each dataset can have up to 5 schedules. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRefreshSchedulesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset.
          schema:
            type: string
    put:
      operationId: UpdateRefreshSchedule
      description: Updates a refresh schedule for a dataset.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateRefreshScheduleResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset.
          schema:
            type: string
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Schedule
              properties:
                Schedule:
                  description: The refresh schedule of a dataset.
                  type: object
                  properties:
                    ScheduleId:
                      allOf:
                        - $ref: "#/components/schemas/String"
                        - description: An identifier for the refresh schedule.
                    ScheduleFrequency:
                      allOf:
                        - $ref: "#/components/schemas/RefreshFrequency"
                        - description: The frequency for the refresh schedule.
                    StartAfterDateTime:
                      allOf:
                        - $ref: "#/components/schemas/Timestamp"
                        - description: Time after which the refresh schedule can be started, expressed in <code>YYYY-MM-DDTHH:MM:SS</code> format.
                    RefreshType:
                      allOf:
                        - $ref: "#/components/schemas/IngestionType"
                        - description: '<p>The type of refresh that a datset undergoes. Valid values are as follows:</p> <ul> <li> <p> <code>FULL_REFRESH</code>: A complete refresh of a dataset.</p> </li> <li> <p> <code>INCREMENTAL_REFRESH</code>: A partial refresh of some rows of a dataset, based on the time window specified.</p> </li> </ul> <p>For more information on full and incremental refreshes, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/refreshing-imported-data.html">Refreshing SPICE data</a> in the <i>Amazon QuickSight User Guide</i>.</p>'
                    Arn:
                      allOf:
                        - $ref: "#/components/schemas/Arn"
                        - description: The Amazon Resource Name (ARN) for the refresh schedule.
  "/accounts/{AwsAccountId}/templates/{TemplateId}":
    post:
      operationId: CreateTemplate
      description: <p>Creates a template either from a <code>TemplateDefinition</code> or from an existing Amazon QuickSight analysis or template. You can use the resulting template to create additional dashboards, templates, or analyses.</p> <p>A <i>template</i> is an entity in Amazon QuickSight that encapsulates the metadata required to create an analysis and that you can use to create s dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with the analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTemplateResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "488":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the group is in. You use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: An ID for the template that you want to create. This template is unique per Amazon Web Services Region; in each Amazon Web Services account.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: A display name for the template.
                  type: string
                  minLength: 1
                  maxLength: 2048
                Permissions:
                  description: "A list of resource permissions to be set on the template. "
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
                SourceEntity:
                  description: The source entity of the template.
                  type: object
                  properties:
                    SourceAnalysis:
                      allOf:
                        - $ref: "#/components/schemas/TemplateSourceAnalysis"
                        - description: The source analysis, if it is based on an analysis.
                    SourceTemplate:
                      allOf:
                        - $ref: "#/components/schemas/TemplateSourceTemplate"
                        - description: The source template, if it is based on an template.
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 200
                VersionDescription:
                  description: A description of the current template version being created. This API operation creates the first version of the template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.
                  type: string
                  minLength: 1
                  maxLength: 512
                Definition:
                  description: The detailed definition of a template.
                  type: object
                  properties:
                    DataSetConfigurations:
                      allOf:
                        - $ref: "#/components/schemas/DataSetConfigurationList"
                        - description: An array of dataset configurations. These configurations define the required columns for each dataset used within a template.
                    Sheets:
                      allOf:
                        - $ref: "#/components/schemas/SheetDefinitionList"
                        - description: An array of sheet definitions for a template.
                    CalculatedFields:
                      allOf:
                        - $ref: "#/components/schemas/CalculatedFields"
                        - description: An array of calculated field definitions for the template.
                    ParameterDeclarations:
                      allOf:
                        - $ref: "#/components/schemas/ParameterDeclarationList"
                        - description: <p>An array of parameter declarations for a template.</p> <p> <i>Parameters</i> are named variables that can transfer a value for use by an action or an object.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>. </p>
                    FilterGroups:
                      allOf:
                        - $ref: "#/components/schemas/FilterGroupList"
                        - description: <p>Filter definitions for a template.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/filtering-visual-data.html">Filtering Data</a> in the <i>Amazon QuickSight User Guide</i>. </p>
                    ColumnConfigurations:
                      allOf:
                        - $ref: "#/components/schemas/ColumnConfigurationList"
                        - description: " An array of template-level column configurations. Column configurations are used to set default formatting for a column that's used throughout a template. "
                    AnalysisDefaults:
                      $ref: "#/components/schemas/AnalysisDefaults"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteTemplate
      description: Deletes a template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteTemplateResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the template that you're deleting.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: An ID for the template you want to delete.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: version-number
          in: query
          required: false
          description: "Specifies the version of the template that you want to delete. If you don't provide a version number, <code>DeleteTemplate</code> deletes all versions of the template. "
          schema:
            type: integer
            minimum: 1
    get:
      operationId: DescribeTemplate
      description: Describes a template's metadata.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTemplateResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the template that you're describing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: version-number
          in: query
          required: false
          description: (Optional) The number for the version to describe. If a <code>VersionNumber</code> parameter value isn't provided, the latest version of the template is described.
          schema:
            type: integer
            minimum: 1
        - name: alias-name
          in: query
          required: false
          description: The alias of the template that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateTemplate
      description: Updates a template from an existing Amazon QuickSight analysis or another template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTemplateResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the template that you're updating.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SourceEntity:
                  description: The source entity of the template.
                  type: object
                  properties:
                    SourceAnalysis:
                      allOf:
                        - $ref: "#/components/schemas/TemplateSourceAnalysis"
                        - description: The source analysis, if it is based on an analysis.
                    SourceTemplate:
                      allOf:
                        - $ref: "#/components/schemas/TemplateSourceTemplate"
                        - description: The source template, if it is based on an template.
                VersionDescription:
                  description: A description of the current template version that is being updated. Every time you call <code>UpdateTemplate</code>, you create a new version of the template. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.
                  type: string
                  minLength: 1
                  maxLength: 512
                Name:
                  description: The name for the template.
                  type: string
                  minLength: 1
                  maxLength: 2048
                Definition:
                  description: The detailed definition of a template.
                  type: object
                  properties:
                    DataSetConfigurations:
                      allOf:
                        - $ref: "#/components/schemas/DataSetConfigurationList"
                        - description: An array of dataset configurations. These configurations define the required columns for each dataset used within a template.
                    Sheets:
                      allOf:
                        - $ref: "#/components/schemas/SheetDefinitionList"
                        - description: An array of sheet definitions for a template.
                    CalculatedFields:
                      allOf:
                        - $ref: "#/components/schemas/CalculatedFields"
                        - description: An array of calculated field definitions for the template.
                    ParameterDeclarations:
                      allOf:
                        - $ref: "#/components/schemas/ParameterDeclarationList"
                        - description: <p>An array of parameter declarations for a template.</p> <p> <i>Parameters</i> are named variables that can transfer a value for use by an action or an object.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>. </p>
                    FilterGroups:
                      allOf:
                        - $ref: "#/components/schemas/FilterGroupList"
                        - description: <p>Filter definitions for a template.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/filtering-visual-data.html">Filtering Data</a> in the <i>Amazon QuickSight User Guide</i>. </p>
                    ColumnConfigurations:
                      allOf:
                        - $ref: "#/components/schemas/ColumnConfigurationList"
                        - description: " An array of template-level column configurations. Column configurations are used to set default formatting for a column that's used throughout a template. "
                    AnalysisDefaults:
                      $ref: "#/components/schemas/AnalysisDefaults"
  "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases/{AliasName}":
    post:
      operationId: CreateTemplateAlias
      description: Creates a template alias for a template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTemplateAliasResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the template that you creating an alias for.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: An ID for the template.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: AliasName
          in: path
          required: true
          description: "The name that you want to give to the template alias that you're creating. Don't start the alias name with the <code>$</code> character. Alias names that start with <code>$</code> are reserved by Amazon QuickSight. "
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TemplateVersionNumber
              properties:
                TemplateVersionNumber:
                  description: The version number of the template.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteTemplateAlias
      description: Deletes the item that the specified template alias points to. If you provide a specific alias, you delete the version of the template that the alias points to.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteTemplateAliasResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the item to delete.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template that the specified alias is for.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: AliasName
          in: path
          required: true
          description: "The name for the template alias. To delete a specific alias, you delete the version that the alias points to. You can specify the alias name, or specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. "
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
    get:
      operationId: DescribeTemplateAlias
      description: Describes the template alias for a template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTemplateAliasResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the template alias that you're describing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: AliasName
          in: path
          required: true
          description: The name of the template alias that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateTemplateAlias
      description: Updates the template alias of a template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTemplateAliasResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the template alias that you're updating.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: AliasName
          in: path
          required: true
          description: The alias of the template that you want to update. If you name a specific alias, you update the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TemplateVersionNumber
              properties:
                TemplateVersionNumber:
                  description: The version number of the template.
                  type: integer
                  minimum: 1
  "/accounts/{AwsAccountId}/themes/{ThemeId}":
    post:
      operationId: CreateTheme
      description: <p>Creates a theme.</p> <p>A <i>theme</i> is set of configuration options for color and layout. Themes apply to analyses and dashboards. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateThemeResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: "The ID of the Amazon Web Services account where you want to store the new theme. "
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: An ID for the theme that you want to create. The theme ID is unique per Amazon Web Services Region in each Amazon Web Services account.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - BaseThemeId
                - Configuration
              properties:
                Name:
                  description: A display name for the theme.
                  type: string
                  minLength: 1
                  maxLength: 2048
                BaseThemeId:
                  description: "The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use <code>ListThemes</code> or choose <b>Themes</b> from within an analysis. "
                  type: string
                  pattern: "[\\w\\-]+"
                  minLength: 1
                  maxLength: 512
                VersionDescription:
                  description: A description of the first version of the theme that you're creating. Every time <code>UpdateTheme</code> is called, a new version is created. Each version of the theme has a description of the version in the <code>VersionDescription</code> field.
                  type: string
                  minLength: 1
                  maxLength: 512
                Configuration:
                  description: The theme configuration. This configuration contains all of the display properties for a theme.
                  type: object
                  properties:
                    DataColorPalette:
                      allOf:
                        - $ref: "#/components/schemas/DataColorPalette"
                        - description: Color properties that apply to chart data colors.
                    UIColorPalette:
                      allOf:
                        - $ref: "#/components/schemas/UIColorPalette"
                        - description: "Color properties that apply to the UI and to charts, excluding the colors that apply to data. "
                    Sheet:
                      allOf:
                        - $ref: "#/components/schemas/SheetStyle"
                        - description: Display options related to sheets.
                    Typography:
                      $ref: "#/components/schemas/Typography"
                Permissions:
                  description: "A valid grouping of resource permissions to apply to the new theme. "
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
                Tags:
                  description: A map of the key-value pairs for the resource tag or tags that you want to add to the resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 200
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteTheme
      description: Deletes a theme.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteThemeResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the theme that you're deleting.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: An ID for the theme that you want to delete.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: version-number
          in: query
          required: false
          description: <p>The version of the theme that you want to delete. </p> <p> <b>Note:</b> If you don't provide a version number, you're using this call to <code>DeleteTheme</code> to delete all versions of the theme.</p>
          schema:
            type: integer
            minimum: 1
    get:
      operationId: DescribeTheme
      description: Describes a theme.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeThemeResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the theme that you're describing.
          schema:
            type: string
            pattern: ^(aws|[0-9]{12})$
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: version-number
          in: query
          required: false
          description: The version number for the version to describe. If a <code>VersionNumber</code> parameter value isn't provided, the latest version of the theme is described.
          schema:
            type: integer
            minimum: 1
        - name: alias-name
          in: query
          required: false
          description: The alias of the theme that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the theme by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to themes.
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateTheme
      description: Updates a theme.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateThemeResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the theme that you're updating.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - BaseThemeId
              properties:
                Name:
                  description: The name for the theme.
                  type: string
                  minLength: 1
                  maxLength: 2048
                BaseThemeId:
                  description: The theme ID, defined by Amazon QuickSight, that a custom theme inherits from. All themes initially inherit from a default Amazon QuickSight theme.
                  type: string
                  pattern: "[\\w\\-]+"
                  minLength: 1
                  maxLength: 512
                VersionDescription:
                  description: A description of the theme version that you're updating Every time that you call <code>UpdateTheme</code>, you create a new version of the theme. Each version of the theme maintains a description of the version in <code>VersionDescription</code>.
                  type: string
                  minLength: 1
                  maxLength: 512
                Configuration:
                  description: The theme configuration. This configuration contains all of the display properties for a theme.
                  type: object
                  properties:
                    DataColorPalette:
                      allOf:
                        - $ref: "#/components/schemas/DataColorPalette"
                        - description: Color properties that apply to chart data colors.
                    UIColorPalette:
                      allOf:
                        - $ref: "#/components/schemas/UIColorPalette"
                        - description: "Color properties that apply to the UI and to charts, excluding the colors that apply to data. "
                    Sheet:
                      allOf:
                        - $ref: "#/components/schemas/SheetStyle"
                        - description: Display options related to sheets.
                    Typography:
                      $ref: "#/components/schemas/Typography"
  "/accounts/{AwsAccountId}/themes/{ThemeId}/aliases/{AliasName}":
    post:
      operationId: CreateThemeAlias
      description: Creates a theme alias for a theme.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateThemeAliasResponse"
        "480":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the theme for the new theme alias.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: An ID for the theme alias.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: AliasName
          in: path
          required: true
          description: "The name that you want to give to the theme alias that you are creating. The alias name can't begin with a <code>$</code>. Alias names that start with <code>$</code> are reserved by Amazon QuickSight. "
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ThemeVersionNumber
              properties:
                ThemeVersionNumber:
                  description: The version number of the theme.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteThemeAlias
      description: Deletes the version of the theme that the specified theme alias points to. If you provide a specific alias, you delete the version of the theme that the alias points to.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteThemeAliasResponse"
        "480":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the theme alias to delete.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme that the specified alias is for.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: AliasName
          in: path
          required: true
          description: The unique name for the theme alias to delete.
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
    get:
      operationId: DescribeThemeAlias
      description: Describes the alias for a theme.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeThemeAliasResponse"
        "480":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the theme alias that you're describing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: AliasName
          in: path
          required: true
          description: The name of the theme alias that you want to describe.
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
    put:
      operationId: UpdateThemeAlias
      description: Updates an alias of a theme.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateThemeAliasResponse"
        "480":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the theme alias that you're updating.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: AliasName
          in: path
          required: true
          description: The name of the theme alias that you want to update.
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ThemeVersionNumber
              properties:
                ThemeVersionNumber:
                  description: The version number of the theme that the alias should reference.
                  type: integer
                  minimum: 1
  "/accounts/{AwsAccountId}/data-sets/{DataSetId}":
    delete:
      operationId: DeleteDataSet
      description: Deletes a dataset.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDataSetResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeDataSet
      description: Describes a dataset. This operation doesn't support datasets that include uploaded files as a source.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDataSetResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
          schema:
            type: string
    put:
      operationId: UpdateDataSet
      description: Updates a dataset. This operation doesn't support datasets that include uploaded files as a source. Partial updates are not supported by this operation.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDataSetResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to update. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - PhysicalTableMap
                - ImportMode
              properties:
                Name:
                  description: The display name for the dataset.
                  type: string
                  minLength: 1
                  maxLength: 128
                PhysicalTableMap:
                  description: Declares the physical tables that are available in the underlying data sources.
                  type: object
                  minProperties: 0
                  maxProperties: 32
                  additionalProperties:
                    $ref: "#/components/schemas/PhysicalTable"
                LogicalTableMap:
                  description: Configures the combination and transformation of the data from the physical tables.
                  type: object
                  minProperties: 1
                  maxProperties: 64
                  additionalProperties:
                    $ref: "#/components/schemas/LogicalTable"
                ImportMode:
                  description: Indicates whether you want to import the data into SPICE.
                  type: string
                  enum:
                    - SPICE
                    - DIRECT_QUERY
                ColumnGroups:
                  description: Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.
                  type: array
                  items:
                    $ref: "#/components/schemas/ColumnGroup"
                  minItems: 1
                  maxItems: 8
                FieldFolders:
                  description: The folder that contains fields and nested subfolders for your dataset.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/FieldFolder"
                RowLevelPermissionDataSet:
                  description: <p>Information about a dataset that contains permissions for row-level security (RLS). The permissions dataset maps fields to users or groups. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is not supported for new RLS datasets.</p>
                  type: object
                  properties:
                    Namespace:
                      allOf:
                        - $ref: "#/components/schemas/Namespace"
                        - description: The namespace associated with the dataset that contains permissions for RLS.
                    Arn:
                      allOf:
                        - $ref: "#/components/schemas/Arn"
                        - description: The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.
                    PermissionPolicy:
                      allOf:
                        - $ref: "#/components/schemas/RowLevelPermissionPolicy"
                        - description: The type of permissions to use when interpreting the permissions for RLS. <code>DENY_ACCESS</code> is included for backward compatibility only.
                    FormatVersion:
                      allOf:
                        - $ref: "#/components/schemas/RowLevelPermissionFormatVersion"
                        - description: <p>The user or group rules associated with the dataset that contains permissions for RLS.</p> <p>By default, <code>FormatVersion</code> is <code>VERSION_1</code>. When <code>FormatVersion</code> is <code>VERSION_1</code>, <code>UserName</code> and <code>GroupName</code> are required. When <code>FormatVersion</code> is <code>VERSION_2</code>, <code>UserARN</code> and <code>GroupARN</code> are required, and <code>Namespace</code> must not exist.</p>
                    Status:
                      allOf:
                        - $ref: "#/components/schemas/Status"
                        - description: The status of the row-level security permission dataset. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.
                RowLevelPermissionTagConfiguration:
                  description: "The configuration of tags on a dataset to set row-level security. "
                  type: object
                  properties:
                    Status:
                      allOf:
                        - $ref: "#/components/schemas/Status"
                        - description: The status of row-level security tags. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.
                    TagRules:
                      allOf:
                        - $ref: "#/components/schemas/RowLevelPermissionTagRuleList"
                        - description: A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.
                    TagRuleConfigurations:
                      allOf:
                        - $ref: "#/components/schemas/RowLevelPermissionTagRuleConfigurationList"
                        - description: A list of tag configuration rules to apply to a dataset. All tag configurations have the OR condition. Tags within each tile will be joined (AND). At least one rule in this structure must have all tag values assigned to it to apply Row-level security (RLS) to the dataset.
                ColumnLevelPermissionRules:
                  description: A set of one or more definitions of a <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html">ColumnLevelPermissionRule</a> </code>.
                  type: array
                  items:
                    $ref: "#/components/schemas/ColumnLevelPermissionRule"
                  minItems: 1
                DataSetUsageConfiguration:
                  description: The usage configuration to apply to child datasets that reference this dataset as a source.
                  type: object
                  properties:
                    DisableUseAsDirectQuerySource:
                      allOf:
                        - $ref: "#/components/schemas/Boolean"
                        - description: An option that controls whether a child dataset of a direct query can use this dataset as a source.
                    DisableUseAsImportedSource:
                      allOf:
                        - $ref: "#/components/schemas/Boolean"
                        - description: An option that controls whether a child dataset that's stored in QuickSight can use this dataset as a source.
  "/accounts/{AwsAccountId}/data-sets/{DataSetId}/refresh-properties":
    delete:
      operationId: DeleteDataSetRefreshProperties
      description: Deletes the dataset refresh properties of the dataset.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDataSetRefreshPropertiesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeDataSetRefreshProperties
      description: Describes the refresh properties of a dataset.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDataSetRefreshPropertiesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset.
          schema:
            type: string
    put:
      operationId: PutDataSetRefreshProperties
      description: Creates or updates the dataset refresh properties for the dataset.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutDataSetRefreshPropertiesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "486":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DataSetRefreshProperties
              properties:
                DataSetRefreshProperties:
                  description: The refresh properties of a dataset.
                  type: object
                  properties:
                    RefreshConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/RefreshConfiguration"
                        - description: The refresh configuration for a dataset.
  "/accounts/{AwsAccountId}/data-sources/{DataSourceId}":
    delete:
      operationId: DeleteDataSource
      description: Deletes the data source permanently. This operation breaks all the datasets that reference the deleted data source.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDataSourceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeDataSource
      description: Describes a data source.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDataSourceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
          schema:
            type: string
    put:
      operationId: UpdateDataSource
      description: Updates a data source.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDataSourceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: "The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: A display name for the data source.
                  type: string
                  minLength: 1
                  maxLength: 128
                DataSourceParameters:
                  description: The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
                  type: object
                  properties:
                    AmazonElasticsearchParameters:
                      allOf:
                        - $ref: "#/components/schemas/AmazonElasticsearchParameters"
                        - description: The parameters for OpenSearch.
                    AthenaParameters:
                      allOf:
                        - $ref: "#/components/schemas/AthenaParameters"
                        - description: The parameters for Amazon Athena.
                    AuroraParameters:
                      allOf:
                        - $ref: "#/components/schemas/AuroraParameters"
                        - description: The parameters for Amazon Aurora MySQL.
                    AuroraPostgreSqlParameters:
                      allOf:
                        - $ref: "#/components/schemas/AuroraPostgreSqlParameters"
                        - description: The parameters for Amazon Aurora.
                    AwsIotAnalyticsParameters:
                      allOf:
                        - $ref: "#/components/schemas/AwsIotAnalyticsParameters"
                        - description: The parameters for IoT Analytics.
                    JiraParameters:
                      allOf:
                        - $ref: "#/components/schemas/JiraParameters"
                        - description: The parameters for Jira.
                    MariaDbParameters:
                      allOf:
                        - $ref: "#/components/schemas/MariaDbParameters"
                        - description: The parameters for MariaDB.
                    MySqlParameters:
                      allOf:
                        - $ref: "#/components/schemas/MySqlParameters"
                        - description: The parameters for MySQL.
                    OracleParameters:
                      allOf:
                        - $ref: "#/components/schemas/OracleParameters"
                        - description: The parameters for Oracle.
                    PostgreSqlParameters:
                      allOf:
                        - $ref: "#/components/schemas/PostgreSqlParameters"
                        - description: The parameters for PostgreSQL.
                    PrestoParameters:
                      allOf:
                        - $ref: "#/components/schemas/PrestoParameters"
                        - description: The parameters for Presto.
                    RdsParameters:
                      allOf:
                        - $ref: "#/components/schemas/RdsParameters"
                        - description: The parameters for Amazon RDS.
                    RedshiftParameters:
                      allOf:
                        - $ref: "#/components/schemas/RedshiftParameters"
                        - description: The parameters for Amazon Redshift.
                    S3Parameters:
                      allOf:
                        - $ref: "#/components/schemas/S3Parameters"
                        - description: The parameters for S3.
                    ServiceNowParameters:
                      allOf:
                        - $ref: "#/components/schemas/ServiceNowParameters"
                        - description: The parameters for ServiceNow.
                    SnowflakeParameters:
                      allOf:
                        - $ref: "#/components/schemas/SnowflakeParameters"
                        - description: The parameters for Snowflake.
                    SparkParameters:
                      allOf:
                        - $ref: "#/components/schemas/SparkParameters"
                        - description: The parameters for Spark.
                    SqlServerParameters:
                      allOf:
                        - $ref: "#/components/schemas/SqlServerParameters"
                        - description: The parameters for SQL Server.
                    TeradataParameters:
                      allOf:
                        - $ref: "#/components/schemas/TeradataParameters"
                        - description: The parameters for Teradata.
                    TwitterParameters:
                      allOf:
                        - $ref: "#/components/schemas/TwitterParameters"
                        - description: The parameters for Twitter.
                    AmazonOpenSearchParameters:
                      allOf:
                        - $ref: "#/components/schemas/AmazonOpenSearchParameters"
                        - description: The parameters for OpenSearch.
                    ExasolParameters:
                      allOf:
                        - $ref: "#/components/schemas/ExasolParameters"
                        - description: The parameters for Exasol.
                    DatabricksParameters:
                      allOf:
                        - $ref: "#/components/schemas/DatabricksParameters"
                        - description: The required parameters that are needed to connect to a Databricks data source.
                Credentials:
                  description: Data source credentials. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
                  type: object
                  properties:
                    CredentialPair:
                      allOf:
                        - $ref: "#/components/schemas/CredentialPair"
                        - description: Credential pair. For more information, see <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CredentialPair.html">CredentialPair</a> </code>.
                    CopySourceArn:
                      allOf:
                        - $ref: "#/components/schemas/CopySourceArn"
                        - description: The Amazon Resource Name (ARN) of a data source that has the credential pair that you want to use. When <code>CopySourceArn</code> is not null, the credential pair from the data source in the ARN is used as the credentials for the <code>DataSourceCredentials</code> structure.
                    SecretArn:
                      allOf:
                        - $ref: "#/components/schemas/SecretArn"
                        - description: The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.
                VpcConnectionProperties:
                  description: VPC connection properties.
                  type: object
                  properties:
                    VpcConnectionArn:
                      allOf:
                        - $ref: "#/components/schemas/Arn"
                        - description: The Amazon Resource Name (ARN) for the VPC connection.
                SslProperties:
                  description: Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying data source.
                  type: object
                  properties:
                    DisableSsl:
                      allOf:
                        - $ref: "#/components/schemas/Boolean"
                        - description: A Boolean option to control whether SSL should be disabled.
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}":
    delete:
      operationId: DeleteGroup
      description: "Removes a user group from Amazon QuickSight. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGroupResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to delete.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace of the group that you want to delete.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeGroup
      description: "Returns an Amazon QuickSight group's description and Amazon Resource Name (ARN). "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeGroupResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to describe.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace of the group that you want described.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    put:
      operationId: UpdateGroup
      description: "Changes a group description. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateGroupResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to update.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace of the group that you want to update.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: The description for the group that you want to update.
                  type: string
                  minLength: 1
                  maxLength: 512
  "/accounts/{AwsAccountId}/namespace/{Namespace}/iam-policy-assignments/{AssignmentName}":
    delete:
      operationId: DeleteIAMPolicyAssignment
      description: Deletes an existing IAM policy assignment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteIAMPolicyAssignmentResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: ConcurrentUpdatingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdatingException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID where you want to delete the IAM policy assignment.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: AssignmentName
          in: path
          required: true
          description: "The name of the assignment. "
          schema:
            type: string
            pattern: (?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$
            minLength: 1
        - name: Namespace
          in: path
          required: true
          description: The namespace that contains the assignment.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/namespaces/{Namespace}":
    delete:
      operationId: DeleteNamespace
      description: "Deletes a namespace and the users and groups that are associated with the namespace. This is an asynchronous process. Assets including dashboards, analyses, datasets and data sources are not deleted. To delete these assets, you use the API operations for the relevant asset. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteNamespaceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that you want to delete the Amazon QuickSight namespace from.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace that you want to delete.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeNamespace
      description: Describes the current namespace.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeNamespaceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "485":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the Amazon QuickSight namespace that you want to describe.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace that you want to describe.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
  "/accounts/{AwsAccountId}/data-sets/{DataSetId}/refresh-schedules/{ScheduleId}":
    delete:
      operationId: DeleteRefreshSchedule
      description: Deletes a refresh schedule from a dataset.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRefreshScheduleResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset.
          schema:
            type: string
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ScheduleId
          in: path
          required: true
          description: The ID of the refresh schedule.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeRefreshSchedule
      description: Provides a summary of a refresh schedule.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeRefreshScheduleResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset.
          schema:
            type: string
        - name: ScheduleId
          in: path
          required: true
          description: The ID of the refresh schedule.
          schema:
            type: string
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}":
    delete:
      operationId: DeleteUser
      description: "Deletes the Amazon QuickSight user that is associated with the identity of the IAM user or role that's making the call. The IAM user isn't deleted as a result of this call. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUserResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: UserName
          in: path
          required: true
          description: The name of the user that you want to delete.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace. Currently, you should set this to <code>default</code>.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeUser
      description: "Returns information about a user, given the user name. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeUserResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: UserName
          in: path
          required: true
          description: The name of the user that you want to describe.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace. Currently, you should set this to <code>default</code>.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    put:
      operationId: UpdateUser
      description: Updates an Amazon QuickSight user.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateUserResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: UserName
          in: path
          required: true
          description: The Amazon QuickSight user name that you want to update.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace. Currently, you should set this to <code>default</code>.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Email
                - Role
              properties:
                Email:
                  description: The email address of the user that you want to update.
                  type: string
                Role:
                  description: "<p>The Amazon QuickSight role of the user. The role can be one of the following default security cohorts:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul> <p>The name of the Amazon QuickSight role is invisible to the user except for the console screens dealing with permissions.</p>"
                  type: string
                  enum:
                    - ADMIN
                    - AUTHOR
                    - READER
                    - RESTRICTED_AUTHOR
                    - RESTRICTED_READER
                CustomPermissionsName:
                  description: <p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user's access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the Amazon QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a Amazon QuickSight user. </p> <p>Amazon QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning Amazon QuickSight users to one of the default security cohorts in Amazon QuickSight (admin, author, reader).</p> <p>This feature is available only to Amazon QuickSight Enterprise edition subscriptions.</p>
                  type: string
                  pattern: ^[a-zA-Z0-9+=,.@_-]+$
                  minLength: 1
                  maxLength: 64
                UnapplyCustomPermissions:
                  description: A flag that you use to indicate that you want to remove all custom permissions from this user. Using this parameter resets the user to the state it was in before a custom permissions profile was applied. This parameter defaults to NULL and it doesn't accept any other value.
                  type: boolean
                ExternalLoginFederationProviderType:
                  description: '<p>The type of supported external login provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> <li> <p> <code>NONE</code>: This clears all the previously saved external login information for a user. Use the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeUser.html">DescribeUser</a> </code> API operation to check the external login information.</p> </li> </ul>'
                  type: string
                CustomFederationProviderUrl:
                  description: The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.
                  type: string
                ExternalLoginId:
                  description: The identity ID for a user in the external login provider.
                  type: string
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/user-principals/{PrincipalId}":
    delete:
      operationId: DeleteUserByPrincipalId
      description: "Deletes a user identified by its principal ID. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteUserByPrincipalIdResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: PrincipalId
          in: path
          required: true
          description: The principal ID of the user.
          schema:
            type: string
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace. Currently, you should set this to <code>default</code>.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/settings":
    get:
      operationId: DescribeAccountSettings
      description: Describes the settings that were used when your Amazon QuickSight subscription was first created in this Amazon Web Services account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAccountSettingsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "485":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the settings that you want to list.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: UpdateAccountSettings
      description: Updates the Amazon QuickSight settings in your Amazon Web Services account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAccountSettingsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "485":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the Amazon QuickSight settings that you want to list.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DefaultNamespace
              properties:
                DefaultNamespace:
                  description: "The default namespace for this Amazon Web Services account. Currently, the default is <code>default</code>. IAM users that register for the first time with Amazon QuickSight provide an email address that becomes associated with the default namespace. "
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  maxLength: 64
                NotificationEmail:
                  description: The email address that you want Amazon QuickSight to send notifications to regarding your Amazon Web Services account or Amazon QuickSight subscription.
                  type: string
                TerminationProtectionEnabled:
                  description: A boolean value that determines whether or not an Amazon QuickSight account can be deleted. A <code>True</code> value doesn't allow the account to be deleted and results in an error message if a user tries to make a <code>DeleteAccountSubscription</code> request. A <code>False</code> value will allow the account to be deleted.
                  type: boolean
  "/accounts/{AwsAccountId}/analyses/{AnalysisId}/definition":
    get:
      operationId: DescribeAnalysisDefinition
      description: <p>Provides a detailed description of the definition of an analysis.</p> <note> <p>If you do not need to know details about the content of an Analysis, for instance if you are trying to check the status of a recently created or updated Analysis, use the <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeAnalysis.html"> <code>DescribeAnalysis</code> </a> instead. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAnalysisDefinitionResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the analysis. You must be using the Amazon Web Services account that the analysis is in.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID of the analysis that you're describing. The ID is part of the URL of the analysis.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/analyses/{AnalysisId}/permissions":
    get:
      operationId: DescribeAnalysisPermissions
      description: Provides the read and write permissions for an analysis.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAnalysisPermissionsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the analysis whose permissions you're describing. You must be using the Amazon Web Services account that the analysis is in.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID of the analysis whose permissions you're describing. The ID is part of the analysis URL.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: UpdateAnalysisPermissions
      description: Updates the read and write permissions for an analysis.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAnalysisPermissionsResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the analysis whose permissions you're updating. You must be using the Amazon Web Services account that the analysis is in.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID of the analysis whose permissions you're updating. The ID is part of the analysis URL.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: A structure that describes the permissions to add and the principal to add them to.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  maxItems: 100
                RevokePermissions:
                  description: A structure that describes the permissions to remove and the principal to remove them from.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  maxItems: 100
  "/accounts/{AwsAccountId}/dashboards/{DashboardId}/definition":
    get:
      operationId: DescribeDashboardDefinition
      description: <p>Provides a detailed description of the definition of a dashboard.</p> <note> <p>If you do not need to know details about the content of a dashboard, for instance if you are trying to check the status of a recently created or updated dashboard, use the <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeDashboard.html"> <code>DescribeDashboard</code> </a> instead. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDashboardDefinitionResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the dashboard that you're describing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: version-number
          in: query
          required: false
          description: "The version number for the dashboard. If a version number isn't passed, the latest published dashboard version is described. "
          schema:
            type: integer
            minimum: 1
        - name: alias-name
          in: query
          required: false
          description: The alias name.
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/dashboards/{DashboardId}/permissions":
    get:
      operationId: DescribeDashboardPermissions
      description: Describes read and write permissions for a dashboard.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDashboardPermissionsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the dashboard that you're describing permissions for.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard, also added to the IAM policy.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: UpdateDashboardPermissions
      description: Updates read and write permissions on a dashboard.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDashboardPermissionsResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the dashboard whose permissions you're updating.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: The permissions that you want to grant on this resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  maxItems: 100
                RevokePermissions:
                  description: The permissions that you want to revoke from this resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  maxItems: 100
                GrantLinkPermissions:
                  description: Grants link permissions to all users in a defined namespace.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  maxItems: 2
                RevokeLinkPermissions:
                  description: Revokes link permissions from all users in a defined namespace.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  maxItems: 2
  "/accounts/{AwsAccountId}/data-sets/{DataSetId}/permissions":
    get:
      operationId: DescribeDataSetPermissions
      description: <p>Describes the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDataSetPermissionsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: UpdateDataSetPermissions
      description: <p>Updates the permissions on a dataset.</p> <p>The permissions resource is <code>arn:aws:quicksight:region:aws-account-id:dataset/data-set-id</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDataSetPermissionsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSetId
          in: path
          required: true
          description: The ID for the dataset whose permissions you want to update. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: The resource permissions that you want to grant to the dataset.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
                RevokePermissions:
                  description: The resource permissions that you want to revoke from the dataset.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
  "/accounts/{AwsAccountId}/data-sources/{DataSourceId}/permissions":
    get:
      operationId: DescribeDataSourcePermissions
      description: Describes the resource permissions for a data source.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDataSourcePermissionsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: UpdateDataSourcePermissions
      description: Updates the permissions to a data source.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDataSourcePermissionsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DataSourceId
          in: path
          required: true
          description: "The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: A list of resource permissions that you want to grant on the data source.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
                RevokePermissions:
                  description: A list of resource permissions that you want to revoke on the data source.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
  "/accounts/{AwsAccountId}/folders/{FolderId}/permissions":
    get:
      operationId: DescribeFolderPermissions
      description: Describes permissions for a folder.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFolderPermissionsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the folder.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The ID of the folder.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: UpdateFolderPermissions
      description: Updates permissions of a folder.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFolderPermissionsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the folder to update.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The ID of the folder.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: The permissions that you want to grant on a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
                RevokePermissions:
                  description: The permissions that you want to revoke from a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  minItems: 1
                  maxItems: 64
  "/accounts/{AwsAccountId}/folders/{FolderId}/resolved-permissions":
    get:
      operationId: DescribeFolderResolvedPermissions
      description: Describes the folder resolved permissions. Permissions consists of both folder direct permissions and the inherited permissions from the ancestor folders.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFolderResolvedPermissionsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the folder.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The ID of the folder.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments/{AssignmentName}":
    get:
      operationId: DescribeIAMPolicyAssignment
      description: Describes an existing IAM policy assignment, as specified by the assignment name.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeIAMPolicyAssignmentResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the assignment that you want to describe.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: AssignmentName
          in: path
          required: true
          description: The name of the assignment, also called a rule.
          schema:
            type: string
            pattern: (?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$
            minLength: 1
        - name: Namespace
          in: path
          required: true
          description: The namespace that contains the assignment.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: UpdateIAMPolicyAssignment
      description: "Updates an existing IAM policy assignment. This operation updates only the optional parameter or parameters that are specified in the request. This overwrites all of the users included in <code>Identities</code>. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateIAMPolicyAssignmentResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: ConcurrentUpdatingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdatingException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: "The ID of the Amazon Web Services account that contains the IAM policy assignment. "
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: AssignmentName
          in: path
          required: true
          description: The name of the assignment, also called a rule. This name must be unique within an Amazon Web Services account.
          schema:
            type: string
            pattern: (?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$
            minLength: 1
        - name: Namespace
          in: path
          required: true
          description: The namespace of the assignment.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AssignmentStatus:
                  description: <p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>
                  type: string
                  enum:
                    - ENABLED
                    - DRAFT
                    - DISABLED
                PolicyArn:
                  description: The ARN for the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
                  type: string
                Identities:
                  description: The Amazon QuickSight users, groups, or both that you want to assign the policy to.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/IdentityNameList"
  "/accounts/{AwsAccountId}/ip-restriction":
    get:
      operationId: DescribeIpRestriction
      description: Provides a summary and status of IP rules.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeIpRestrictionResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the IP rules.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: UpdateIpRestriction
      description: Updates the content and status of IP rules. To use this operation, you need to provide the entire map of rules. You can use the <code>DescribeIpRestriction</code> operation to get the current rule map.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateIpRestrictionResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the IP rules.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IpRestrictionRuleMap:
                  description: A map that describes the updated IP rules with CIDR ranges and descriptions.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/IpRestrictionRuleDescription"
                Enabled:
                  description: A value that specifies whether IP rules are turned on.
                  type: boolean
  "/accounts/{AwsAccountId}/templates/{TemplateId}/definition":
    get:
      operationId: DescribeTemplateDefinition
      description: <p>Provides a detailed description of the definition of a template.</p> <note> <p>If you do not need to know details about the content of a template, for instance if you are trying to check the status of a recently created or updated template, use the <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeTemplate.html"> <code>DescribeTemplate</code> </a> instead. </p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTemplateDefinitionResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the template. You must be using the Amazon Web Services account that the template is in.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID of the template that you're describing.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: version-number
          in: query
          required: false
          description: The version number of the template.
          schema:
            type: integer
            minimum: 1
        - name: alias-name
          in: query
          required: false
          description: The alias of the template that you want to describe. If you name a specific alias, you describe the version that the alias points to. You can specify the latest version of the template by providing the keyword <code>$LATEST</code> in the <code>AliasName</code> parameter. The keyword <code>$PUBLISHED</code> doesn't apply to templates.
          schema:
            type: string
            pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
            minLength: 1
            maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/templates/{TemplateId}/permissions":
    get:
      operationId: DescribeTemplatePermissions
      description: Describes read and write permissions on a template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeTemplatePermissionsResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the template that you're describing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: UpdateTemplatePermissions
      description: Updates the resource permissions for a template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTemplatePermissionsResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the template.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: "A list of resource permissions to be granted on the template. "
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  maxItems: 100
                RevokePermissions:
                  description: "A list of resource permissions to be revoked from the template. "
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  maxItems: 100
  "/accounts/{AwsAccountId}/themes/{ThemeId}/permissions":
    get:
      operationId: DescribeThemePermissions
      description: Describes the read and write permissions for a theme.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeThemePermissionsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the theme that you're describing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme that you want to describe permissions for.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: UpdateThemePermissions
      description: '<p>Updates the resource permissions for a theme. Permissions apply to the action to grant or revoke permissions on, for example <code>"quicksight:DescribeTheme"</code>.</p> <p>Theme permissions apply in groupings. Valid groupings include the following for the three levels of permissions, which are user, owner, or no permissions: </p> <ul> <li> <p>User</p> <ul> <li> <p> <code>"quicksight:DescribeTheme"</code> </p> </li> <li> <p> <code>"quicksight:DescribeThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeAliases"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeVersions"</code> </p> </li> </ul> </li> <li> <p>Owner</p> <ul> <li> <p> <code>"quicksight:DescribeTheme"</code> </p> </li> <li> <p> <code>"quicksight:DescribeThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeAliases"</code> </p> </li> <li> <p> <code>"quicksight:ListThemeVersions"</code> </p> </li> <li> <p> <code>"quicksight:DeleteTheme"</code> </p> </li> <li> <p> <code>"quicksight:UpdateTheme"</code> </p> </li> <li> <p> <code>"quicksight:CreateThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:DeleteThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:UpdateThemeAlias"</code> </p> </li> <li> <p> <code>"quicksight:UpdateThemePermissions"</code> </p> </li> <li> <p> <code>"quicksight:DescribeThemePermissions"</code> </p> </li> </ul> </li> <li> <p>To specify no permissions, omit the permissions list.</p> </li> </ul>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateThemePermissionsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the theme.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GrantPermissions:
                  description: A list of resource permissions to be granted for the theme.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  maxItems: 100
                RevokePermissions:
                  description: A list of resource permissions to be revoked from the theme.
                  type: array
                  items:
                    $ref: "#/components/schemas/ResourcePermission"
                  maxItems: 100
  "/accounts/{AwsAccountId}/embed-url/anonymous-user":
    post:
      operationId: GenerateEmbedUrlForAnonymousUser
      description: <p>Generates an embed URL that you can use to embed an Amazon QuickSight dashboard or visual in your website, without having to register any reader users. Before you use this action, make sure that you have configured the dashboards and permissions.</p> <p>The following rules apply to the generated URL:</p> <ul> <li> <p>It contains a temporary bearer token. It is valid for 5 minutes after it is generated. Once redeemed within this period, it cannot be re-used again.</p> </li> <li> <p>The URL validity period should not be confused with the actual session lifetime that can be customized using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForAnonymousUser.html#QS-GenerateEmbedUrlForAnonymousUser-request-SessionLifetimeInMinutes">SessionLifetimeInMinutes</a> </code> parameter. The resulting user session is valid for 15 minutes (minimum) to 10 hours (maximum). The default session duration is 10 hours.</p> </li> <li> <p>You are charged only when the URL is used or there is interaction with Amazon QuickSight.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedded Analytics</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateEmbedUrlForAnonymousUserResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: SessionLifetimeInMinutesInvalidException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionLifetimeInMinutesInvalidException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: UnsupportedPricingPlanException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedPricingPlanException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the dashboard that you're embedding.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Namespace
                - AuthorizedResourceArns
                - ExperienceConfiguration
              properties:
                SessionLifetimeInMinutes:
                  description: How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.
                  type: integer
                  minimum: 15
                  maximum: 600
                Namespace:
                  description: The Amazon QuickSight namespace that the anonymous user virtually belongs to. If you are not using an Amazon QuickSight custom namespace, set this to <code>default</code>.
                  type: string
                  pattern: ^[a-zA-Z0-9._-]*$
                  maxLength: 64
                SessionTags:
                  description: <p>The session tags used for row-level security. Before you use this parameter, make sure that you have configured the relevant datasets using the <code>DataSet$RowLevelPermissionTagConfiguration</code> parameter so that session tags can be used to provide row-level security.</p> <p>These are not the tags used for the Amazon Web Services resource tagging feature. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html">Using Row-Level Security (RLS) with Tags</a>in the <i>Amazon QuickSight User Guide</i>.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/SessionTag"
                  minItems: 1
                  maxItems: 50
                AuthorizedResourceArns:
                  description: The Amazon Resource Names (ARNs) for the Amazon QuickSight resources that the user is authorized to access during the lifetime of the session. If you choose <code>Dashboard</code> embedding experience, pass the list of dashboard ARNs in the account that you want the user to be able to view. Currently, you can pass up to 25 dashboard ARNs in each API call.
                  type: array
                  items:
                    $ref: "#/components/schemas/Arn"
                ExperienceConfiguration:
                  description: The type of experience you want to embed. For anonymous users, you can embed Amazon QuickSight dashboards.
                  type: object
                  properties:
                    Dashboard:
                      allOf:
                        - $ref: "#/components/schemas/AnonymousUserDashboardEmbeddingConfiguration"
                        - description: The type of embedding experience. In this case, Amazon QuickSight dashboards.
                    DashboardVisual:
                      allOf:
                        - $ref: "#/components/schemas/AnonymousUserDashboardVisualEmbeddingConfiguration"
                        - description: The type of embedding experience. In this case, Amazon QuickSight visuals.
                    QSearchBar:
                      allOf:
                        - $ref: "#/components/schemas/AnonymousUserQSearchBarEmbeddingConfiguration"
                        - description: The Q search bar that you want to use for anonymous user embedding.
                AllowedDomains:
                  description: <p>The domains that you want to add to the allow list for access to the generated URL that is then embedded. This optional parameter overrides the static domains that are configured in the Manage QuickSight menu in the Amazon QuickSight console. Instead, it allows only the domains that you include in this parameter. You can list up to three domains or subdomains in each API call.</p> <p>To include all subdomains under a specific domain to the allow list, use <code>*</code>. For example, <code>https://*.sapp.amazon.com</code> includes all subdomains under <code>https://sapp.amazon.com</code>.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/String"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/embed-url/registered-user":
    post:
      operationId: GenerateEmbedUrlForRegisteredUser
      description: <p>Generates an embed URL that you can use to embed an Amazon QuickSight experience in your website. This action can be used for any type of user registered in an Amazon QuickSight account. Before you use this action, make sure that you have configured the relevant Amazon QuickSight resource and permissions.</p> <p>The following rules apply to the generated URL:</p> <ul> <li> <p>It contains a temporary bearer token. It is valid for 5 minutes after it is generated. Once redeemed within this period, it cannot be re-used again.</p> </li> <li> <p>The URL validity period should not be confused with the actual session lifetime that can be customized using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html#QS-GenerateEmbedUrlForRegisteredUser-request-SessionLifetimeInMinutes">SessionLifetimeInMinutes</a> </code> parameter.</p> <p>The resulting user session is valid for 15 minutes (minimum) to 10 hours (maximum). The default session duration is 10 hours.</p> </li> <li> <p>You are charged only when the URL is used or there is interaction with Amazon QuickSight.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedded Analytics</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateEmbedUrlForRegisteredUserResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: QuickSightUserNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuickSightUserNotFoundException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: SessionLifetimeInMinutesInvalidException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionLifetimeInMinutesInvalidException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "487":
          description: UnsupportedPricingPlanException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedPricingPlanException"
        "488":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the dashboard that you're embedding.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - UserArn
                - ExperienceConfiguration
              properties:
                SessionLifetimeInMinutes:
                  description: How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.
                  type: integer
                  minimum: 15
                  maximum: 600
                UserArn:
                  description: The Amazon Resource Name for the registered user.
                  type: string
                ExperienceConfiguration:
                  description: <p>The type of experience you want to embed. For registered users, you can embed Amazon QuickSight dashboards or the Amazon QuickSight console.</p> <note> <p>Exactly one of the experience configurations is required. You can choose <code>Dashboard</code> or <code>QuickSightConsole</code>. You cannot choose more than one experience configuration.</p> </note>
                  type: object
                  properties:
                    Dashboard:
                      allOf:
                        - $ref: "#/components/schemas/RegisteredUserDashboardEmbeddingConfiguration"
                        - description: The configuration details for providing a dashboard embedding experience.
                    QuickSightConsole:
                      allOf:
                        - $ref: "#/components/schemas/RegisteredUserQuickSightConsoleEmbeddingConfiguration"
                        - description: <p>The configuration details for providing each Amazon QuickSight console embedding experience. This can be used along with custom permissions to restrict access to certain features. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>Use <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html">GenerateEmbedUrlForRegisteredUser</a> </code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who accesses an embedded Amazon QuickSight console needs to belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a> </code> API operation. Use the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RegisterUser.html">RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-full-console-for-authenticated-users.html">Embedding the Full Functionality of the Amazon QuickSight Console for Authenticated Users</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> </p> </li> </ul> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
                    QSearchBar:
                      allOf:
                        - $ref: "#/components/schemas/RegisteredUserQSearchBarEmbeddingConfiguration"
                        - description: <p>The configuration details for embedding the Q search bar.</p> <p>For more information about embedding the Q search bar, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-overview.html">Embedding Overview</a> in the <i>Amazon QuickSight User Guide</i>.</p>
                    DashboardVisual:
                      allOf:
                        - $ref: "#/components/schemas/RegisteredUserDashboardVisualEmbeddingConfiguration"
                        - description: The type of embedding experience. In this case, Amazon QuickSight visuals.
                AllowedDomains:
                  description: <p>The domains that you want to add to the allow list for access to the generated URL that is then embedded. This optional parameter overrides the static domains that are configured in the Manage QuickSight menu in the Amazon QuickSight console. Instead, it allows only the domains that you include in this parameter. You can list up to three domains or subdomains in each API call.</p> <p>To include all subdomains under a specific domain to the allow list, use <code>*</code>. For example, <code>https://*.sapp.amazon.com</code> includes all subdomains under <code>https://sapp.amazon.com</code>.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/String"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/dashboards/{DashboardId}/embed-url#creds-type":
    get:
      operationId: GetDashboardEmbedUrl
      description: <p>Generates a temporary session URL and authorization code(bearer token) that you can use to embed an Amazon QuickSight read-only dashboard in your website or application. Before you use this command, make sure that you have configured the dashboards and permissions. </p> <p>Currently, you can use <code>GetDashboardEmbedURL</code> only from the server, not from the user's browser. The following rules apply to the generated URL:</p> <ul> <li> <p>They must be used together.</p> </li> <li> <p>They can be used one time only.</p> </li> <li> <p>They are valid for 5 minutes after you run this command.</p> </li> <li> <p>You are charged only when the URL is used or there is interaction with Amazon QuickSight.</p> </li> <li> <p>The resulting user session is valid for 15 minutes (default) up to 10 hours (maximum). You can use the optional <code>SessionLifetimeInMinutes</code> parameter to customize session duration.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-deprecated.html">Embedding Analytics Using GetDashboardEmbedUrl</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDashboardEmbedUrlResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: DomainNotWhitelistedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DomainNotWhitelistedException"
        "486":
          description: QuickSightUserNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuickSightUserNotFoundException"
        "487":
          description: IdentityTypeNotSupportedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IdentityTypeNotSupportedException"
        "488":
          description: SessionLifetimeInMinutesInvalidException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionLifetimeInMinutesInvalidException"
        "489":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "490":
          description: UnsupportedPricingPlanException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedPricingPlanException"
        "491":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the dashboard that you're embedding.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard, also added to the Identity and Access Management (IAM) policy.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: creds-type
          in: query
          required: true
          description: The authentication method that the user uses to sign in.
          schema:
            type: string
            enum:
              - IAM
              - QUICKSIGHT
              - ANONYMOUS
        - name: session-lifetime
          in: query
          required: false
          description: How many minutes the session is valid. The session lifetime must be 15-600 minutes.
          schema:
            type: integer
            minimum: 15
            maximum: 600
        - name: undo-redo-disabled
          in: query
          required: false
          description: Remove the undo/redo button on the embedded dashboard. The default is FALSE, which enables the undo/redo button.
          schema:
            type: boolean
        - name: reset-disabled
          in: query
          required: false
          description: Remove the reset button on the embedded dashboard. The default is FALSE, which enables the reset button.
          schema:
            type: boolean
        - name: state-persistence-enabled
          in: query
          required: false
          description: Adds persistence of state for the user session in an embedded dashboard. Persistence applies to the sheet and the parameter settings. These are control settings that the dashboard subscriber (Amazon QuickSight reader) chooses while viewing the dashboard. If this is set to <code>TRUE</code>, the settings are the same when the subscriber reopens the same dashboard URL. The state is stored in Amazon QuickSight, not in a browser cookie. If this is set to FALSE, the state of the user session is not persisted. The default is <code>FALSE</code>.
          schema:
            type: boolean
        - name: user-arn
          in: query
          required: false
          description: <p>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type. You can use this for any Amazon QuickSight users in your account (readers, authors, or admins) authenticated as one of the following:</p> <ul> <li> <p>Active Directory (AD) users or group members</p> </li> <li> <p>Invited nonfederated users</p> </li> <li> <p>IAM users and IAM role-based sessions authenticated through Federated Single Sign-On using SAML, OpenID Connect, or IAM federation.</p> </li> </ul> <p>Omit this parameter for users in the third group – IAM users and IAM role-based sessions.</p>
          schema:
            type: string
        - name: namespace
          in: query
          required: false
          description: The Amazon QuickSight namespace that contains the dashboard IDs in this request. If you're not using a custom namespace, set <code>Namespace = default</code>.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
        - name: additional-dashboard-ids
          in: query
          required: false
          description: A list of one or more dashboard IDs that you want anonymous users to have tempporary access to. Currently, the <code>IdentityType</code> parameter must be set to <code>ANONYMOUS</code> because other identity types authenticate as Amazon QuickSight or IAM users. For example, if you set "<code>--dashboard-id dash_id1 --dashboard-id dash_id2 dash_id3 identity-type ANONYMOUS</code>", the session can access all three dashboards.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ShortRestrictiveResourceId"
            minItems: 1
            maxItems: 20
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/session-embed-url":
    get:
      operationId: GetSessionEmbedUrl
      description: <p>Generates a session URL and authorization code that you can use to embed the Amazon Amazon QuickSight console in your web server code. Use <code>GetSessionEmbedUrl</code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who access an embedded Amazon QuickSight console need belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a> </code> API operation. Use <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RegisterUser.html">RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics.html">Embedding Analytics</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSessionEmbedUrlResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: QuickSightUserNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuickSightUserNotFoundException"
        "486":
          description: SessionLifetimeInMinutesInvalidException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionLifetimeInMinutesInvalidException"
        "487":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "488":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account associated with your Amazon QuickSight subscription.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: entry-point
          in: query
          required: false
          description: <p>The URL you use to access the embedded session. The entry point URL is constrained to the following paths:</p> <ul> <li> <p> <code>/start</code> </p> </li> <li> <p> <code>/start/analyses</code> </p> </li> <li> <p> <code>/start/dashboards</code> </p> </li> <li> <p> <code>/start/favorites</code> </p> </li> <li> <p> <code>/dashboards/<i>DashboardId</i> </code> - where <code>DashboardId</code> is the actual ID key from the Amazon QuickSight console URL of the dashboard</p> </li> <li> <p> <code>/analyses/<i>AnalysisId</i> </code> - where <code>AnalysisId</code> is the actual ID key from the Amazon QuickSight console URL of the analysis</p> </li> </ul>
          schema:
            type: string
            minLength: 1
            maxLength: 1000
        - name: session-lifetime
          in: query
          required: false
          description: How many minutes the session is valid. The session lifetime must be 15-600 minutes.
          schema:
            type: integer
            minimum: 15
            maximum: 600
        - name: user-arn
          in: query
          required: false
          description: <p>The Amazon QuickSight user's Amazon Resource Name (ARN), for use with <code>QUICKSIGHT</code> identity type. You can use this for any type of Amazon QuickSight users in your account (readers, authors, or admins). They need to be authenticated as one of the following:</p> <ol> <li> <p>Active Directory (AD) users or group members</p> </li> <li> <p>Invited nonfederated users</p> </li> <li> <p>IAM users and IAM role-based sessions authenticated through Federated Single Sign-On using SAML, OpenID Connect, or IAM federation</p> </li> </ol> <p>Omit this parameter for users in the third group, IAM users and IAM role-based sessions.</p>
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/analyses":
    get:
      operationId: ListAnalyses
      description: Lists Amazon QuickSight analyses that exist in the specified Amazon Web Services account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAnalysesResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the analyses.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions":
    get:
      operationId: ListDashboardVersions
      description: Lists all the versions of the dashboards in the Amazon QuickSight subscription.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDashboardVersionsResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the dashboard that you're listing versions for.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/dashboards":
    get:
      operationId: ListDashboards
      description: Lists dashboards in an Amazon Web Services account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDashboardsResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "483":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the dashboards that you're listing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/folders/{FolderId}/members":
    get:
      operationId: ListFolderMembers
      description: "List all assets (<code>DASHBOARD</code>, <code>ANALYSIS</code>, and <code>DATASET</code>) in a folder. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFolderMembersResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the folder.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: FolderId
          in: path
          required: true
          description: The ID of the folder.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 2048
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/folders":
    get:
      operationId: ListFolders
      description: Lists all folders in an account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFoldersResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the folder.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups/{GroupName}/members":
    get:
      operationId: ListGroupMemberships
      description: Lists member users in a group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupMembershipsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "487":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: GroupName
          in: path
          required: true
          description: The name of the group that you want to see a membership list of.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return from this request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace of the group that you want a list of users from.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/iam-policy-assignments":
    get:
      operationId: ListIAMPolicyAssignments
      description: Lists IAM policy assignments in the current Amazon QuickSight account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListIAMPolicyAssignmentsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains these IAM policy assignments.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace for the assignments.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AssignmentStatus:
                  description: The status of the assignments.
                  type: string
                  enum:
                    - ENABLED
                    - DRAFT
                    - DISABLED
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/iam-policy-assignments":
    get:
      operationId: ListIAMPolicyAssignmentsForUser
      description: Lists all the IAM policy assignments, including the Amazon Resource Names (ARNs) for the IAM policies assigned to the specified user and group or groups that the user belongs to.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListIAMPolicyAssignmentsForUserResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: ConcurrentUpdatingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConcurrentUpdatingException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the assignments.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: UserName
          in: path
          required: true
          description: The name of the user.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: Namespace
          in: path
          required: true
          description: The namespace of the assignment.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/data-sets/{DataSetId}/ingestions":
    get:
      operationId: ListIngestions
      description: Lists the history of SPICE ingestions for a dataset.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListIngestionsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "485":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: DataSetId
          in: path
          required: true
          description: The ID of the dataset used in the ingestion.
          schema:
            type: string
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/namespaces":
    get:
      operationId: ListNamespaces
      description: Lists the namespaces for the specified Amazon Web Services account. This operation doesn't list deleted namespaces.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNamespacesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "487":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the Amazon QuickSight namespaces that you want to list.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: A unique pagination token that can be used in a subsequent request. You will receive a pagination token in the response body of a previous <code>ListNameSpaces</code> API call if there is more data that can be returned. To receive the data, make another <code>ListNamespaces</code> API call with the returned token to retrieve the next page of data. Each token is valid for 24 hours. If you try to make a <code>ListNamespaces</code> API call with an expired token, you will receive a <code>HTTP 400 InvalidNextTokenException</code> error.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/resources/{ResourceArn}/tags":
    get:
      operationId: ListTagsForResource
      description: Lists the tags assigned to a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want a list of tags for.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: <p>Assigns one or more tags (key-value pairs) to the specified Amazon QuickSight resource. </p> <p>Tags can help you organize and categorize your resources. You can also use them to scope user permissions, by granting a user permission to access or change only resources with certain tag values. You can use the <code>TagResource</code> operation with a resource that already has tags. If you specify a new tag key for the resource, this tag is appended to the list of tags associated with the resource. If you specify a tag key that is already associated with the resource, the new tag value that you specify replaces the previous value for that tag.</p> <p>You can associate as many as 50 tags with a resource. Amazon QuickSight supports tagging on data set, data source, dashboard, and template. </p> <p>Tagging for Amazon QuickSight works in a similar way to tagging for other Amazon Web Services services, except for the following:</p> <ul> <li> <p>You can't use tags to track costs for Amazon QuickSight. This isn't possible because you can't tag the resources that Amazon QuickSight costs are based on, for example Amazon QuickSight storage capacity (SPICE), number of users, type of users, and usage metrics.</p> </li> <li> <p>Amazon QuickSight doesn't currently support the tag editor for Resource Groups.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to tag.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 200
  "/accounts/{AwsAccountId}/templates/{TemplateId}/aliases":
    get:
      operationId: ListTemplateAliases
      description: Lists all the aliases of a template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTemplateAliasesResponse"
        "480":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the template aliases that you're listing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-result
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/templates/{TemplateId}/versions":
    get:
      operationId: ListTemplateVersions
      description: Lists all the versions of the templates in the current Amazon QuickSight account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTemplateVersionsResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the templates that you're listing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: TemplateId
          in: path
          required: true
          description: The ID for the template.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/templates":
    get:
      operationId: ListTemplates
      description: Lists all the templates in the current Amazon QuickSight account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTemplatesResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the templates that you're listing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-result
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/themes/{ThemeId}/aliases":
    get:
      operationId: ListThemeAliases
      description: Lists all the aliases of a theme.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListThemeAliasesResponse"
        "480":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the theme aliases that you're listing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-result
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/themes/{ThemeId}/versions":
    get:
      operationId: ListThemeVersions
      description: Lists all the versions of the themes in the current Amazon Web Services account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListThemeVersionsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the themes that you're listing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: ThemeId
          in: path
          required: true
          description: The ID for the theme.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/themes":
    get:
      operationId: ListThemes
      description: Lists all the themes in the current Amazon Web Services account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListThemesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the themes that you're listing.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to be returned per request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: type
          in: query
          required: false
          description: <p>The type of themes that you want to list. Valid options include the following:</p> <ul> <li> <p> <code>ALL (default)</code>- Display all existing themes.</p> </li> <li> <p> <code>CUSTOM</code> - Display only the themes created by people using Amazon QuickSight.</p> </li> <li> <p> <code>QUICKSIGHT</code> - Display only the starting themes defined by Amazon QuickSight.</p> </li> </ul>
          schema:
            type: string
            enum:
              - QUICKSIGHT
              - CUSTOM
              - ALL
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/users/{UserName}/groups":
    get:
      operationId: ListUserGroups
      description: Lists the Amazon QuickSight groups that an Amazon QuickSight user is a member of.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUserGroupsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "486":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: UserName
          in: path
          required: true
          description: The Amazon QuickSight user name that you want to list group memberships for.
          schema:
            type: string
            pattern: "[\\u0020-\\u00FF]+"
            minLength: 1
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace. Currently, you should set this to <code>default</code>.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return from this request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/users":
    get:
      operationId: ListUsers
      description: "Returns a list of all of the Amazon QuickSight users belonging to this account. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsersResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "487":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return from this request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: Namespace
          in: path
          required: true
          description: The namespace. Currently, you should set this to <code>default</code>.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: RegisterUser
      description: Creates an Amazon QuickSight user whose identity is associated with the Identity and Access Management (IAM) identity or role specified in the request. When you register a new user from the Amazon QuickSight API, Amazon QuickSight generates a registration URL. The user accesses this registration URL to create their account. Amazon QuickSight doesn't send a registration email to users who are registered from the Amazon QuickSight API. If you want new users to receive a registration email, then add those users in the Amazon QuickSight console. For more information on registering a new user in the Amazon QuickSight console, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/managing-users.html#inviting-users"> Inviting users to access Amazon QuickSight</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterUserResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "485":
          description: ResourceExistsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceExistsException"
        "486":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "488":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the user is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: Namespace
          in: path
          required: true
          description: The namespace. Currently, you should set this to <code>default</code>.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IdentityType
                - Email
                - UserRole
              properties:
                IdentityType:
                  description: "<p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>"
                  type: string
                  enum:
                    - IAM
                    - QUICKSIGHT
                Email:
                  description: The email address of the user that you want to register.
                  type: string
                UserRole:
                  description: "<p>The Amazon QuickSight role for the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn't currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn't currently available for use.</p> </li> </ul>"
                  type: string
                  enum:
                    - ADMIN
                    - AUTHOR
                    - READER
                    - RESTRICTED_AUTHOR
                    - RESTRICTED_READER
                IamArn:
                  description: "The ARN of the IAM user or role that you are registering with Amazon QuickSight. "
                  type: string
                SessionName:
                  description: "You need to use this parameter only when you register one or more users using an assumed IAM role. You don't need to provide the session name for other scenarios, for example when you are registering an IAM user or an Amazon QuickSight user. You can register multiple users using the same IAM role if each user has a different session name. For more information on assuming IAM roles, see <a href=\"https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html\"> <code>assume-role</code> </a> in the <i>CLI Reference.</i> "
                  type: string
                  pattern: "[\\w+=.@-]*"
                  minLength: 2
                  maxLength: 64
                UserName:
                  description: The Amazon QuickSight user name that you want to create for the user you are registering.
                  type: string
                  pattern: "[\\u0020-\\u00FF]+"
                  minLength: 1
                CustomPermissionsName:
                  description: <p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user's access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>To add custom permissions to an existing user, use <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a> </code> instead.</p> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the Amazon QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a Amazon QuickSight user. </p> <p>Amazon QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning Amazon QuickSight users to one of the default security cohorts in Amazon QuickSight (admin, author, reader).</p> <p>This feature is available only to Amazon QuickSight Enterprise edition subscriptions.</p>
                  type: string
                  pattern: ^[a-zA-Z0-9+=,.@_-]+$
                  minLength: 1
                  maxLength: 64
                ExternalLoginFederationProviderType:
                  description: '<p>The type of supported external login provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> </ul>'
                  type: string
                CustomFederationProviderUrl:
                  description: The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.
                  type: string
                ExternalLoginId:
                  description: The identity ID for a user in the external login provider.
                  type: string
  "/accounts/{AwsAccountId}/restore/analyses/{AnalysisId}":
    post:
      operationId: RestoreAnalysis
      description: Restores an analysis.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestoreAnalysisResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the analysis.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: AnalysisId
          in: path
          required: true
          description: The ID of the analysis that you're restoring.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/search/analyses":
    post:
      operationId: SearchAnalyses
      description: <p>Searches for analyses that belong to the user specified in the filter.</p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchAnalysesResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the analyses that you're searching for.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
              properties:
                Filters:
                  description: "The structure for the search filters that you want to apply to your search. "
                  type: array
                  items:
                    $ref: "#/components/schemas/AnalysisSearchFilter"
                  minItems: 1
                  maxItems: 1
                NextToken:
                  description: A pagination token that can be used in a subsequent request.
                  type: string
                MaxResults:
                  description: The maximum number of results to return.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/search/dashboards":
    post:
      operationId: SearchDashboards
      description: <p>Searches for dashboards that belong to a user. </p> <note> <p>This operation is eventually consistent. The results are best effort and may not reflect very recent updates and changes.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchDashboardsResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: "The ID of the Amazon Web Services account that contains the user whose dashboards you're searching for. "
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
              properties:
                Filters:
                  description: 'The filters to apply to the search. Currently, you can search only by user name, for example, <code>"Filters": [ { "Name": "QUICKSIGHT_USER", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1" } ]</code> '
                  type: array
                  items:
                    $ref: "#/components/schemas/DashboardSearchFilter"
                  minItems: 1
                  maxItems: 1
                NextToken:
                  description: The token for the next set of results, or null if there are no more results.
                  type: string
                MaxResults:
                  description: The maximum number of results to be returned per request.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/search/data-sets":
    post:
      operationId: SearchDataSets
      description: Use the <code>SearchDataSets</code> operation to search for datasets that belong to an account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchDataSetsResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
              properties:
                Filters:
                  description: The filters to apply to the search.
                  type: array
                  items:
                    $ref: "#/components/schemas/DataSetSearchFilter"
                  minItems: 1
                  maxItems: 1
                NextToken:
                  description: A pagination token that can be used in a subsequent request.
                  type: string
                MaxResults:
                  description: The maximum number of results to be returned per request.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/search/data-sources":
    post:
      operationId: SearchDataSources
      description: Use the <code>SearchDataSources</code> operation to search for data sources that belong to an account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchDataSourcesResponse"
        "480":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
              properties:
                Filters:
                  description: The filters to apply to the search.
                  type: array
                  items:
                    $ref: "#/components/schemas/DataSourceSearchFilter"
                  minItems: 1
                  maxItems: 1
                NextToken:
                  description: A pagination token that can be used in a subsequent request.
                  type: string
                MaxResults:
                  description: The maximum number of results to be returned per request.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/search/folders":
    post:
      operationId: SearchFolders
      description: Searches the subfolders in a folder.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchFoldersResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "486":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "487":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that contains the folder.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
              properties:
                Filters:
                  description: 'The filters to apply to the search. Currently, you can search only by the parent folder ARN. For example, <code>"Filters": [ { "Name": "PARENT_FOLDER_ARN", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:folder/folderId" } ]</code>.'
                  type: array
                  items:
                    $ref: "#/components/schemas/FolderSearchFilter"
                  maxItems: 100
                NextToken:
                  description: The token for the next set of results, or null if there are no more results.
                  type: string
                MaxResults:
                  description: The maximum number of results to be returned per request.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/namespaces/{Namespace}/groups-search":
    post:
      operationId: SearchGroups
      description: Use the <code>SearchGroups</code> operation to search groups in a specified Amazon QuickSight namespace using the supplied filters.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchGroupsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InvalidNextTokenException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidNextTokenException"
        "485":
          description: PreconditionNotMetException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionNotMetException"
        "486":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
        "487":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID for the Amazon Web Services account that the group is in. Currently, you use the ID for the Amazon Web Services account that contains your Amazon QuickSight account.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: next-token
          in: query
          required: false
          description: A pagination token that can be used in a subsequent request.
          schema:
            type: string
        - name: max-results
          in: query
          required: false
          description: The maximum number of results to return from this request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: Namespace
          in: path
          required: true
          description: The namespace that you want to search.
          schema:
            type: string
            pattern: ^[a-zA-Z0-9._-]*$
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
              properties:
                Filters:
                  description: The structure for the search filters that you want to apply to your search.
                  type: array
                  items:
                    $ref: "#/components/schemas/GroupSearchFilter"
                  minItems: 1
                  maxItems: 1
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/resources/{ResourceArn}/tags#keys":
    delete:
      operationId: UntagResource
      description: Removes a tag or tags from a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource that you want to untag.
          schema:
            type: string
        - name: keys
          in: query
          required: true
          description: The keys of the key-value pairs for the resource tag or tags assigned to the resource.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TagKey"
            minItems: 1
            maxItems: 200
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/dashboards/{DashboardId}/versions/{VersionNumber}":
    put:
      operationId: UpdateDashboardPublishedVersion
      description: Updates the published version of a dashboard.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDashboardPublishedVersionResponse"
        "480":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: UnsupportedUserEditionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedUserEditionException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The ID of the Amazon Web Services account that contains the dashboard that you're updating.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
        - name: DashboardId
          in: path
          required: true
          description: The ID for the dashboard.
          schema:
            type: string
            pattern: "[\\w\\-]+"
            minLength: 1
            maxLength: 512
        - name: VersionNumber
          in: path
          required: true
          description: The version number of the dashboard.
          schema:
            type: integer
            minimum: 1
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/accounts/{AwsAccountId}/public-sharing-settings":
    put:
      operationId: UpdatePublicSharingSettings
      description: <p>Use the <code>UpdatePublicSharingSettings</code> operation to turn on or turn off the public sharing settings of an Amazon QuickSight dashboard.</p> <p>To use this operation, turn on session capacity pricing for your Amazon QuickSight account.</p> <p>Before you can turn on public sharing on your account, make sure to give public sharing permissions to an administrative user in the Identity and Access Management (IAM) console. For more information on using IAM with Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/security_iam_service-with-iam.html">Using Amazon QuickSight with IAM</a> in the <i>Amazon QuickSight User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePublicSharingSettingsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InvalidParameterValueException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidParameterValueException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: UnsupportedPricingPlanException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnsupportedPricingPlanException"
        "485":
          description: InternalFailureException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalFailureException"
      parameters:
        - name: AwsAccountId
          in: path
          required: true
          description: The Amazon Web Services account ID associated with your Amazon QuickSight subscription.
          schema:
            type: string
            pattern: ^[0-9]{12}$
            minLength: 12
            maxLength: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PublicSharingEnabled:
                  description: A Boolean value that indicates whether public sharing is turned on for an Amazon QuickSight account.
                  type: boolean
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CancelIngestionResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the data ingestion.
        IngestionId:
          allOf:
            - $ref: "#/components/schemas/IngestionId"
            - description: An ID for the ingestion.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    AccessDeniedException: {}
    InvalidParameterValueException: {}
    ResourceNotFoundException: {}
    ThrottlingException: {}
    ResourceExistsException: {}
    InternalFailureException: {}
    CreateAccountCustomizationResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the customization that you created for this Amazon Web Services account.
        AwsAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The ID for the Amazon Web Services account that you want to customize Amazon QuickSight for.
        Namespace:
          allOf:
            - $ref: "#/components/schemas/Namespace"
            - description: "The namespace associated with the customization you're creating. "
        AccountCustomization:
          allOf:
            - $ref: "#/components/schemas/AccountCustomization"
            - description: "The Amazon QuickSight customizations you're adding in the current Amazon Web Services Region. "
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    Arn:
      type: string
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/TagKey"
            - description: Tag key.
        Value:
          allOf:
            - $ref: "#/components/schemas/TagValue"
            - description: Tag value.
      description: The key or keys of the key-value pairs for the resource tag or tags assigned to the resource.
    ConflictException: {}
    ResourceUnavailableException: {}
    CreateAccountSubscriptionResponse:
      type: object
      properties:
        SignupResponse:
          allOf:
            - $ref: "#/components/schemas/SignupResponse"
            - description: A <code>SignupResponse</code> object that returns information about a newly created Amazon QuickSight account.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    String:
      type: string
    PreconditionNotMetException: {}
    CreateAnalysisResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN for the analysis.
        AnalysisId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the analysis.
        CreationStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: "The status of the creation of the analysis. "
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    StringParameterList:
      type: array
      items:
        $ref: "#/components/schemas/StringParameter"
      maxItems: 100
    IntegerParameterList:
      type: array
      items:
        $ref: "#/components/schemas/IntegerParameter"
      maxItems: 100
    DecimalParameterList:
      type: array
      items:
        $ref: "#/components/schemas/DecimalParameter"
      maxItems: 100
    DateTimeParameterList:
      type: array
      items:
        $ref: "#/components/schemas/DateTimeParameter"
      maxItems: 100
    ResourcePermission:
      type: object
      required:
        - Principal
        - Actions
      properties:
        Principal:
          allOf:
            - $ref: "#/components/schemas/Principal"
            - description: "<p>The Amazon Resource Name (ARN) of the principal. This can be one of the following:</p> <ul> <li> <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p> </li> <li> <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p> </li> <li> <p>The ARN of an Amazon Web Services account root: This is an IAM ARN rather than a QuickSight ARN. Use this option only to share resources (templates) across Amazon Web Services accounts. (This is less common.) </p> </li> </ul>"
        Actions:
          allOf:
            - $ref: "#/components/schemas/ActionList"
            - description: The IAM action to grant or revoke permissions on.
      description: Permission for the resource.
    AnalysisSourceTemplate:
      type: object
      required:
        - DataSetReferences
        - Arn
      properties:
        DataSetReferences:
          allOf:
            - $ref: "#/components/schemas/DataSetReferenceList"
            - description: The dataset references of the source template of an analysis.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the source template of an analysis.
      description: The source template of an analysis.
    DataSetIdentifierDeclarationList:
      type: array
      items:
        $ref: "#/components/schemas/DataSetIdentifierDeclaration"
      minItems: 1
      maxItems: 50
    SheetDefinitionList:
      type: array
      items:
        $ref: "#/components/schemas/SheetDefinition"
      maxItems: 20
    CalculatedFields:
      type: array
      items:
        $ref: "#/components/schemas/CalculatedField"
      maxItems: 100
    ParameterDeclarationList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterDeclaration"
      maxItems: 200
    FilterGroupList:
      type: array
      items:
        $ref: "#/components/schemas/FilterGroup"
      maxItems: 2000
    ColumnConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnConfiguration"
      maxItems: 200
    AnalysisDefaults:
      type: object
      required:
        - DefaultNewSheetConfiguration
      properties:
        DefaultNewSheetConfiguration:
          allOf:
            - $ref: "#/components/schemas/DefaultNewSheetConfiguration"
            - description: The configuration for default new sheet settings.
      description: The configuration for default analysis settings.
    UnsupportedUserEditionException: {}
    LimitExceededException: {}
    CreateDashboardResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the dashboard.
        VersionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the dashboard, including the version number of the first version that is created.
        DashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the dashboard.
        CreationStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The status of the dashboard creation request.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DashboardSourceTemplate:
      type: object
      required:
        - DataSetReferences
        - Arn
      properties:
        DataSetReferences:
          allOf:
            - $ref: "#/components/schemas/DataSetReferenceList"
            - description: Dataset references.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
      description: Dashboard source template.
    AdHocFilteringOption:
      type: object
      properties:
        AvailabilityStatus:
          allOf:
            - $ref: "#/components/schemas/DashboardBehavior"
            - description: Availability status.
      description: An ad hoc (one-time) filtering option.
    ExportToCSVOption:
      type: object
      properties:
        AvailabilityStatus:
          allOf:
            - $ref: "#/components/schemas/DashboardBehavior"
            - description: Availability status.
      description: Export to .csv option.
    SheetControlsOption:
      type: object
      properties:
        VisibilityState:
          allOf:
            - $ref: "#/components/schemas/DashboardUIState"
            - description: Visibility state.
      description: Sheet controls option.
    DashboardVisualPublishOptions:
      type: object
      properties:
        ExportHiddenFieldsOption:
          allOf:
            - $ref: "#/components/schemas/ExportHiddenFieldsOption"
            - description: Determines if hidden fields are included in an exported dashboard.
      description: The visual publish options of a visual in a dashboard
    SheetLayoutElementMaximizationOption:
      type: object
      properties:
        AvailabilityStatus:
          allOf:
            - $ref: "#/components/schemas/DashboardBehavior"
            - description: The status of the sheet layout maximization options of a dashbaord.
      description: The sheet layout maximization options of a dashbaord.
    VisualMenuOption:
      type: object
      properties:
        AvailabilityStatus:
          allOf:
            - $ref: "#/components/schemas/DashboardBehavior"
            - description: The availaiblity status of a visual's menu options.
      description: The menu options for a visual.
    VisualAxisSortOption:
      type: object
      properties:
        AvailabilityStatus:
          allOf:
            - $ref: "#/components/schemas/DashboardBehavior"
            - description: The availaiblity status of a visual's axis sort options.
      description: The axis sort options for a visual.
    ExportWithHiddenFieldsOption:
      type: object
      properties:
        AvailabilityStatus:
          allOf:
            - $ref: "#/components/schemas/DashboardBehavior"
            - description: The status of the export with hidden fields options.
      description: Determines whether or not hidden fields are visible on exported dashbaords.
    DataPointDrillUpDownOption:
      type: object
      properties:
        AvailabilityStatus:
          allOf:
            - $ref: "#/components/schemas/DashboardBehavior"
            - description: The status of the drill down options of data points.
      description: The drill down options for data points in a dashbaord.
    DataPointMenuLabelOption:
      type: object
      properties:
        AvailabilityStatus:
          allOf:
            - $ref: "#/components/schemas/DashboardBehavior"
            - description: The status of the data point menu options.
      description: The data point menu options of a dashboard.
    DataPointTooltipOption:
      type: object
      properties:
        AvailabilityStatus:
          allOf:
            - $ref: "#/components/schemas/DashboardBehavior"
            - description: The status of the data point tool tip options.
      description: The data point tooltip options.
    CreateDataSetResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        IngestionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN for the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.
        IngestionId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    PhysicalTable:
      type: object
      properties:
        RelationalTable:
          allOf:
            - $ref: "#/components/schemas/RelationalTable"
            - description: A physical table type for relational data sources.
        CustomSql:
          allOf:
            - $ref: "#/components/schemas/CustomSql"
            - description: A physical table type built from the results of the custom SQL query.
        S3Source:
          allOf:
            - $ref: "#/components/schemas/S3Source"
            - description: A physical table type for as S3 data source.
      description: A view of a data source that contains information about the shape of the data in the underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    LogicalTable:
      type: object
      required:
        - Alias
        - Source
      properties:
        Alias:
          allOf:
            - $ref: "#/components/schemas/LogicalTableAlias"
            - description: A display name for the logical table.
        DataTransforms:
          allOf:
            - $ref: "#/components/schemas/TransformOperationList"
            - description: "Transform operations that act on this logical table. For this structure to be valid, only one of the attributes can be non-null. "
        Source:
          allOf:
            - $ref: "#/components/schemas/LogicalTableSource"
            - description: Source of this logical table.
      description: A <i>logical table</i> is a unit that joins and that data transformations operate on. A logical table has a source, which can be either a physical table or result of a join. When a logical table points to a physical table, the logical table acts as a mutable copy of that physical table through transform operations.
    ColumnGroup:
      type: object
      properties:
        GeoSpatialColumnGroup:
          allOf:
            - $ref: "#/components/schemas/GeoSpatialColumnGroup"
            - description: Geospatial column group that denotes a hierarchy.
      description: Groupings of columns that work together in certain Amazon QuickSight features. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    FieldFolder:
      type: object
      properties:
        description:
          allOf:
            - $ref: "#/components/schemas/FieldFolderDescription"
            - description: The description for a field folder.
        columns:
          allOf:
            - $ref: "#/components/schemas/FolderColumnList"
            - description: A folder has a list of columns. A column can only be in one folder.
      description: A FieldFolder element is a folder that contains fields and nested subfolders.
    Namespace:
      type: string
      pattern: ^[a-zA-Z0-9._-]*$
      maxLength: 64
    RowLevelPermissionPolicy:
      type: string
      enum:
        - GRANT_ACCESS
        - DENY_ACCESS
    RowLevelPermissionFormatVersion:
      type: string
      enum:
        - VERSION_1
        - VERSION_2
    Status:
      type: string
      enum:
        - ENABLED
        - DISABLED
    RowLevelPermissionTagRuleList:
      type: array
      items:
        $ref: "#/components/schemas/RowLevelPermissionTagRule"
      minItems: 1
      maxItems: 50
    RowLevelPermissionTagRuleConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/RowLevelPermissionTagRuleConfiguration"
      minItems: 1
      maxItems: 50
    ColumnLevelPermissionRule:
      type: object
      properties:
        Principals:
          allOf:
            - $ref: "#/components/schemas/PrincipalList"
            - description: An array of Amazon Resource Names (ARNs) for Amazon QuickSight users or groups.
        ColumnNames:
          allOf:
            - $ref: "#/components/schemas/ColumnNameList"
            - description: An array of column names.
      description: A rule defined to grant access on one or more restricted columns. Each dataset can have multiple rules. To create a restricted column, you add it to one or more rules. Each rule must contain at least one column and at least one user or group. To be able to see a restricted column, a user or group needs to be added to a rule for that column.
    Boolean:
      type: boolean
    CreateDataSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the data source.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        CreationStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The status of creating the data source.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    AmazonElasticsearchParameters:
      type: object
      required:
        - Domain
      properties:
        Domain:
          allOf:
            - $ref: "#/components/schemas/Domain"
            - description: The OpenSearch domain.
      description: The parameters for OpenSearch.
    AthenaParameters:
      type: object
      properties:
        WorkGroup:
          allOf:
            - $ref: "#/components/schemas/WorkGroup"
            - description: The workgroup that Amazon Athena uses.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: Use the <code>RoleArn</code> structure to override an account-wide role for a specific Athena data source. For example, say an account administrator has turned off all Athena access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow Athena access for the single Athena data source that is specified in the structure, even if the account-wide role forbidding Athena access is still active.
      description: Parameters for Amazon Athena.
    AuroraParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: Host.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: Port.
        Database:
          allOf:
            - $ref: "#/components/schemas/Database"
            - description: Database.
      description: Parameters for Amazon Aurora.
    AuroraPostgreSqlParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: The Amazon Aurora PostgreSQL-Compatible host to connect to.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: The port that Amazon Aurora PostgreSQL is listening on.
        Database:
          allOf:
            - $ref: "#/components/schemas/Database"
            - description: The Amazon Aurora PostgreSQL database to connect to.
      description: Parameters for Amazon Aurora PostgreSQL-Compatible Edition.
    AwsIotAnalyticsParameters:
      type: object
      required:
        - DataSetName
      properties:
        DataSetName:
          allOf:
            - $ref: "#/components/schemas/DataSetName"
            - description: Dataset name.
      description: The parameters for IoT Analytics.
    JiraParameters:
      type: object
      required:
        - SiteBaseUrl
      properties:
        SiteBaseUrl:
          allOf:
            - $ref: "#/components/schemas/SiteBaseUrl"
            - description: The base URL of the Jira site.
      description: The parameters for Jira.
    MariaDbParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: Host.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: Port.
        Database:
          allOf:
            - $ref: "#/components/schemas/Database"
            - description: Database.
      description: The parameters for MariaDB.
    MySqlParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: Host.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: Port.
        Database:
          allOf:
            - $ref: "#/components/schemas/Database"
            - description: Database.
      description: The parameters for MySQL.
    OracleParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: An Oracle host.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: Port.
        Database:
          allOf:
            - $ref: "#/components/schemas/Database"
            - description: Database.
      description: The parameters for Oracle.
    PostgreSqlParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: Host.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: Port.
        Database:
          allOf:
            - $ref: "#/components/schemas/Database"
            - description: Database.
      description: The parameters for PostgreSQL.
    PrestoParameters:
      type: object
      required:
        - Host
        - Port
        - Catalog
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: Host.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: Port.
        Catalog:
          allOf:
            - $ref: "#/components/schemas/Catalog"
            - description: Catalog.
      description: The parameters for Presto.
    RdsParameters:
      type: object
      required:
        - InstanceId
        - Database
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/InstanceId"
            - description: Instance ID.
        Database:
          allOf:
            - $ref: "#/components/schemas/Database"
            - description: Database.
      description: The parameters for Amazon RDS.
    RedshiftParameters:
      type: object
      required:
        - Database
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: Host. This field can be blank if <code>ClusterId</code> is provided.
        Port:
          allOf:
            - $ref: "#/components/schemas/OptionalPort"
            - description: Port. This field can be blank if the <code>ClusterId</code> is provided.
        Database:
          allOf:
            - $ref: "#/components/schemas/Database"
            - description: Database.
        ClusterId:
          allOf:
            - $ref: "#/components/schemas/ClusterId"
            - description: Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are provided.
      description: The parameters for Amazon Redshift. The <code>ClusterId</code> field can be blank if <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.
    S3Parameters:
      type: object
      required:
        - ManifestFileLocation
      properties:
        ManifestFileLocation:
          allOf:
            - $ref: "#/components/schemas/ManifestFileLocation"
            - description: Location of the Amazon S3 manifest file. This is NULL if the manifest file was uploaded into Amazon QuickSight.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: Use the <code>RoleArn</code> structure to override an account-wide role for a specific S3 data source. For example, say an account administrator has turned off all S3 access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow S3 access for the single S3 data source that is specified in the structure, even if the account-wide role forbidding S3 access is still active.
      description: The parameters for S3.
    ServiceNowParameters:
      type: object
      required:
        - SiteBaseUrl
      properties:
        SiteBaseUrl:
          allOf:
            - $ref: "#/components/schemas/SiteBaseUrl"
            - description: URL of the base site.
      description: The parameters for ServiceNow.
    SnowflakeParameters:
      type: object
      required:
        - Host
        - Database
        - Warehouse
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: Host.
        Database:
          allOf:
            - $ref: "#/components/schemas/Database"
            - description: Database.
        Warehouse:
          allOf:
            - $ref: "#/components/schemas/Warehouse"
            - description: Warehouse.
      description: The parameters for Snowflake.
    SparkParameters:
      type: object
      required:
        - Host
        - Port
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: Host.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: Port.
      description: The parameters for Spark.
    SqlServerParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: Host.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: Port.
        Database:
          allOf:
            - $ref: "#/components/schemas/Database"
            - description: Database.
      description: The parameters for SQL Server.
    TeradataParameters:
      type: object
      required:
        - Host
        - Port
        - Database
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: Host.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: Port.
        Database:
          allOf:
            - $ref: "#/components/schemas/Database"
            - description: Database.
      description: The parameters for Teradata.
    TwitterParameters:
      type: object
      required:
        - Query
        - MaxRows
      properties:
        Query:
          allOf:
            - $ref: "#/components/schemas/Query"
            - description: Twitter query string.
        MaxRows:
          allOf:
            - $ref: "#/components/schemas/PositiveInteger"
            - description: Maximum number of rows to query Twitter.
      description: The parameters for Twitter.
    AmazonOpenSearchParameters:
      type: object
      required:
        - Domain
      properties:
        Domain:
          allOf:
            - $ref: "#/components/schemas/Domain"
            - description: The OpenSearch domain.
      description: The parameters for OpenSearch.
    ExasolParameters:
      type: object
      required:
        - Host
        - Port
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: The hostname or IP address of the Exasol data source.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: The port for the Exasol data source.
      description: The required parameters for connecting to an Exasol data source.
    DatabricksParameters:
      type: object
      required:
        - Host
        - Port
        - SqlEndpointPath
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: The host name of the Databricks data source.
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: The port for the Databricks data source.
        SqlEndpointPath:
          allOf:
            - $ref: "#/components/schemas/SqlEndpointPath"
            - description: The HTTP path of the Databricks data source.
      description: The required parameters that are needed to connect to a Databricks data source.
    CredentialPair:
      type: object
      required:
        - Username
        - Password
      properties:
        Username:
          allOf:
            - $ref: "#/components/schemas/Username"
            - description: User name.
        Password:
          allOf:
            - $ref: "#/components/schemas/Password"
            - description: Password.
        AlternateDataSourceParameters:
          allOf:
            - $ref: "#/components/schemas/DataSourceParametersList"
            - description: A set of alternate data source parameters that you want to share for these credentials. The credentials are applied in tandem with the data source parameters when you copy a data source by using a create or update request. The API operation compares the <code>DataSourceParameters</code> structure that's in the request with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the structures are an exact match, the request is allowed to use the new data source with the existing credentials. If the <code>AlternateDataSourceParameters</code> list is null, the <code>DataSourceParameters</code> originally used with these <code>Credentials</code> is automatically allowed.
      description: The combination of user name and password that are used as credentials.
    CopySourceArn:
      type: string
      pattern: ^arn:[-a-z0-9]*:quicksight:[-a-z0-9]*:[0-9]{12}:datasource/.+
    SecretArn:
      type: string
      pattern: ^arn:[-a-z0-9]*:secretsmanager:[-a-z0-9]*:[0-9]{12}:secret:.+
      minLength: 1
      maxLength: 2048
    CreateFolderResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the newly created folder.
        FolderId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: The folder ID for the newly created folder.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The request ID for the newly created folder.
    CreateFolderMembershipResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        FolderMember:
          allOf:
            - $ref: "#/components/schemas/FolderMember"
            - description: Information about the member in the folder.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    CreateGroupResponse:
      type: object
      properties:
        Group:
          allOf:
            - $ref: "#/components/schemas/Group"
            - description: The name of the group.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
      description: The response object for this operation.
    CreateGroupMembershipResponse:
      type: object
      properties:
        GroupMember:
          allOf:
            - $ref: "#/components/schemas/GroupMember"
            - description: The group member.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    CreateIAMPolicyAssignmentResponse:
      type: object
      properties:
        AssignmentName:
          allOf:
            - $ref: "#/components/schemas/IAMPolicyAssignmentName"
            - description: The name of the assignment. This name must be unique within the Amazon Web Services account.
        AssignmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID for the assignment.
        AssignmentStatus:
          allOf:
            - $ref: "#/components/schemas/AssignmentStatus"
            - description: <p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>
        PolicyArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN for the IAM policy that is applied to the Amazon QuickSight users and groups specified in this assignment.
        Identities:
          allOf:
            - $ref: "#/components/schemas/IdentityMap"
            - description: The Amazon QuickSight users, groups, or both that the IAM policy is assigned to.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    IdentityNameList:
      type: array
      items:
        $ref: "#/components/schemas/IdentityName"
    ConcurrentUpdatingException: {}
    CreateIngestionResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the data ingestion.
        IngestionId:
          allOf:
            - $ref: "#/components/schemas/IngestionId"
            - description: An ID for the ingestion.
        IngestionStatus:
          allOf:
            - $ref: "#/components/schemas/IngestionStatus"
            - description: The ingestion status.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    CreateNamespaceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: "The ARN of the Amazon QuickSight namespace you created. "
        Name:
          allOf:
            - $ref: "#/components/schemas/Namespace"
            - description: The name of the new namespace that you created.
        CapacityRegion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "The Amazon Web Services Region; that you want to use for the free SPICE capacity for the new namespace. This is set to the region that you run CreateNamespace in. "
        CreationStatus:
          allOf:
            - $ref: "#/components/schemas/NamespaceStatus"
            - description: The status of the creation of the namespace. This is an asynchronous process. A status of <code>CREATED</code> means that your namespace is ready to use. If an error occurs, it indicates if the process is <code>retryable</code> or <code>non-retryable</code>. In the case of a non-retryable error, refer to the error message for follow-up tasks.
        IdentityStore:
          allOf:
            - $ref: "#/components/schemas/IdentityStore"
            - description: Specifies the type of your user identity directory. Currently, this supports users with an identity type of <code>QUICKSIGHT</code>.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    CreateRefreshScheduleResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        ScheduleId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the refresh schedule.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the refresh schedule.
    RefreshFrequency:
      type: object
      required:
        - Interval
      properties:
        Interval:
          allOf:
            - $ref: "#/components/schemas/RefreshInterval"
            - description: "<p>The interval between scheduled refreshes. Valid values are as follows:</p> <ul> <li> <p> <code>MINUTE15</code>: The dataset refreshes every 15 minutes. This value is only supported for incremental refreshes. This interval can only be used for one schedule per dataset.</p> </li> <li> <p> <code>MINUTE30</code>:The dataset refreshes every 30 minutes. This value is only supported for incremental refreshes. This interval can only be used for one schedule per dataset.</p> </li> <li> <p> <code>HOURLY</code>: The dataset refreshes every hour. This interval can only be used for one schedule per dataset.</p> </li> <li> <p> <code>DAILY</code>: The dataset refreshes every day.</p> </li> <li> <p> <code>WEEKLY</code>: The dataset refreshes every week.</p> </li> <li> <p> <code>MONTHLY</code>: The dataset refreshes every month.</p> </li> </ul>"
        RefreshOnDay:
          allOf:
            - $ref: "#/components/schemas/ScheduleRefreshOnEntity"
            - description: The day of the week that you want to schedule the refresh on. This value is required for weekly and monthly refresh intervals.
        Timezone:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The timezone that you want the refresh schedule to use. The timezone ID must match a corresponding ID found on <code>java.util.time.getAvailableIDs()</code>.
        TimeOfTheDay:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The time of day that you want the datset to refresh. This value is expressed in HH:MM format. This field is not required for schedules that refresh hourly.
      description: Specifies the interval between each scheduled refresh of a dataset.
    Timestamp:
      type: string
      format: date-time
    IngestionType:
      type: string
      enum:
        - INCREMENTAL_REFRESH
        - FULL_REFRESH
      description: This defines the type of ingestion user wants to trigger. This is part of create ingestion request.
    CreateTemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN for the template.
        VersionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN for the template, including the version information of the first version.
        TemplateId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the template.
        CreationStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The template creation status.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    TemplateSourceAnalysis:
      type: object
      required:
        - Arn
        - DataSetReferences
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        DataSetReferences:
          allOf:
            - $ref: "#/components/schemas/DataSetReferenceList"
            - description: A structure containing information about the dataset references used as placeholders in the template.
      description: The source analysis of the template.
    TemplateSourceTemplate:
      type: object
      required:
        - Arn
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
      description: The source template of the template.
    DataSetConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/DataSetConfiguration"
      maxItems: 30
    CreateTemplateAliasResponse:
      type: object
      properties:
        TemplateAlias:
          allOf:
            - $ref: "#/components/schemas/TemplateAlias"
            - description: Information about the template alias.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    CreateThemeResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the theme.
        VersionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the new theme.
        ThemeId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the theme.
        CreationStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The theme creation status.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DataColorPalette:
      type: object
      properties:
        Colors:
          allOf:
            - $ref: "#/components/schemas/ColorList"
            - description: The hexadecimal codes for the colors.
        MinMaxGradient:
          allOf:
            - $ref: "#/components/schemas/ColorList"
            - description: "The minimum and maximum hexadecimal codes that describe a color gradient. "
        EmptyFillColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The hexadecimal code of a color that applies to charts where a lack of data is highlighted.
      description: "The theme colors that are used for data colors in charts. The colors description is a hexadecimal color code that consists of six alphanumerical characters, prefixed with <code>#</code>, for example #37BFF5. "
    UIColorPalette:
      type: object
      properties:
        PrimaryForeground:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color of text and other foreground elements that appear over the primary background regions, such as grid lines, borders, table banding, icons, and so on.
        PrimaryBackground:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The background color that applies to visuals and other high emphasis UI.
        SecondaryForeground:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The foreground color that applies to any sheet title, sheet control text, or UI that appears over the secondary background.
        SecondaryBackground:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The background color that applies to the sheet background and sheet controls.
        Accent:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: This color is that applies to selected states and buttons.
        AccentForeground:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The foreground color that applies to any text or other elements that appear over the accent color.
        Danger:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color that applies to error messages.
        DangerForeground:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The foreground color that applies to any text or other elements that appear over the error color.
        Warning:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: This color that applies to warning and informational messages.
        WarningForeground:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The foreground color that applies to any text or other elements that appear over the warning color.
        Success:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color that applies to success messages, for example the check mark for a successful download.
        SuccessForeground:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The foreground color that applies to any text or other elements that appear over the success color.
        Dimension:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color that applies to the names of fields that are identified as dimensions.
        DimensionForeground:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The foreground color that applies to any text or other elements that appear over the dimension color.
        Measure:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color that applies to the names of fields that are identified as measures.
        MeasureForeground:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The foreground color that applies to any text or other elements that appear over the measure color.
      description: 'The theme colors that apply to UI and to charts, excluding data colors. The colors description is a hexadecimal color code that consists of six alphanumerical characters, prefixed with <code>#</code>, for example #37BFF5. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/themes-in-quicksight.html">Using Themes in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide.</i> '
    SheetStyle:
      type: object
      properties:
        Tile:
          allOf:
            - $ref: "#/components/schemas/TileStyle"
            - description: The display options for tiles.
        TileLayout:
          allOf:
            - $ref: "#/components/schemas/TileLayoutStyle"
            - description: The layout options for tiles.
      description: "The theme display options for sheets. "
    Typography:
      type: object
      properties:
        FontFamilies:
          allOf:
            - $ref: "#/components/schemas/FontList"
            - description: Determines the list of font families.
      description: Determines the typography options.
    CreateThemeAliasResponse:
      type: object
      properties:
        ThemeAlias:
          allOf:
            - $ref: "#/components/schemas/ThemeAlias"
            - description: Information about the theme alias.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DeleteAccountCustomizationResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DeleteAccountSubscriptionResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DeleteAnalysisResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the deleted analysis.
        AnalysisId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the deleted analysis.
        DeletionTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The date and time that the analysis is scheduled to be deleted.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DeleteDashboardResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Secure Socket Layer (SSL) properties that apply for the resource.
        DashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the dashboard.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DeleteDataSetResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DeleteDataSetRefreshPropertiesResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DeleteDataSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the data source that you deleted.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DeleteFolderResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name of the deleted folder.
        FolderId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: The ID of the folder.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DeleteFolderMembershipResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DeleteGroupResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DeleteGroupMembershipResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DeleteIAMPolicyAssignmentResponse:
      type: object
      properties:
        AssignmentName:
          allOf:
            - $ref: "#/components/schemas/IAMPolicyAssignmentName"
            - description: "The name of the assignment. "
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DeleteNamespaceResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DeleteRefreshScheduleResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        ScheduleId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the refresh schedule.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the refresh schedule.
    DeleteTemplateResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        TemplateId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: An ID for the template.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DeleteTemplateAliasResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        TemplateId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: An ID for the template associated with the deletion.
        AliasName:
          allOf:
            - $ref: "#/components/schemas/AliasName"
            - description: The name for the template alias.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the template you want to delete.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DeleteThemeResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        ThemeId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: An ID for the theme.
    DeleteThemeAliasResponse:
      type: object
      properties:
        AliasName:
          allOf:
            - $ref: "#/components/schemas/AliasName"
            - description: The name for the theme alias.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the theme resource using the deleted alias.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        ThemeId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: An ID for the theme associated with the deletion.
    DeleteUserResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DeleteUserByPrincipalIdResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeAccountCustomizationResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the customization that's associated with this Amazon Web Services account.
        AwsAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The ID for the Amazon Web Services account that you're describing.
        Namespace:
          allOf:
            - $ref: "#/components/schemas/Namespace"
            - description: "The Amazon QuickSight namespace that you're describing. "
        AccountCustomization:
          allOf:
            - $ref: "#/components/schemas/AccountCustomization"
            - description: "The Amazon QuickSight customizations that exist in the current Amazon Web Services Region. "
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeAccountSettingsResponse:
      type: object
      properties:
        AccountSettings:
          allOf:
            - $ref: "#/components/schemas/AccountSettings"
            - description: <p>The Amazon QuickSight settings for this Amazon Web Services account. This information includes the edition of Amazon Amazon QuickSight that you subscribed to (Standard or Enterprise) and the notification email for the Amazon QuickSight subscription. </p> <p>In the QuickSight console, the Amazon QuickSight subscription is sometimes referred to as a QuickSight "account" even though it's technically not an account by itself. Instead, it's a subscription to the Amazon QuickSight service for your Amazon Web Services account. The edition that you subscribe to applies to Amazon QuickSight in every Amazon Web Services Region where you use it.</p>
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeAccountSubscriptionResponse:
      type: object
      properties:
        AccountInfo:
          allOf:
            - $ref: "#/components/schemas/AccountInfo"
            - description: <p>A structure that contains the following elements:</p> <ul> <li> <p>Your Amazon QuickSight account name.</p> </li> <li> <p>The edition of Amazon QuickSight that your account is using.</p> </li> <li> <p>The notification email address that is associated with the Amazon QuickSight account. </p> </li> <li> <p>The authentication type of the Amazon QuickSight account.</p> </li> <li> <p>The status of the Amazon QuickSight account's subscription.</p> </li> </ul>
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeAnalysisResponse:
      type: object
      properties:
        Analysis:
          allOf:
            - $ref: "#/components/schemas/Analysis"
            - description: A metadata structure that contains summary information for the analysis that you're describing.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeAnalysisDefinitionResponse:
      type: object
      properties:
        AnalysisId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the analysis described.
        Name:
          allOf:
            - $ref: "#/components/schemas/AnalysisName"
            - description: The descriptive name of the analysis.
        Errors:
          allOf:
            - $ref: "#/components/schemas/AnalysisErrorList"
            - description: Errors associated with the analysis.
        ResourceStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: <p>Status associated with the analysis.</p> <ul> <li> <p> <code>CREATION_IN_PROGRESS</code> </p> </li> <li> <p> <code>CREATION_SUCCESSFUL</code> </p> </li> <li> <p> <code>CREATION_FAILED</code> </p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> </p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> </p> </li> <li> <p> <code>UPDATE_FAILED</code> </p> </li> <li> <p> <code>DELETED</code> </p> </li> </ul>
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the theme of the analysis.
        Definition:
          allOf:
            - $ref: "#/components/schemas/AnalysisDefinition"
            - description: <p>The definition of an analysis.</p> <p>A definition is the data model of all features in a Dashboard, Template, or Analysis.</p>
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeAnalysisPermissionsResponse:
      type: object
      properties:
        AnalysisId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the analysis whose permissions you're describing.
        AnalysisArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the analysis whose permissions you're describing.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: A structure that describes the principals and the resource-level permissions on an analysis.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeDashboardResponse:
      type: object
      properties:
        Dashboard:
          allOf:
            - $ref: "#/components/schemas/Dashboard"
            - description: Information about the dashboard.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of this request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeDashboardDefinitionResponse:
      type: object
      properties:
        DashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the dashboard described.
        Errors:
          allOf:
            - $ref: "#/components/schemas/DashboardErrorList"
            - description: Errors associated with this dashboard version.
        Name:
          allOf:
            - $ref: "#/components/schemas/DashboardName"
            - description: The display name of the dashboard.
        ResourceStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: <p>Status associated with the dashboard version.</p> <ul> <li> <p> <code>CREATION_IN_PROGRESS</code> </p> </li> <li> <p> <code>CREATION_SUCCESSFUL</code> </p> </li> <li> <p> <code>CREATION_FAILED</code> </p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> </p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> </p> </li> <li> <p> <code>UPDATE_FAILED</code> </p> </li> <li> <p> <code>DELETED</code> </p> </li> </ul>
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the theme of the dashboard.
        Definition:
          allOf:
            - $ref: "#/components/schemas/DashboardVersionDefinition"
            - description: <p>The definition of a dashboard.</p> <p>A definition is the data model of all features in a Dashboard, Template, or Analysis.</p>
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        DashboardPublishOptions:
          allOf:
            - $ref: "#/components/schemas/DashboardPublishOptions"
            - description: <p>Options for publishing the dashboard:</p> <ul> <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, Amazon QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .CSV format isn't enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. This option is <code>COLLAPSED</code> by default. </p> </li> </ul>
    DescribeDashboardPermissionsResponse:
      type: object
      properties:
        DashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the dashboard.
        DashboardArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the dashboard.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: A structure that contains the permissions for the dashboard.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        LinkSharingConfiguration:
          allOf:
            - $ref: "#/components/schemas/LinkSharingConfiguration"
            - description: A structure that contains the configuration of a shareable link that grants access to the dashboard. Your users can use the link to view and interact with the dashboard, if the dashboard has been shared with them. For more information about sharing dashboards, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/sharing-a-dashboard.html">Sharing Dashboards</a>.
    DescribeDataSetResponse:
      type: object
      properties:
        DataSet:
          allOf:
            - $ref: "#/components/schemas/DataSet"
            - description: Information on the dataset.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeDataSetPermissionsResponse:
      type: object
      properties:
        DataSetArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: A list of resource permissions on the dataset.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeDataSetRefreshPropertiesResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        DataSetRefreshProperties:
          allOf:
            - $ref: "#/components/schemas/DataSetRefreshProperties"
            - description: The dataset refresh properties.
    DescribeDataSourceResponse:
      type: object
      properties:
        DataSource:
          allOf:
            - $ref: "#/components/schemas/DataSource"
            - description: The information on the data source.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeDataSourcePermissionsResponse:
      type: object
      properties:
        DataSourceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the data source.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: A list of resource permissions on the data source.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeFolderResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        Folder:
          allOf:
            - $ref: "#/components/schemas/Folder"
            - description: Information about the folder.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeFolderPermissionsResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        FolderId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: The ID of the folder.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the folder.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: Information about the permissions on the folder.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeFolderResolvedPermissionsResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        FolderId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: The ID of the folder.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the folder.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: Information about the permissions for the folder.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeGroupResponse:
      type: object
      properties:
        Group:
          allOf:
            - $ref: "#/components/schemas/Group"
            - description: The name of the group.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeGroupMembershipResponse:
      type: object
      properties:
        GroupMember:
          $ref: "#/components/schemas/GroupMember"
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeIAMPolicyAssignmentResponse:
      type: object
      properties:
        IAMPolicyAssignment:
          allOf:
            - $ref: "#/components/schemas/IAMPolicyAssignment"
            - description: Information describing the IAM policy assignment.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    InvalidNextTokenException: {}
    DescribeIngestionResponse:
      type: object
      properties:
        Ingestion:
          allOf:
            - $ref: "#/components/schemas/Ingestion"
            - description: Information about the ingestion.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeIpRestrictionResponse:
      type: object
      properties:
        AwsAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The ID of the Amazon Web Services account that contains the IP rules.
        IpRestrictionRuleMap:
          allOf:
            - $ref: "#/components/schemas/IpRestrictionRuleMap"
            - description: A map that describes the IP rules with CIDR range and description.
        Enabled:
          allOf:
            - $ref: "#/components/schemas/NullableBoolean"
            - description: A value that specifies whether IP rules are turned on.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: "The HTTP status of the request. "
    DescribeNamespaceResponse:
      type: object
      properties:
        Namespace:
          allOf:
            - $ref: "#/components/schemas/NamespaceInfoV2"
            - description: The information about the namespace that you're describing. The response includes the namespace ARN, name, Amazon Web Services Region, creation status, and identity store. <code>DescribeNamespace</code> also works for namespaces that are in the process of being created. For incomplete namespaces, this API operation lists the namespace error types and messages associated with the creation process.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeRefreshScheduleResponse:
      type: object
      properties:
        RefreshSchedule:
          allOf:
            - $ref: "#/components/schemas/RefreshSchedule"
            - description: The refresh schedule.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the refresh schedule.
    DescribeTemplateResponse:
      type: object
      properties:
        Template:
          allOf:
            - $ref: "#/components/schemas/Template"
            - description: The template structure for the object you want to describe.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeTemplateAliasResponse:
      type: object
      properties:
        TemplateAlias:
          allOf:
            - $ref: "#/components/schemas/TemplateAlias"
            - description: Information about the template alias.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeTemplateDefinitionResponse:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/TemplateName"
            - description: The descriptive name of the template.
        TemplateId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the template described.
        Errors:
          allOf:
            - $ref: "#/components/schemas/TemplateErrorList"
            - description: Errors associated with the template version.
        ResourceStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: <p>Status associated with the template.</p> <ul> <li> <p> <code>CREATION_IN_PROGRESS</code> </p> </li> <li> <p> <code>CREATION_SUCCESSFUL</code> </p> </li> <li> <p> <code>CREATION_FAILED</code> </p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> </p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> </p> </li> <li> <p> <code>UPDATE_FAILED</code> </p> </li> <li> <p> <code>DELETED</code> </p> </li> </ul>
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the theme of the template.
        Definition:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionDefinition"
            - description: <p>The definition of the template.</p> <p>A definition is the data model of all features in a Dashboard, Template, or Analysis.</p>
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeTemplatePermissionsResponse:
      type: object
      properties:
        TemplateId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the template.
        TemplateArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the template.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: "A list of resource permissions to be set on the template. "
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeThemeResponse:
      type: object
      properties:
        Theme:
          allOf:
            - $ref: "#/components/schemas/Theme"
            - description: The information about the theme that you are describing.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeThemeAliasResponse:
      type: object
      properties:
        ThemeAlias:
          allOf:
            - $ref: "#/components/schemas/ThemeAlias"
            - description: Information about the theme alias.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DescribeThemePermissionsResponse:
      type: object
      properties:
        ThemeId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the theme.
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the theme.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: "A list of resource permissions set on the theme. "
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    DescribeUserResponse:
      type: object
      properties:
        User:
          allOf:
            - $ref: "#/components/schemas/User"
            - description: The user name.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    GenerateEmbedUrlForAnonymousUserResponse:
      type: object
      required:
        - EmbedUrl
        - Status
        - RequestId
        - AnonymousUserArn
      properties:
        EmbedUrl:
          allOf:
            - $ref: "#/components/schemas/EmbeddingUrl"
            - description: The embed URL for the dashboard.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        AnonymousUserArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) to use for the anonymous Amazon QuickSight user.
    SessionTag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/SessionTagKey"
            - description: The key for the tag.
        Value:
          allOf:
            - $ref: "#/components/schemas/SessionTagValue"
            - description: The value that you want to assign the tag.
      description: The key-value pair used for the row-level security tags feature.
    AnonymousUserDashboardEmbeddingConfiguration:
      type: object
      required:
        - InitialDashboardId
      properties:
        InitialDashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: <p>The dashboard ID for the dashboard that you want the user to see first. This ID is included in the output URL. When the URL in response is accessed, Amazon QuickSight renders this dashboard.</p> <p>The Amazon Resource Name (ARN) of this dashboard must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request will fail with <code>InvalidParameterValueException</code>.</p>
      description: Information about the dashboard that you want to embed.
    AnonymousUserDashboardVisualEmbeddingConfiguration:
      type: object
      required:
        - InitialDashboardVisualId
      properties:
        InitialDashboardVisualId:
          allOf:
            - $ref: "#/components/schemas/DashboardVisualId"
            - description: <p>The visual ID for the visual that you want the user to see. This ID is included in the output URL. When the URL in response is accessed, Amazon QuickSight renders this visual.</p> <p>The Amazon Resource Name (ARN) of the dashboard that the visual belongs to must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request will fail with <code>InvalidParameterValueException</code>.</p>
      description: The experience that you are embedding. You can use this object to generate a url that embeds a visual into your application.
    AnonymousUserQSearchBarEmbeddingConfiguration:
      type: object
      required:
        - InitialTopicId
      properties:
        InitialTopicId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: <p>The QuickSight Q topic ID of the topic that you want the anonymous user to see first. This ID is included in the output URL. When the URL in response is accessed, Amazon QuickSight renders the Q search bar with this topic pre-selected.</p> <p>The Amazon Resource Name (ARN) of this Q topic must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request will fail with <code>InvalidParameterValueException</code>.</p>
      description: The settings that you want to use with the Q search bar.
    SessionLifetimeInMinutesInvalidException: {}
    UnsupportedPricingPlanException: {}
    GenerateEmbedUrlForRegisteredUserResponse:
      type: object
      required:
        - EmbedUrl
        - Status
        - RequestId
      properties:
        EmbedUrl:
          allOf:
            - $ref: "#/components/schemas/EmbeddingUrl"
            - description: The embed URL for the Amazon QuickSight dashboard, visual, Q search bar, or console.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    RegisteredUserDashboardEmbeddingConfiguration:
      type: object
      required:
        - InitialDashboardId
      properties:
        InitialDashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: <p>The dashboard ID for the dashboard that you want the user to see first. This ID is included in the output URL. When the URL in response is accessed, Amazon QuickSight renders this dashboard if the user has permissions to view it.</p> <p>If the user does not have permission to view this dashboard, they see a permissions error message.</p>
        FeatureConfigurations:
          allOf:
            - $ref: "#/components/schemas/RegisteredUserDashboardFeatureConfigurations"
            - description: The feature configurations of an embbedded Amazon QuickSight dashboard.
      description: Information about the dashboard you want to embed.
    RegisteredUserQuickSightConsoleEmbeddingConfiguration:
      type: object
      properties:
        InitialPath:
          allOf:
            - $ref: "#/components/schemas/EntryPath"
            - description: <p>The initial URL path for the Amazon QuickSight console. <code>InitialPath</code> is required.</p> <p>The entry point URL is constrained to the following paths:</p> <ul> <li> <p> <code>/start</code> </p> </li> <li> <p> <code>/start/analyses</code> </p> </li> <li> <p> <code>/start/dashboards</code> </p> </li> <li> <p> <code>/start/favorites</code> </p> </li> <li> <p> <code>/dashboards/DashboardId</code>. <i>DashboardId</i> is the actual ID key from the Amazon QuickSight console URL of the dashboard.</p> </li> <li> <p> <code>/analyses/AnalysisId</code>. <i>AnalysisId</i> is the actual ID key from the Amazon QuickSight console URL of the analysis.</p> </li> </ul>
        FeatureConfigurations:
          allOf:
            - $ref: "#/components/schemas/RegisteredUserConsoleFeatureConfigurations"
            - description: The embedding configuration of an embedded Amazon QuickSight console.
      description: Information about the Amazon QuickSight console that you want to embed.
    RegisteredUserQSearchBarEmbeddingConfiguration:
      type: object
      properties:
        InitialTopicId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: <p>The ID of the Q topic that you want to make the starting topic in the Q search bar. You can find a topic ID by navigating to the Topics pane in the Amazon QuickSight application and opening a topic. The ID is in the URL for the topic that you open.</p> <p>If you don't specify an initial topic, a list of all shared topics is shown in the Q bar for your readers. When you select an initial topic, you can specify whether or not readers are allowed to select other topics from the available ones in the list.</p>
      description: Information about the Q search bar embedding experience.
    RegisteredUserDashboardVisualEmbeddingConfiguration:
      type: object
      required:
        - InitialDashboardVisualId
      properties:
        InitialDashboardVisualId:
          allOf:
            - $ref: "#/components/schemas/DashboardVisualId"
            - description: <p>The visual ID for the visual that you want the user to embed. This ID is included in the output URL. When the URL in response is accessed, Amazon QuickSight renders this visual.</p> <p>The Amazon Resource Name (ARN) of the dashboard that the visual belongs to must be included in the <code>AuthorizedResourceArns</code> parameter. Otherwise, the request will fail with <code>InvalidParameterValueException</code>.</p>
      description: The experience that you are embedding. You can use this object to generate a url that embeds a visual into your application.
    QuickSightUserNotFoundException: {}
    GetDashboardEmbedUrlResponse:
      type: object
      properties:
        EmbedUrl:
          allOf:
            - $ref: "#/components/schemas/EmbeddingUrl"
            - description: "A single-use URL that you can put into your server-side webpage to embed your dashboard. This URL is valid for 5 minutes. The API operation provides the URL with an <code>auth_code</code> value that enables one (and only one) sign-on to a user session that is valid for 10 hours. "
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
      description: Output returned from the <code>GetDashboardEmbedUrl</code> operation.
    ShortRestrictiveResourceId:
      type: string
      pattern: "[\\w\\-]+"
      minLength: 1
      maxLength: 512
    DomainNotWhitelistedException: {}
    IdentityTypeNotSupportedException: {}
    GetSessionEmbedUrlResponse:
      type: object
      properties:
        EmbedUrl:
          allOf:
            - $ref: "#/components/schemas/EmbeddingUrl"
            - description: "A single-use URL that you can put into your server-side web page to embed your Amazon QuickSight session. This URL is valid for 5 minutes. The API operation provides the URL with an <code>auth_code</code> value that enables one (and only one) sign-on to a user session that is valid for 10 hours. "
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    ListAnalysesResponse:
      type: object
      properties:
        AnalysisSummaryList:
          allOf:
            - $ref: "#/components/schemas/AnalysisSummaryList"
            - description: Metadata describing each of the analyses that are listed.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A pagination token that can be used in a subsequent request.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    ListDashboardVersionsResponse:
      type: object
      properties:
        DashboardVersionSummaryList:
          allOf:
            - $ref: "#/components/schemas/DashboardVersionSummaryList"
            - description: A structure that contains information about each version of the dashboard.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    ListDashboardsResponse:
      type: object
      properties:
        DashboardSummaryList:
          allOf:
            - $ref: "#/components/schemas/DashboardSummaryList"
            - description: A structure that contains all of the dashboards in your Amazon Web Services account. This structure provides basic information about the dashboards.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    ListDataSetsResponse:
      type: object
      properties:
        DataSetSummaries:
          allOf:
            - $ref: "#/components/schemas/DataSetSummaryList"
            - description: The list of dataset summaries.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    ListDataSourcesResponse:
      type: object
      properties:
        DataSources:
          allOf:
            - $ref: "#/components/schemas/DataSourceList"
            - description: A list of data sources.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    ListFolderMembersResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        FolderMemberList:
          allOf:
            - $ref: "#/components/schemas/FolderMemberList"
            - description: A structure that contains all of the folder members (dashboards, analyses, and datasets) in the folder.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    ListFoldersResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        FolderSummaryList:
          allOf:
            - $ref: "#/components/schemas/FolderSummaryList"
            - description: A structure that contains all of the folders in the Amazon Web Services account. This structure provides basic information about the folders.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    ListGroupMembershipsResponse:
      type: object
      properties:
        GroupMemberList:
          allOf:
            - $ref: "#/components/schemas/GroupMemberList"
            - description: The list of the members of the group.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A pagination token that can be used in a subsequent request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    ListGroupsResponse:
      type: object
      properties:
        GroupList:
          allOf:
            - $ref: "#/components/schemas/GroupList"
            - description: The list of the groups.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A pagination token that can be used in a subsequent request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    ListIAMPolicyAssignmentsResponse:
      type: object
      properties:
        IAMPolicyAssignments:
          allOf:
            - $ref: "#/components/schemas/IAMPolicyAssignmentSummaryList"
            - description: Information describing the IAM policy assignments.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    ListIAMPolicyAssignmentsForUserResponse:
      type: object
      properties:
        ActiveAssignments:
          allOf:
            - $ref: "#/components/schemas/ActiveIAMPolicyAssignmentList"
            - description: The active assignments for this user.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    ListIngestionsResponse:
      type: object
      properties:
        Ingestions:
          allOf:
            - $ref: "#/components/schemas/Ingestions"
            - description: A list of the ingestions.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    ListNamespacesResponse:
      type: object
      properties:
        Namespaces:
          allOf:
            - $ref: "#/components/schemas/Namespaces"
            - description: The information about the namespaces in this Amazon Web Services account. The response includes the namespace ARN, name, Amazon Web Services Region, notification email address, creation status, and identity store.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A unique pagination token that can be used in a subsequent request. Receiving <code>NextToken</code> in your response inticates that there is more data that can be returned. To receive the data, make another <code>ListNamespaces</code> API call with the returned token to retrieve the next page of data. Each token is valid for 24 hours. If you try to make a <code>ListNamespaces</code> API call with an expired token, you will receive a <code>HTTP 400 InvalidNextTokenException</code> error.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    ListRefreshSchedulesResponse:
      type: object
      properties:
        RefreshSchedules:
          allOf:
            - $ref: "#/components/schemas/RefreshSchedules"
            - description: The list of refresh schedules for the dataset.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    ListTemplateAliasesResponse:
      type: object
      properties:
        TemplateAliasList:
          allOf:
            - $ref: "#/components/schemas/TemplateAliasList"
            - description: A structure containing the list of the template's aliases.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
    ListTemplateVersionsResponse:
      type: object
      properties:
        TemplateVersionSummaryList:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionSummaryList"
            - description: A structure containing a list of all the versions of the specified template.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    ListTemplatesResponse:
      type: object
      properties:
        TemplateSummaryList:
          allOf:
            - $ref: "#/components/schemas/TemplateSummaryList"
            - description: A structure containing information about the templates in the list.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    ListThemeAliasesResponse:
      type: object
      properties:
        ThemeAliasList:
          allOf:
            - $ref: "#/components/schemas/ThemeAliasList"
            - description: A structure containing the list of the theme's aliases.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
    ListThemeVersionsResponse:
      type: object
      properties:
        ThemeVersionSummaryList:
          allOf:
            - $ref: "#/components/schemas/ThemeVersionSummaryList"
            - description: A structure containing a list of all the versions of the specified theme.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    ListThemesResponse:
      type: object
      properties:
        ThemeSummaryList:
          allOf:
            - $ref: "#/components/schemas/ThemeSummaryList"
            - description: Information about the themes in the list.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    ListUserGroupsResponse:
      type: object
      properties:
        GroupList:
          allOf:
            - $ref: "#/components/schemas/GroupList"
            - description: The list of groups the user is a member of.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A pagination token that can be used in a subsequent request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    ListUsersResponse:
      type: object
      properties:
        UserList:
          allOf:
            - $ref: "#/components/schemas/UserList"
            - description: The list of users.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A pagination token that can be used in a subsequent request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    PutDataSetRefreshPropertiesResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    RefreshConfiguration:
      type: object
      required:
        - IncrementalRefresh
      properties:
        IncrementalRefresh:
          allOf:
            - $ref: "#/components/schemas/IncrementalRefresh"
            - description: The incremental refresh for the dataset.
      description: The refresh configuration of a dataset.
    RegisterUserResponse:
      type: object
      properties:
        User:
          allOf:
            - $ref: "#/components/schemas/User"
            - description: The user's user name.
        UserInvitationUrl:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The URL the user visits to complete registration and provide a password. This is returned only for users with an identity type of <code>QUICKSIGHT</code>.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    RestoreAnalysisResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the analysis that you're restoring.
        AnalysisId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: "The ID of the analysis that you're restoring. "
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    SearchAnalysesResponse:
      type: object
      properties:
        AnalysisSummaryList:
          allOf:
            - $ref: "#/components/schemas/AnalysisSummaryList"
            - description: Metadata describing the analyses that you searched for.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "A pagination token that can be used in a subsequent request. "
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    AnalysisSearchFilter:
      type: object
      properties:
        Operator:
          allOf:
            - $ref: "#/components/schemas/FilterOperator"
            - description: '<p>The comparison operator that you want to use as a filter, for example <code>"Operator": "StringEquals"</code>. Valid values are <code>"StringEquals"</code> and <code>"StringLike"</code>.</p> <p>If you set the operator value to <code>"StringEquals"</code>, you need to provide an ownership related filter in the <code>"NAME"</code> field and the arn of the user or group whose folders you want to search in the <code>"Value"</code> field. For example, <code>"Name":"DIRECT_QUICKSIGHT_OWNER", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1"</code>.</p> <p>If you set the value to <code>"StringLike"</code>, you need to provide the name of the folders you are searching for. For example, <code>"Name":"ANALYSIS_NAME", "Operator": "StringLike", "Value": "Test"</code>. The <code>"StringLike"</code> operator only supports the <code>NAME</code> value <code>ANALYSIS_NAME</code>.</p>'
        Name:
          allOf:
            - $ref: "#/components/schemas/AnalysisFilterAttribute"
            - description: "<p>The name of the value that you want to use as a filter, for example <code>\"Name\": \"QUICKSIGHT_OWNER\"</code>.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>QUICKSIGHT_VIEWER_OR_OWNER</code>: Provide an ARN of a user or group, and any analyses with that ARN listed as one of the analysis' owners or viewers are returned. Implicit permissions from folders or groups are considered. </p> </li> <li> <p> <code>QUICKSIGHT_OWNER</code>: Provide an ARN of a user or group, and any analyses with that ARN listed as one of the owners of the analyses are returned. Implicit permissions from folders or groups are considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_SOLE_OWNER</code>: Provide an ARN of a user or group, and any analyses with that ARN listed as the only owner of the analysis are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_OWNER</code>: Provide an ARN of a user or group, and any analyses with that ARN listed as one of the owners of the analyses are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_VIEWER_OR_OWNER</code>: Provide an ARN of a user or group, and any analyses with that ARN listed as one of the owners or viewers of the analyses are returned. Implicit permissions from folders or groups are not considered. </p> </li> <li> <p> <code>ANALYSIS_NAME</code>: Any analyses whose names have a substring match to this value will be returned.</p> </li> </ul>"
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The value of the named item, in this case <code>QUICKSIGHT_USER</code>, that you want to use as a filter, for example <code>"Value"</code>. An example is <code>"arn:aws:quicksight:us-east-1:1:user/default/UserName1"</code>.
      description: A filter that you apply when searching for one or more analyses.
    SearchDashboardsResponse:
      type: object
      properties:
        DashboardSummaryList:
          allOf:
            - $ref: "#/components/schemas/DashboardSummaryList"
            - description: The list of dashboards owned by the user specified in <code>Filters</code> in your request.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DashboardSearchFilter:
      type: object
      required:
        - Operator
      properties:
        Operator:
          allOf:
            - $ref: "#/components/schemas/FilterOperator"
            - description: '<p>The comparison operator that you want to use as a filter, for example <code>"Operator": "StringEquals"</code>. Valid values are <code>"StringEquals"</code> and <code>"StringLike"</code>.</p> <p>If you set the operator value to <code>"StringEquals"</code>, you need to provide an ownership related filter in the <code>"NAME"</code> field and the arn of the user or group whose folders you want to search in the <code>"Value"</code> field. For example, <code>"Name":"DIRECT_QUICKSIGHT_OWNER", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1"</code>.</p> <p>If you set the value to <code>"StringLike"</code>, you need to provide the name of the folders you are searching for. For example, <code>"Name":"DASHBOARD_NAME", "Operator": "StringLike", "Value": "Test"</code>. The <code>"StringLike"</code> operator only supports the <code>NAME</code> value <code>DASHBOARD_NAME</code>.</p>'
        Name:
          allOf:
            - $ref: "#/components/schemas/DashboardFilterAttribute"
            - description: "<p>The name of the value that you want to use as a filter, for example, <code>\"Name\": \"QUICKSIGHT_OWNER\"</code>.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>QUICKSIGHT_VIEWER_OR_OWNER</code>: Provide an ARN of a user or group, and any dashboards with that ARN listed as one of the dashboards's owners or viewers are returned. Implicit permissions from folders or groups are considered.</p> </li> <li> <p> <code>QUICKSIGHT_OWNER</code>: Provide an ARN of a user or group, and any dashboards with that ARN listed as one of the owners of the dashboards are returned. Implicit permissions from folders or groups are considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_SOLE_OWNER</code>: Provide an ARN of a user or group, and any dashboards with that ARN listed as the only owner of the dashboard are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_OWNER</code>: Provide an ARN of a user or group, and any dashboards with that ARN listed as one of the owners of the dashboards are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_VIEWER_OR_OWNER</code>: Provide an ARN of a user or group, and any dashboards with that ARN listed as one of the owners or viewers of the dashboards are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DASHBOARD_NAME</code>: Any dashboards whose names have a substring match to this value will be returned.</p> </li> </ul>"
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: 'The value of the named item, in this case <code>QUICKSIGHT_USER</code>, that you want to use as a filter, for example, <code>"Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1"</code>. '
      description: "A filter that you apply when searching for dashboards. "
    SearchDataSetsResponse:
      type: object
      properties:
        DataSetSummaries:
          allOf:
            - $ref: "#/components/schemas/DataSetSummaryList"
            - description: A <code>DataSetSummaries</code> object that returns a summary of a dataset.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A pagination token that can be used in a subsequent request.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DataSetSearchFilter:
      type: object
      required:
        - Operator
        - Name
        - Value
      properties:
        Operator:
          allOf:
            - $ref: "#/components/schemas/FilterOperator"
            - description: '<p>The comparison operator that you want to use as a filter, for example <code>"Operator": "StringEquals"</code>. Valid values are <code>"StringEquals"</code> and <code>"StringLike"</code>.</p> <p>If you set the operator value to <code>"StringEquals"</code>, you need to provide an ownership related filter in the <code>"NAME"</code> field and the arn of the user or group whose datasets you want to search in the <code>"Value"</code> field. For example, <code>"Name":"QUICKSIGHT_OWNER", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east- 1:1:user/default/UserName1"</code>.</p> <p>If you set the value to <code>"StringLike"</code>, you need to provide the name of the datasets you are searching for. For example, <code>"Name":"DATASET_NAME", "Operator": "StringLike", "Value": "Test"</code>. The <code>"StringLike"</code> operator only supports the <code>NAME</code> value <code>DATASET_NAME</code>.</p>'
        Name:
          allOf:
            - $ref: "#/components/schemas/DataSetFilterAttribute"
            - description: '<p>The name of the value that you want to use as a filter, for example, <code>"Name": "QUICKSIGHT_OWNER"</code>.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>QUICKSIGHT_VIEWER_OR_OWNER</code>: Provide an ARN of a user or group, and any datasets with that ARN listed as one of the dataset owners or viewers are returned. Implicit permissions from folders or groups are considered.</p> </li> <li> <p> <code>QUICKSIGHT_OWNER</code>: Provide an ARN of a user or group, and any datasets with that ARN listed as one of the owners of the dataset are returned. Implicit permissions from folders or groups are considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_SOLE_OWNER</code>: Provide an ARN of a user or group, and any datasets with that ARN listed as the only owner of the dataset are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_OWNER</code>: Provide an ARN of a user or group, and any datasets with that ARN listed as one of the owners if the dataset are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_VIEWER_OR_OWNER</code>: Provide an ARN of a user or group, and any datasets with that ARN listed as one of the owners or viewers of the dataset are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DATASET_NAME</code>: Any datasets whose names have a substring match to this value will be returned.</p> </li> </ul>'
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: 'The value of the named item, in this case <code>QUICKSIGHT_OWNER</code>, that you want to use as a filter, for example, <code>"Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1"</code>.'
      description: A filter that you apply when searching for datasets.
    SearchDataSourcesResponse:
      type: object
      properties:
        DataSourceSummaries:
          allOf:
            - $ref: "#/components/schemas/DataSourceSummaryList"
            - description: A <code>DataSourceSummaries</code> object that returns a summary of a data source.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A pagination token that can be used in a subsequent request.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    DataSourceSearchFilter:
      type: object
      required:
        - Operator
        - Name
        - Value
      properties:
        Operator:
          allOf:
            - $ref: "#/components/schemas/FilterOperator"
            - description: '<p>The comparison operator that you want to use as a filter, for example <code>"Operator": "StringEquals"</code>. Valid values are <code>"StringEquals"</code> and <code>"StringLike"</code>.</p> <p>If you set the operator value to <code>"StringEquals"</code>, you need to provide an ownership related filter in the <code>"NAME"</code> field and the arn of the user or group whose data sources you want to search in the <code>"Value"</code> field. For example, <code>"Name":"DIRECT_QUICKSIGHT_OWNER", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1"</code>.</p> <p>If you set the value to <code>"StringLike"</code>, you need to provide the name of the data sources you are searching for. For example, <code>"Name":"DATASOURCE_NAME", "Operator": "StringLike", "Value": "Test"</code>. The <code>"StringLike"</code> operator only supports the <code>NAME</code> value <code>DATASOURCE_NAME</code>.</p>'
        Name:
          allOf:
            - $ref: "#/components/schemas/DataSourceFilterAttribute"
            - description: '<p>The name of the value that you want to use as a filter, for example, <code>"Name": "DIRECT_QUICKSIGHT_OWNER"</code>.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>DIRECT_QUICKSIGHT_VIEWER_OR_OWNER</code>: Provide an ARN of a user or group, and any data sources with that ARN listed as one of the owners or viewers of the data sources are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_OWNER</code>: Provide an ARN of a user or group, and any data sources with that ARN listed as one of the owners if the data source are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_SOLE_OWNER</code>: Provide an ARN of a user or group, and any data sources with that ARN listed as the only owner of the data source are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DATASOURCE_NAME</code>: Any data sources whose names have a substring match to the provided value are returned.</p> </li> </ul>'
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: 'The value of the named item, for example <code>DIRECT_QUICKSIGHT_OWNER</code>, that you want to use as a filter, for example, <code>"Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1"</code>.'
      description: A filter that you apply when searching for data sources.
    SearchFoldersResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        FolderSummaryList:
          allOf:
            - $ref: "#/components/schemas/FolderSummaryList"
            - description: A structure that contains all of the folders in the Amazon Web Services account. This structure provides basic information about the folders.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    FolderSearchFilter:
      type: object
      properties:
        Operator:
          allOf:
            - $ref: "#/components/schemas/FilterOperator"
            - description: '<p>The comparison operator that you want to use as a filter, for example <code>"Operator": "StringEquals"</code>. Valid values are <code>"StringEquals"</code> and <code>"StringLike"</code>.</p> <p>If you set the operator value to <code>"StringEquals"</code>, you need to provide an ownership related filter in the <code>"NAME"</code> field and the arn of the user or group whose folders you want to search in the <code>"Value"</code> field. For example, <code>"Name":"DIRECT_QUICKSIGHT_OWNER", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1"</code>.</p> <p>If you set the value to <code>"StringLike"</code>, you need to provide the name of the folders you are searching for. For example, <code>"Name":"FOLDER_NAME", "Operator": "StringLike", "Value": "Test"</code>. The <code>"StringLike"</code> operator only supports the <code>NAME</code> value <code>FOLDER_NAME</code>.</p>'
        Name:
          allOf:
            - $ref: "#/components/schemas/FolderFilterAttribute"
            - description: "<p>The name of a value that you want to use in the filter. For example, <code>\"Name\": \"QUICKSIGHT_OWNER\"</code>.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>QUICKSIGHT_VIEWER_OR_OWNER</code>: Provide an ARN of a user or group, and any folders with that ARN listed as one of the folder's owners or viewers are returned. Implicit permissions from folders or groups are considered.</p> </li> <li> <p> <code>QUICKSIGHT_OWNER</code>: Provide an ARN of a user or group, and any folders with that ARN listed as one of the owners of the folders are returned. Implicit permissions from folders or groups are considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_SOLE_OWNER</code>: Provide an ARN of a user or group, and any folders with that ARN listed as the only owner of the folder are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_OWNER</code>: Provide an ARN of a user or group, and any folders with that ARN listed as one of the owners of the folders are returned. Implicit permissions from folders or groups are not considered.</p> </li> <li> <p> <code>DIRECT_QUICKSIGHT_VIEWER_OR_OWNER</code>: Provide an ARN of a user or group, and any folders with that ARN listed as one of the owners or viewers of the folders are returned. Implicit permissions from folders or groups are not considered. </p> </li> <li> <p> <code>FOLDER_NAME</code>: Any folders whose names have a substring match to this value will be returned.</p> </li> <li> <p> <code>PARENT_FOLDER_ARN</code>: Provide an ARN of a folder, and any folders that are directly under that parent folder are returned. If you choose to use this option and leave the value blank, all root-level folders in the account are returned. </p> </li> </ul>"
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: 'The value of the named item (in this example, <code>PARENT_FOLDER_ARN</code>), that you want to use as a filter. For example, <code>"Value": "arn:aws:quicksight:us-east-1:1:folder/folderId"</code>.'
      description: A filter to use to search an Amazon QuickSight folder.
    InvalidRequestException: {}
    SearchGroupsResponse:
      type: object
      properties:
        GroupList:
          allOf:
            - $ref: "#/components/schemas/GroupList"
            - description: A list of groups in a specified namespace that match the filters you set in your <code>SearchGroups</code> request.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A pagination token that can be used in a subsequent request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    GroupSearchFilter:
      type: object
      required:
        - Operator
        - Name
        - Value
      properties:
        Operator:
          allOf:
            - $ref: "#/components/schemas/GroupFilterOperator"
            - description: 'The comparison operator that you want to use as a filter, for example <code>"Operator": "StartsWith"</code>. Currently, the only supported operator is <code>StartsWith</code>.'
        Name:
          allOf:
            - $ref: "#/components/schemas/GroupFilterAttribute"
            - description: 'The name of the value that you want to use as a filter, for example <code>"Name": "GROUP_NAME"</code>. Currently, the only supported name is <code>GROUP_NAME</code>.'
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The value of the named item, in this case <code>GROUP_NAME</code>, that you want to use as a filter.
      description: A <code>GroupSearchFilter</code> object that you want to apply to your search.
    TagResourceResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UntagResourceResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateAccountCustomizationResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the updated customization for this Amazon Web Services account.
        AwsAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The ID for the Amazon Web Services account that you want to update Amazon QuickSight customizations for.
        Namespace:
          allOf:
            - $ref: "#/components/schemas/Namespace"
            - description: The namespace associated with the customization that you're updating.
        AccountCustomization:
          allOf:
            - $ref: "#/components/schemas/AccountCustomization"
            - description: "The Amazon QuickSight customizations you're updating in the current Amazon Web Services Region. "
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateAccountSettingsResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateAnalysisResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the analysis that you're updating.
        AnalysisId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the analysis.
        UpdateStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The update status of the last update that was made to the analysis.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    UpdateAnalysisPermissionsResponse:
      type: object
      properties:
        AnalysisArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the analysis that you updated.
        AnalysisId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the analysis that you updated permissions for.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: A structure that describes the principals and the resource-level permissions on an analysis.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateDashboardResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        VersionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the dashboard, including the version number.
        DashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the dashboard.
        CreationStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The creation status of the request.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    UpdateDashboardPermissionsResponse:
      type: object
      properties:
        DashboardArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the dashboard.
        DashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the dashboard.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: Information about the permissions on the dashboard.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        LinkSharingConfiguration:
          allOf:
            - $ref: "#/components/schemas/LinkSharingConfiguration"
            - description: Updates the permissions of a shared link to an Amazon QuickSight dashboard.
    UpdateDashboardPublishedVersionResponse:
      type: object
      properties:
        DashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the dashboard.
        DashboardArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the dashboard.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    UpdateDataSetResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        IngestionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN for the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.
        IngestionId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the ingestion, which is triggered as a result of dataset creation if the import mode is SPICE.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateDataSetPermissionsResponse:
      type: object
      properties:
        DataSetArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID for the dataset whose permissions you want to update. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateDataSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the data source.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        UpdateStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The update status of the data source's last update.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateDataSourcePermissionsResponse:
      type: object
      properties:
        DataSourceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the data source.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateFolderResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the folder.
        FolderId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: The ID of the folder.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    UpdateFolderPermissionsResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the folder.
        FolderId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: The ID of the folder.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: Information about the permissions for the folder.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    UpdateGroupResponse:
      type: object
      properties:
        Group:
          allOf:
            - $ref: "#/components/schemas/Group"
            - description: The name of the group.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateIAMPolicyAssignmentResponse:
      type: object
      properties:
        AssignmentName:
          allOf:
            - $ref: "#/components/schemas/IAMPolicyAssignmentName"
            - description: The name of the assignment or rule.
        AssignmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the assignment.
        PolicyArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN for the IAM policy applied to the Amazon QuickSight users and groups specified in this assignment.
        Identities:
          allOf:
            - $ref: "#/components/schemas/IdentityMap"
            - description: The Amazon QuickSight users, groups, or both that the IAM policy is assigned to.
        AssignmentStatus:
          allOf:
            - $ref: "#/components/schemas/AssignmentStatus"
            - description: <p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateIpRestrictionResponse:
      type: object
      properties:
        AwsAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The ID of the Amazon Web Services account that contains the IP rules.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: "The HTTP status of the request. "
    IpRestrictionRuleDescription:
      type: string
      minLength: 0
      maxLength: 150
    UpdatePublicSharingSettingsResponse:
      type: object
      properties:
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateRefreshScheduleResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        ScheduleId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the refresh schedule.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the refresh schedule.
    UpdateTemplateResponse:
      type: object
      properties:
        TemplateId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the template.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the template.
        VersionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN for the template, including the version information of the first version.
        CreationStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The creation status of the template.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    UpdateTemplateAliasResponse:
      type: object
      properties:
        TemplateAlias:
          allOf:
            - $ref: "#/components/schemas/TemplateAlias"
            - description: The template alias.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    UpdateTemplatePermissionsResponse:
      type: object
      properties:
        TemplateId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the template.
        TemplateArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the template.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: A list of resource permissions to be set on the template.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateThemeResponse:
      type: object
      properties:
        ThemeId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the theme.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the theme.
        VersionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the new version of the theme.
        CreationStatus:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The creation status of the theme.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    UpdateThemeAliasResponse:
      type: object
      properties:
        ThemeAlias:
          allOf:
            - $ref: "#/components/schemas/ThemeAlias"
            - description: Information about the theme alias.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
    UpdateThemePermissionsResponse:
      type: object
      properties:
        ThemeId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the theme.
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the theme.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: The resulting list of resource permissions for the theme.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    UpdateUserResponse:
      type: object
      properties:
        User:
          allOf:
            - $ref: "#/components/schemas/User"
            - description: The Amazon QuickSight user.
        RequestId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Web Services request ID for this operation.
        Status:
          allOf:
            - $ref: "#/components/schemas/StatusCode"
            - description: The HTTP status of the request.
    AccountCustomization:
      type: object
      properties:
        DefaultTheme:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The default theme for this Amazon QuickSight subscription.
        DefaultEmailCustomizationTemplate:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The default email customization template.
      description: The Amazon QuickSight customizations associated with your Amazon Web Services account or a QuickSight namespace in a specific Amazon Web Services Region.
    Edition:
      type: string
      enum:
        - STANDARD
        - ENTERPRISE
        - ENTERPRISE_AND_Q
    AccountInfo:
      type: object
      properties:
        AccountName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The account name that you provided for the Amazon QuickSight subscription in your Amazon Web Services account. You create this name when you sign up for Amazon QuickSight. It's unique over all of Amazon Web Services, and it appears only when users sign in.
        Edition:
          allOf:
            - $ref: "#/components/schemas/Edition"
            - description: The edition of your Amazon QuickSight account.
        NotificationEmail:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The email address that will be used for Amazon QuickSight to send notifications regarding your Amazon Web Services account or Amazon QuickSight subscription.
        AuthenticationType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The way that your Amazon QuickSight account is authenticated.
        AccountSubscriptionStatus:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The status of your account subscription.
      description: <p>A structure that contains the following account information elements:</p> <ul> <li> <p>Your Amazon QuickSight account name.</p> </li> <li> <p>The edition of Amazon QuickSight that your account is using.</p> </li> <li> <p>The notification email address that is associated with the Amazon QuickSight account. </p> </li> <li> <p>The authentication type of the Amazon QuickSight account.</p> </li> <li> <p>The status of the Amazon QuickSight account's subscription.</p> </li> </ul>
    AccountSettings:
      type: object
      properties:
        AccountName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The "account name" you provided for the Amazon QuickSight subscription in your Amazon Web Services account. You create this name when you sign up for Amazon QuickSight. It is unique in all of Amazon Web Services and it appears only when users sign in.
        Edition:
          allOf:
            - $ref: "#/components/schemas/Edition"
            - description: "The edition of Amazon QuickSight that you're currently subscribed to: Enterprise edition or Standard edition."
        DefaultNamespace:
          allOf:
            - $ref: "#/components/schemas/Namespace"
            - description: "The default Amazon QuickSight namespace for your Amazon Web Services account. "
        NotificationEmail:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The main notification email for your Amazon QuickSight subscription.
        PublicSharingEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: A Boolean value that indicates whether public sharing is turned on for an Amazon QuickSight account. For more information about turning on public sharing, see <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdatePublicSharingSettings.html">UpdatePublicSharingSettings</a>.
        TerminationProtectionEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "A boolean value that determines whether or not an Amazon QuickSight account can be deleted. A <code>True</code> value doesn't allow the account to be deleted and results in an error message if a user tries to make a <code>DeleteAccountSubsctiption</code> request. A <code>False</code> value will allow the ccount to be deleted. "
      description: The Amazon QuickSight settings associated with your Amazon Web Services account.
    ActionList:
      type: array
      items:
        $ref: "#/components/schemas/String"
      minItems: 1
      maxItems: 16
    IAMPolicyAssignmentName:
      type: string
      pattern: (?=^.{2,256}$)(?!.*\s)[0-9a-zA-Z-_.:=+@]*$
      minLength: 1
    ActiveIAMPolicyAssignment:
      type: object
      properties:
        AssignmentName:
          allOf:
            - $ref: "#/components/schemas/IAMPolicyAssignmentName"
            - description: A name for the IAM policy assignment.
        PolicyArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
      description: The active Identity and Access Management (IAM) policy assignment.
    ActiveIAMPolicyAssignmentList:
      type: array
      items:
        $ref: "#/components/schemas/ActiveIAMPolicyAssignment"
    DashboardBehavior:
      type: string
      enum:
        - ENABLED
        - DISABLED
    AdditionalDashboardIdList:
      type: array
      items:
        $ref: "#/components/schemas/ShortRestrictiveResourceId"
      minItems: 1
      maxItems: 20
    NumericalAggregationFunction:
      type: object
      properties:
        SimpleNumericalAggregation:
          allOf:
            - $ref: "#/components/schemas/SimpleNumericalAggregationFunction"
            - description: "<p>Built-in aggregation functions for numerical values.</p> <ul> <li> <p> <code>SUM</code>: The sum of a dimension or measure. </p> </li> <li> <p> <code>AVERAGE</code>: The average of a dimension or measure.</p> </li> <li> <p> <code>MIN</code>: The minimum value of a dimension or measure.</p> </li> <li> <p> <code>MAX</code>: The maximum value of a dimension or measure.</p> </li> <li> <p> <code>COUNT</code>: The count of a dimension or measure.</p> </li> <li> <p> <code>DISTINCT_COUNT</code>: The count of distinct values in a dimension or measure.</p> </li> <li> <p> <code>VAR</code>: The variance of a dimension or measure.</p> </li> <li> <p> <code>VARP</code>: The partitioned variance of a dimension or measure.</p> </li> <li> <p> <code>STDEV</code>: The standard deviation of a dimension or measure.</p> </li> <li> <p> <code>STDEVP</code>: The partitioned standard deviation of a dimension or measure.</p> </li> <li> <p> <code>MEDIAN</code>: The median value of a dimension or measure.</p> </li> </ul>"
        PercentileAggregation:
          allOf:
            - $ref: "#/components/schemas/PercentileAggregation"
            - description: An aggregation based on the percentile of values in a dimension or measure.
      description: Aggregation for numerical values.
    CategoricalAggregationFunction:
      type: string
      enum:
        - COUNT
        - DISTINCT_COUNT
    DateAggregationFunction:
      type: string
      enum:
        - COUNT
        - DISTINCT_COUNT
        - MIN
        - MAX
    AggregationFunction:
      type: object
      properties:
        NumericalAggregationFunction:
          allOf:
            - $ref: "#/components/schemas/NumericalAggregationFunction"
            - description: Aggregation for numerical values.
        CategoricalAggregationFunction:
          allOf:
            - $ref: "#/components/schemas/CategoricalAggregationFunction"
            - description: "<p>Aggregation for categorical values.</p> <ul> <li> <p> <code>COUNT</code>: Aggregate by the total number of values, including duplicates.</p> </li> <li> <p> <code>DISTINCT_COUNT</code>: Aggregate by the total number of distinct values.</p> </li> </ul>"
        DateAggregationFunction:
          allOf:
            - $ref: "#/components/schemas/DateAggregationFunction"
            - description: "<p>Aggregation for date values.</p> <ul> <li> <p> <code>COUNT</code>: Aggregate by the total number of values, including duplicates.</p> </li> <li> <p> <code>DISTINCT_COUNT</code>: Aggregate by the total number of distinct values.</p> </li> <li> <p> <code>MIN</code>: Select the smallest date value.</p> </li> <li> <p> <code>MAX</code>: Select the largest date value.</p> </li> </ul>"
      description: <p>An aggregation function aggregates values from a dimension or measure.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    ColumnIdentifier:
      type: object
      required:
        - DataSetIdentifier
        - ColumnName
      properties:
        DataSetIdentifier:
          allOf:
            - $ref: "#/components/schemas/DataSetIdentifier"
            - description: The data set that the column belongs to.
        ColumnName:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: The name of the column.
      description: A column of a data set.
    SortDirection:
      type: string
      enum:
        - ASC
        - DESC
    AggregationSortConfiguration:
      type: object
      required:
        - Column
        - SortDirection
        - AggregationFunction
      properties:
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that determines the sort order of aggregated values.
        SortDirection:
          allOf:
            - $ref: "#/components/schemas/SortDirection"
            - description: "<p>The sort direction of values.</p> <ul> <li> <p> <code>ASC</code>: Sort in ascending order.</p> </li> <li> <p> <code>DESC</code>: Sort in descending order.</p> </li> </ul>"
        AggregationFunction:
          allOf:
            - $ref: "#/components/schemas/AggregationFunction"
            - description: The function that aggregates the values in <code>Column</code>.
      description: The configuration options to sort aggregated values.
    AggregationSortConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/AggregationSortConfiguration"
      maxItems: 100
    AliasName:
      type: string
      pattern: "[\\w\\-]+|(\\$LATEST)|(\\$PUBLISHED)"
      minLength: 1
      maxLength: 2048
    Domain:
      type: string
      minLength: 1
      maxLength: 64
    AnalysisName:
      type: string
      minLength: 1
      maxLength: 2048
    ResourceStatus:
      type: string
      enum:
        - CREATION_IN_PROGRESS
        - CREATION_SUCCESSFUL
        - CREATION_FAILED
        - UPDATE_IN_PROGRESS
        - UPDATE_SUCCESSFUL
        - UPDATE_FAILED
        - DELETED
    AnalysisErrorList:
      type: array
      items:
        $ref: "#/components/schemas/AnalysisError"
      minItems: 1
    DataSetArnsList:
      type: array
      items:
        $ref: "#/components/schemas/Arn"
      maxItems: 100
    SheetList:
      type: array
      items:
        $ref: "#/components/schemas/Sheet"
      maxItems: 20
    Analysis:
      type: object
      properties:
        AnalysisId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the analysis.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the analysis.
        Name:
          allOf:
            - $ref: "#/components/schemas/AnalysisName"
            - description: The descriptive name of the analysis.
        Status:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: Status associated with the analysis.
        Errors:
          allOf:
            - $ref: "#/components/schemas/AnalysisErrorList"
            - description: Errors associated with the analysis.
        DataSetArns:
          allOf:
            - $ref: "#/components/schemas/DataSetArnsList"
            - description: The ARNs of the datasets of the analysis.
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the theme of the analysis.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that the analysis was created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that the analysis was last updated.
        Sheets:
          allOf:
            - $ref: "#/components/schemas/SheetList"
            - description: A list of the associated sheets with the unique identifier and name of each sheet.
      description: Metadata structure for an analysis in Amazon QuickSight
    DefaultNewSheetConfiguration:
      type: object
      properties:
        InteractiveLayoutConfiguration:
          allOf:
            - $ref: "#/components/schemas/DefaultInteractiveLayoutConfiguration"
            - description: The options that determine the default settings for interactive layout configuration.
        PaginatedLayoutConfiguration:
          allOf:
            - $ref: "#/components/schemas/DefaultPaginatedLayoutConfiguration"
            - description: The options that determine the default settings for a paginated layout configuration.
        SheetContentType:
          allOf:
            - $ref: "#/components/schemas/SheetContentType"
            - description: The option that determines the sheet content type.
      description: The configuration for default new sheet settings.
    AnalysisDefinition:
      type: object
      required:
        - DataSetIdentifierDeclarations
      properties:
        DataSetIdentifierDeclarations:
          allOf:
            - $ref: "#/components/schemas/DataSetIdentifierDeclarationList"
            - description: An array of dataset identifier declarations. This mapping allows the usage of dataset identifiers instead of dataset ARNs throughout analysis sub-structures.
        Sheets:
          allOf:
            - $ref: "#/components/schemas/SheetDefinitionList"
            - description: An array of sheet definitions for an analysis. Each <code>SheetDefinition</code> provides detailed information about a sheet within this analysis.
        CalculatedFields:
          allOf:
            - $ref: "#/components/schemas/CalculatedFields"
            - description: An array of calculated field definitions for the analysis.
        ParameterDeclarations:
          allOf:
            - $ref: "#/components/schemas/ParameterDeclarationList"
            - description: <p>An array of parameter declarations for an analysis.</p> <p>Parameters are named variables that can transfer a value for use by an action or an object.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        FilterGroups:
          allOf:
            - $ref: "#/components/schemas/FilterGroupList"
            - description: <p>Filter definitions for an analysis.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/adding-a-filter.html">Filtering Data in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        ColumnConfigurations:
          allOf:
            - $ref: "#/components/schemas/ColumnConfigurationList"
            - description: " An array of analysis-level column configurations. Column configurations can be used to set default formatting for a column to be used throughout an analysis. "
        AnalysisDefaults:
          $ref: "#/components/schemas/AnalysisDefaults"
      description: The definition of an analysis.
    AnalysisErrorType:
      type: string
      enum:
        - ACCESS_DENIED
        - SOURCE_NOT_FOUND
        - DATA_SET_NOT_FOUND
        - INTERNAL_FAILURE
        - PARAMETER_VALUE_INCOMPATIBLE
        - PARAMETER_TYPE_INVALID
        - PARAMETER_NOT_FOUND
        - COLUMN_TYPE_MISMATCH
        - COLUMN_GEOGRAPHIC_ROLE_MISMATCH
        - COLUMN_REPLACEMENT_MISSING
    NonEmptyString:
      type: string
      pattern: .*\S.*
    EntityList:
      type: array
      items:
        $ref: "#/components/schemas/Entity"
      maxItems: 200
    AnalysisError:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/AnalysisErrorType"
            - description: The type of the analysis error.
        Message:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The message associated with the analysis error.
        ViolatedEntities:
          allOf:
            - $ref: "#/components/schemas/EntityList"
            - description: Lists the violated entities that caused the analysis error
      description: Analysis error.
    AnalysisFilterAttribute:
      type: string
      enum:
        - QUICKSIGHT_USER
        - QUICKSIGHT_VIEWER_OR_OWNER
        - DIRECT_QUICKSIGHT_VIEWER_OR_OWNER
        - QUICKSIGHT_OWNER
        - DIRECT_QUICKSIGHT_OWNER
        - DIRECT_QUICKSIGHT_SOLE_OWNER
        - ANALYSIS_NAME
    FilterOperator:
      type: string
      enum:
        - StringEquals
        - StringLike
    AnalysisSearchFilterList:
      type: array
      items:
        $ref: "#/components/schemas/AnalysisSearchFilter"
      minItems: 1
      maxItems: 1
    AnalysisSourceEntity:
      type: object
      properties:
        SourceTemplate:
          allOf:
            - $ref: "#/components/schemas/AnalysisSourceTemplate"
            - description: The source template for the source entity of the analysis.
      description: The source entity of an analysis.
    DataSetReferenceList:
      type: array
      items:
        $ref: "#/components/schemas/DataSetReference"
      minItems: 1
    AnalysisSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the analysis.
        AnalysisId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the analysis. This ID displays in the URL.
        Name:
          allOf:
            - $ref: "#/components/schemas/AnalysisName"
            - description: "The name of the analysis. This name is displayed in the Amazon QuickSight console. "
        Status:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The last known status for the analysis.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that the analysis was created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that the analysis was last updated.
      description: The summary metadata that describes an analysis.
    AnalysisSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/AnalysisSummary"
      maxItems: 100
    AnchorOption:
      type: string
      enum:
        - NOW
    ParameterName:
      type: string
      pattern: ^[a-zA-Z0-9]+$
      minLength: 1
      maxLength: 2048
    AnchorDateConfiguration:
      type: object
      properties:
        AnchorOption:
          allOf:
            - $ref: "#/components/schemas/AnchorOption"
            - description: <p>The options for the date configuration. Choose one of the options below:</p> <ul> <li> <p> <code>NOW</code> </p> </li> </ul>
        ParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The name of the parameter that is used for the anchor date configuration.
      description: The date configuration of the filter.
    DashboardVisualId:
      type: object
      required:
        - DashboardId
        - SheetId
        - VisualId
      properties:
        DashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the dashboard that has the visual that you want to embed. The <code>DashboardId</code> can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code> pane of the visual's on-visual menu of the Amazon QuickSight console. You can also get the <code>DashboardId</code> with a <code>ListDashboards</code> API operation.
        SheetId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the sheet that the has visual that you want to embed. The <code>SheetId</code> can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code> pane of the visual's on-visual menu of the Amazon QuickSight console.
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the visual that you want to embed. The <code>VisualID</code> can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code> pane of the visual's on-visual menu of the Amazon QuickSight console.
      description: <p>A structure that contains the following elements:</p> <ul> <li> <p>The <code>DashboardId</code> of the dashboard that has the visual that you want to embed.</p> </li> <li> <p>The <code>SheetId</code> of the sheet that has the visual that you want to embed.</p> </li> <li> <p>The <code>VisualId</code> of the visual that you want to embed.</p> </li> </ul> <p>The <code>DashboardId</code>, <code>SheetId</code>, and <code>VisualId</code> can be found in the <code>IDs for developers</code> section of the <code>Embed visual</code> pane of the visual's on-visual menu of the Amazon QuickSight console. You can also get the <code>DashboardId</code> with a <code>ListDashboards</code> API operation.</p>
    AnonymousUserEmbeddingExperienceConfiguration:
      type: object
      properties:
        Dashboard:
          allOf:
            - $ref: "#/components/schemas/AnonymousUserDashboardEmbeddingConfiguration"
            - description: The type of embedding experience. In this case, Amazon QuickSight dashboards.
        DashboardVisual:
          allOf:
            - $ref: "#/components/schemas/AnonymousUserDashboardVisualEmbeddingConfiguration"
            - description: The type of embedding experience. In this case, Amazon QuickSight visuals.
        QSearchBar:
          allOf:
            - $ref: "#/components/schemas/AnonymousUserQSearchBarEmbeddingConfiguration"
            - description: The Q search bar that you want to use for anonymous user embedding.
      description: The type of experience you want to embed. For anonymous users, you can embed Amazon QuickSight dashboards.
    RestrictiveResourceId:
      type: string
      pattern: "[\\w\\-]+"
      minLength: 1
      maxLength: 2048
    ArcAxisDisplayRange:
      type: object
      properties:
        Min:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The minimum value of the arc axis range.
        Max:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The maximum value of the arc axis range.
      description: The arc axis range of a <code>GaugeChartVisual</code>.
    Integer:
      type: integer
    ArcAxisConfiguration:
      type: object
      properties:
        Range:
          allOf:
            - $ref: "#/components/schemas/ArcAxisDisplayRange"
            - description: The arc axis range of a <code>GaugeChartVisual</code>.
        ReserveRange:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The reserved range of the arc axis.
      description: The arc axis configuration of a <code>GaugeChartVisual</code>.
    Double:
      type: number
      format: double
    ArcThicknessOptions:
      type: string
      enum:
        - SMALL
        - MEDIUM
        - LARGE
    ArcConfiguration:
      type: object
      properties:
        ArcAngle:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The option that determines the arc angle of a <code>GaugeChartVisual</code>.
        ArcThickness:
          allOf:
            - $ref: "#/components/schemas/ArcThicknessOptions"
            - description: The options that determine the arc thickness of a <code>GaugeChartVisual</code>.
      description: The arc configuration of a <code>GaugeChartVisual</code>.
    ArcThickness:
      type: string
      enum:
        - SMALL
        - MEDIUM
        - LARGE
        - WHOLE
    ArcOptions:
      type: object
      properties:
        ArcThickness:
          allOf:
            - $ref: "#/components/schemas/ArcThickness"
            - description: The arc thickness of a <code>GaugeChartVisual</code>.
      description: The options that determine the arc thickness of a <code>GaugeChartVisual</code>.
    ArnList:
      type: array
      items:
        $ref: "#/components/schemas/Arn"
    AssignmentStatus:
      type: string
      enum:
        - ENABLED
        - DRAFT
        - DISABLED
    WorkGroup:
      type: string
      minLength: 1
      maxLength: 128
    RoleArn:
      type: string
      minLength: 20
      maxLength: 2048
    Host:
      type: string
      minLength: 1
      maxLength: 256
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    Database:
      type: string
      minLength: 1
      maxLength: 128
    AuthenticationMethodOption:
      type: string
      enum:
        - IAM_AND_QUICKSIGHT
        - IAM_ONLY
        - ACTIVE_DIRECTORY
    AwsAccountId:
      type: string
      pattern: ^[0-9]{12}$
      minLength: 12
      maxLength: 12
    AwsAndAccountId:
      type: string
      pattern: ^(aws|[0-9]{12})$
    DataSetName:
      type: string
      minLength: 1
      maxLength: 128
    AxisBinding:
      type: string
      enum:
        - PRIMARY_YAXIS
        - SECONDARY_YAXIS
    NumericAxisOptions:
      type: object
      properties:
        Scale:
          allOf:
            - $ref: "#/components/schemas/AxisScale"
            - description: The scale setup of a numeric axis.
        Range:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayRange"
            - description: The range setup of a numeric axis.
      description: The options for an axis with a numeric field.
    DateAxisOptions:
      type: object
      properties:
        MissingDateVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines whether or not missing dates are displayed.
      description: The options that determine how a date axis is displayed.
    AxisDataOptions:
      type: object
      properties:
        NumericAxisOptions:
          allOf:
            - $ref: "#/components/schemas/NumericAxisOptions"
            - description: The options for an axis with a numeric field.
        DateAxisOptions:
          allOf:
            - $ref: "#/components/schemas/DateAxisOptions"
            - description: The options for an axis with a date field.
      description: <p>The data options for an axis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    AxisDisplayDataDrivenRange:
      type: object
      properties: {}
      description: The options that are saved for future extension.
    AxisDisplayMinMaxRange:
      type: object
      properties:
        Minimum:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The minimum setup for an axis display range.
        Maximum:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The maximum setup for an axis display range.
      description: The minimum and maximum setup for an axis display range.
    AxisTickLabelOptions:
      type: object
      properties:
        LabelOptions:
          allOf:
            - $ref: "#/components/schemas/LabelOptions"
            - description: Determines whether or not the axis ticks are visible.
        RotationAngle:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The rotation angle of the axis tick labels.
      description: The tick label options of an axis.
    Visibility:
      type: string
      enum:
        - HIDDEN
        - VISIBLE
    ScrollBarOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the data zoom scroll bar.
        VisibleRange:
          allOf:
            - $ref: "#/components/schemas/VisibleRangeOptions"
            - description: The visibility range for the data zoom scroll bar.
      description: The visual display options for a data zoom scroll bar.
    PixelLength:
      type: string
      description: String based length that is composed of value and unit in px
    AxisDisplayOptions:
      type: object
      properties:
        TickLabelOptions:
          allOf:
            - $ref: "#/components/schemas/AxisTickLabelOptions"
            - description: The tick label options of an axis.
        AxisLineVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines whether or not the axis line is visible.
        GridLineVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines whether or not the grid line is visible.
        DataOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDataOptions"
            - description: The data options for an axis.
        ScrollbarOptions:
          allOf:
            - $ref: "#/components/schemas/ScrollBarOptions"
            - description: The scroll bar options for an axis.
        AxisOffset:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: The offset value that determines the starting placement of the axis within a visual's bounds.
      description: The display options for the axis label.
    AxisDisplayRange:
      type: object
      properties:
        MinMax:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayMinMaxRange"
            - description: The minimum and maximum setup of an axis display range.
        DataDriven:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayDataDrivenRange"
            - description: The data-driven setup of an axis display range.
      description: <p>The range setup of a numeric axis display range.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    FontConfiguration:
      type: object
      properties:
        FontSize:
          allOf:
            - $ref: "#/components/schemas/FontSize"
            - description: The option that determines the text display size.
        FontDecoration:
          allOf:
            - $ref: "#/components/schemas/FontDecoration"
            - description: Determines the appearance of decorative lines on the text.
        FontColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: Determines the color of the text.
        FontWeight:
          allOf:
            - $ref: "#/components/schemas/FontWeight"
            - description: The option that determines the text display weight, or boldness.
        FontStyle:
          allOf:
            - $ref: "#/components/schemas/FontStyle"
            - description: Determines the text display face that is inherited by the given font family.
      description: Configures the display properties of the given text.
    AxisLabelReferenceOptions:
      type: object
      required:
        - FieldId
        - Column
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field that the axis label is targeted to.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the axis label is targeted to.
      description: The reference that specifies where the axis label is applied to.
    AxisLabelOptions:
      type: object
      properties:
        FontConfiguration:
          allOf:
            - $ref: "#/components/schemas/FontConfiguration"
            - description: The font configuration of the axis label.
        CustomLabel:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The text for the axis label.
        ApplyTo:
          allOf:
            - $ref: "#/components/schemas/AxisLabelReferenceOptions"
            - description: The options that indicate which field the label belongs to.
      description: The label options for a chart axis. You must specify the field that the label is targeted to.
    AxisLabelOptionsList:
      type: array
      items:
        $ref: "#/components/schemas/AxisLabelOptions"
      maxItems: 100
    FieldId:
      type: string
      minLength: 1
      maxLength: 512
    AxisLinearScale:
      type: object
      properties:
        StepCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The step count setup of a linear axis.
        StepSize:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The step size setup of a linear axis.
      description: <p>The liner axis scale setup.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    AxisLogarithmicScale:
      type: object
      properties:
        Base:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The base setup of a logarithmic axis scale.
      description: The logarithmic axis scale setup.
    AxisScale:
      type: object
      properties:
        Linear:
          allOf:
            - $ref: "#/components/schemas/AxisLinearScale"
            - description: The linear axis scale setup.
        Logarithmic:
          allOf:
            - $ref: "#/components/schemas/AxisLogarithmicScale"
            - description: The logarithmic axis scale setup.
      description: <p>The scale setup options for a numeric axis display.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    LabelOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines whether or not the label is visible.
        FontConfiguration:
          allOf:
            - $ref: "#/components/schemas/FontConfiguration"
            - description: The font configuration of the label.
        CustomLabel:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The text for the label.
      description: The share label options for the labels.
    DimensionFieldList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionField"
      maxItems: 200
    MeasureFieldList:
      type: array
      items:
        $ref: "#/components/schemas/MeasureField"
      maxItems: 200
    SmallMultiplesDimensionFieldList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionField"
      maxItems: 1
    BarChartAggregatedFieldWells:
      type: object
      properties:
        Category:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The category (y-axis) field well of a bar chart.
        Values:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The value field wells of a bar chart. Values are aggregated by category.
        Colors:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The color (group/color) field well of a bar chart.
        SmallMultiples:
          allOf:
            - $ref: "#/components/schemas/SmallMultiplesDimensionFieldList"
            - description: The small multiples field well of a bar chart.
      description: The aggregated field wells of a bar chart.
    BarChartFieldWells:
      type: object
      properties:
        BarChartAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/BarChartAggregatedFieldWells"
            - description: The aggregated field wells of a bar chart.
      description: <p>The field wells of a <code>BarChartVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    BarChartSortConfiguration:
      type: object
      properties:
        CategorySort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of category fields.
        CategoryItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of categories displayed in a bar chart.
        ColorSort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of color fields in a bar chart.
        ColorItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of values displayed in a bar chart.
        SmallMultiplesSort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the small multiples field.
        SmallMultiplesLimitConfiguration:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of small multiples panels that are displayed.
      description: sort-configuration-description
    BarChartOrientation:
      type: string
      enum:
        - HORIZONTAL
        - VERTICAL
    BarsArrangement:
      type: string
      enum:
        - CLUSTERED
        - STACKED
        - STACKED_PERCENT
    VisualPalette:
      type: object
      properties:
        ChartColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The chart color options for the visual palette.
        ColorMap:
          allOf:
            - $ref: "#/components/schemas/DataPathColorList"
            - description: The color map options for the visual palette.
      description: The visual display options for the visual palette.
    SmallMultiplesOptions:
      type: object
      properties:
        MaxVisibleRows:
          allOf:
            - $ref: "#/components/schemas/VisiblePanelRows"
            - description: <p>Sets the maximum number of visible rows to display in the grid of small multiples panels.</p> <p>The default value is <code>Auto</code>, which automatically adjusts the rows in the grid to fit the overall layout and size of the given chart.</p>
        MaxVisibleColumns:
          allOf:
            - $ref: "#/components/schemas/VisiblePanelColumns"
            - description: <p>Sets the maximum number of visible columns to display in the grid of small multiples panels.</p> <p>The default is <code>Auto</code>, which automatically adjusts the columns in the grid to fit the overall layout and size of the given chart.</p>
        PanelConfiguration:
          allOf:
            - $ref: "#/components/schemas/PanelConfiguration"
            - description: Configures the display options for each small multiples panel.
      description: Options that determine the layout and display options of a chart's small multiples.
    ChartAxisLabelOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: "<p>The visibility of an axis label on a chart. Choose one of the following options:</p> <ul> <li> <p> <code>VISIBLE</code>: Shows the axis.</p> </li> <li> <p> <code>HIDDEN</code>: Hides the axis.</p> </li> </ul>"
        SortIconVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility configuration of the sort icon on a chart's axis label.
        AxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/AxisLabelOptionsList"
            - description: The label options for a chart axis.
      description: The label options for an axis on a chart.
    LegendOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines whether or not the legend is visible.
        Title:
          allOf:
            - $ref: "#/components/schemas/LabelOptions"
            - description: The custom title for the legend.
        Position:
          allOf:
            - $ref: "#/components/schemas/LegendPosition"
            - description: <p>The positions for the legend. Choose one of the following options:</p> <ul> <li> <p> <code>AUTO</code> </p> </li> <li> <p> <code>RIGHT</code> </p> </li> <li> <p> <code>BOTTOM</code> </p> </li> <li> <p> <code>LEFT</code> </p> </li> </ul>
        Width:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: The width of the legend. If this value is omitted, a default width is used when rendering.
        Height:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: The height of the legend. If this value is omitted, a default height is used when rendering.
      description: The options for the legend setup of a visual.
    DataLabelOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines the visibility of the data labels.
        CategoryLabelVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines the visibility of the category field labels.
        MeasureLabelVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines the visibility of the measure field labels.
        DataLabelTypes:
          allOf:
            - $ref: "#/components/schemas/DataLabelTypes"
            - description: The option that determines the data label type.
        Position:
          allOf:
            - $ref: "#/components/schemas/DataLabelPosition"
            - description: Determines the position of the data labels.
        LabelContent:
          allOf:
            - $ref: "#/components/schemas/DataLabelContent"
            - description: Determines the content of the data labels.
        LabelFontConfiguration:
          allOf:
            - $ref: "#/components/schemas/FontConfiguration"
            - description: Determines the font configuration of the data labels.
        LabelColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: Determines the color of the data labels.
        Overlap:
          allOf:
            - $ref: "#/components/schemas/DataLabelOverlap"
            - description: Determines whether overlap is enabled or disabled for the data labels.
      description: The options that determine the presentation of the data labels.
    TooltipOptions:
      type: object
      properties:
        TooltipVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines whether or not the tooltip is visible.
        SelectedTooltipType:
          allOf:
            - $ref: "#/components/schemas/SelectedTooltipType"
            - description: "<p>The selected type for the tooltip. Choose one of the following options:</p> <ul> <li> <p> <code>BASIC</code>: A basic tooltip.</p> </li> <li> <p> <code>DETAILED</code>: A detailed tooltip.</p> </li> </ul>"
        FieldBasedTooltip:
          allOf:
            - $ref: "#/components/schemas/FieldBasedTooltip"
            - description: The setup for the detailed tooltip. The tooltip setup is always saved. The display type is decided based on the tooltip type.
      description: The display options for the visual tooltip.
    ReferenceLineList:
      type: array
      items:
        $ref: "#/components/schemas/ReferenceLine"
      maxItems: 20
    ContributionAnalysisDefaultList:
      type: array
      items:
        $ref: "#/components/schemas/ContributionAnalysisDefault"
      minItems: 1
      maxItems: 200
    BarChartConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/BarChartFieldWells"
            - description: The field wells of the visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/BarChartSortConfiguration"
            - description: The sort configuration of a <code>BarChartVisual</code>.
        Orientation:
          allOf:
            - $ref: "#/components/schemas/BarChartOrientation"
            - description: "<p>The orientation of the bars in a bar chart visual. There are two valid values in this structure:</p> <ul> <li> <p> <code>HORIZONTAL</code>: Used for charts that have horizontal bars. Visuals that use this value are horizontal bar charts, horizontal stacked bar charts, and horizontal stacked 100% bar charts.</p> </li> <li> <p> <code>VERTICAL</code>: Used for charts that have vertical bars. Visuals that use this value are vertical bar charts, vertical stacked bar charts, and vertical stacked 100% bar charts.</p> </li> </ul>"
        BarsArrangement:
          allOf:
            - $ref: "#/components/schemas/BarsArrangement"
            - description: Determines the arrangement of the bars. The orientation and arrangement of bars determine the type of bar that is used in the visual.
        VisualPalette:
          allOf:
            - $ref: "#/components/schemas/VisualPalette"
            - description: The palette (chart color) display setup of the visual.
        SmallMultiplesOptions:
          allOf:
            - $ref: "#/components/schemas/SmallMultiplesOptions"
            - description: The small multiples setup for the visual.
        CategoryAxis:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The label display options (grid line, range, scale, axis step) for bar chart category.
        CategoryLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility and sort icon visibility) for a bar chart.
        ValueAxis:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The label display options (grid line, range, scale, axis step) for a bar chart value.
        ValueLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility and sort icon visibility) for a bar chart value.
        ColorLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility and sort icon visibility) for a color that is used in a bar chart.
        Legend:
          allOf:
            - $ref: "#/components/schemas/LegendOptions"
            - description: The legend display setup of the visual.
        DataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: The options that determine if visual data labels are displayed.
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The tooltip display setup of the visual.
        ReferenceLines:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineList"
            - description: The reference line setup of the visual.
        ContributionAnalysisDefaults:
          allOf:
            - $ref: "#/components/schemas/ContributionAnalysisDefaultList"
            - description: The contribution analysis (anomaly configuration) setup of the visual.
      description: The configuration of a <code>BarChartVisual</code>.
    FieldSortOptionsList:
      type: array
      items:
        $ref: "#/components/schemas/FieldSortOptions"
      maxItems: 100
    ItemsLimitConfiguration:
      type: object
      properties:
        ItemsLimit:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The limit on how many items of a field are showed in the chart. For example, the number of slices that are displayed in a pie chart.
        OtherCategories:
          allOf:
            - $ref: "#/components/schemas/OtherCategories"
            - description: <p>The <code>Show other</code> of an axis in the chart. Choose one of the following options:</p> <ul> <li> <p> <code>INCLUDE</code> </p> </li> <li> <p> <code>EXCLUDE</code> </p> </li> </ul>
      description: The limit configuration of the visual display for an axis.
    VisualTitleLabelOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the title label.
        FormatText:
          allOf:
            - $ref: "#/components/schemas/ShortFormatText"
            - description: The short text format of the title label, such as plain text or rich text.
      description: The title label options for a visual.
    VisualSubtitleLabelOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the subtitle label.
        FormatText:
          allOf:
            - $ref: "#/components/schemas/LongFormatText"
            - description: The long text format of the subtitle label, such as plain text or rich text.
      description: The subtitle label options for a visual.
    VisualCustomActionList:
      type: array
      items:
        $ref: "#/components/schemas/VisualCustomAction"
      maxItems: 10
    ColumnHierarchyList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnHierarchy"
      maxItems: 2
    BarChartVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/BarChartConfiguration"
            - description: The configuration settings of the visual.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: <p>A bar chart.</p> <p>The <code>BarChartVisual</code> structure describes a visual that is a member of the bar chart family. The following charts can be described using this structure:</p> <ul> <li> <p>Horizontal bar chart</p> </li> <li> <p>Vertical bar chart</p> </li> <li> <p>Horizontal stacked bar chart</p> </li> <li> <p>Vertical stacked bar chart</p> </li> <li> <p>Horizontal stacked 100% bar chart</p> </li> <li> <p>Vertical stacked 100% bar chart</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/bar-charts.html">Using bar charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    BaseMapStyleType:
      type: string
      enum:
        - LIGHT_GRAY
        - DARK_GRAY
        - STREET
        - IMAGERY
    BinCountLimit:
      type: integer
      minimum: 0
      maximum: 1000
    BinCountValue:
      type: integer
      minimum: 0
    BinCountOptions:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/BinCountValue"
            - description: The options that determine the bin count value.
      description: The options that determine the bin count of a histogram.
    BinWidthValue:
      type: number
      format: double
      minimum: 0
    BinWidthOptions:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/BinWidthValue"
            - description: The options that determine the bin width value.
        BinCountLimit:
          allOf:
            - $ref: "#/components/schemas/BinCountLimit"
            - description: The options that determine the bin count limit.
      description: The options that determine the bin width of a histogram.
    BodySectionContent:
      type: object
      properties:
        Layout:
          allOf:
            - $ref: "#/components/schemas/SectionLayoutConfiguration"
            - description: The layout configuration of a body section.
      description: The configuration of content in a body section.
    SectionStyle:
      type: object
      properties:
        Height:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: <p>The height of a section.</p> <p>Heights can only be defined for header and footer sections. The default height margin is 0.5 inches. </p>
        Padding:
          allOf:
            - $ref: "#/components/schemas/Spacing"
            - description: <p>The spacing between section content and its top, bottom, left, and right edges.</p> <p>There is no padding by default.</p>
      description: The options that style a section.
    SectionPageBreakConfiguration:
      type: object
      properties:
        After:
          allOf:
            - $ref: "#/components/schemas/SectionAfterPageBreak"
            - description: The configuration of a page break after a section.
      description: The configuration of a page break for a section.
    BodySectionConfiguration:
      type: object
      required:
        - SectionId
        - Content
      properties:
        SectionId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a body section.
        Content:
          allOf:
            - $ref: "#/components/schemas/BodySectionContent"
            - description: The configuration of content in a body section.
        Style:
          allOf:
            - $ref: "#/components/schemas/SectionStyle"
            - description: The style options of a body section.
        PageBreakConfiguration:
          allOf:
            - $ref: "#/components/schemas/SectionPageBreakConfiguration"
            - description: The configuration of a page break for a section.
      description: The configuration of a body section.
    BodySectionConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/BodySectionConfiguration"
      maxItems: 28
    SectionLayoutConfiguration:
      type: object
      required:
        - FreeFormLayout
      properties:
        FreeFormLayout:
          allOf:
            - $ref: "#/components/schemas/FreeFormSectionLayoutConfiguration"
            - description: The free-form layout configuration of a section.
      description: The layout configuration of a section.
    BooleanObject:
      type: boolean
    BorderStyle:
      type: object
      properties:
        Show:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: The option to enable display of borders for visuals.
      description: The display options for tile borders for visuals.
    BoxPlotDimensionFieldList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionField"
      maxItems: 1
    BoxPlotMeasureFieldList:
      type: array
      items:
        $ref: "#/components/schemas/MeasureField"
      maxItems: 5
    BoxPlotAggregatedFieldWells:
      type: object
      properties:
        GroupBy:
          allOf:
            - $ref: "#/components/schemas/BoxPlotDimensionFieldList"
            - description: The group by field well of a box plot chart. Values are grouped based on group by fields.
        Values:
          allOf:
            - $ref: "#/components/schemas/BoxPlotMeasureFieldList"
            - description: The value field well of a box plot chart. Values are aggregated based on group by fields.
      description: The aggregated field well for a box plot.
    BoxPlotFieldWells:
      type: object
      properties:
        BoxPlotAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/BoxPlotAggregatedFieldWells"
            - description: The aggregated field wells of a box plot.
      description: <p>The field wells of a <code>BoxPlotVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    BoxPlotSortConfiguration:
      type: object
      properties:
        CategorySort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of a group by fields.
        PaginationConfiguration:
          allOf:
            - $ref: "#/components/schemas/PaginationConfiguration"
            - description: The pagination configuration of a table visual or box plot.
      description: The sort configuration of a <code>BoxPlotVisual</code>.
    BoxPlotOptions:
      type: object
      properties:
        StyleOptions:
          allOf:
            - $ref: "#/components/schemas/BoxPlotStyleOptions"
            - description: The style options of the box plot.
        OutlierVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines the visibility of the outlier in a box plot.
        AllDataPointsVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines the visibility of all data points of the box plot.
      description: The options of a box plot visual.
    BoxPlotChartConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/BoxPlotFieldWells"
            - description: The field wells of the visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/BoxPlotSortConfiguration"
            - description: The sort configuration of a <code>BoxPlotVisual</code>.
        BoxPlotOptions:
          allOf:
            - $ref: "#/components/schemas/BoxPlotOptions"
            - description: The box plot chart options for a box plot visual
        CategoryAxis:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The label display options (grid line, range, scale, axis step) of a box plot category.
        CategoryLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility and sort Icon visibility) of a box plot category.
        PrimaryYAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The label display options (grid line, range, scale, axis step) of a box plot category.
        PrimaryYAxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility and sort icon visibility) of a box plot value.
        Legend:
          $ref: "#/components/schemas/LegendOptions"
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The tooltip display setup of the visual.
        ReferenceLines:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineList"
            - description: The reference line setup of the visual.
        VisualPalette:
          allOf:
            - $ref: "#/components/schemas/VisualPalette"
            - description: The palette (chart color) display setup of the visual.
      description: The configuration of a <code>BoxPlotVisual</code>.
    DimensionField:
      type: object
      properties:
        NumericalDimensionField:
          allOf:
            - $ref: "#/components/schemas/NumericalDimensionField"
            - description: The dimension type field with numerical type columns.
        CategoricalDimensionField:
          allOf:
            - $ref: "#/components/schemas/CategoricalDimensionField"
            - description: The dimension type field with categorical type columns.
        DateDimensionField:
          allOf:
            - $ref: "#/components/schemas/DateDimensionField"
            - description: The dimension type field with date type columns.
      description: The dimension type field.
    BoxPlotFillStyle:
      type: string
      enum:
        - SOLID
        - TRANSPARENT
    MeasureField:
      type: object
      properties:
        NumericalMeasureField:
          allOf:
            - $ref: "#/components/schemas/NumericalMeasureField"
            - description: The measure type field with numerical type columns.
        CategoricalMeasureField:
          allOf:
            - $ref: "#/components/schemas/CategoricalMeasureField"
            - description: The measure type field with categorical type columns.
        DateMeasureField:
          allOf:
            - $ref: "#/components/schemas/DateMeasureField"
            - description: The measure type field with date type columns.
        CalculatedMeasureField:
          allOf:
            - $ref: "#/components/schemas/CalculatedMeasureField"
            - description: The calculated measure field only used in pivot tables.
      description: The measure (metric) type field.
    BoxPlotStyleOptions:
      type: object
      properties:
        FillStyle:
          allOf:
            - $ref: "#/components/schemas/BoxPlotFillStyle"
            - description: The fill styles (solid, transparent) of the box plot.
      description: The style options of the box plot.
    PaginationConfiguration:
      type: object
      required:
        - PageSize
        - PageNumber
      properties:
        PageSize:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: Indicates how many items render in one page.
        PageNumber:
          allOf:
            - $ref: "#/components/schemas/PageNumber"
            - description: Indicates the page number.
      description: The pagination configuration for a table visual or boxplot.
    BoxPlotVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers..
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/BoxPlotChartConfiguration"
            - description: The configuration settings of the visual.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: <p>A box plot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/box-plots.html">Using box plots</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    CIDR:
      type: string
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(3[0-2]|[1-2][0-9]|[1-9]))$
    ColumnName:
      type: string
      minLength: 1
      maxLength: 128
    ColumnId:
      type: string
      minLength: 1
      maxLength: 64
    Expression:
      type: string
      minLength: 1
      maxLength: 4096
      format: password
    CalculatedColumn:
      type: object
      required:
        - ColumnName
        - ColumnId
        - Expression
      properties:
        ColumnName:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: Column name.
        ColumnId:
          allOf:
            - $ref: "#/components/schemas/ColumnId"
            - description: A unique ID to identify a calculated column. During a dataset update, if the column ID of a calculated column matches that of an existing calculated column, Amazon QuickSight preserves the existing calculated column.
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: An expression that defines the calculated column.
      description: A calculated column for a dataset.
    CalculatedColumnList:
      type: array
      items:
        $ref: "#/components/schemas/CalculatedColumn"
      minItems: 1
      maxItems: 128
    DataSetIdentifier:
      type: string
      minLength: 1
      maxLength: 2048
    CalculatedField:
      type: object
      required:
        - DataSetIdentifier
        - Name
        - Expression
      properties:
        DataSetIdentifier:
          allOf:
            - $ref: "#/components/schemas/DataSetIdentifier"
            - description: The data set that is used in this calculated field.
        Name:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: The name of the calculated field.
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The expression of the calculated field.
      description: The calculated field of an analysis.
    CalculatedMeasureField:
      type: object
      required:
        - FieldId
        - Expression
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The custom field ID.
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The expression in the table calculation.
      description: The table calculation measure field for pivot tables.
    IngestionId:
      type: string
      pattern: ^[a-zA-Z0-9-_]+$
      minLength: 1
      maxLength: 128
    CancelIngestionRequest:
      type: object
      title: CancelIngestionRequest
      properties: {}
    StatusCode:
      type: integer
    CascadingControlSourceList:
      type: array
      items:
        $ref: "#/components/schemas/CascadingControlSource"
      maxItems: 200
    CascadingControlConfiguration:
      type: object
      properties:
        SourceControls:
          allOf:
            - $ref: "#/components/schemas/CascadingControlSourceList"
            - description: A list of source controls that determine the values that are used in the current control.
      description: The values that are displayed in a control can be configured to only show values that are valid based on what's selected in other controls.
    CascadingControlSource:
      type: object
      properties:
        SourceSheetControlId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The source sheet control ID of a <code>CascadingControlSource</code>.
        ColumnToMatch:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column identifier that determines which column to look up for the source sheet control.
      description: The source controls that are used in a <code>CascadingControlConfiguration</code>.
    ColumnDataType:
      type: string
      enum:
        - STRING
        - INTEGER
        - DECIMAL
        - DATETIME
    TypeCastFormat:
      type: string
      maxLength: 32
    CastColumnTypeOperation:
      type: object
      required:
        - ColumnName
        - NewColumnType
      properties:
        ColumnName:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: Column name.
        NewColumnType:
          allOf:
            - $ref: "#/components/schemas/ColumnDataType"
            - description: New column data type.
        Format:
          allOf:
            - $ref: "#/components/schemas/TypeCastFormat"
            - description: When casting a column from string to datetime type, you can supply a string in a format supported by Amazon QuickSight to denote the source data format.
      description: A transform operation that casts a column to a different type.
    Catalog:
      type: string
      maxLength: 128
    HierarchyId:
      type: string
      minLength: 1
      maxLength: 512
    StringFormatConfiguration:
      type: object
      properties:
        NullValueFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NullValueFormatConfiguration"
            - description: The options that determine the null value format configuration.
        NumericFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumericFormatConfiguration"
            - description: The formatting configuration for numeric strings.
      description: Formatting configuration for string fields.
    CategoricalDimensionField:
      type: object
      required:
        - FieldId
        - Column
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The custom field ID.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that is used in the <code>CategoricalDimensionField</code>.
        HierarchyId:
          allOf:
            - $ref: "#/components/schemas/HierarchyId"
            - description: The custom hierarchy ID.
        FormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/StringFormatConfiguration"
            - description: The format configuration of the field.
      description: The dimension type field with categorical type columns..
    CategoricalMeasureField:
      type: object
      required:
        - FieldId
        - Column
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The custom field ID.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that is used in the <code>CategoricalMeasureField</code>.
        AggregationFunction:
          allOf:
            - $ref: "#/components/schemas/CategoricalAggregationFunction"
            - description: The aggregation function of the measure field.
        FormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/StringFormatConfiguration"
            - description: The format configuration of the field.
      description: The measure type field with categorical type columns.
    CategoryValueList:
      type: array
      items:
        $ref: "#/components/schemas/CategoryValue"
      maxItems: 100000
    CategoryDrillDownFilter:
      type: object
      required:
        - Column
        - CategoryValues
      properties:
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the filter is applied to.
        CategoryValues:
          allOf:
            - $ref: "#/components/schemas/CategoryValueList"
            - description: A list of the string inputs that are the values of the category drill down filter.
      description: The numeric equality type drill down filter.
    CategoryFilterConfiguration:
      type: object
      properties:
        FilterListConfiguration:
          allOf:
            - $ref: "#/components/schemas/FilterListConfiguration"
            - description: A list of filter configurations. In the Amazon QuickSight console, this filter type is called a filter list.
        CustomFilterListConfiguration:
          allOf:
            - $ref: "#/components/schemas/CustomFilterListConfiguration"
            - description: A list of custom filter values. In the Amazon QuickSight console, this filter type is called a custom filter list.
        CustomFilterConfiguration:
          allOf:
            - $ref: "#/components/schemas/CustomFilterConfiguration"
            - description: A custom filter that filters based on a single value. This filter can be partially matched.
      description: <p>The configuration for a <code>CategoryFilter</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    CategoryFilter:
      type: object
      required:
        - FilterId
        - Column
        - Configuration
      properties:
        FilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: An identifier that uniquely identifies a filter within a dashboard, analysis, or template.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the filter is applied to.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/CategoryFilterConfiguration"
            - description: The configuration for a <code>CategoryFilter</code>.
      description: <p>A <code>CategoryFilter</code> filters text values.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/add-a-text-filter-data-prep.html">Adding text filters</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    FilterListConfiguration:
      type: object
      required:
        - MatchOperator
      properties:
        MatchOperator:
          allOf:
            - $ref: "#/components/schemas/CategoryFilterMatchOperator"
            - description: The match operator that is used to determine if a filter should be applied.
        CategoryValues:
          allOf:
            - $ref: "#/components/schemas/CategoryValueList"
            - description: The list of category values for the filter.
        SelectAllOptions:
          allOf:
            - $ref: "#/components/schemas/CategoryFilterSelectAllOptions"
            - description: <p>Select all of the values. Null is not the assigned value of select all.</p> <ul> <li> <p> <code>FILTER_ALL_VALUES</code> </p> </li> </ul>
      description: A list of filter configurations.
    CustomFilterListConfiguration:
      type: object
      required:
        - MatchOperator
        - NullOption
      properties:
        MatchOperator:
          allOf:
            - $ref: "#/components/schemas/CategoryFilterMatchOperator"
            - description: The match operator that is used to determine if a filter should be applied.
        CategoryValues:
          allOf:
            - $ref: "#/components/schemas/CategoryValueList"
            - description: The list of category values for the filter.
        SelectAllOptions:
          allOf:
            - $ref: "#/components/schemas/CategoryFilterSelectAllOptions"
            - description: <p>Select all of the values. Null is not the assigned value of select all.</p> <ul> <li> <p> <code>FILTER_ALL_VALUES</code> </p> </li> </ul>
        NullOption:
          allOf:
            - $ref: "#/components/schemas/FilterNullOption"
            - description: "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
      description: A list of custom filter values.
    CustomFilterConfiguration:
      type: object
      required:
        - MatchOperator
        - NullOption
      properties:
        MatchOperator:
          allOf:
            - $ref: "#/components/schemas/CategoryFilterMatchOperator"
            - description: The match operator that is used to determine if a filter should be applied.
        CategoryValue:
          allOf:
            - $ref: "#/components/schemas/CategoryValue"
            - description: <p>The category value for the filter.</p> <p>This field is mutually exclusive to <code>ParameterName</code>.</p>
        SelectAllOptions:
          allOf:
            - $ref: "#/components/schemas/CategoryFilterSelectAllOptions"
            - description: <p>Select all of the values. Null is not the assigned value of select all.</p> <ul> <li> <p> <code>FILTER_ALL_VALUES</code> </p> </li> </ul>
        ParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: <p>The parameter whose value should be used for the filter value.</p> <p>This field is mutually exclusive to <code>CategoryValue</code>.</p>
        NullOption:
          allOf:
            - $ref: "#/components/schemas/FilterNullOption"
            - description: "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
      description: A custom filter that filters based on a single value. This filter can be partially matched.
    CategoryFilterMatchOperator:
      type: string
      enum:
        - EQUALS
        - DOES_NOT_EQUAL
        - CONTAINS
        - DOES_NOT_CONTAIN
        - STARTS_WITH
        - ENDS_WITH
    CategoryFilterSelectAllOptions:
      type: string
      enum:
        - FILTER_ALL_VALUES
    CategoryValue:
      type: string
      maxLength: 512
    ClusterId:
      type: string
      minLength: 1
      maxLength: 64
    SimpleClusterMarker:
      type: object
      properties:
        Color:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color of the simple cluster marker.
      description: The simple cluster marker of the cluster marker.
    ClusterMarker:
      type: object
      properties:
        SimpleClusterMarker:
          allOf:
            - $ref: "#/components/schemas/SimpleClusterMarker"
            - description: The simple cluster marker of the cluster marker.
      description: The cluster marker that is a part of the cluster marker configuration.
    ClusterMarkerConfiguration:
      type: object
      properties:
        ClusterMarker:
          allOf:
            - $ref: "#/components/schemas/ClusterMarker"
            - description: The cluster marker that is a part of the cluster marker configuration
      description: The cluster marker configuration of the geospatial map selected point style.
    ColorFillType:
      type: string
      enum:
        - DISCRETE
        - GRADIENT
    HexColor:
      type: string
      pattern: ^#[A-F0-9]{6}$
    ColorList:
      type: array
      items:
        $ref: "#/components/schemas/HexColor"
      maxItems: 100
    ColorScaleColorList:
      type: array
      items:
        $ref: "#/components/schemas/DataColor"
      minItems: 2
      maxItems: 3
    DataColor:
      type: object
      properties:
        Color:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color that is applied to the data value.
        DataValue:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The data value that the color is applied to.
      description: Determines the color that is applied to a particular data value.
    ColorScale:
      type: object
      required:
        - Colors
        - ColorFillType
      properties:
        Colors:
          allOf:
            - $ref: "#/components/schemas/ColorScaleColorList"
            - description: Determines the list of colors that are applied to the visual.
        ColorFillType:
          allOf:
            - $ref: "#/components/schemas/ColorFillType"
            - description: Determines the color fill type.
        NullValueColor:
          allOf:
            - $ref: "#/components/schemas/DataColor"
            - description: Determines the color that is applied to null values.
      description: Determines the color scale that is applied to the visual.
    FormatConfiguration:
      type: object
      properties:
        StringFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/StringFormatConfiguration"
            - description: Formatting configuration for string fields.
        NumberFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumberFormatConfiguration"
            - description: Formatting configuration for number fields.
        DateTimeFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/DateTimeFormatConfiguration"
            - description: Formatting configuration for <code>DateTime</code> fields.
      description: The formatting configuration for all types of field.
    ColumnRole:
      type: string
      enum:
        - DIMENSION
        - MEASURE
    ColumnConfiguration:
      type: object
      required:
        - Column
      properties:
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column.
        FormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/FormatConfiguration"
            - description: The format configuration of a column.
        Role:
          allOf:
            - $ref: "#/components/schemas/ColumnRole"
            - description: The role of the column.
      description: The general configuration of a column.
    ColumnDescriptiveText:
      type: string
      minLength: 0
      maxLength: 500
    ColumnDescription:
      type: object
      properties:
        Text:
          allOf:
            - $ref: "#/components/schemas/ColumnDescriptiveText"
            - description: The text of a description for a column.
      description: Metadata that contains a description for a column.
    GeoSpatialColumnGroup:
      type: object
      required:
        - Name
        - Columns
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ColumnGroupName"
            - description: A display name for the hierarchy.
        CountryCode:
          allOf:
            - $ref: "#/components/schemas/GeoSpatialCountryCode"
            - description: Country code.
        Columns:
          allOf:
            - $ref: "#/components/schemas/ColumnList"
            - description: Columns in this hierarchy.
      description: Geospatial column group that denotes a hierarchy.
    ColumnGroupColumnSchema:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the column group's column schema.
      description: A structure describing the name, data type, and geographic role of the columns.
    ColumnGroupColumnSchemaList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnGroupColumnSchema"
      maxItems: 500
    ColumnGroupList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnGroup"
      minItems: 1
      maxItems: 8
    ColumnGroupName:
      type: string
      minLength: 1
      maxLength: 64
    ColumnGroupSchema:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the column group schema.
        ColumnGroupColumnSchemaList:
          allOf:
            - $ref: "#/components/schemas/ColumnGroupColumnSchemaList"
            - description: A structure containing the list of schemas for column group columns.
      description: The column group schema.
    ColumnGroupSchemaList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnGroupSchema"
      maxItems: 500
    ExplicitHierarchy:
      type: object
      required:
        - HierarchyId
        - Columns
      properties:
        HierarchyId:
          allOf:
            - $ref: "#/components/schemas/HierarchyId"
            - description: The hierarchy ID of the explicit hierarchy.
        Columns:
          allOf:
            - $ref: "#/components/schemas/ExplicitHierarchyColumnList"
            - description: The list of columns that define the explicit hierarchy.
        DrillDownFilters:
          allOf:
            - $ref: "#/components/schemas/DrillDownFilterList"
            - description: The option that determines the drill down filters for the explicit hierarchy.
      description: The option that determines the hierarchy of the fields that are built within a visual's field wells. These fields can't be duplicated to other visuals.
    DateTimeHierarchy:
      type: object
      required:
        - HierarchyId
      properties:
        HierarchyId:
          allOf:
            - $ref: "#/components/schemas/HierarchyId"
            - description: The hierarchy ID of the <code>DateTime</code> hierarchy.
        DrillDownFilters:
          allOf:
            - $ref: "#/components/schemas/DrillDownFilterList"
            - description: The option that determines the drill down filters for the <code>DateTime</code> hierarchy.
      description: The option that determines the hierarchy of any <code>DateTime</code> fields.
    PredefinedHierarchy:
      type: object
      required:
        - HierarchyId
        - Columns
      properties:
        HierarchyId:
          allOf:
            - $ref: "#/components/schemas/HierarchyId"
            - description: The hierarchy ID of the predefined hierarchy.
        Columns:
          allOf:
            - $ref: "#/components/schemas/PredefinedHierarchyColumnList"
            - description: The list of columns that define the predefined hierarchy.
        DrillDownFilters:
          allOf:
            - $ref: "#/components/schemas/DrillDownFilterList"
            - description: The option that determines the drill down filters for the predefined hierarchy.
      description: The option that determines the hierarchy of the fields that are defined during data preparation. These fields are available to use in any analysis that uses the data source.
    ColumnHierarchy:
      type: object
      properties:
        ExplicitHierarchy:
          allOf:
            - $ref: "#/components/schemas/ExplicitHierarchy"
            - description: The option that determines the hierarchy of the fields that are built within a visual's field wells. These fields can't be duplicated to other visuals.
        DateTimeHierarchy:
          allOf:
            - $ref: "#/components/schemas/DateTimeHierarchy"
            - description: The option that determines the hierarchy of any <code>DateTime</code> fields.
        PredefinedHierarchy:
          allOf:
            - $ref: "#/components/schemas/PredefinedHierarchy"
            - description: The option that determines the hierarchy of the fields that are defined during data preparation. These fields are available to use in any analysis that uses the data source.
      description: The option that determines the hierarchy of the fields for a visual element.
    PrincipalList:
      type: array
      items:
        $ref: "#/components/schemas/String"
      minItems: 1
      maxItems: 100
    ColumnNameList:
      type: array
      items:
        $ref: "#/components/schemas/String"
      minItems: 1
    ColumnLevelPermissionRuleList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnLevelPermissionRule"
      minItems: 1
    ColumnList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnName"
      minItems: 1
      maxItems: 16
    ColumnSchema:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the column schema.
        DataType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The data type of the column schema.
        GeographicRole:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The geographic role of the column schema.
      description: The column schema.
    ColumnSchemaList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnSchema"
      maxItems: 500
    ColumnSort:
      type: object
      required:
        - SortBy
        - Direction
      properties:
        SortBy:
          $ref: "#/components/schemas/ColumnIdentifier"
        Direction:
          allOf:
            - $ref: "#/components/schemas/SortDirection"
            - description: The sort direction.
        AggregationFunction:
          allOf:
            - $ref: "#/components/schemas/AggregationFunction"
            - description: The aggregation function that is defined in the column sort.
      description: The sort configuration for a column that is not used in a field well.
    GeoSpatialDataRole:
      type: string
      enum:
        - COUNTRY
        - STATE
        - COUNTY
        - CITY
        - POSTCODE
        - LONGITUDE
        - LATITUDE
    ColumnTag:
      type: object
      properties:
        ColumnGeographicRole:
          allOf:
            - $ref: "#/components/schemas/GeoSpatialDataRole"
            - description: A geospatial role for a column.
        ColumnDescription:
          allOf:
            - $ref: "#/components/schemas/ColumnDescription"
            - description: A description for a column.
      description: A tag for a column in a <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_TagColumnOperation.html">TagColumnOperation</a> </code> structure. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    ColumnTagList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnTag"
      minItems: 1
      maxItems: 16
    ColumnTagName:
      type: string
      enum:
        - COLUMN_GEOGRAPHIC_ROLE
        - COLUMN_DESCRIPTION
    ColumnTagNames:
      type: array
      items:
        $ref: "#/components/schemas/ColumnTagName"
    ColumnTooltipItem:
      type: object
      required:
        - Column
      properties:
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The target column of the tooltip item.
        Label:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The label of the tooltip item.
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the tooltip item.
        Aggregation:
          allOf:
            - $ref: "#/components/schemas/AggregationFunction"
            - description: The aggregation function of the column tooltip item.
      description: The tooltip item for the columns that are not part of a field well.
    ComboChartAggregatedFieldWells:
      type: object
      properties:
        Category:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The aggregated category field wells of a combo chart.
        BarValues:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The aggregated <code>BarValues</code> field well of a combo chart.
        Colors:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The aggregated colors field well of a combo chart.
        LineValues:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The aggregated <code>LineValues</code> field well of a combo chart.
      description: The aggregated field wells of a combo chart.
    ComboChartFieldWells:
      type: object
      properties:
        ComboChartAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/ComboChartAggregatedFieldWells"
            - description: The aggregated field wells of a combo chart. Combo charts only have aggregated field wells. Columns in a combo chart are aggregated by category.
      description: <p>The field wells of the visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    ComboChartSortConfiguration:
      type: object
      properties:
        CategorySort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the category field well in a combo chart.
        CategoryItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The item limit configuration for the category field well of a combo chart.
        ColorSort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the color field well in a combo chart.
        ColorItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The item limit configuration of the color field well in a combo chart.
      description: The sort configuration of a <code>ComboChartVisual</code>.
    ComboChartConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/ComboChartFieldWells"
            - description: The field wells of the visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/ComboChartSortConfiguration"
            - description: The sort configuration of a <code>ComboChartVisual</code>.
        BarsArrangement:
          allOf:
            - $ref: "#/components/schemas/BarsArrangement"
            - description: "<p>Determines the bar arrangement in a combo chart. The following are valid values in this structure:</p> <ul> <li> <p> <code>CLUSTERED</code>: For clustered bar combo charts.</p> </li> <li> <p> <code>STACKED</code>: For stacked bar combo charts.</p> </li> <li> <p> <code>STACKED_PERCENT</code>: Do not use. If you use this value, the operation returns a validation error.</p> </li> </ul>"
        CategoryAxis:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The category axis of a combo chart.
        CategoryLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility, and sort icon visibility) of a combo chart category (group/color) field well.
        PrimaryYAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The label display options (grid line, range, scale, and axis step) of a combo chart's primary y-axis (bar) field well.
        PrimaryYAxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility, and sort icon visibility) of a combo chart's primary y-axis (bar) field well.
        SecondaryYAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The label display options (grid line, range, scale, axis step) of a combo chart's secondary y-axis (line) field well.
        SecondaryYAxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility, and sort icon visibility) of a combo chart's secondary y-axis(line) field well.
        ColorLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility, and sort icon visibility) of a combo chart's color field well.
        Legend:
          allOf:
            - $ref: "#/components/schemas/LegendOptions"
            - description: The legend display setup of the visual.
        BarDataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: <p>The options that determine if visual data labels are displayed.</p> <p>The data label options for a bar in a combo chart.</p>
        LineDataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: <p>The options that determine if visual data labels are displayed.</p> <p>The data label options for a line in a combo chart.</p>
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The legend display setup of the visual.
        ReferenceLines:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineList"
            - description: The reference line setup of the visual.
        VisualPalette:
          allOf:
            - $ref: "#/components/schemas/VisualPalette"
            - description: The palette (chart color) display setup of the visual.
      description: The configuration of a <code>ComboChartVisual</code>.
    ComboChartVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/ComboChartConfiguration"
            - description: The configuration settings of the visual.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: <p>A combo chart.</p> <p>The <code>ComboChartVisual</code> includes stacked bar combo charts and clustered bar combo charts</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/combo-charts.html">Using combo charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    ComparisonMethod:
      type: string
      enum:
        - DIFFERENCE
        - PERCENT_DIFFERENCE
        - PERCENT
    ComparisonFormatConfiguration:
      type: object
      properties:
        NumberDisplayFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumberDisplayFormatConfiguration"
            - description: The number display format.
        PercentageDisplayFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/PercentageDisplayFormatConfiguration"
            - description: The percentage display format.
      description: <p>The format of the comparison.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    ComparisonConfiguration:
      type: object
      properties:
        ComparisonMethod:
          allOf:
            - $ref: "#/components/schemas/ComparisonMethod"
            - description: <p>The method of the comparison. Choose from the following options:</p> <ul> <li> <p> <code>DIFFERENCE</code> </p> </li> <li> <p> <code>PERCENT_DIFFERENCE</code> </p> </li> <li> <p> <code>PERCENT</code> </p> </li> </ul>
        ComparisonFormat:
          allOf:
            - $ref: "#/components/schemas/ComparisonFormatConfiguration"
            - description: The format of the comparison.
      description: The comparison display configuration of a KPI or gauge chart.
    NumberDisplayFormatConfiguration:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: "#/components/schemas/Prefix"
            - description: Determines the prefix value of the number format.
        Suffix:
          allOf:
            - $ref: "#/components/schemas/Suffix"
            - description: Determines the suffix value of the number format.
        SeparatorConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumericSeparatorConfiguration"
            - description: The options that determine the numeric separator configuration.
        DecimalPlacesConfiguration:
          allOf:
            - $ref: "#/components/schemas/DecimalPlacesConfiguration"
            - description: The option that determines the decimal places configuration.
        NumberScale:
          allOf:
            - $ref: "#/components/schemas/NumberScale"
            - description: Determines the number scale value of the number format.
        NegativeValueConfiguration:
          allOf:
            - $ref: "#/components/schemas/NegativeValueConfiguration"
            - description: The options that determine the negative value configuration.
        NullValueFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NullValueFormatConfiguration"
            - description: The options that determine the null value format configuration.
      description: The options that determine the number display format configuration.
    PercentageDisplayFormatConfiguration:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: "#/components/schemas/Prefix"
            - description: Determines the prefix value of the percentage format.
        Suffix:
          allOf:
            - $ref: "#/components/schemas/Suffix"
            - description: Determines the suffix value of the percentage format.
        SeparatorConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumericSeparatorConfiguration"
            - description: The options that determine the numeric separator configuration.
        DecimalPlacesConfiguration:
          allOf:
            - $ref: "#/components/schemas/DecimalPlacesConfiguration"
            - description: The option that determines the decimal places configuration.
        NegativeValueConfiguration:
          allOf:
            - $ref: "#/components/schemas/NegativeValueConfiguration"
            - description: The options that determine the negative value configuration.
        NullValueFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NullValueFormatConfiguration"
            - description: The options that determine the null value format configuration.
      description: The options that determine the percentage display format configuration.
    TopBottomRankedComputation:
      type: object
      required:
        - ComputationId
        - Category
        - Type
      properties:
        ComputationId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for a computation.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of a computation.
        Category:
          allOf:
            - $ref: "#/components/schemas/DimensionField"
            - description: The category field that is used in a computation.
        Value:
          allOf:
            - $ref: "#/components/schemas/MeasureField"
            - description: The value field that is used in a computation.
        ResultSize:
          allOf:
            - $ref: "#/components/schemas/TopBottomRankedComputationResultSize"
            - description: The result size of a top and bottom ranked computation.
        Type:
          allOf:
            - $ref: "#/components/schemas/TopBottomComputationType"
            - description: "<p>The computation type. Choose one of the following options:</p> <ul> <li> <p>TOP: A top ranked computation.</p> </li> <li> <p>BOTTOM: A bottom ranked computation.</p> </li> </ul>"
      description: The top ranked and bottom ranked computation configuration.
    TopBottomMoversComputation:
      type: object
      required:
        - ComputationId
        - Time
        - Category
        - Type
      properties:
        ComputationId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for a computation.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of a computation.
        Time:
          allOf:
            - $ref: "#/components/schemas/DimensionField"
            - description: The time field that is used in a computation.
        Category:
          allOf:
            - $ref: "#/components/schemas/DimensionField"
            - description: The category field that is used in a computation.
        Value:
          allOf:
            - $ref: "#/components/schemas/MeasureField"
            - description: The value field that is used in a computation.
        MoverSize:
          allOf:
            - $ref: "#/components/schemas/TopBottomMoversComputationMoverSize"
            - description: The mover size setup of the top and bottom movers computation.
        SortOrder:
          allOf:
            - $ref: "#/components/schemas/TopBottomSortOrder"
            - description: The sort order setup of the top and bottom movers computation.
        Type:
          allOf:
            - $ref: "#/components/schemas/TopBottomComputationType"
            - description: "<p>The computation type. Choose from the following options:</p> <ul> <li> <p>TOP: Top movers computation.</p> </li> <li> <p>BOTTOM: Bottom movers computation.</p> </li> </ul>"
      description: The top movers and bottom movers computation setup.
    TotalAggregationComputation:
      type: object
      required:
        - ComputationId
        - Value
      properties:
        ComputationId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for a computation.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of a computation.
        Value:
          allOf:
            - $ref: "#/components/schemas/MeasureField"
            - description: The value field that is used in a computation.
      description: The total aggregation computation configuration.
    MaximumMinimumComputation:
      type: object
      required:
        - ComputationId
        - Time
        - Type
      properties:
        ComputationId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for a computation.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of a computation.
        Time:
          allOf:
            - $ref: "#/components/schemas/DimensionField"
            - description: The time field that is used in a computation.
        Value:
          allOf:
            - $ref: "#/components/schemas/MeasureField"
            - description: The value field that is used in a computation.
        Type:
          allOf:
            - $ref: "#/components/schemas/MaximumMinimumComputationType"
            - description: "<p>The type of computation. Choose one of the following options:</p> <ul> <li> <p>MAXIMUM: A maximum computation.</p> </li> <li> <p>MINIMUM: A minimum computation.</p> </li> </ul>"
      description: The maximum and minimum computation configuration.
    MetricComparisonComputation:
      type: object
      required:
        - ComputationId
        - Time
        - FromValue
        - TargetValue
      properties:
        ComputationId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for a computation.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of a computation.
        Time:
          allOf:
            - $ref: "#/components/schemas/DimensionField"
            - description: The time field that is used in a computation.
        FromValue:
          allOf:
            - $ref: "#/components/schemas/MeasureField"
            - description: The field that is used in a metric comparison from value setup.
        TargetValue:
          allOf:
            - $ref: "#/components/schemas/MeasureField"
            - description: The field that is used in a metric comparison to value setup.
      description: The metric comparison computation configuration.
    PeriodOverPeriodComputation:
      type: object
      required:
        - ComputationId
        - Time
      properties:
        ComputationId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for a computation.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of a computation.
        Time:
          allOf:
            - $ref: "#/components/schemas/DimensionField"
            - description: The time field that is used in a computation.
        Value:
          allOf:
            - $ref: "#/components/schemas/MeasureField"
            - description: The value field that is used in a computation.
      description: The period over period computation configuration.
    PeriodToDateComputation:
      type: object
      required:
        - ComputationId
        - Time
      properties:
        ComputationId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for a computation.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of a computation.
        Time:
          allOf:
            - $ref: "#/components/schemas/DimensionField"
            - description: The time field that is used in a computation.
        Value:
          allOf:
            - $ref: "#/components/schemas/MeasureField"
            - description: The value field that is used in a computation.
        PeriodTimeGranularity:
          allOf:
            - $ref: "#/components/schemas/TimeGranularity"
            - description: "<p>The time granularity setup of period to date computation. Choose from the following options:</p> <ul> <li> <p>YEAR: Year to date.</p> </li> <li> <p>MONTH: Month to date.</p> </li> </ul>"
      description: The period to date computation configuration.
    GrowthRateComputation:
      type: object
      required:
        - ComputationId
        - Time
      properties:
        ComputationId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for a computation.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of a computation.
        Time:
          allOf:
            - $ref: "#/components/schemas/DimensionField"
            - description: The time field that is used in a computation.
        Value:
          allOf:
            - $ref: "#/components/schemas/MeasureField"
            - description: The value field that is used in a computation.
        PeriodSize:
          allOf:
            - $ref: "#/components/schemas/GrowthRatePeriodSize"
            - description: The period size setup of a growth rate computation.
      description: The growth rate computation configuration.
    UniqueValuesComputation:
      type: object
      required:
        - ComputationId
        - Category
      properties:
        ComputationId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for a computation.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of a computation.
        Category:
          allOf:
            - $ref: "#/components/schemas/DimensionField"
            - description: The category field that is used in a computation.
      description: The unique values computation configuration.
    ForecastComputation:
      type: object
      required:
        - ComputationId
        - Time
      properties:
        ComputationId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for a computation.
        Name:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of a computation.
        Time:
          allOf:
            - $ref: "#/components/schemas/DimensionField"
            - description: The time field that is used in a computation.
        Value:
          allOf:
            - $ref: "#/components/schemas/MeasureField"
            - description: The value field that is used in a computation.
        PeriodsForward:
          allOf:
            - $ref: "#/components/schemas/PeriodsForward"
            - description: The periods forward setup of a forecast computation.
        PeriodsBackward:
          allOf:
            - $ref: "#/components/schemas/PeriodsBackward"
            - description: The periods backward setup of a forecast computation.
        UpperBoundary:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The upper boundary setup of a forecast computation.
        LowerBoundary:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The lower boundary setup of a forecast computation.
        PredictionInterval:
          allOf:
            - $ref: "#/components/schemas/PredictionInterval"
            - description: The prediction interval setup of a forecast computation.
        Seasonality:
          allOf:
            - $ref: "#/components/schemas/ForecastComputationSeasonality"
            - description: "<p>The seasonality setup of a forecast computation. Choose one of the following options:</p> <ul> <li> <p> <code>AUTOMATIC</code> </p> </li> <li> <p> <code>CUSTOM</code>: Checks the custom seasonality value.</p> </li> </ul>"
        CustomSeasonalityValue:
          allOf:
            - $ref: "#/components/schemas/ForecastComputationCustomSeasonalityValue"
            - description: The custom seasonality value setup of a forecast computation.
      description: The forecast computation configuration.
    Computation:
      type: object
      properties:
        TopBottomRanked:
          allOf:
            - $ref: "#/components/schemas/TopBottomRankedComputation"
            - description: The top ranked and bottom ranked computation configuration.
        TopBottomMovers:
          allOf:
            - $ref: "#/components/schemas/TopBottomMoversComputation"
            - description: The top movers and bottom movers computation configuration.
        TotalAggregation:
          allOf:
            - $ref: "#/components/schemas/TotalAggregationComputation"
            - description: The total aggregation computation configuration.
        MaximumMinimum:
          allOf:
            - $ref: "#/components/schemas/MaximumMinimumComputation"
            - description: The maximum and minimum computation configuration.
        MetricComparison:
          allOf:
            - $ref: "#/components/schemas/MetricComparisonComputation"
            - description: The metric comparison computation configuration.
        PeriodOverPeriod:
          allOf:
            - $ref: "#/components/schemas/PeriodOverPeriodComputation"
            - description: The period over period computation configuration.
        PeriodToDate:
          allOf:
            - $ref: "#/components/schemas/PeriodToDateComputation"
            - description: The period to <code>DataSetIdentifier</code> computation configuration.
        GrowthRate:
          allOf:
            - $ref: "#/components/schemas/GrowthRateComputation"
            - description: The growth rate computation configuration.
        UniqueValues:
          allOf:
            - $ref: "#/components/schemas/UniqueValuesComputation"
            - description: The unique values computation configuration.
        Forecast:
          allOf:
            - $ref: "#/components/schemas/ForecastComputation"
            - description: The forecast computation configuration.
      description: <p>The computation union that is used in an insight visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    ComputationList:
      type: array
      items:
        $ref: "#/components/schemas/Computation"
      maxItems: 100
    ConditionalFormattingSolidColor:
      type: object
      required:
        - Expression
      properties:
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The expression that determines the formatting configuration for solid color.
        Color:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: Determines the color.
      description: Formatting configuration for solid color.
    ConditionalFormattingGradientColor:
      type: object
      required:
        - Expression
        - Color
      properties:
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The expression that determines the formatting configuration for gradient color.
        Color:
          allOf:
            - $ref: "#/components/schemas/GradientColor"
            - description: Determines the color.
      description: Formatting configuration for gradient color.
    ConditionalFormattingColor:
      type: object
      properties:
        Solid:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingSolidColor"
            - description: Formatting configuration for solid color.
        Gradient:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingGradientColor"
            - description: Formatting configuration for gradient color.
      description: The formatting configuration for the color.
    ConditionalFormattingCustomIconOptions:
      type: object
      properties:
        Icon:
          allOf:
            - $ref: "#/components/schemas/Icon"
            - description: Determines the type of icon.
        UnicodeIcon:
          allOf:
            - $ref: "#/components/schemas/UnicodeIcon"
            - description: Determines the Unicode icon type.
      description: Custom icon options for an icon set.
    ConditionalFormattingIconDisplayConfiguration:
      type: object
      properties:
        IconDisplayOption:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingIconDisplayOption"
            - description: Determines the icon display configuration.
      description: Determines the icon display configuration.
    ConditionalFormattingCustomIconCondition:
      type: object
      required:
        - Expression
        - IconOptions
      properties:
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The expression that determines the condition of the icon set.
        IconOptions:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingCustomIconOptions"
            - description: Custom icon options for an icon set.
        Color:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: Determines the color of the icon.
        DisplayConfiguration:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingIconDisplayConfiguration"
            - description: Determines the icon display configuration.
      description: Determines the custom condition for an icon set.
    Icon:
      type: string
      enum:
        - CARET_UP
        - CARET_DOWN
        - PLUS
        - MINUS
        - ARROW_UP
        - ARROW_DOWN
        - ARROW_LEFT
        - ARROW_UP_LEFT
        - ARROW_DOWN_LEFT
        - ARROW_RIGHT
        - ARROW_UP_RIGHT
        - ARROW_DOWN_RIGHT
        - FACE_UP
        - FACE_DOWN
        - FACE_FLAT
        - ONE_BAR
        - TWO_BAR
        - THREE_BAR
        - CIRCLE
        - TRIANGLE
        - SQUARE
        - FLAG
        - THUMBS_UP
        - THUMBS_DOWN
        - CHECKMARK
        - X
    UnicodeIcon:
      type: string
      pattern: ^[^\u0000-\u00FF]$
    GradientColor:
      type: object
      properties:
        Stops:
          allOf:
            - $ref: "#/components/schemas/GradientStopList"
            - description: The list of gradient color stops.
      description: Determines the gradient color settings.
    ConditionalFormattingIconSet:
      type: object
      required:
        - Expression
      properties:
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The expression that determines the formatting configuration for the icon set.
        IconSetType:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingIconSetType"
            - description: Determines the icon set type.
      description: Formatting configuration for icon set.
    ConditionalFormattingIcon:
      type: object
      properties:
        IconSet:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingIconSet"
            - description: Formatting configuration for icon set.
        CustomCondition:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingCustomIconCondition"
            - description: Determines the custom condition for an icon set.
      description: The formatting configuration for the icon.
    ConditionalFormattingIconDisplayOption:
      type: string
      enum:
        - ICON_ONLY
    ConditionalFormattingIconSetType:
      type: string
      enum:
        - PLUS_MINUS
        - CHECK_X
        - THREE_COLOR_ARROW
        - THREE_GRAY_ARROW
        - CARET_UP_MINUS_DOWN
        - THREE_SHAPE
        - THREE_CIRCLE
        - FLAGS
        - BARS
        - FOUR_COLOR_ARROW
        - FOUR_GRAY_ARROW
    ContributorDimensionList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnIdentifier"
      minItems: 1
      maxItems: 4
    ContributionAnalysisDefault:
      type: object
      required:
        - MeasureFieldId
        - ContributorDimensions
      properties:
        MeasureFieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The measure field that is used in the contribution analysis.
        ContributorDimensions:
          allOf:
            - $ref: "#/components/schemas/ContributorDimensionList"
            - description: The dimensions columns that are used in the contribution analysis, usually a list of <code>ColumnIdentifiers</code>.
      description: The contribution analysis visual display for a line, pie, or bar chart.
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 1
      maxItems: 200
    CreateAccountCustomizationRequest:
      type: object
      required:
        - AccountCustomization
      title: CreateAccountCustomizationRequest
      properties:
        AccountCustomization:
          allOf:
            - $ref: "#/components/schemas/AccountCustomization"
            - description: "<p>The Amazon QuickSight customizations you're adding in the current Amazon Web Services Region. You can add these to an Amazon Web Services account and a QuickSight namespace. </p> <p>For example, you can add a default theme by setting <code>AccountCustomization</code> to the midnight theme: <code>\"AccountCustomization\": { \"DefaultTheme\": \"arn:aws:quicksight::aws:theme/MIDNIGHT\" }</code>. Or, you can add a custom theme by specifying <code>\"AccountCustomization\": { \"DefaultTheme\": \"arn:aws:quicksight:us-west-2:111122223333:theme/bdb844d0-0fe9-4d9d-b520-0fe602d93639\" }</code>. </p>"
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: A list of the tags that you want to attach to this resource.
    GroupsList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    CreateAccountSubscriptionRequest:
      type: object
      required:
        - Edition
        - AuthenticationMethod
        - AccountName
        - NotificationEmail
      title: CreateAccountSubscriptionRequest
      properties:
        Edition:
          allOf:
            - $ref: "#/components/schemas/Edition"
            - description: <p>The edition of Amazon QuickSight that you want your account to have. Currently, you can choose from <code>ENTERPRISE</code> or <code>ENTERPRISE_AND_Q</code>.</p> <p>If you choose <code>ENTERPRISE_AND_Q</code>, the following parameters are required:</p> <ul> <li> <p> <code>FirstName</code> </p> </li> <li> <p> <code>LastName</code> </p> </li> <li> <p> <code>EmailAddress</code> </p> </li> <li> <p> <code>ContactNumber</code> </p> </li> </ul>
        AuthenticationMethod:
          allOf:
            - $ref: "#/components/schemas/AuthenticationMethodOption"
            - description: <p>The method that you want to use to authenticate your Amazon QuickSight account. Currently, the valid values for this parameter are <code>IAM_AND_QUICKSIGHT</code>, <code>IAM_ONLY</code>, and <code>ACTIVE_DIRECTORY</code>.</p> <p>If you choose <code>ACTIVE_DIRECTORY</code>, provide an <code>ActiveDirectoryName</code> and an <code>AdminGroup</code> associated with your Active Directory.</p>
        AccountName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of your Amazon QuickSight account. This name is unique over all of Amazon Web Services, and it appears only when users sign in. You can't change <code>AccountName</code> value after the Amazon QuickSight account is created.
        NotificationEmail:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The email address that you want Amazon QuickSight to send notifications to regarding your Amazon QuickSight account or Amazon QuickSight subscription.
        ActiveDirectoryName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of your Active Directory. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account.
        Realm:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The realm of the Active Directory that is associated with your Amazon QuickSight account. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account.
        DirectoryId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the Active Directory that is associated with your Amazon QuickSight account.
        AdminGroup:
          allOf:
            - $ref: "#/components/schemas/GroupsList"
            - description: The admin group associated with your Active Directory. This field is required if <code>ACTIVE_DIRECTORY</code> is the selected authentication method of the new Amazon QuickSight account. For more information about using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the Amazon QuickSight User Guide.
        AuthorGroup:
          allOf:
            - $ref: "#/components/schemas/GroupsList"
            - description: The author group associated with your Active Directory. For more information about using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the Amazon QuickSight User Guide.
        ReaderGroup:
          allOf:
            - $ref: "#/components/schemas/GroupsList"
            - description: The reader group associated with your Active Direcrtory. For more information about using Active Directory in Amazon QuickSight, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/aws-directory-service.html">Using Active Directory with Amazon QuickSight Enterprise Edition</a> in the <i>Amazon QuickSight User Guide</i>.
        FirstName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The first name of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
        LastName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The last name of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
        EmailAddress:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The email address of the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
        ContactNumber:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A 10-digit phone number for the author of the Amazon QuickSight account to use for future communications. This field is required if <code>ENTERPPRISE_AND_Q</code> is the selected edition of the new Amazon QuickSight account.
    SignupResponse:
      type: object
      properties:
        IAMUser:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: A Boolean that is <code>TRUE</code> if the Amazon QuickSight uses IAM as an authentication method.
        userLoginName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user login name for your Amazon QuickSight account.
        accountName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of your Amazon QuickSight account.
        directoryType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The type of Active Directory that is being used to authenticate the Amazon QuickSight account. Valid values are <code>SIMPLE_AD</code>, <code>AD_CONNECTOR</code>, and <code>MICROSOFT_AD</code>.
      description: A <code>SignupResponse</code> object that contains a summary of a newly created account.
    Parameters:
      type: object
      properties:
        StringParameters:
          allOf:
            - $ref: "#/components/schemas/StringParameterList"
            - description: The parameters that have a data type of string.
        IntegerParameters:
          allOf:
            - $ref: "#/components/schemas/IntegerParameterList"
            - description: The parameters that have a data type of integer.
        DecimalParameters:
          allOf:
            - $ref: "#/components/schemas/DecimalParameterList"
            - description: The parameters that have a data type of decimal.
        DateTimeParameters:
          allOf:
            - $ref: "#/components/schemas/DateTimeParameterList"
            - description: The parameters that have a data type of date-time.
      description: A list of Amazon QuickSight parameters and the list's override values.
    ResourcePermissionList:
      type: array
      items:
        $ref: "#/components/schemas/ResourcePermission"
      minItems: 1
      maxItems: 64
    CreateAnalysisRequest:
      type: object
      required:
        - Name
      title: CreateAnalysisRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/AnalysisName"
            - description: "A descriptive name for the analysis that you're creating. This name displays for the analysis in the Amazon QuickSight console. "
        Parameters:
          allOf:
            - $ref: "#/components/schemas/Parameters"
            - description: "The parameter names and override values that you want to use. An analysis can have any parameter type, and some parameters might accept multiple values. "
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: <p>A structure that describes the principals and the resource-level permissions on an analysis. You can use the <code>Permissions</code> structure to grant permissions by providing a list of Identity and Access Management (IAM) action information for each principal listed by Amazon Resource Name (ARN). </p> <p>To specify no permissions, omit <code>Permissions</code>.</p>
        SourceEntity:
          allOf:
            - $ref: "#/components/schemas/AnalysisSourceEntity"
            - description: <p>A source entity to use for the analysis that you're creating. This metadata structure contains details that describe a source template and one or more datasets.</p> <p>Either a <code>SourceEntity</code> or a <code>Definition</code> must be provided in order for the request to be valid.</p>
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN for the theme to apply to the analysis that you're creating. To see the theme in the Amazon QuickSight console, make sure that you have access to it.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: Contains a map of the key-value pairs for the resource tag or tags assigned to the analysis.
        Definition:
          allOf:
            - $ref: "#/components/schemas/AnalysisDefinition"
            - description: <p>The definition of an analysis.</p> <p>A definition is the data model of all features in a Dashboard, Template, or Analysis.</p> <p>Either a <code>SourceEntity</code> or a <code>Definition</code> must be provided in order for the request to be valid.</p>
    CreateColumnsOperation:
      type: object
      required:
        - Columns
      properties:
        Columns:
          allOf:
            - $ref: "#/components/schemas/CalculatedColumnList"
            - description: Calculated columns to create.
      description: A transform operation that creates calculated columns. Columns created in one such operation form a lexical closure.
    DashboardName:
      type: string
      minLength: 1
      maxLength: 2048
    DashboardSourceEntity:
      type: object
      properties:
        SourceTemplate:
          allOf:
            - $ref: "#/components/schemas/DashboardSourceTemplate"
            - description: Source template.
      description: Dashboard source entity.
    VersionDescription:
      type: string
      minLength: 1
      maxLength: 512
    DashboardPublishOptions:
      type: object
      properties:
        AdHocFilteringOption:
          allOf:
            - $ref: "#/components/schemas/AdHocFilteringOption"
            - description: Ad hoc (one-time) filtering option.
        ExportToCSVOption:
          allOf:
            - $ref: "#/components/schemas/ExportToCSVOption"
            - description: Export to .csv option.
        SheetControlsOption:
          allOf:
            - $ref: "#/components/schemas/SheetControlsOption"
            - description: Sheet controls option.
        VisualPublishOptions:
          allOf:
            - $ref: "#/components/schemas/DashboardVisualPublishOptions"
            - deprecated: true
              description: The visual publish options of a visual in a dashboard.VisualPublishOptions property will reach its end of standard support in a future release. To perform this action, use ExportWithHiddenFields.
        SheetLayoutElementMaximizationOption:
          allOf:
            - $ref: "#/components/schemas/SheetLayoutElementMaximizationOption"
            - description: The sheet layout maximization options of a dashbaord.
        VisualMenuOption:
          allOf:
            - $ref: "#/components/schemas/VisualMenuOption"
            - description: The menu options of a visual in a dashboard.
        VisualAxisSortOption:
          allOf:
            - $ref: "#/components/schemas/VisualAxisSortOption"
            - description: The axis sort options of a dashboard.
        ExportWithHiddenFieldsOption:
          allOf:
            - $ref: "#/components/schemas/ExportWithHiddenFieldsOption"
            - description: Determines if hidden fields are exported with a dashboard.
        DataPointDrillUpDownOption:
          allOf:
            - $ref: "#/components/schemas/DataPointDrillUpDownOption"
            - description: The drill-down options of data points in a dashboard.
        DataPointMenuLabelOption:
          allOf:
            - $ref: "#/components/schemas/DataPointMenuLabelOption"
            - description: The data point menu label options of a dashboard.
        DataPointTooltipOption:
          allOf:
            - $ref: "#/components/schemas/DataPointTooltipOption"
            - description: The data point tool tip options of a dashboard.
      description: Dashboard publish options.
    DashboardVersionDefinition:
      type: object
      required:
        - DataSetIdentifierDeclarations
      properties:
        DataSetIdentifierDeclarations:
          allOf:
            - $ref: "#/components/schemas/DataSetIdentifierDeclarationList"
            - description: An array of dataset identifier declarations. With this mapping,you can use dataset identifiers instead of dataset Amazon Resource Names (ARNs) throughout the dashboard's sub-structures.
        Sheets:
          allOf:
            - $ref: "#/components/schemas/SheetDefinitionList"
            - description: An array of sheet definitions for a dashboard.
        CalculatedFields:
          allOf:
            - $ref: "#/components/schemas/CalculatedFields"
            - description: An array of calculated field definitions for the dashboard.
        ParameterDeclarations:
          allOf:
            - $ref: "#/components/schemas/ParameterDeclarationList"
            - description: <p>The parameter declarations for a dashboard. Parameters are named variables that can transfer a value for use by an action or an object.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        FilterGroups:
          allOf:
            - $ref: "#/components/schemas/FilterGroupList"
            - description: <p>The filter definitions for a dashboard.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/adding-a-filter.html">Filtering Data in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        ColumnConfigurations:
          allOf:
            - $ref: "#/components/schemas/ColumnConfigurationList"
            - description: "An array of dashboard-level column configurations. Column configurations are used to set the default formatting for a column that is used throughout a dashboard. "
        AnalysisDefaults:
          $ref: "#/components/schemas/AnalysisDefaults"
      description: The contents of a dashboard.
    CreateDashboardRequest:
      type: object
      required:
        - Name
      title: CreateDashboardRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/DashboardName"
            - description: The display name of the dashboard.
        Parameters:
          allOf:
            - $ref: "#/components/schemas/Parameters"
            - description: "The parameters for the creation of the dashboard, which you want to use to override the default settings. A dashboard can have any type of parameters, and some parameters might accept multiple values. "
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: <p>A structure that contains the permissions of the dashboard. You can use this structure for granting permissions by providing a list of IAM action information for each principal ARN. </p> <p>To specify no permissions, omit the permissions list.</p>
        SourceEntity:
          allOf:
            - $ref: "#/components/schemas/DashboardSourceEntity"
            - description: <p>The entity that you are using as a source when you create the dashboard. In <code>SourceEntity</code>, you specify the type of object you're using as source. You can only create a dashboard from a template, so you use a <code>SourceTemplate</code> entity. If you need to create a dashboard from an analysis, first convert the analysis to a template by using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CreateTemplate.html">CreateTemplate</a> </code> API operation. For <code>SourceTemplate</code>, specify the Amazon Resource Name (ARN) of the source template. The <code>SourceTemplate</code>ARN can contain any Amazon Web Services account and any Amazon QuickSight-supported Amazon Web Services Region. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p> <p>Either a <code>SourceEntity</code> or a <code>Definition</code> must be provided in order for the request to be valid.</p>
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dashboard.
        VersionDescription:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: A description for the first version of the dashboard being created.
        DashboardPublishOptions:
          allOf:
            - $ref: "#/components/schemas/DashboardPublishOptions"
            - description: <p>Options for publishing the dashboard when you create it:</p> <ul> <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, Amazon QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .CSV format isn't enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. This option is <code>COLLAPSED</code> by default. </p> </li> </ul>
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that is used in the source entity. The theme ARN must exist in the same Amazon Web Services account where you create the dashboard.
        Definition:
          allOf:
            - $ref: "#/components/schemas/DashboardVersionDefinition"
            - description: <p>The definition of a dashboard.</p> <p>A definition is the data model of all features in a Dashboard, Template, or Analysis.</p> <p>Either a <code>SourceEntity</code> or a <code>Definition</code> must be provided in order for the request to be valid.</p>
    ResourceId:
      type: string
    ResourceName:
      type: string
      minLength: 1
      maxLength: 128
    PhysicalTableMap:
      type: object
      minProperties: 0
      maxProperties: 32
      additionalProperties:
        $ref: "#/components/schemas/PhysicalTable"
    LogicalTableMap:
      type: object
      minProperties: 1
      maxProperties: 64
      additionalProperties:
        $ref: "#/components/schemas/LogicalTable"
    DataSetImportMode:
      type: string
      enum:
        - SPICE
        - DIRECT_QUERY
    FieldFolderMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/FieldFolder"
    RowLevelPermissionDataSet:
      type: object
      required:
        - Arn
        - PermissionPolicy
      properties:
        Namespace:
          allOf:
            - $ref: "#/components/schemas/Namespace"
            - description: The namespace associated with the dataset that contains permissions for RLS.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.
        PermissionPolicy:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionPolicy"
            - description: The type of permissions to use when interpreting the permissions for RLS. <code>DENY_ACCESS</code> is included for backward compatibility only.
        FormatVersion:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionFormatVersion"
            - description: <p>The user or group rules associated with the dataset that contains permissions for RLS.</p> <p>By default, <code>FormatVersion</code> is <code>VERSION_1</code>. When <code>FormatVersion</code> is <code>VERSION_1</code>, <code>UserName</code> and <code>GroupName</code> are required. When <code>FormatVersion</code> is <code>VERSION_2</code>, <code>UserARN</code> and <code>GroupARN</code> are required, and <code>Namespace</code> must not exist.</p>
        Status:
          allOf:
            - $ref: "#/components/schemas/Status"
            - description: The status of the row-level security permission dataset. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.
      description: <p>Information about a dataset that contains permissions for row-level security (RLS). The permissions dataset maps fields to users or groups. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is not supported for new RLS datasets.</p>
    RowLevelPermissionTagConfiguration:
      type: object
      required:
        - TagRules
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/Status"
            - description: The status of row-level security tags. If enabled, the status is <code>ENABLED</code>. If disabled, the status is <code>DISABLED</code>.
        TagRules:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionTagRuleList"
            - description: A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.
        TagRuleConfigurations:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionTagRuleConfigurationList"
            - description: A list of tag configuration rules to apply to a dataset. All tag configurations have the OR condition. Tags within each tile will be joined (AND). At least one rule in this structure must have all tag values assigned to it to apply Row-level security (RLS) to the dataset.
      description: "The configuration of tags on a dataset to set row-level security. "
    DataSetUsageConfiguration:
      type: object
      properties:
        DisableUseAsDirectQuerySource:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: An option that controls whether a child dataset of a direct query can use this dataset as a source.
        DisableUseAsImportedSource:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: An option that controls whether a child dataset that's stored in QuickSight can use this dataset as a source.
      description: The usage configuration to apply to child datasets that reference this dataset as a source.
    CreateDataSetRequest:
      type: object
      required:
        - DataSetId
        - Name
        - PhysicalTableMap
        - ImportMode
      title: CreateDataSetRequest
      properties:
        DataSetId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: An ID for the dataset that you want to create. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        Name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The display name for the dataset.
        PhysicalTableMap:
          allOf:
            - $ref: "#/components/schemas/PhysicalTableMap"
            - description: Declares the physical tables that are available in the underlying data sources.
        LogicalTableMap:
          allOf:
            - $ref: "#/components/schemas/LogicalTableMap"
            - description: Configures the combination and transformation of the data from the physical tables.
        ImportMode:
          allOf:
            - $ref: "#/components/schemas/DataSetImportMode"
            - description: Indicates whether you want to import the data into SPICE.
        ColumnGroups:
          allOf:
            - $ref: "#/components/schemas/ColumnGroupList"
            - description: Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.
        FieldFolders:
          allOf:
            - $ref: "#/components/schemas/FieldFolderMap"
            - description: The folder that contains fields and nested subfolders for your dataset.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: A list of resource permissions on the dataset.
        RowLevelPermissionDataSet:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionDataSet"
            - description: The row-level security configuration for the data that you want to create.
        RowLevelPermissionTagConfiguration:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionTagConfiguration"
            - description: The configuration of tags on a dataset to set row-level security. Row-level security tags are currently supported for anonymous embedding only.
        ColumnLevelPermissionRules:
          allOf:
            - $ref: "#/components/schemas/ColumnLevelPermissionRuleList"
            - description: A set of one or more definitions of a <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html">ColumnLevelPermissionRule</a> </code>.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.
        DataSetUsageConfiguration:
          $ref: "#/components/schemas/DataSetUsageConfiguration"
    DataSourceType:
      type: string
      enum:
        - ADOBE_ANALYTICS
        - AMAZON_ELASTICSEARCH
        - ATHENA
        - AURORA
        - AURORA_POSTGRESQL
        - AWS_IOT_ANALYTICS
        - GITHUB
        - JIRA
        - MARIADB
        - MYSQL
        - ORACLE
        - POSTGRESQL
        - PRESTO
        - REDSHIFT
        - S3
        - SALESFORCE
        - SERVICENOW
        - SNOWFLAKE
        - SPARK
        - SQLSERVER
        - TERADATA
        - TWITTER
        - TIMESTREAM
        - AMAZON_OPENSEARCH
        - EXASOL
        - DATABRICKS
    DataSourceParameters:
      type: object
      properties:
        AmazonElasticsearchParameters:
          allOf:
            - $ref: "#/components/schemas/AmazonElasticsearchParameters"
            - description: The parameters for OpenSearch.
        AthenaParameters:
          allOf:
            - $ref: "#/components/schemas/AthenaParameters"
            - description: The parameters for Amazon Athena.
        AuroraParameters:
          allOf:
            - $ref: "#/components/schemas/AuroraParameters"
            - description: The parameters for Amazon Aurora MySQL.
        AuroraPostgreSqlParameters:
          allOf:
            - $ref: "#/components/schemas/AuroraPostgreSqlParameters"
            - description: The parameters for Amazon Aurora.
        AwsIotAnalyticsParameters:
          allOf:
            - $ref: "#/components/schemas/AwsIotAnalyticsParameters"
            - description: The parameters for IoT Analytics.
        JiraParameters:
          allOf:
            - $ref: "#/components/schemas/JiraParameters"
            - description: The parameters for Jira.
        MariaDbParameters:
          allOf:
            - $ref: "#/components/schemas/MariaDbParameters"
            - description: The parameters for MariaDB.
        MySqlParameters:
          allOf:
            - $ref: "#/components/schemas/MySqlParameters"
            - description: The parameters for MySQL.
        OracleParameters:
          allOf:
            - $ref: "#/components/schemas/OracleParameters"
            - description: The parameters for Oracle.
        PostgreSqlParameters:
          allOf:
            - $ref: "#/components/schemas/PostgreSqlParameters"
            - description: The parameters for PostgreSQL.
        PrestoParameters:
          allOf:
            - $ref: "#/components/schemas/PrestoParameters"
            - description: The parameters for Presto.
        RdsParameters:
          allOf:
            - $ref: "#/components/schemas/RdsParameters"
            - description: The parameters for Amazon RDS.
        RedshiftParameters:
          allOf:
            - $ref: "#/components/schemas/RedshiftParameters"
            - description: The parameters for Amazon Redshift.
        S3Parameters:
          allOf:
            - $ref: "#/components/schemas/S3Parameters"
            - description: The parameters for S3.
        ServiceNowParameters:
          allOf:
            - $ref: "#/components/schemas/ServiceNowParameters"
            - description: The parameters for ServiceNow.
        SnowflakeParameters:
          allOf:
            - $ref: "#/components/schemas/SnowflakeParameters"
            - description: The parameters for Snowflake.
        SparkParameters:
          allOf:
            - $ref: "#/components/schemas/SparkParameters"
            - description: The parameters for Spark.
        SqlServerParameters:
          allOf:
            - $ref: "#/components/schemas/SqlServerParameters"
            - description: The parameters for SQL Server.
        TeradataParameters:
          allOf:
            - $ref: "#/components/schemas/TeradataParameters"
            - description: The parameters for Teradata.
        TwitterParameters:
          allOf:
            - $ref: "#/components/schemas/TwitterParameters"
            - description: The parameters for Twitter.
        AmazonOpenSearchParameters:
          allOf:
            - $ref: "#/components/schemas/AmazonOpenSearchParameters"
            - description: The parameters for OpenSearch.
        ExasolParameters:
          allOf:
            - $ref: "#/components/schemas/ExasolParameters"
            - description: The parameters for Exasol.
        DatabricksParameters:
          allOf:
            - $ref: "#/components/schemas/DatabricksParameters"
            - description: The required parameters that are needed to connect to a Databricks data source.
      description: The parameters that Amazon QuickSight uses to connect to your underlying data source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    DataSourceCredentials:
      type: object
      properties:
        CredentialPair:
          allOf:
            - $ref: "#/components/schemas/CredentialPair"
            - description: Credential pair. For more information, see <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CredentialPair.html">CredentialPair</a> </code>.
        CopySourceArn:
          allOf:
            - $ref: "#/components/schemas/CopySourceArn"
            - description: The Amazon Resource Name (ARN) of a data source that has the credential pair that you want to use. When <code>CopySourceArn</code> is not null, the credential pair from the data source in the ARN is used as the credentials for the <code>DataSourceCredentials</code> structure.
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.
      description: Data source credentials. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    VpcConnectionProperties:
      type: object
      required:
        - VpcConnectionArn
      properties:
        VpcConnectionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the VPC connection.
      description: VPC connection properties.
    SslProperties:
      type: object
      properties:
        DisableSsl:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: A Boolean option to control whether SSL should be disabled.
      description: Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying data source.
    CreateDataSourceRequest:
      type: object
      required:
        - DataSourceId
        - Name
        - Type
      title: CreateDataSourceRequest
      properties:
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: "An ID for the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account. "
        Name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: A display name for the data source.
        Type:
          allOf:
            - $ref: "#/components/schemas/DataSourceType"
            - description: <p>The type of the data source. To return a list of all data sources, use <code>ListDataSources</code>.</p> <p>Use <code>AMAZON_ELASTICSEARCH</code> for Amazon OpenSearch Service.</p>
        DataSourceParameters:
          allOf:
            - $ref: "#/components/schemas/DataSourceParameters"
            - description: The parameters that Amazon QuickSight uses to connect to your underlying source.
        Credentials:
          allOf:
            - $ref: "#/components/schemas/DataSourceCredentials"
            - description: The credentials Amazon QuickSight that uses to connect to your underlying source. Currently, only credentials based on user name and password are supported.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: A list of resource permissions on the data source.
        VpcConnectionProperties:
          allOf:
            - $ref: "#/components/schemas/VpcConnectionProperties"
            - description: Use this parameter only when you want Amazon QuickSight to use a VPC connection when connecting to your underlying source.
        SslProperties:
          allOf:
            - $ref: "#/components/schemas/SslProperties"
            - description: Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying source.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: Contains a map of the key-value pairs for the resource tag or tags assigned to the data source.
    MemberType:
      type: string
      enum:
        - DASHBOARD
        - ANALYSIS
        - DATASET
    CreateFolderMembershipRequest:
      type: object
      title: CreateFolderMembershipRequest
      properties: {}
    FolderMember:
      type: object
      properties:
        MemberId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: The ID of an asset in the folder.
        MemberType:
          allOf:
            - $ref: "#/components/schemas/MemberType"
            - description: The type of asset that it is.
      description: An asset in a Amazon QuickSight folder, such as a dashboard, analysis, or dataset.
    FolderName:
      type: string
      minLength: 1
      maxLength: 200
    FolderType:
      type: string
      enum:
        - SHARED
    CreateFolderRequest:
      type: object
      title: CreateFolderRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/FolderName"
            - description: The name of the folder.
        FolderType:
          allOf:
            - $ref: "#/components/schemas/FolderType"
            - description: The type of folder. By default, <code>folderType</code> is <code>SHARED</code>.
        ParentFolderArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: <p>The Amazon Resource Name (ARN) for the parent folder.</p> <p> <code>ParentFolderArn</code> can be null. An empty <code>parentFolderArn</code> creates a root-level folder.</p>
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: <p>A structure that describes the principals and the resource-level permissions of a folder.</p> <p>To specify no permissions, omit <code>Permissions</code>.</p>
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: Tags for the folder.
    GroupMemberName:
      type: string
      pattern: "[\\u0020-\\u00FF]+"
      minLength: 1
      maxLength: 256
    GroupName:
      type: string
      pattern: "[\\u0020-\\u00FF]+"
      minLength: 1
    CreateGroupMembershipRequest:
      type: object
      title: CreateGroupMembershipRequest
      properties: {}
    GroupMember:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the group member (user).
        MemberName:
          allOf:
            - $ref: "#/components/schemas/GroupMemberName"
            - description: The name of the group member (user).
      description: A member of an Amazon QuickSight group. Currently, group members must be users. Groups can't be members of another group. .
    GroupDescription:
      type: string
      minLength: 1
      maxLength: 512
    CreateGroupRequest:
      type: object
      required:
        - GroupName
      title: CreateGroupRequest
      properties:
        GroupName:
          allOf:
            - $ref: "#/components/schemas/GroupName"
            - description: A name for the group that you want to create.
        Description:
          allOf:
            - $ref: "#/components/schemas/GroupDescription"
            - description: A description for the group that you want to create.
      description: "The request object for this operation. "
    Group:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the group.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/GroupName"
            - description: The name of the group.
        Description:
          allOf:
            - $ref: "#/components/schemas/GroupDescription"
            - description: The group description.
        PrincipalId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The principal ID of the group.
      description: "A <i>group</i> in Amazon QuickSight consists of a set of users. You can use groups to make it easier to manage access and security. "
    IdentityMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/IdentityNameList"
    CreateIAMPolicyAssignmentRequest:
      type: object
      required:
        - AssignmentName
        - AssignmentStatus
      title: CreateIAMPolicyAssignmentRequest
      properties:
        AssignmentName:
          allOf:
            - $ref: "#/components/schemas/IAMPolicyAssignmentName"
            - description: The name of the assignment, also called a rule. It must be unique within an Amazon Web Services account.
        AssignmentStatus:
          allOf:
            - $ref: "#/components/schemas/AssignmentStatus"
            - description: <p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>
        PolicyArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN for the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
        Identities:
          allOf:
            - $ref: "#/components/schemas/IdentityMap"
            - description: The Amazon QuickSight users, groups, or both that you want to assign the policy to.
    CreateIngestionRequest:
      type: object
      title: CreateIngestionRequest
      properties:
        IngestionType:
          allOf:
            - $ref: "#/components/schemas/IngestionType"
            - description: The type of ingestion that you want to create.
    IngestionStatus:
      type: string
      enum:
        - INITIALIZED
        - QUEUED
        - RUNNING
        - FAILED
        - COMPLETED
        - CANCELLED
    IdentityStore:
      type: string
      enum:
        - QUICKSIGHT
    CreateNamespaceRequest:
      type: object
      required:
        - Namespace
        - IdentityStore
      title: CreateNamespaceRequest
      properties:
        Namespace:
          allOf:
            - $ref: "#/components/schemas/Namespace"
            - description: The name that you want to use to describe the new namespace.
        IdentityStore:
          allOf:
            - $ref: "#/components/schemas/IdentityStore"
            - description: Specifies the type of your user identity directory. Currently, this supports users with an identity type of <code>QUICKSIGHT</code>.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags that you want to associate with the namespace that you're creating.
    NamespaceStatus:
      type: string
      enum:
        - CREATED
        - CREATING
        - DELETING
        - RETRYABLE_FAILURE
        - NON_RETRYABLE_FAILURE
    RefreshSchedule:
      type: object
      required:
        - ScheduleId
        - ScheduleFrequency
        - RefreshType
      properties:
        ScheduleId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: An identifier for the refresh schedule.
        ScheduleFrequency:
          allOf:
            - $ref: "#/components/schemas/RefreshFrequency"
            - description: The frequency for the refresh schedule.
        StartAfterDateTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: Time after which the refresh schedule can be started, expressed in <code>YYYY-MM-DDTHH:MM:SS</code> format.
        RefreshType:
          allOf:
            - $ref: "#/components/schemas/IngestionType"
            - description: '<p>The type of refresh that a datset undergoes. Valid values are as follows:</p> <ul> <li> <p> <code>FULL_REFRESH</code>: A complete refresh of a dataset.</p> </li> <li> <p> <code>INCREMENTAL_REFRESH</code>: A partial refresh of some rows of a dataset, based on the time window specified.</p> </li> </ul> <p>For more information on full and incremental refreshes, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/refreshing-imported-data.html">Refreshing SPICE data</a> in the <i>Amazon QuickSight User Guide</i>.</p>'
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the refresh schedule.
      description: The refresh schedule of a dataset.
    CreateRefreshScheduleRequest:
      type: object
      required:
        - Schedule
      title: CreateRefreshScheduleRequest
      properties:
        Schedule:
          allOf:
            - $ref: "#/components/schemas/RefreshSchedule"
            - description: The refresh schedule.
    VersionNumber:
      type: integer
      minimum: 1
    CreateTemplateAliasRequest:
      type: object
      required:
        - TemplateVersionNumber
      title: CreateTemplateAliasRequest
      properties:
        TemplateVersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: The version number of the template.
    TemplateAlias:
      type: object
      properties:
        AliasName:
          allOf:
            - $ref: "#/components/schemas/AliasName"
            - description: The display name of the template alias.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the template alias.
        TemplateVersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: The version number of the template alias.
      description: The template alias.
    TemplateName:
      type: string
      minLength: 1
      maxLength: 2048
    TemplateSourceEntity:
      type: object
      properties:
        SourceAnalysis:
          allOf:
            - $ref: "#/components/schemas/TemplateSourceAnalysis"
            - description: The source analysis, if it is based on an analysis.
        SourceTemplate:
          allOf:
            - $ref: "#/components/schemas/TemplateSourceTemplate"
            - description: The source template, if it is based on an template.
      description: The source entity of the template.
    TemplateVersionDefinition:
      type: object
      required:
        - DataSetConfigurations
      properties:
        DataSetConfigurations:
          allOf:
            - $ref: "#/components/schemas/DataSetConfigurationList"
            - description: An array of dataset configurations. These configurations define the required columns for each dataset used within a template.
        Sheets:
          allOf:
            - $ref: "#/components/schemas/SheetDefinitionList"
            - description: An array of sheet definitions for a template.
        CalculatedFields:
          allOf:
            - $ref: "#/components/schemas/CalculatedFields"
            - description: An array of calculated field definitions for the template.
        ParameterDeclarations:
          allOf:
            - $ref: "#/components/schemas/ParameterDeclarationList"
            - description: <p>An array of parameter declarations for a template.</p> <p> <i>Parameters</i> are named variables that can transfer a value for use by an action or an object.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>. </p>
        FilterGroups:
          allOf:
            - $ref: "#/components/schemas/FilterGroupList"
            - description: <p>Filter definitions for a template.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/filtering-visual-data.html">Filtering Data</a> in the <i>Amazon QuickSight User Guide</i>. </p>
        ColumnConfigurations:
          allOf:
            - $ref: "#/components/schemas/ColumnConfigurationList"
            - description: " An array of template-level column configurations. Column configurations are used to set default formatting for a column that's used throughout a template. "
        AnalysisDefaults:
          $ref: "#/components/schemas/AnalysisDefaults"
      description: The detailed definition of a template.
    CreateTemplateRequest:
      type: object
      title: CreateTemplateRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/TemplateName"
            - description: A display name for the template.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: "A list of resource permissions to be set on the template. "
        SourceEntity:
          allOf:
            - $ref: "#/components/schemas/TemplateSourceEntity"
            - description: "<p>The entity that you are using as a source when you create the template. In <code>SourceEntity</code>, you specify the type of object you're using as source: <code>SourceTemplate</code> for a template or <code>SourceAnalysis</code> for an analysis. Both of these require an Amazon Resource Name (ARN). For <code>SourceTemplate</code>, specify the ARN of the source template. For <code>SourceAnalysis</code>, specify the ARN of the source analysis. The <code>SourceTemplate</code> ARN can contain any Amazon Web Services account and any Amazon QuickSight-supported Amazon Web Services Region. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> or <code>SourceAnalysis</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p> <p>Either a <code>SourceEntity</code> or a <code>Definition</code> must be provided in order for the request to be valid.</p>"
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
        VersionDescription:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: A description of the current template version being created. This API operation creates the first version of the template. Every time <code>UpdateTemplate</code> is called, a new version is created. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.
        Definition:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionDefinition"
            - description: <p>The definition of a template.</p> <p>A definition is the data model of all features in a Dashboard, Template, or Analysis.</p> <p>Either a <code>SourceEntity</code> or a <code>Definition</code> must be provided in order for the request to be valid.</p>
    CreateThemeAliasRequest:
      type: object
      required:
        - ThemeVersionNumber
      title: CreateThemeAliasRequest
      properties:
        ThemeVersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: The version number of the theme.
    ThemeAlias:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the theme alias.
        AliasName:
          allOf:
            - $ref: "#/components/schemas/AliasName"
            - description: The display name of the theme alias.
        ThemeVersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: The version number of the theme alias.
      description: An alias for a theme.
    ThemeName:
      type: string
      minLength: 1
      maxLength: 2048
    ThemeConfiguration:
      type: object
      properties:
        DataColorPalette:
          allOf:
            - $ref: "#/components/schemas/DataColorPalette"
            - description: Color properties that apply to chart data colors.
        UIColorPalette:
          allOf:
            - $ref: "#/components/schemas/UIColorPalette"
            - description: "Color properties that apply to the UI and to charts, excluding the colors that apply to data. "
        Sheet:
          allOf:
            - $ref: "#/components/schemas/SheetStyle"
            - description: Display options related to sheets.
        Typography:
          $ref: "#/components/schemas/Typography"
      description: The theme configuration. This configuration contains all of the display properties for a theme.
    CreateThemeRequest:
      type: object
      required:
        - Name
        - BaseThemeId
        - Configuration
      title: CreateThemeRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ThemeName"
            - description: A display name for the theme.
        BaseThemeId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: "The ID of the theme that a custom theme will inherit from. All themes inherit from one of the starting themes defined by Amazon QuickSight. For a list of the starting themes, use <code>ListThemes</code> or choose <b>Themes</b> from within an analysis. "
        VersionDescription:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: A description of the first version of the theme that you're creating. Every time <code>UpdateTheme</code> is called, a new version is created. Each version of the theme has a description of the version in the <code>VersionDescription</code> field.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/ThemeConfiguration"
            - description: The theme configuration, which contains the theme display properties.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: "A valid grouping of resource permissions to apply to the new theme. "
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: A map of the key-value pairs for the resource tag or tags that you want to add to the resource.
    Username:
      type: string
      minLength: 1
      maxLength: 64
    Password:
      type: string
      minLength: 1
      maxLength: 1024
    DataSourceParametersList:
      type: array
      items:
        $ref: "#/components/schemas/DataSourceParameters"
      minItems: 1
      maxItems: 50
    CrossDatasetTypes:
      type: string
      enum:
        - ALL_DATASETS
        - SINGLE_DATASET
    CurrencyCode:
      type: string
      pattern: "[A-Z]{3}"
    Prefix:
      type: string
      minLength: 1
      maxLength: 128
      format: password
    Suffix:
      type: string
      minLength: 1
      maxLength: 128
      format: password
    NumericSeparatorConfiguration:
      type: object
      properties:
        DecimalSeparator:
          allOf:
            - $ref: "#/components/schemas/NumericSeparatorSymbol"
            - description: Determines the decimal separator.
        ThousandsSeparator:
          allOf:
            - $ref: "#/components/schemas/ThousandSeparatorOptions"
            - description: The options that determine the thousands separator configuration.
      description: The options that determine the numeric separator configuration.
    DecimalPlacesConfiguration:
      type: object
      required:
        - DecimalPlaces
      properties:
        DecimalPlaces:
          allOf:
            - $ref: "#/components/schemas/DecimalPlaces"
            - description: The values of the decimal places.
      description: The option that determines the decimal places configuration.
    NumberScale:
      type: string
      enum:
        - NONE
        - AUTO
        - THOUSANDS
        - MILLIONS
        - BILLIONS
        - TRILLIONS
    NegativeValueConfiguration:
      type: object
      required:
        - DisplayMode
      properties:
        DisplayMode:
          allOf:
            - $ref: "#/components/schemas/NegativeValueDisplayMode"
            - description: Determines the display mode of the negative value configuration.
      description: The options that determine the negative value configuration.
    NullValueFormatConfiguration:
      type: object
      required:
        - NullString
      properties:
        NullString:
          allOf:
            - $ref: "#/components/schemas/NullString"
            - description: Determines the null string of null values.
      description: The options that determine the null value format configuration.
    CurrencyDisplayFormatConfiguration:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: "#/components/schemas/Prefix"
            - description: Determines the prefix value of the currency format.
        Suffix:
          allOf:
            - $ref: "#/components/schemas/Suffix"
            - description: Determines the suffix value of the currency format.
        SeparatorConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumericSeparatorConfiguration"
            - description: The options that determine the numeric separator configuration.
        Symbol:
          allOf:
            - $ref: "#/components/schemas/CurrencyCode"
            - description: Determines the symbol for the currency format.
        DecimalPlacesConfiguration:
          allOf:
            - $ref: "#/components/schemas/DecimalPlacesConfiguration"
            - description: The option that determines the decimal places configuration.
        NumberScale:
          allOf:
            - $ref: "#/components/schemas/NumberScale"
            - description: Determines the number scale value for the currency format.
        NegativeValueConfiguration:
          allOf:
            - $ref: "#/components/schemas/NegativeValueConfiguration"
            - description: The options that determine the negative value configuration.
        NullValueFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NullValueFormatConfiguration"
            - description: The options that determine the null value format configuration.
      description: The options that determine the currency display format configuration.
    FilterOperationSelectedFieldsConfiguration:
      type: object
      properties:
        SelectedFields:
          allOf:
            - $ref: "#/components/schemas/SelectedFieldList"
            - description: Chooses the fields that are filtered in <code>CustomActionFilterOperation</code>.
        SelectedFieldOptions:
          allOf:
            - $ref: "#/components/schemas/SelectedFieldOptions"
            - description: "<p>A structure that contains the options that choose which fields are filtered in the <code>CustomActionFilterOperation</code>.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>ALL_FIELDS</code>: Applies the filter operation to all fields.</p> </li> </ul>"
      description: <p>The configuration of selected fields in the<code>CustomActionFilterOperation</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    FilterOperationTargetVisualsConfiguration:
      type: object
      properties:
        SameSheetTargetVisualConfiguration:
          allOf:
            - $ref: "#/components/schemas/SameSheetTargetVisualConfiguration"
            - description: The configuration of the same-sheet target visuals that you want to be filtered.
      description: <p>The configuration of target visuals that you want to be filtered.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    CustomActionFilterOperation:
      type: object
      required:
        - SelectedFieldsConfiguration
        - TargetVisualsConfiguration
      properties:
        SelectedFieldsConfiguration:
          allOf:
            - $ref: "#/components/schemas/FilterOperationSelectedFieldsConfiguration"
            - description: The configuration that chooses the fields to be filtered.
        TargetVisualsConfiguration:
          allOf:
            - $ref: "#/components/schemas/FilterOperationTargetVisualsConfiguration"
            - description: The configuration that chooses the target visuals to be filtered.
      description: The filter operation that filters data included in a visual or in an entire sheet.
    LocalNavigationConfiguration:
      type: object
      required:
        - TargetSheetId
      properties:
        TargetSheetId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The sheet that is targeted for navigation in the same analysis.
      description: The navigation configuration for <code>CustomActionNavigationOperation</code>.
    CustomActionNavigationOperation:
      type: object
      properties:
        LocalNavigationConfiguration:
          allOf:
            - $ref: "#/components/schemas/LocalNavigationConfiguration"
            - description: The configuration that chooses the navigation target.
      description: <p>The navigation operation that navigates between different sheets in the same analysis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    SetParameterValueConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/SetParameterValueConfiguration"
      minItems: 1
      maxItems: 200
    CustomActionSetParametersOperation:
      type: object
      required:
        - ParameterValueConfigurations
      properties:
        ParameterValueConfigurations:
          allOf:
            - $ref: "#/components/schemas/SetParameterValueConfigurationList"
            - description: The parameter that determines the value configuration.
      description: The set parameter operation that sets parameters in custom action.
    URLOperationTemplate:
      type: string
      minLength: 1
      maxLength: 2048
    URLTargetConfiguration:
      type: string
      enum:
        - NEW_TAB
        - NEW_WINDOW
        - SAME_TAB
    CustomActionURLOperation:
      type: object
      required:
        - URLTemplate
        - URLTarget
      properties:
        URLTemplate:
          allOf:
            - $ref: "#/components/schemas/URLOperationTemplate"
            - description: THe URL link of the <code>CustomActionURLOperation</code>.
        URLTarget:
          allOf:
            - $ref: "#/components/schemas/URLTargetConfiguration"
            - description: "<p>The target of the <code>CustomActionURLOperation</code>.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>NEW_TAB</code>: Opens the target URL in a new browser tab.</p> </li> <li> <p> <code>NEW_WINDOW</code>: Opens the target URL in a new browser window.</p> </li> <li> <p> <code>SAME_TAB</code>: Opens the target URL in the same browser tab.</p> </li> </ul>"
      description: The URL operation that opens a link to another webpage.
    CustomContentType:
      type: string
      enum:
        - IMAGE
        - OTHER_EMBEDDED_CONTENT
    CustomContentImageScalingConfiguration:
      type: string
      enum:
        - FIT_TO_HEIGHT
        - FIT_TO_WIDTH
        - DO_NOT_SCALE
        - SCALE_TO_VISUAL
    CustomContentConfiguration:
      type: object
      properties:
        ContentUrl:
          allOf:
            - $ref: "#/components/schemas/URLOperationTemplate"
            - description: The input URL that links to the custom content that you want in the custom visual.
        ContentType:
          allOf:
            - $ref: "#/components/schemas/CustomContentType"
            - description: The content type of the custom content visual. You can use this to have the visual render as an image.
        ImageScaling:
          allOf:
            - $ref: "#/components/schemas/CustomContentImageScalingConfiguration"
            - description: The sizing options for the size of the custom content visual. This structure is required when the <code>ContentType</code> of the visual is <code>'IMAGE'</code>.
      description: The configuration of a <code>CustomContentVisual</code>.
    CustomContentVisual:
      type: object
      required:
        - VisualId
        - DataSetIdentifier
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/CustomContentConfiguration"
            - description: The configuration of a <code>CustomContentVisual</code>.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        DataSetIdentifier:
          allOf:
            - $ref: "#/components/schemas/DataSetIdentifier"
            - description: The dataset that is used to create the custom content visual. You can't create a visual without a dataset.
      description: <p>A visual that contains custom content.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/custom-visual-content.html">Using custom visual content</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    FilterNullOption:
      type: string
      enum:
        - ALL_VALUES
        - NULLS_ONLY
        - NON_NULLS_ONLY
    CustomLabel:
      type: string
      minLength: 1
      maxLength: 2048
    NarrativeString:
      type: string
      maxLength: 150000
    CustomNarrativeOptions:
      type: object
      required:
        - Narrative
      properties:
        Narrative:
          allOf:
            - $ref: "#/components/schemas/NarrativeString"
            - description: The string input of custom narrative.
      description: The custom narrative options.
    StringDefaultValueList:
      type: array
      items:
        $ref: "#/components/schemas/SensitiveStringObject"
      maxItems: 50000
    IntegerDefaultValueList:
      type: array
      items:
        $ref: "#/components/schemas/SensitiveLongObject"
      maxItems: 50000
    DecimalDefaultValueList:
      type: array
      items:
        $ref: "#/components/schemas/SensitiveDoubleObject"
      maxItems: 50000
    DateTimeDefaultValueList:
      type: array
      items:
        $ref: "#/components/schemas/SensitiveTimestamp"
      maxItems: 50000
    CustomParameterValues:
      type: object
      properties:
        StringValues:
          allOf:
            - $ref: "#/components/schemas/StringDefaultValueList"
            - description: A list of string-type parameter values.
        IntegerValues:
          allOf:
            - $ref: "#/components/schemas/IntegerDefaultValueList"
            - description: A list of integer-type parameter values.
        DecimalValues:
          allOf:
            - $ref: "#/components/schemas/DecimalDefaultValueList"
            - description: A list of decimal-type parameter values.
        DateTimeValues:
          allOf:
            - $ref: "#/components/schemas/DateTimeDefaultValueList"
            - description: A list of datetime-type parameter values.
      description: <p>The customized parameter values.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    CustomSqlName:
      type: string
      minLength: 1
      maxLength: 64
    SqlQuery:
      type: string
      minLength: 1
      maxLength: 65536
    InputColumnList:
      type: array
      items:
        $ref: "#/components/schemas/InputColumn"
      minItems: 1
      maxItems: 2048
    CustomSql:
      type: object
      required:
        - DataSourceArn
        - Name
        - SqlQuery
      properties:
        DataSourceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the data source.
        Name:
          allOf:
            - $ref: "#/components/schemas/CustomSqlName"
            - description: A display name for the SQL query result.
        SqlQuery:
          allOf:
            - $ref: "#/components/schemas/SqlQuery"
            - description: The SQL query.
        Columns:
          allOf:
            - $ref: "#/components/schemas/InputColumnList"
            - description: The column schema from the SQL query result set.
      description: A physical table type built from the results of the custom SQL query.
    CustomValuesConfiguration:
      type: object
      required:
        - CustomValues
      properties:
        IncludeNullValue:
          allOf:
            - $ref: "#/components/schemas/BooleanObject"
            - description: Includes the null value in custom action parameter values.
        CustomValues:
          $ref: "#/components/schemas/CustomParameterValues"
      description: The configuration of custom values for the destination parameter in <code>DestinationParameterValueConfiguration</code>.
    DashboardVersion:
      type: object
      properties:
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that this dashboard version was created.
        Errors:
          allOf:
            - $ref: "#/components/schemas/DashboardErrorList"
            - description: Errors associated with this dashboard version.
        VersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: Version number for this version of the dashboard.
        Status:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The HTTP status of the request.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        SourceEntityArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: Source entity ARN.
        DataSetArns:
          allOf:
            - $ref: "#/components/schemas/DataSetArnsList"
            - description: The Amazon Resource Numbers (ARNs) for the datasets that are associated with this version of the dashboard.
        Description:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: Description.
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the theme associated with a version of the dashboard.
        Sheets:
          allOf:
            - $ref: "#/components/schemas/SheetList"
            - description: A list of the associated sheets with the unique identifier and name of each sheet.
      description: Dashboard version.
    Dashboard:
      type: object
      properties:
        DashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: Dashboard ID.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        Name:
          allOf:
            - $ref: "#/components/schemas/DashboardName"
            - description: A display name for the dashboard.
        Version:
          allOf:
            - $ref: "#/components/schemas/DashboardVersion"
            - description: Version.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that this dashboard was created.
        LastPublishedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The last time that this dashboard was published.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The last time that this dashboard was updated.
      description: Dashboard.
    DashboardErrorType:
      type: string
      enum:
        - ACCESS_DENIED
        - SOURCE_NOT_FOUND
        - DATA_SET_NOT_FOUND
        - INTERNAL_FAILURE
        - PARAMETER_VALUE_INCOMPATIBLE
        - PARAMETER_TYPE_INVALID
        - PARAMETER_NOT_FOUND
        - COLUMN_TYPE_MISMATCH
        - COLUMN_GEOGRAPHIC_ROLE_MISMATCH
        - COLUMN_REPLACEMENT_MISSING
    DashboardError:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/DashboardErrorType"
            - description: Type.
        Message:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Message.
        ViolatedEntities:
          allOf:
            - $ref: "#/components/schemas/EntityList"
            - description: Lists the violated entities that caused the dashboard error.
      description: Dashboard error.
    DashboardErrorList:
      type: array
      items:
        $ref: "#/components/schemas/DashboardError"
      minItems: 1
    DashboardFilterAttribute:
      type: string
      enum:
        - QUICKSIGHT_USER
        - QUICKSIGHT_VIEWER_OR_OWNER
        - DIRECT_QUICKSIGHT_VIEWER_OR_OWNER
        - QUICKSIGHT_OWNER
        - DIRECT_QUICKSIGHT_OWNER
        - DIRECT_QUICKSIGHT_SOLE_OWNER
        - DASHBOARD_NAME
    DashboardSearchFilterList:
      type: array
      items:
        $ref: "#/components/schemas/DashboardSearchFilter"
      minItems: 1
      maxItems: 1
    DashboardSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        DashboardId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: Dashboard ID.
        Name:
          allOf:
            - $ref: "#/components/schemas/DashboardName"
            - description: A display name for the dashboard.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that this dashboard was created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The last time that this dashboard was updated.
        PublishedVersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: Published version number.
        LastPublishedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The last time that this dashboard was published.
      description: Dashboard summary.
    DashboardSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/DashboardSummary"
      maxItems: 100
    DashboardUIState:
      type: string
      enum:
        - EXPANDED
        - COLLAPSED
    DashboardVersionSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that this dashboard version was created.
        VersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: Version number.
        Status:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The HTTP status of the request.
        SourceEntityArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: Source entity ARN.
        Description:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: Description.
      description: Dashboard version summary.
    DashboardVersionSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/DashboardVersionSummary"
      maxItems: 100
    ExportHiddenFieldsOption:
      type: object
      properties:
        AvailabilityStatus:
          allOf:
            - $ref: "#/components/schemas/DashboardBehavior"
            - description: The status of the export hidden fields options of a dashbaord.
      description: Determines if hidden fields are included in an exported dashboard.
    DataBarsOptions:
      type: object
      required:
        - FieldId
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID for the data bars options.
        PositiveColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color of the positive data bar.
        NegativeColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color of the negative data bar.
      description: The options for data bars.
    SensitiveString:
      type: string
      format: password
    LineChartSeriesSettings:
      type: object
      properties:
        LineStyleSettings:
          allOf:
            - $ref: "#/components/schemas/LineChartLineStyleSettings"
            - description: Line styles options for a line series in <code>LineChartVisual</code>.
        MarkerStyleSettings:
          allOf:
            - $ref: "#/components/schemas/LineChartMarkerStyleSettings"
            - description: Marker styles options for a line series in <code>LineChartVisual</code>.
      description: The options that determine the presentation of a line series in the visual
    DataFieldSeriesItem:
      type: object
      required:
        - FieldId
        - AxisBinding
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID of the field that you are setting the axis binding to.
        FieldValue:
          allOf:
            - $ref: "#/components/schemas/SensitiveString"
            - description: The field value of the field that you are setting the axis binding to.
        AxisBinding:
          allOf:
            - $ref: "#/components/schemas/AxisBinding"
            - description: The axis that you are binding the field to.
        Settings:
          allOf:
            - $ref: "#/components/schemas/LineChartSeriesSettings"
            - description: The options that determine the presentation of line series associated to the field.
      description: The data field series item configuration of a line chart.
    DataLabelContent:
      type: string
      enum:
        - VALUE
        - PERCENT
        - VALUE_AND_PERCENT
    DataLabelTypes:
      type: array
      items:
        $ref: "#/components/schemas/DataLabelType"
      maxItems: 100
    DataLabelPosition:
      type: string
      enum:
        - INSIDE
        - OUTSIDE
        - LEFT
        - TOP
        - BOTTOM
        - RIGHT
    DataLabelOverlap:
      type: string
      enum:
        - DISABLE_OVERLAP
        - ENABLE_OVERLAP
    FieldLabelType:
      type: object
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: Indicates the field that is targeted by the field label.
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the field label.
      description: The field label type.
    DataPathLabelType:
      type: object
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID of the field that the data label needs to be applied to.
        FieldValue:
          allOf:
            - $ref: "#/components/schemas/FieldValue"
            - description: The actual value of the field that is labeled.
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the data label.
      description: The option that specifies individual data values for labels.
    RangeEndsLabelType:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the range ends label.
      description: The range ends label type of a data path label.
    MinimumLabelType:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the minimum label.
      description: The minimum label of a data path label.
    MaximumLabelType:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the maximum label.
      description: The maximum label of a data path label.
    DataLabelType:
      type: object
      properties:
        FieldLabelType:
          allOf:
            - $ref: "#/components/schemas/FieldLabelType"
            - description: Determines the label configuration for the entire field.
        DataPathLabelType:
          allOf:
            - $ref: "#/components/schemas/DataPathLabelType"
            - description: The option that specifies individual data values for labels.
        RangeEndsLabelType:
          allOf:
            - $ref: "#/components/schemas/RangeEndsLabelType"
            - description: Determines the label configuration for range end value in a visual.
        MinimumLabelType:
          allOf:
            - $ref: "#/components/schemas/MinimumLabelType"
            - description: Determines the label configuration for the minimum value in a visual.
        MaximumLabelType:
          allOf:
            - $ref: "#/components/schemas/MaximumLabelType"
            - description: Determines the label configuration for the maximum value in a visual.
      description: <p>The option that determines the data label type.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    DataPathValue:
      type: object
      required:
        - FieldId
        - FieldValue
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID of the field that needs to be sorted.
        FieldValue:
          allOf:
            - $ref: "#/components/schemas/FieldValue"
            - description: The actual value of the field that needs to be sorted.
      description: The data path that needs to be sorted.
    TimeGranularity:
      type: string
      enum:
        - YEAR
        - QUARTER
        - MONTH
        - WEEK
        - DAY
        - HOUR
        - MINUTE
        - SECOND
        - MILLISECOND
    DataPathColor:
      type: object
      required:
        - Element
        - Color
      properties:
        Element:
          allOf:
            - $ref: "#/components/schemas/DataPathValue"
            - description: The element that the color needs to be applied to.
        Color:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color that needs to be applied to the element.
        TimeGranularity:
          allOf:
            - $ref: "#/components/schemas/TimeGranularity"
            - description: The time granularity of the field that the color needs to be applied to.
      description: The color map that determines the color options for a particular element.
    DataPathColorList:
      type: array
      items:
        $ref: "#/components/schemas/DataPathColor"
      maxItems: 5000
    FieldValue:
      type: string
      maxLength: 2048
      format: password
    DataPathValueList:
      type: array
      items:
        $ref: "#/components/schemas/DataPathValue"
      maxItems: 20
    DataPathSort:
      type: object
      required:
        - Direction
        - SortPaths
      properties:
        Direction:
          allOf:
            - $ref: "#/components/schemas/SortDirection"
            - description: Determines the sort direction.
        SortPaths:
          allOf:
            - $ref: "#/components/schemas/DataPathValueList"
            - description: The list of data paths that need to be sorted.
      description: Allows data paths to be sorted by a specific data value.
    OutputColumnList:
      type: array
      items:
        $ref: "#/components/schemas/OutputColumn"
    Long:
      type: integer
    DataSet:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        DataSetId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the dataset.
        Name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: A display name for the dataset.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that this dataset was created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The last time that this dataset was updated.
        PhysicalTableMap:
          allOf:
            - $ref: "#/components/schemas/PhysicalTableMap"
            - description: Declares the physical tables that are available in the underlying data sources.
        LogicalTableMap:
          allOf:
            - $ref: "#/components/schemas/LogicalTableMap"
            - description: Configures the combination and transformation of the data from the physical tables.
        OutputColumns:
          allOf:
            - $ref: "#/components/schemas/OutputColumnList"
            - description: The list of columns after all transforms. These columns are available in templates, analyses, and dashboards.
        ImportMode:
          allOf:
            - $ref: "#/components/schemas/DataSetImportMode"
            - description: A value that indicates whether you want to import the data into SPICE.
        ConsumedSpiceCapacityInBytes:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't imported into SPICE.
        ColumnGroups:
          allOf:
            - $ref: "#/components/schemas/ColumnGroupList"
            - description: Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.
        FieldFolders:
          allOf:
            - $ref: "#/components/schemas/FieldFolderMap"
            - description: The folder that contains fields and nested subfolders for your dataset.
        RowLevelPermissionDataSet:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionDataSet"
            - description: The row-level security configuration for the dataset.
        RowLevelPermissionTagConfiguration:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionTagConfiguration"
            - description: The element you can use to define tags for row-level security.
        ColumnLevelPermissionRules:
          allOf:
            - $ref: "#/components/schemas/ColumnLevelPermissionRuleList"
            - description: A set of one or more definitions of a <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html">ColumnLevelPermissionRule</a> </code>.
        DataSetUsageConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSetUsageConfiguration"
            - description: The usage configuration to apply to child datasets that reference this dataset as a source.
      description: Dataset.
    DataSetSchema:
      type: object
      properties:
        ColumnSchemaList:
          allOf:
            - $ref: "#/components/schemas/ColumnSchemaList"
            - description: A structure containing the list of column schemas.
      description: Dataset schema.
    DataSetConfiguration:
      type: object
      properties:
        Placeholder:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Placeholder.
        DataSetSchema:
          allOf:
            - $ref: "#/components/schemas/DataSetSchema"
            - description: Dataset schema.
        ColumnGroupSchemaList:
          allOf:
            - $ref: "#/components/schemas/ColumnGroupSchemaList"
            - description: A structure containing the list of column group schemas.
      description: Dataset configuration.
    DataSetFilterAttribute:
      type: string
      enum:
        - QUICKSIGHT_VIEWER_OR_OWNER
        - QUICKSIGHT_OWNER
        - DIRECT_QUICKSIGHT_VIEWER_OR_OWNER
        - DIRECT_QUICKSIGHT_OWNER
        - DIRECT_QUICKSIGHT_SOLE_OWNER
        - DATASET_NAME
    DataSetIdentifierDeclaration:
      type: object
      required:
        - Identifier
        - DataSetArn
      properties:
        Identifier:
          allOf:
            - $ref: "#/components/schemas/DataSetIdentifier"
            - description: The identifier of the data set, typically the data set's name.
        DataSetArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the data set.
      description: A data set.
    DataSetReference:
      type: object
      required:
        - DataSetPlaceholder
        - DataSetArn
      properties:
        DataSetPlaceholder:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Dataset placeholder.
        DataSetArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: Dataset Amazon Resource Name (ARN).
      description: Dataset reference.
    DataSetRefreshProperties:
      type: object
      required:
        - RefreshConfiguration
      properties:
        RefreshConfiguration:
          allOf:
            - $ref: "#/components/schemas/RefreshConfiguration"
            - description: The refresh configuration for a dataset.
      description: The refresh properties of a dataset.
    DataSetSearchFilterList:
      type: array
      items:
        $ref: "#/components/schemas/DataSetSearchFilter"
      minItems: 1
      maxItems: 1
    DataSetSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the dataset.
        DataSetId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the dataset.
        Name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: A display name for the dataset.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that this dataset was created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The last time that this dataset was updated.
        ImportMode:
          allOf:
            - $ref: "#/components/schemas/DataSetImportMode"
            - description: A value that indicates whether you want to import the data into SPICE.
        RowLevelPermissionDataSet:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionDataSet"
            - description: The row-level security configuration for the dataset.
        RowLevelPermissionTagConfigurationApplied:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether or not the row level permission tags are applied.
        ColumnLevelPermissionRulesApplied:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: A value that indicates if the dataset has column level permission configured.
      description: Dataset summary.
    DataSetSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/DataSetSummary"
    DataSourceErrorInfo:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/DataSourceErrorInfoType"
            - description: Error type.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Error message.
      description: Error information for the data source creation or update.
    DataSource:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the data source.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The ID of the data source. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        Name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: A display name for the data source.
        Type:
          allOf:
            - $ref: "#/components/schemas/DataSourceType"
            - description: The type of the data source. This type indicates which database engine the data source connects to.
        Status:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The HTTP status of the request.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that this data source was created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The last time that this data source was updated.
        DataSourceParameters:
          allOf:
            - $ref: "#/components/schemas/DataSourceParameters"
            - description: The parameters that Amazon QuickSight uses to connect to your underlying source. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
        AlternateDataSourceParameters:
          allOf:
            - $ref: "#/components/schemas/DataSourceParametersList"
            - description: A set of alternate data source parameters that you want to share for the credentials stored with this data source. The credentials are applied in tandem with the data source parameters when you copy a data source by using a create or update request. The API operation compares the <code>DataSourceParameters</code> structure that's in the request with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the structures are an exact match, the request is allowed to use the credentials from this existing data source. If the <code>AlternateDataSourceParameters</code> list is null, the <code>Credentials</code> originally used with this <code>DataSourceParameters</code> are automatically allowed.
        VpcConnectionProperties:
          allOf:
            - $ref: "#/components/schemas/VpcConnectionProperties"
            - description: The VPC connection information. You need to use this parameter only when you want Amazon QuickSight to use a VPC connection when connecting to your underlying source.
        SslProperties:
          allOf:
            - $ref: "#/components/schemas/SslProperties"
            - description: Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying source.
        ErrorInfo:
          allOf:
            - $ref: "#/components/schemas/DataSourceErrorInfo"
            - description: Error information from the last update or the creation of the data source.
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.
      description: The structure of a data source.
    DataSourceErrorInfoType:
      type: string
      enum:
        - ACCESS_DENIED
        - COPY_SOURCE_NOT_FOUND
        - TIMEOUT
        - ENGINE_VERSION_NOT_SUPPORTED
        - UNKNOWN_HOST
        - GENERIC_SQL_FAILURE
        - CONFLICT
        - UNKNOWN
    DataSourceFilterAttribute:
      type: string
      enum:
        - DIRECT_QUICKSIGHT_VIEWER_OR_OWNER
        - DIRECT_QUICKSIGHT_OWNER
        - DIRECT_QUICKSIGHT_SOLE_OWNER
        - DATASOURCE_NAME
    DataSourceList:
      type: array
      items:
        $ref: "#/components/schemas/DataSource"
    DataSourceSearchFilterList:
      type: array
      items:
        $ref: "#/components/schemas/DataSourceSearchFilter"
      minItems: 1
      maxItems: 1
    DataSourceSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The arn of the datasource.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/ResourceId"
            - description: The unique ID of the data source.
        Name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the data source.
        Type:
          allOf:
            - $ref: "#/components/schemas/DataSourceType"
            - description: The type of the data source.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The date and time that the data source was created. This value is expressed in MM-DD-YYYY HH:MM:SS format.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The date and time the data source was last updated. This value is expressed in MM-DD-YYYY HH:MM:SS format.
      description: A <code>DataSourceSummary</code> object that returns a summary of a data source.
    DataSourceSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/DataSourceSummary"
    SqlEndpointPath:
      type: string
      minLength: 1
      maxLength: 4096
    DateTimeFormatConfiguration:
      type: object
      properties:
        DateTimeFormat:
          allOf:
            - $ref: "#/components/schemas/DateTimeFormat"
            - description: Determines the <code>DateTime</code> format.
        NullValueFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NullValueFormatConfiguration"
            - description: The options that determine the null value format configuration.
        NumericFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumericFormatConfiguration"
            - description: The formatting configuration for numeric <code>DateTime</code> fields.
      description: Formatting configuration for <code>DateTime</code> fields.
    DateDimensionField:
      type: object
      required:
        - FieldId
        - Column
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The custom field ID.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that is used in the <code>DateDimensionField</code>.
        DateGranularity:
          allOf:
            - $ref: "#/components/schemas/TimeGranularity"
            - description: <p>The date granularity of the <code>DateDimensionField</code>. Choose one of the following options:</p> <ul> <li> <p> <code>YEAR</code> </p> </li> <li> <p> <code>QUARTER</code> </p> </li> <li> <p> <code>MONTH</code> </p> </li> <li> <p> <code>WEEK</code> </p> </li> <li> <p> <code>DAY</code> </p> </li> <li> <p> <code>HOUR</code> </p> </li> <li> <p> <code>MINUTE</code> </p> </li> <li> <p> <code>SECOND</code> </p> </li> <li> <p> <code>MILLISECOND</code> </p> </li> </ul>
        HierarchyId:
          allOf:
            - $ref: "#/components/schemas/HierarchyId"
            - description: The custom hierarchy ID.
        FormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/DateTimeFormatConfiguration"
            - description: The format configuration of the field.
      description: The dimension type field with date type columns.
    DateMeasureField:
      type: object
      required:
        - FieldId
        - Column
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The custom field ID.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that is used in the <code>DateMeasureField</code>.
        AggregationFunction:
          allOf:
            - $ref: "#/components/schemas/DateAggregationFunction"
            - description: The aggregation function of the measure field.
        FormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/DateTimeFormatConfiguration"
            - description: The format configuration of the field.
      description: The measure type field with date type columns.
    SensitiveTimestamp:
      type: string
      format: date-time
    DynamicDefaultValue:
      type: object
      required:
        - DefaultValueColumn
      properties:
        UserNameColumn:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that contains the username.
        GroupNameColumn:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that contains the group name.
        DefaultValueColumn:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that contains the default value of each user or group.
      description: Defines different defaults to the users or groups based on mapping.
    RollingDateConfiguration:
      type: object
      required:
        - Expression
      properties:
        DataSetIdentifier:
          allOf:
            - $ref: "#/components/schemas/DataSetIdentifier"
            - description: The data set that is used in the rolling date configuration.
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The expression of the rolling date configuration.
      description: The rolling date configuration of a date time filter.
    DateTimeDefaultValues:
      type: object
      properties:
        DynamicValue:
          allOf:
            - $ref: "#/components/schemas/DynamicDefaultValue"
            - description: The dynamic value of the <code>DataTimeDefaultValues</code>. Different defaults are displayed according to users, groups, and values mapping.
        StaticValues:
          allOf:
            - $ref: "#/components/schemas/DateTimeDefaultValueList"
            - description: The static values of the <code>DataTimeDefaultValues</code>.
        RollingDate:
          allOf:
            - $ref: "#/components/schemas/RollingDateConfiguration"
            - description: The rolling date of the <code>DataTimeDefaultValues</code>. The date is determined from the dataset based on input expression.
      description: The default values of the <code>DateTimeParameterDeclaration</code>.
    DateTimeFormat:
      type: string
      minLength: 1
      maxLength: 128
    NumericFormatConfiguration:
      type: object
      properties:
        NumberDisplayFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumberDisplayFormatConfiguration"
            - description: The options that determine the number display format configuration.
        CurrencyDisplayFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/CurrencyDisplayFormatConfiguration"
            - description: The options that determine the currency display format configuration.
        PercentageDisplayFormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/PercentageDisplayFormatConfiguration"
            - description: The options that determine the percentage display format configuration.
      description: <p>The options that determine the numeric format configuration.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    DrillDownFilterList:
      type: array
      items:
        $ref: "#/components/schemas/DrillDownFilter"
      maxItems: 10
    SensitiveTimestampList:
      type: array
      items:
        $ref: "#/components/schemas/SensitiveTimestamp"
    DateTimeParameter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A display name for the date-time parameter.
        Values:
          allOf:
            - $ref: "#/components/schemas/SensitiveTimestampList"
            - description: The values for the date-time parameter.
      description: A date-time parameter.
    DateTimeValueWhenUnsetConfiguration:
      type: object
      properties:
        ValueWhenUnsetOption:
          allOf:
            - $ref: "#/components/schemas/ValueWhenUnsetOption"
            - description: "<p>The built-in options for default values. The value can be one of the following:</p> <ul> <li> <p> <code>RECOMMENDED</code>: The recommended value.</p> </li> <li> <p> <code>NULL</code>: The <code>NULL</code> value.</p> </li> </ul>"
        CustomValue:
          allOf:
            - $ref: "#/components/schemas/SensitiveTimestamp"
            - description: A custom value that's used when the value of a parameter isn't set.
      description: The configuration that defines the default value of a <code>DateTime</code> parameter when a value has not been set.
    DateTimeParameterDeclaration:
      type: object
      required:
        - Name
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The name of the parameter that is being declared.
        DefaultValues:
          allOf:
            - $ref: "#/components/schemas/DateTimeDefaultValues"
            - description: The default values of a parameter. If the parameter is a single-value parameter, a maximum of one default value can be provided.
        TimeGranularity:
          allOf:
            - $ref: "#/components/schemas/TimeGranularity"
            - description: The level of time precision that is used to aggregate <code>DateTime</code> values.
        ValueWhenUnset:
          allOf:
            - $ref: "#/components/schemas/DateTimeValueWhenUnsetConfiguration"
            - description: The configuration that defines the default value of a <code>DateTime</code> parameter when a value has not been set.
      description: A parameter declaration for the <code>DateTime</code> data type.
    DateTimePickerControlDisplayOptions:
      type: object
      properties:
        TitleOptions:
          allOf:
            - $ref: "#/components/schemas/LabelOptions"
            - description: The options to configure the title visibility, name, and font size.
        DateTimeFormat:
          allOf:
            - $ref: "#/components/schemas/DateTimeFormat"
            - description: Customize how dates are formatted in controls.
      description: The display options of a control.
    ValueWhenUnsetOption:
      type: string
      enum:
        - RECOMMENDED_VALUE
        - "NULL"
    DayOfMonth:
      type: string
      pattern: ^(?:LAST_DAY_OF_MONTH|1[0-9]|2[0-8]|[12]|[3-9])$
      minLength: 1
      maxLength: 17
    DayOfWeek:
      type: string
      enum:
        - SUNDAY
        - MONDAY
        - TUESDAY
        - WEDNESDAY
        - THURSDAY
        - FRIDAY
        - SATURDAY
    SensitiveDoubleObject:
      type: number
      format: double
    DecimalDefaultValues:
      type: object
      properties:
        DynamicValue:
          allOf:
            - $ref: "#/components/schemas/DynamicDefaultValue"
            - description: The dynamic value of the <code>DecimalDefaultValues</code>. Different defaults are displayed according to users, groups, and values mapping.
        StaticValues:
          allOf:
            - $ref: "#/components/schemas/DecimalDefaultValueList"
            - description: The static values of the <code>DecimalDefaultValues</code>.
      description: The default values of the <code>DecimalParameterDeclaration</code>.
    SensitiveDoubleList:
      type: array
      items:
        $ref: "#/components/schemas/SensitiveDouble"
    DecimalParameter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A display name for the decimal parameter.
        Values:
          allOf:
            - $ref: "#/components/schemas/SensitiveDoubleList"
            - description: The values for the decimal parameter.
      description: A decimal parameter.
    ParameterValueType:
      type: string
      enum:
        - MULTI_VALUED
        - SINGLE_VALUED
    DecimalValueWhenUnsetConfiguration:
      type: object
      properties:
        ValueWhenUnsetOption:
          allOf:
            - $ref: "#/components/schemas/ValueWhenUnsetOption"
            - description: "<p>The built-in options for default values. The value can be one of the following:</p> <ul> <li> <p> <code>RECOMMENDED</code>: The recommended value.</p> </li> <li> <p> <code>NULL</code>: The <code>NULL</code> value.</p> </li> </ul>"
        CustomValue:
          allOf:
            - $ref: "#/components/schemas/SensitiveDouble"
            - description: A custom value that's used when the value of a parameter isn't set.
      description: The configuration that defines the default value of a <code>Decimal</code> parameter when a value has not been set.
    DecimalParameterDeclaration:
      type: object
      required:
        - ParameterValueType
        - Name
      properties:
        ParameterValueType:
          allOf:
            - $ref: "#/components/schemas/ParameterValueType"
            - description: The value type determines whether the parameter is a single-value or multi-value parameter.
        Name:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The name of the parameter that is being declared.
        DefaultValues:
          allOf:
            - $ref: "#/components/schemas/DecimalDefaultValues"
            - description: The default values of a parameter. If the parameter is a single-value parameter, a maximum of one default value can be provided.
        ValueWhenUnset:
          allOf:
            - $ref: "#/components/schemas/DecimalValueWhenUnsetConfiguration"
            - description: The configuration that defines the default value of a <code>Decimal</code> parameter when a value has not been set.
      description: A parameter declaration for the <code>Decimal</code> data type.
    DecimalPlaces:
      type: integer
      minimum: 0
      maximum: 20
    SensitiveDouble:
      type: number
      format: double
    FreeFormLayoutCanvasSizeOptions:
      type: object
      properties:
        ScreenCanvasSizeOptions:
          allOf:
            - $ref: "#/components/schemas/FreeFormLayoutScreenCanvasSizeOptions"
            - description: The options that determine the sizing of the canvas used in a free-form layout.
      description: Configuration options for the canvas of a free-form layout.
    DefaultFreeFormLayoutConfiguration:
      type: object
      required:
        - CanvasSizeOptions
      properties:
        CanvasSizeOptions:
          allOf:
            - $ref: "#/components/schemas/FreeFormLayoutCanvasSizeOptions"
            - description: Determines the screen canvas size options for a free-form layout.
      description: The options that determine the default settings of a free-form layout configuration.
    GridLayoutCanvasSizeOptions:
      type: object
      properties:
        ScreenCanvasSizeOptions:
          allOf:
            - $ref: "#/components/schemas/GridLayoutScreenCanvasSizeOptions"
            - description: The options that determine the sizing of the canvas used in a grid layout.
      description: Configuration options for the canvas of a grid layout.
    DefaultGridLayoutConfiguration:
      type: object
      required:
        - CanvasSizeOptions
      properties:
        CanvasSizeOptions:
          allOf:
            - $ref: "#/components/schemas/GridLayoutCanvasSizeOptions"
            - description: Determines the screen canvas size options for a grid layout.
      description: The options that determine the default settings for a grid layout configuration.
    DefaultInteractiveLayoutConfiguration:
      type: object
      properties:
        Grid:
          allOf:
            - $ref: "#/components/schemas/DefaultGridLayoutConfiguration"
            - description: The options that determine the default settings for a grid layout configuration.
        FreeForm:
          allOf:
            - $ref: "#/components/schemas/DefaultFreeFormLayoutConfiguration"
            - description: The options that determine the default settings of a free-form layout configuration.
      description: The options that determine the default settings for interactive layout configuration.
    DefaultPaginatedLayoutConfiguration:
      type: object
      properties:
        SectionBased:
          allOf:
            - $ref: "#/components/schemas/DefaultSectionBasedLayoutConfiguration"
            - description: The options that determine the default settings for a section-based layout configuration.
      description: The options that determine the default settings for a paginated layout configuration.
    SheetContentType:
      type: string
      enum:
        - PAGINATED
        - INTERACTIVE
    DefaultSectionBasedLayoutConfiguration:
      type: object
      required:
        - CanvasSizeOptions
      properties:
        CanvasSizeOptions:
          allOf:
            - $ref: "#/components/schemas/SectionBasedLayoutCanvasSizeOptions"
            - description: Determines the screen canvas size options for a section-based layout.
      description: The options that determine the default settings for a section-based layout configuration.
    SectionBasedLayoutCanvasSizeOptions:
      type: object
      properties:
        PaperCanvasSizeOptions:
          allOf:
            - $ref: "#/components/schemas/SectionBasedLayoutPaperCanvasSizeOptions"
            - description: The options for a paper canvas of a section-based layout.
      description: The options for the canvas of a section-based layout.
    DeleteAccountCustomizationRequest:
      type: object
      title: DeleteAccountCustomizationRequest
      properties: {}
    DeleteAccountSubscriptionRequest:
      type: object
      title: DeleteAccountSubscriptionRequest
      properties: {}
    RecoveryWindowInDays:
      type: integer
      minimum: 7
      maximum: 30
    DeleteAnalysisRequest:
      type: object
      title: DeleteAnalysisRequest
      properties: {}
    DeleteDashboardRequest:
      type: object
      title: DeleteDashboardRequest
      properties: {}
    DeleteDataSetRefreshPropertiesRequest:
      type: object
      title: DeleteDataSetRefreshPropertiesRequest
      properties: {}
    DeleteDataSetRequest:
      type: object
      title: DeleteDataSetRequest
      properties: {}
    DeleteDataSourceRequest:
      type: object
      title: DeleteDataSourceRequest
      properties: {}
    DeleteFolderMembershipRequest:
      type: object
      title: DeleteFolderMembershipRequest
      properties: {}
    DeleteFolderRequest:
      type: object
      title: DeleteFolderRequest
      properties: {}
    DeleteGroupMembershipRequest:
      type: object
      title: DeleteGroupMembershipRequest
      properties: {}
    DeleteGroupRequest:
      type: object
      title: DeleteGroupRequest
      properties: {}
    DeleteIAMPolicyAssignmentRequest:
      type: object
      title: DeleteIAMPolicyAssignmentRequest
      properties: {}
    DeleteNamespaceRequest:
      type: object
      title: DeleteNamespaceRequest
      properties: {}
    DeleteRefreshScheduleRequest:
      type: object
      title: DeleteRefreshScheduleRequest
      properties: {}
    DeleteTemplateAliasRequest:
      type: object
      title: DeleteTemplateAliasRequest
      properties: {}
    DeleteTemplateRequest:
      type: object
      title: DeleteTemplateRequest
      properties: {}
    DeleteThemeAliasRequest:
      type: object
      title: DeleteThemeAliasRequest
      properties: {}
    DeleteThemeRequest:
      type: object
      title: DeleteThemeRequest
      properties: {}
    DeleteUserByPrincipalIdRequest:
      type: object
      title: DeleteUserByPrincipalIdRequest
      properties: {}
      description: <p/>
    UserName:
      type: string
      pattern: "[\\u0020-\\u00FF]+"
      minLength: 1
    DeleteUserRequest:
      type: object
      title: DeleteUserRequest
      properties: {}
    Delimiter:
      type: string
      minLength: 1
      maxLength: 1
    boolean:
      type: boolean
    DescribeAccountCustomizationRequest:
      type: object
      title: DescribeAccountCustomizationRequest
      properties: {}
    DescribeAccountSettingsRequest:
      type: object
      title: DescribeAccountSettingsRequest
      properties: {}
    DescribeAccountSubscriptionRequest:
      type: object
      title: DescribeAccountSubscriptionRequest
      properties: {}
    DescribeAnalysisDefinitionRequest:
      type: object
      title: DescribeAnalysisDefinitionRequest
      properties: {}
    DescribeAnalysisPermissionsRequest:
      type: object
      title: DescribeAnalysisPermissionsRequest
      properties: {}
    DescribeAnalysisRequest:
      type: object
      title: DescribeAnalysisRequest
      properties: {}
    DescribeDashboardDefinitionRequest:
      type: object
      title: DescribeDashboardDefinitionRequest
      properties: {}
    DescribeDashboardPermissionsRequest:
      type: object
      title: DescribeDashboardPermissionsRequest
      properties: {}
    LinkSharingConfiguration:
      type: object
      properties:
        Permissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: A structure that contains the permissions of a shareable link.
      description: A structure that contains the configuration of a shareable link to the dashboard.
    DescribeDashboardRequest:
      type: object
      title: DescribeDashboardRequest
      properties: {}
    DescribeDataSetPermissionsRequest:
      type: object
      title: DescribeDataSetPermissionsRequest
      properties: {}
    DescribeDataSetRefreshPropertiesRequest:
      type: object
      title: DescribeDataSetRefreshPropertiesRequest
      properties: {}
    DescribeDataSetRequest:
      type: object
      title: DescribeDataSetRequest
      properties: {}
    DescribeDataSourcePermissionsRequest:
      type: object
      title: DescribeDataSourcePermissionsRequest
      properties: {}
    DescribeDataSourceRequest:
      type: object
      title: DescribeDataSourceRequest
      properties: {}
    DescribeFolderPermissionsRequest:
      type: object
      title: DescribeFolderPermissionsRequest
      properties: {}
    DescribeFolderRequest:
      type: object
      title: DescribeFolderRequest
      properties: {}
    DescribeFolderResolvedPermissionsRequest:
      type: object
      title: DescribeFolderResolvedPermissionsRequest
      properties: {}
    Folder:
      type: object
      properties:
        FolderId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: The ID of the folder.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the folder.
        Name:
          allOf:
            - $ref: "#/components/schemas/FolderName"
            - description: A display name for the folder.
        FolderType:
          allOf:
            - $ref: "#/components/schemas/FolderType"
            - description: The type of folder it is.
        FolderPath:
          allOf:
            - $ref: "#/components/schemas/Path"
            - description: An array of ancestor ARN strings for the folder.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that the folder was created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that the folder was last updated.
      description: A folder in Amazon QuickSight.
    DescribeGroupMembershipRequest:
      type: object
      title: DescribeGroupMembershipRequest
      properties: {}
    DescribeGroupRequest:
      type: object
      title: DescribeGroupRequest
      properties: {}
    DescribeIAMPolicyAssignmentRequest:
      type: object
      title: DescribeIAMPolicyAssignmentRequest
      properties: {}
    IAMPolicyAssignment:
      type: object
      properties:
        AwsAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The Amazon Web Services account ID.
        AssignmentId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Assignment ID.
        AssignmentName:
          allOf:
            - $ref: "#/components/schemas/IAMPolicyAssignmentName"
            - description: Assignment name.
        PolicyArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the IAM policy.
        Identities:
          allOf:
            - $ref: "#/components/schemas/IdentityMap"
            - description: Identities.
        AssignmentStatus:
          allOf:
            - $ref: "#/components/schemas/AssignmentStatus"
            - description: Assignment status.
      description: An Identity and Access Management (IAM) policy assignment.
    DescribeIngestionRequest:
      type: object
      title: DescribeIngestionRequest
      properties: {}
    Ingestion:
      type: object
      required:
        - Arn
        - IngestionStatus
        - CreatedTime
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        IngestionId:
          allOf:
            - $ref: "#/components/schemas/IngestionId"
            - description: Ingestion ID.
        IngestionStatus:
          allOf:
            - $ref: "#/components/schemas/IngestionStatus"
            - description: Ingestion status.
        ErrorInfo:
          allOf:
            - $ref: "#/components/schemas/ErrorInfo"
            - description: Error information for this ingestion.
        RowInfo:
          $ref: "#/components/schemas/RowInfo"
        QueueInfo:
          $ref: "#/components/schemas/QueueInfo"
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that this ingestion started.
        IngestionTimeInSeconds:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The time that this ingestion took, measured in seconds.
        IngestionSizeInBytes:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The size of the data ingested, in bytes.
        RequestSource:
          allOf:
            - $ref: "#/components/schemas/IngestionRequestSource"
            - description: Event source for this ingestion.
        RequestType:
          allOf:
            - $ref: "#/components/schemas/IngestionRequestType"
            - description: Type of this ingestion.
      description: Information about the SPICE ingestion for a dataset.
    DescribeIpRestrictionRequest:
      type: object
      title: DescribeIpRestrictionRequest
      properties: {}
    IpRestrictionRuleMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/IpRestrictionRuleDescription"
    NullableBoolean:
      type: boolean
    DescribeNamespaceRequest:
      type: object
      title: DescribeNamespaceRequest
      properties: {}
    NamespaceInfoV2:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/Namespace"
            - description: The name of the error.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The namespace ARN.
        CapacityRegion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The namespace Amazon Web Services Region.
        CreationStatus:
          allOf:
            - $ref: "#/components/schemas/NamespaceStatus"
            - description: The creation status of a namespace that is not yet completely created.
        IdentityStore:
          allOf:
            - $ref: "#/components/schemas/IdentityStore"
            - description: The identity store used for the namespace.
        NamespaceError:
          allOf:
            - $ref: "#/components/schemas/NamespaceError"
            - description: An error that occurred when the namespace was created.
      description: The error type.
    DescribeRefreshScheduleRequest:
      type: object
      title: DescribeRefreshScheduleRequest
      properties: {}
    DescribeTemplateAliasRequest:
      type: object
      title: DescribeTemplateAliasRequest
      properties: {}
    DescribeTemplateDefinitionRequest:
      type: object
      title: DescribeTemplateDefinitionRequest
      properties: {}
    TemplateErrorList:
      type: array
      items:
        $ref: "#/components/schemas/TemplateError"
      minItems: 1
    DescribeTemplatePermissionsRequest:
      type: object
      title: DescribeTemplatePermissionsRequest
      properties: {}
    DescribeTemplateRequest:
      type: object
      title: DescribeTemplateRequest
      properties: {}
    Template:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the template.
        Name:
          allOf:
            - $ref: "#/components/schemas/TemplateName"
            - description: The display name of the template.
        Version:
          allOf:
            - $ref: "#/components/schemas/TemplateVersion"
            - description: A structure describing the versions of the template.
        TemplateId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID for the template. This is unique per Amazon Web Services Region for each Amazon Web Services account.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: Time when this was last updated.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: Time when this was created.
      description: <p>A template object. A <i>template</i> is an entity in Amazon QuickSight that encapsulates the metadata required to create an analysis and that you can use to create a dashboard. A template adds a layer of abstraction by using placeholders to replace the dataset associated with an analysis. You can use templates to create dashboards by replacing dataset placeholders with datasets that follow the same schema that was used to create the source analysis and template.</p> <p>You can share templates across Amazon Web Services accounts by allowing users in other Amazon Web Services accounts to create a template or a dashboard from an existing template.</p>
    DescribeThemeAliasRequest:
      type: object
      title: DescribeThemeAliasRequest
      properties: {}
    DescribeThemePermissionsRequest:
      type: object
      title: DescribeThemePermissionsRequest
      properties: {}
    DescribeThemeRequest:
      type: object
      title: DescribeThemeRequest
      properties: {}
    Theme:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the theme.
        Name:
          allOf:
            - $ref: "#/components/schemas/ThemeName"
            - description: The name that the user gives to the theme.
        ThemeId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The identifier that the user gives to the theme.
        Version:
          $ref: "#/components/schemas/ThemeVersion"
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The date and time that the theme was created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The date and time that the theme was last updated.
        Type:
          allOf:
            - $ref: "#/components/schemas/ThemeType"
            - description: "The type of theme, based on how it was created. Valid values include: <code>QUICKSIGHT</code> and <code>CUSTOM</code>."
      description: Summary information about a theme.
    DescribeUserRequest:
      type: object
      title: DescribeUserRequest
      properties: {}
    User:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the user.
        UserName:
          allOf:
            - $ref: "#/components/schemas/UserName"
            - description: The user's user name. This value is required if you are registering a user that will be managed in Amazon QuickSight. In the output, the value for <code>UserName</code> is <code>N/A</code> when the value for <code>IdentityType</code> is <code>IAM</code> and the corresponding IAM user is deleted.
        Email:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user's email address.
        Role:
          allOf:
            - $ref: "#/components/schemas/UserRole"
            - description: "<p>The Amazon QuickSight role for the user. The user role can be one of the following:.</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn't currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn't currently available for use.</p> </li> </ul>"
        IdentityType:
          allOf:
            - $ref: "#/components/schemas/IdentityType"
            - description: The type of identity authentication used by the user.
        Active:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: The active status of user. When you create an Amazon QuickSight user that's not an IAM user or an Active Directory user, that user is inactive until they sign in and provide a password.
        PrincipalId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The principal ID of the user.
        CustomPermissionsName:
          allOf:
            - $ref: "#/components/schemas/RoleName"
            - description: The custom permissions profile associated with this user.
        ExternalLoginFederationProviderType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "<p>The type of supported external login provider that provides identity to let the user federate into Amazon QuickSight with an associated IAM role. The type can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider.</p> </li> </ul>"
        ExternalLoginFederationProviderUrl:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The URL of the external login provider.
        ExternalLoginId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The identity ID for the user in the external login provider.
      description: "A registered user of Amazon QuickSight. "
    SelectAllValueOptions:
      type: string
      enum:
        - ALL_VALUES
    DestinationParameterValueConfiguration:
      type: object
      properties:
        CustomValuesConfiguration:
          allOf:
            - $ref: "#/components/schemas/CustomValuesConfiguration"
            - description: The configuration of custom values for destination parameter in <code>DestinationParameterValueConfiguration</code>.
        SelectAllValueOptions:
          allOf:
            - $ref: "#/components/schemas/SelectAllValueOptions"
            - description: The configuration that selects all options.
        SourceParameterName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The source parameter name of the destination parameter.
        SourceField:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The source field ID of the destination parameter.
      description: <p>The configuration of destination parameter values.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    NumericalDimensionField:
      type: object
      required:
        - FieldId
        - Column
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The custom field ID.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that is used in the <code>NumericalDimensionField</code>.
        HierarchyId:
          allOf:
            - $ref: "#/components/schemas/HierarchyId"
            - description: The custom hierarchy ID.
        FormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumberFormatConfiguration"
            - description: The format configuration of the field.
      description: The dimension type field with numerical type columns.
    DonutCenterOptions:
      type: object
      properties:
        LabelVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines the visibility of the label in a donut chart. In the Amazon QuickSight console, this option is called <code>'Show total'</code>.
      description: The label options of the label that is displayed in the center of a donut chart. This option isn't available for pie charts.
    DonutOptions:
      type: object
      properties:
        ArcOptions:
          allOf:
            - $ref: "#/components/schemas/ArcOptions"
            - description: <p>The option for define the arc of the chart shape. Valid values are as follows:</p> <ul> <li> <p> <code>WHOLE</code> - A pie chart</p> </li> <li> <p> <code>SMALL</code>- A small-sized donut chart</p> </li> <li> <p> <code>MEDIUM</code>- A medium-sized donut chart</p> </li> <li> <p> <code>LARGE</code>- A large-sized donut chart</p> </li> </ul>
        DonutCenterOptions:
          allOf:
            - $ref: "#/components/schemas/DonutCenterOptions"
            - description: The label options of the label that is displayed in the center of a donut chart. This option isn't available for pie charts.
      description: The options for configuring a donut chart or pie chart.
    NumericEqualityDrillDownFilter:
      type: object
      required:
        - Column
        - Value
      properties:
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the filter is applied to.
        Value:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The value of the double input numeric drill down filter.
      description: The category drill down filter.
    TimeRangeDrillDownFilter:
      type: object
      required:
        - Column
        - RangeMinimum
        - RangeMaximum
        - TimeGranularity
      properties:
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the filter is applied to.
        RangeMinimum:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The minimum value for the filter value range.
        RangeMaximum:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The maximum value for the filter value range.
        TimeGranularity:
          allOf:
            - $ref: "#/components/schemas/TimeGranularity"
            - description: The level of time precision that is used to aggregate <code>DateTime</code> values.
      description: The time range drill down filter.
    DrillDownFilter:
      type: object
      properties:
        NumericEqualityFilter:
          allOf:
            - $ref: "#/components/schemas/NumericEqualityDrillDownFilter"
            - description: The numeric equality type drill down filter. This filter is used for number type columns.
        CategoryFilter:
          allOf:
            - $ref: "#/components/schemas/CategoryDrillDownFilter"
            - description: The category type drill down filter. This filter is used for string type columns.
        TimeRangeFilter:
          allOf:
            - $ref: "#/components/schemas/TimeRangeDrillDownFilter"
            - description: The time range drill down filter. This filter is used for date time columns.
      description: <p>The drill down filter for the column hierarchies.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    ListControlSelectAllOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility configuration of the <code>Select all</code> options in a list control.
      description: The configuration of the <code>Select all</code> options in a list control.
    DropDownControlDisplayOptions:
      type: object
      properties:
        SelectAllOptions:
          allOf:
            - $ref: "#/components/schemas/ListControlSelectAllOptions"
            - description: The configuration of the <code>Select all</code> options in a dropdown control.
        TitleOptions:
          allOf:
            - $ref: "#/components/schemas/LabelOptions"
            - description: The options to configure the title visibility, name, and font size.
      description: The display options of a control.
    EmbeddingIdentityType:
      type: string
      enum:
        - IAM
        - QUICKSIGHT
        - ANONYMOUS
    EmbeddingUrl:
      type: string
      format: password
    EmptyVisual:
      type: object
      required:
        - VisualId
        - DataSetIdentifier
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        DataSetIdentifier:
          allOf:
            - $ref: "#/components/schemas/DataSetIdentifier"
            - description: The data set that is used in the empty visual. Every visual requires a dataset to render.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
      description: <p>An empty visual.</p> <p>Empty visuals are used in layouts but have not been configured to show any data. A new visual created in the Amazon QuickSight console is considered an <code>EmptyVisual</code> until a visual type is selected.</p>
    Entity:
      type: object
      properties:
        Path:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The hierarchical path of the entity within the analysis, template, or dashboard definition tree.
      description: An object, structure, or sub-structure of an analysis, template, or dashboard.
    EntryPath:
      type: string
      minLength: 1
      maxLength: 1000
    EntryPoint:
      type: string
      minLength: 1
      maxLength: 1000
    IngestionErrorType:
      type: string
      enum:
        - FAILURE_TO_ASSUME_ROLE
        - INGESTION_SUPERSEDED
        - INGESTION_CANCELED
        - DATA_SET_DELETED
        - DATA_SET_NOT_SPICE
        - S3_UPLOADED_FILE_DELETED
        - S3_MANIFEST_ERROR
        - DATA_TOLERANCE_EXCEPTION
        - SPICE_TABLE_NOT_FOUND
        - DATA_SET_SIZE_LIMIT_EXCEEDED
        - ROW_SIZE_LIMIT_EXCEEDED
        - ACCOUNT_CAPACITY_LIMIT_EXCEEDED
        - CUSTOMER_ERROR
        - DATA_SOURCE_NOT_FOUND
        - IAM_ROLE_NOT_AVAILABLE
        - CONNECTION_FAILURE
        - SQL_TABLE_NOT_FOUND
        - PERMISSION_DENIED
        - SSL_CERTIFICATE_VALIDATION_FAILURE
        - OAUTH_TOKEN_FAILURE
        - SOURCE_API_LIMIT_EXCEEDED_FAILURE
        - PASSWORD_AUTHENTICATION_FAILURE
        - SQL_SCHEMA_MISMATCH_ERROR
        - INVALID_DATE_FORMAT
        - INVALID_DATAPREP_SYNTAX
        - SOURCE_RESOURCE_LIMIT_EXCEEDED
        - SQL_INVALID_PARAMETER_VALUE
        - QUERY_TIMEOUT
        - SQL_NUMERIC_OVERFLOW
        - UNRESOLVABLE_HOST
        - UNROUTABLE_HOST
        - SQL_EXCEPTION
        - S3_FILE_INACCESSIBLE
        - IOT_FILE_NOT_FOUND
        - IOT_DATA_SET_FILE_EMPTY
        - INVALID_DATA_SOURCE_CONFIG
        - DATA_SOURCE_AUTH_FAILED
        - DATA_SOURCE_CONNECTION_FAILED
        - FAILURE_TO_PROCESS_JSON_FILE
        - INTERNAL_SERVICE_ERROR
        - REFRESH_SUPPRESSED_BY_EDIT
        - PERMISSION_NOT_FOUND
        - ELASTICSEARCH_CURSOR_NOT_ENABLED
        - CURSOR_NOT_ENABLED
        - DUPLICATE_COLUMN_NAMES_FOUND
    ErrorInfo:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/IngestionErrorType"
            - description: Error type.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Error message.
      description: Error information for the SPICE ingestion of a dataset.
    WidgetStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    ExcludePeriodConfiguration:
      type: object
      required:
        - Amount
        - Granularity
      properties:
        Amount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The amount or number of the exclude period.
        Granularity:
          allOf:
            - $ref: "#/components/schemas/TimeGranularity"
            - description: The granularity or unit (day, month, year) of the exclude period.
        Status:
          allOf:
            - $ref: "#/components/schemas/WidgetStatus"
            - description: <p>The status of the exclude period. Choose from the following options:</p> <ul> <li> <p> <code>ENABLED</code> </p> </li> <li> <p> <code>DISABLED</code> </p> </li> </ul>
      description: The exclude period of <code>TimeRangeFilter</code> or <code>RelativeDatesFilter</code>.
    ExplicitHierarchyColumnList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnIdentifier"
      minItems: 2
      maxItems: 10
    TooltipTitleType:
      type: string
      enum:
        - NONE
        - PRIMARY_VALUE
    TooltipItemList:
      type: array
      items:
        $ref: "#/components/schemas/TooltipItem"
      maxItems: 100
    FieldBasedTooltip:
      type: object
      properties:
        AggregationVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of <code>Show aggregations</code>.
        TooltipTitleType:
          allOf:
            - $ref: "#/components/schemas/TooltipTitleType"
            - description: "<p>The type for the &gt;tooltip title. Choose one of the following options:</p> <ul> <li> <p> <code>NONE</code>: Doesn't use the primary value as the title.</p> </li> <li> <p> <code>PRIMARY_VALUE</code>: Uses primary value as the title.</p> </li> </ul>"
        TooltipFields:
          allOf:
            - $ref: "#/components/schemas/TooltipItemList"
            - description: The fields configuration in the tooltip.
      description: The setup for the detailed tooltip.
    FieldFolderDescription:
      type: string
      maxLength: 500
    FolderColumnList:
      type: array
      items:
        $ref: "#/components/schemas/String"
      maxItems: 5000
    FieldFolderPath:
      type: string
      minLength: 1
      maxLength: 1000
    FieldOrderList:
      type: array
      items:
        $ref: "#/components/schemas/FieldId"
      maxItems: 100
    FieldSeriesItem:
      type: object
      required:
        - FieldId
        - AxisBinding
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID of the field for which you are setting the axis binding.
        AxisBinding:
          allOf:
            - $ref: "#/components/schemas/AxisBinding"
            - description: The axis that you are binding the field to.
        Settings:
          allOf:
            - $ref: "#/components/schemas/LineChartSeriesSettings"
            - description: The options that determine the presentation of line series associated to the field.
      description: The field series item configuration of a line chart.
    FieldSort:
      type: object
      required:
        - FieldId
        - Direction
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The sort configuration target field.
        Direction:
          allOf:
            - $ref: "#/components/schemas/SortDirection"
            - description: "<p>The sort direction. Choose one of the following options:</p> <ul> <li> <p> <code>ASC</code>: Ascending</p> </li> <li> <p> <code>DESC</code>: Descending</p> </li> </ul>"
      description: The sort configuration for a field in a field well.
    FieldSortOptions:
      type: object
      properties:
        FieldSort:
          allOf:
            - $ref: "#/components/schemas/FieldSort"
            - description: The sort configuration for a field in a field well.
        ColumnSort:
          allOf:
            - $ref: "#/components/schemas/ColumnSort"
            - description: The sort configuration for a column that is not used in a field well.
      description: The field sort options in a chart configuration.
    FieldTooltipItem:
      type: object
      required:
        - FieldId
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The unique ID of the field that is targeted by the tooltip.
        Label:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The label of the tooltip item.
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the tooltip item.
      description: The tooltip item for the fields.
    FileFormat:
      type: string
      enum:
        - CSV
        - TSV
        - CLF
        - ELF
        - XLSX
        - JSON
    FilledMapDimensionFieldList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionField"
      maxItems: 1
    FilledMapMeasureFieldList:
      type: array
      items:
        $ref: "#/components/schemas/MeasureField"
      maxItems: 1
    FilledMapAggregatedFieldWells:
      type: object
      properties:
        Geospatial:
          allOf:
            - $ref: "#/components/schemas/FilledMapDimensionFieldList"
            - description: The aggregated location field well of the filled map. Values are grouped by location fields.
        Values:
          allOf:
            - $ref: "#/components/schemas/FilledMapMeasureFieldList"
            - description: The aggregated color field well of a filled map. Values are aggregated based on location fields.
      description: The aggregated field well of the filled map.
    FilledMapConditionalFormattingOptionList:
      type: array
      items:
        $ref: "#/components/schemas/FilledMapConditionalFormattingOption"
      maxItems: 200
    FilledMapConditionalFormatting:
      type: object
      required:
        - ConditionalFormattingOptions
      properties:
        ConditionalFormattingOptions:
          allOf:
            - $ref: "#/components/schemas/FilledMapConditionalFormattingOptionList"
            - description: Conditional formatting options of a <code>FilledMapVisual</code>.
      description: The conditional formatting of a <code>FilledMapVisual</code>.
    FilledMapShapeConditionalFormatting:
      type: object
      required:
        - FieldId
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID of the filled map shape.
        Format:
          allOf:
            - $ref: "#/components/schemas/ShapeConditionalFormat"
            - description: The conditional formatting that determines the background color of a filled map's shape.
      description: The conditional formatting that determines the shape of the filled map.
    FilledMapConditionalFormattingOption:
      type: object
      required:
        - Shape
      properties:
        Shape:
          allOf:
            - $ref: "#/components/schemas/FilledMapShapeConditionalFormatting"
            - description: The conditional formatting that determines the shape of the filled map.
      description: Conditional formatting options of a <code>FilledMapVisual</code>.
    FilledMapFieldWells:
      type: object
      properties:
        FilledMapAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/FilledMapAggregatedFieldWells"
            - description: The aggregated field well of the filled map.
      description: <p>The field wells of a <code>FilledMapVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    FilledMapSortConfiguration:
      type: object
      properties:
        CategorySort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the location fields.
      description: The sort configuration of a <code>FilledMapVisual</code>.
    GeospatialWindowOptions:
      type: object
      properties:
        Bounds:
          allOf:
            - $ref: "#/components/schemas/GeospatialCoordinateBounds"
            - description: The bounds options (north, south, west, east) of the geospatial window options.
        MapZoomMode:
          allOf:
            - $ref: "#/components/schemas/MapZoomMode"
            - description: The map zoom modes (manual, auto) of the geospatial window options.
      description: The window options of the geospatial map visual.
    GeospatialMapStyleOptions:
      type: object
      properties:
        BaseMapStyle:
          allOf:
            - $ref: "#/components/schemas/BaseMapStyleType"
            - description: The base map style of the geospatial map.
      description: The map style options of the geospatial map.
    FilledMapConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/FilledMapFieldWells"
            - description: The field wells of the visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/FilledMapSortConfiguration"
            - description: The sort configuration of a <code>FilledMapVisual</code>.
        Legend:
          allOf:
            - $ref: "#/components/schemas/LegendOptions"
            - description: The legend display setup of the visual.
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The tooltip display setup of the visual.
        WindowOptions:
          allOf:
            - $ref: "#/components/schemas/GeospatialWindowOptions"
            - description: The window options of the filled map visual.
        MapStyleOptions:
          allOf:
            - $ref: "#/components/schemas/GeospatialMapStyleOptions"
            - description: The map style options of the filled map visual.
      description: The configuration for a <code>FilledMapVisual</code>.
    ShapeConditionalFormat:
      type: object
      required:
        - BackgroundColor
      properties:
        BackgroundColor:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingColor"
            - description: The conditional formatting for the shape background color of a filled map visual.
      description: The shape conditional formatting of a filled map visual.
    FilledMapVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers..
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/FilledMapConfiguration"
            - description: The configuration settings of the visual.
        ConditionalFormatting:
          allOf:
            - $ref: "#/components/schemas/FilledMapConditionalFormatting"
            - description: The conditional formatting of a <code>FilledMapVisual</code>.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
      description: <p>A filled map.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/filled-maps.html">Creating filled maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    NumericRangeFilter:
      type: object
      required:
        - FilterId
        - Column
        - NullOption
      properties:
        FilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: An identifier that uniquely identifies a filter within a dashboard, analysis, or template.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the filter is applied to.
        IncludeMinimum:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Determines whether the minimum value in the filter value range should be included in the filtered results.
        IncludeMaximum:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Determines whether the maximum value in the filter value range should be included in the filtered results.
        RangeMinimum:
          allOf:
            - $ref: "#/components/schemas/NumericRangeFilterValue"
            - description: The minimum value for the filter value range.
        RangeMaximum:
          allOf:
            - $ref: "#/components/schemas/NumericRangeFilterValue"
            - description: The maximum value for the filter value range.
        SelectAllOptions:
          allOf:
            - $ref: "#/components/schemas/NumericFilterSelectAllOptions"
            - description: <p>Select all of the values. Null is not the assigned value of select all.</p> <ul> <li> <p> <code>FILTER_ALL_VALUES</code> </p> </li> </ul>
        AggregationFunction:
          allOf:
            - $ref: "#/components/schemas/AggregationFunction"
            - description: The aggregation function of the filter.
        NullOption:
          allOf:
            - $ref: "#/components/schemas/FilterNullOption"
            - description: "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
      description: A <code>NumericRangeFilter</code> filters values that are within the value range.
    NumericEqualityFilter:
      type: object
      required:
        - FilterId
        - Column
        - MatchOperator
        - NullOption
      properties:
        FilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: An identifier that uniquely identifies a filter within a dashboard, analysis, or template.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the filter is applied to.
        Value:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The input value.
        SelectAllOptions:
          allOf:
            - $ref: "#/components/schemas/NumericFilterSelectAllOptions"
            - description: <p>Select all of the values. Null is not the assigned value of select all.</p> <ul> <li> <p> <code>FILTER_ALL_VALUES</code> </p> </li> </ul>
        MatchOperator:
          allOf:
            - $ref: "#/components/schemas/NumericEqualityMatchOperator"
            - description: The match operator that is used to determine if a filter should be applied.
        AggregationFunction:
          allOf:
            - $ref: "#/components/schemas/AggregationFunction"
            - description: The aggregation function of the filter.
        ParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The parameter whose value should be used for the filter value.
        NullOption:
          allOf:
            - $ref: "#/components/schemas/FilterNullOption"
            - description: "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
      description: A <code>NumericEqualityFilter</code> filters values that are equal to the specified value.
    TimeEqualityFilter:
      type: object
      required:
        - FilterId
        - Column
      properties:
        FilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: An identifier that uniquely identifies a filter within a dashboard, analysis, or template.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the filter is applied to.
        Value:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: <p>The value of a <code>TimeEquality</code> filter.</p> <p>This field is mutually exclusive to <code>ParameterName</code>.</p>
        ParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: <p>The parameter whose value should be used for the filter value.</p> <p>This field is mutually exclusive to <code>Value</code>.</p>
        TimeGranularity:
          allOf:
            - $ref: "#/components/schemas/TimeGranularity"
            - description: The level of time precision that is used to aggregate <code>DateTime</code> values.
      description: A <code>TimeEqualityFilter</code> filters values that are equal to a given value.
    TimeRangeFilter:
      type: object
      required:
        - FilterId
        - Column
        - NullOption
      properties:
        FilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: An identifier that uniquely identifies a filter within a dashboard, analysis, or template.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the filter is applied to.
        IncludeMinimum:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Determines whether the minimum value in the filter value range should be included in the filtered results.
        IncludeMaximum:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Determines whether the maximum value in the filter value range should be included in the filtered results.
        RangeMinimumValue:
          allOf:
            - $ref: "#/components/schemas/TimeRangeFilterValue"
            - description: The minimum value for the filter value range.
        RangeMaximumValue:
          allOf:
            - $ref: "#/components/schemas/TimeRangeFilterValue"
            - description: The maximum value for the filter value range.
        NullOption:
          allOf:
            - $ref: "#/components/schemas/FilterNullOption"
            - description: "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
        ExcludePeriodConfiguration:
          allOf:
            - $ref: "#/components/schemas/ExcludePeriodConfiguration"
            - description: The exclude period of the time range filter.
        TimeGranularity:
          allOf:
            - $ref: "#/components/schemas/TimeGranularity"
            - description: The level of time precision that is used to aggregate <code>DateTime</code> values.
      description: A <code>TimeRangeFilter</code> filters values that are between two specified values.
    RelativeDatesFilter:
      type: object
      required:
        - FilterId
        - Column
        - AnchorDateConfiguration
        - TimeGranularity
        - RelativeDateType
        - NullOption
      properties:
        FilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: An identifier that uniquely identifies a filter within a dashboard, analysis, or template.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the filter is applied to.
        AnchorDateConfiguration:
          allOf:
            - $ref: "#/components/schemas/AnchorDateConfiguration"
            - description: The date configuration of the filter.
        MinimumGranularity:
          allOf:
            - $ref: "#/components/schemas/TimeGranularity"
            - description: The minimum granularity (period granularity) of the relative dates filter.
        TimeGranularity:
          allOf:
            - $ref: "#/components/schemas/TimeGranularity"
            - description: The level of time precision that is used to aggregate <code>DateTime</code> values.
        RelativeDateType:
          allOf:
            - $ref: "#/components/schemas/RelativeDateType"
            - description: <p>The range date type of the filter. Choose one of the options below:</p> <ul> <li> <p> <code>PREVIOUS</code> </p> </li> <li> <p> <code>THIS</code> </p> </li> <li> <p> <code>LAST</code> </p> </li> <li> <p> <code>NOW</code> </p> </li> <li> <p> <code>NEXT</code> </p> </li> </ul>
        RelativeDateValue:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The date value of the filter.
        ParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The parameter whose value should be used for the filter value.
        NullOption:
          allOf:
            - $ref: "#/components/schemas/FilterNullOption"
            - description: "<p>This option determines how null values should be treated when filtering data.</p> <ul> <li> <p> <code>ALL_VALUES</code>: Include null values in filtered results.</p> </li> <li> <p> <code>NULLS_ONLY</code>: Only include null values in filtered results.</p> </li> <li> <p> <code>NON_NULLS_ONLY</code>: Exclude null values from filtered results.</p> </li> </ul>"
        ExcludePeriodConfiguration:
          allOf:
            - $ref: "#/components/schemas/ExcludePeriodConfiguration"
            - description: The configuration for the exclude period of the filter.
      description: A <code>RelativeDatesFilter</code> filters relative dates values.
    TopBottomFilter:
      type: object
      required:
        - FilterId
        - Column
        - AggregationSortConfigurations
      properties:
        FilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: An identifier that uniquely identifies a filter within a dashboard, analysis, or template.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the filter is applied to.
        Limit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of items to include in the top bottom filter results.
        AggregationSortConfigurations:
          allOf:
            - $ref: "#/components/schemas/AggregationSortConfigurationList"
            - description: The aggregation and sort configuration of the top bottom filter.
        TimeGranularity:
          allOf:
            - $ref: "#/components/schemas/TimeGranularity"
            - description: The level of time precision that is used to aggregate <code>DateTime</code> values.
        ParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The parameter whose value should be used for the filter value.
      description: A <code>TopBottomFilter</code> filters values that are at the top or the bottom.
    Filter:
      type: object
      properties:
        CategoryFilter:
          allOf:
            - $ref: "#/components/schemas/CategoryFilter"
            - description: <p>A <code>CategoryFilter</code> filters text values.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/add-a-text-filter-data-prep.html">Adding text filters</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        NumericRangeFilter:
          allOf:
            - $ref: "#/components/schemas/NumericRangeFilter"
            - description: A <code>NumericRangeFilter</code> filters numeric values that are either inside or outside a given numeric range.
        NumericEqualityFilter:
          allOf:
            - $ref: "#/components/schemas/NumericEqualityFilter"
            - description: A <code>NumericEqualityFilter</code> filters numeric values that equal or do not equal a given numeric value.
        TimeEqualityFilter:
          allOf:
            - $ref: "#/components/schemas/TimeEqualityFilter"
            - description: A <code>TimeEqualityFilter</code> filters date-time values that equal or do not equal a given date/time value.
        TimeRangeFilter:
          allOf:
            - $ref: "#/components/schemas/TimeRangeFilter"
            - description: A <code>TimeRangeFilter</code> filters date-time values that are either inside or outside a given date/time range.
        RelativeDatesFilter:
          allOf:
            - $ref: "#/components/schemas/RelativeDatesFilter"
            - description: A <code>RelativeDatesFilter</code> filters date values that are relative to a given date.
        TopBottomFilter:
          allOf:
            - $ref: "#/components/schemas/TopBottomFilter"
            - description: A <code>TopBottomFilter</code> filters data to the top or bottom values for a given column.
      description: <p>With a <code>Filter</code>, you can remove portions of data from a particular visual or view.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    FilterDateTimePickerControl:
      type: object
      required:
        - FilterControlId
        - Title
        - SourceFilterId
      properties:
        FilterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>FilterDateTimePickerControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>FilterDateTimePickerControl</code>.
        SourceFilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The source filter ID of the <code>FilterDateTimePickerControl</code>.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/DateTimePickerControlDisplayOptions"
            - description: The display options of a control.
        Type:
          allOf:
            - $ref: "#/components/schemas/SheetControlDateTimePickerType"
            - description: "<p>The date time picker type of a <code>FilterDateTimePickerControl</code>. Choose one of the following options:</p> <ul> <li> <p> <code>SINGLE_VALUED</code>: The filter condition is a fixed date.</p> </li> <li> <p> <code>DATE_RANGE</code>: The filter condition is a date time range.</p> </li> </ul>"
      description: A control from a date filter that is used to specify date and time.
    FilterListControl:
      type: object
      required:
        - FilterControlId
        - Title
        - SourceFilterId
      properties:
        FilterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>FilterListControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>FilterListControl</code>.
        SourceFilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The source filter ID of the <code>FilterListControl</code>.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/ListControlDisplayOptions"
            - description: The display options of a control.
        Type:
          allOf:
            - $ref: "#/components/schemas/SheetControlListType"
            - description: "<p>The type of <code>FilterListControl</code>. Choose one of the following options:</p> <ul> <li> <p> <code>MULTI_SELECT</code>: The user can select multiple entries from the list.</p> </li> <li> <p> <code>SINGLE_SELECT</code>: The user can select a single entry from the list.</p> </li> </ul>"
        SelectableValues:
          allOf:
            - $ref: "#/components/schemas/FilterSelectableValues"
            - description: A list of selectable values that are used in a control.
        CascadingControlConfiguration:
          allOf:
            - $ref: "#/components/schemas/CascadingControlConfiguration"
            - description: The values that are displayed in a control can be configured to only show values that are valid based on what's selected in other controls.
      description: A control to display a list of buttons or boxes. This is used to select either a single value or multiple values.
    FilterDropDownControl:
      type: object
      required:
        - FilterControlId
        - Title
        - SourceFilterId
      properties:
        FilterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>FilterDropDownControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>FilterDropDownControl</code>.
        SourceFilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The source filter ID of the <code>FilterDropDownControl</code>.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/DropDownControlDisplayOptions"
            - description: The display options of the <code>FilterDropDownControl</code>.
        Type:
          allOf:
            - $ref: "#/components/schemas/SheetControlListType"
            - description: "<p>The type of the <code>FilterDropDownControl</code>. Choose one of the following options:</p> <ul> <li> <p> <code>MULTI_SELECT</code>: The user can select multiple entries from a dropdown menu.</p> </li> <li> <p> <code>SINGLE_SELECT</code>: The user can select a single entry from a dropdown menu.</p> </li> </ul>"
        SelectableValues:
          allOf:
            - $ref: "#/components/schemas/FilterSelectableValues"
            - description: A list of selectable values that are used in a control.
        CascadingControlConfiguration:
          allOf:
            - $ref: "#/components/schemas/CascadingControlConfiguration"
            - description: The values that are displayed in a control can be configured to only show values that are valid based on what's selected in other controls.
      description: A control to display a dropdown list with buttons that are used to select a single value.
    FilterTextFieldControl:
      type: object
      required:
        - FilterControlId
        - Title
        - SourceFilterId
      properties:
        FilterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>FilterTextFieldControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>FilterTextFieldControl</code>.
        SourceFilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The source filter ID of the <code>FilterTextFieldControl</code>.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/TextFieldControlDisplayOptions"
            - description: The display options of a control.
      description: A control to display a text box that is used to enter a single entry.
    FilterTextAreaControl:
      type: object
      required:
        - FilterControlId
        - Title
        - SourceFilterId
      properties:
        FilterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>FilterTextAreaControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>FilterTextAreaControl</code>.
        SourceFilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The source filter ID of the <code>FilterTextAreaControl</code>.
        Delimiter:
          allOf:
            - $ref: "#/components/schemas/TextAreaControlDelimiter"
            - description: The delimiter that is used to separate the lines in text.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/TextAreaControlDisplayOptions"
            - description: The display options of a control.
      description: A control to display a text box that is used to enter multiple entries.
    FilterSliderControl:
      type: object
      required:
        - FilterControlId
        - Title
        - SourceFilterId
        - MaximumValue
        - MinimumValue
        - StepSize
      properties:
        FilterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>FilterSliderControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>FilterSliderControl</code>.
        SourceFilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The source filter ID of the <code>FilterSliderControl</code>.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/SliderControlDisplayOptions"
            - description: The display options of a control.
        Type:
          allOf:
            - $ref: "#/components/schemas/SheetControlSliderType"
            - description: "<p>The type of <code>FilterSliderControl</code>. Choose one of the following options:</p> <ul> <li> <p> <code>SINGLE_POINT</code>: Filter against(equals) a single data point.</p> </li> <li> <p> <code>RANGE</code>: Filter data that is in a specified range.</p> </li> </ul>"
        MaximumValue:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The smaller value that is displayed at the left of the slider.
        MinimumValue:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The larger value that is displayed at the right of the slider.
        StepSize:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The number of increments that the slider bar is divided into.
      description: A control to display a horizontal toggle bar. This is used to change a value by sliding the toggle.
    FilterRelativeDateTimeControl:
      type: object
      required:
        - FilterControlId
        - Title
        - SourceFilterId
      properties:
        FilterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>FilterTextAreaControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>FilterTextAreaControl</code>.
        SourceFilterId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The source filter ID of the <code>FilterTextAreaControl</code>.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/RelativeDateTimeControlDisplayOptions"
            - description: The display options of a control.
      description: A control from a date filter that is used to specify the relative date.
    FilterControl:
      type: object
      properties:
        DateTimePicker:
          allOf:
            - $ref: "#/components/schemas/FilterDateTimePickerControl"
            - description: A control from a date filter that is used to specify date and time.
        List:
          allOf:
            - $ref: "#/components/schemas/FilterListControl"
            - description: A control to display a list of buttons or boxes. This is used to select either a single value or multiple values.
        Dropdown:
          allOf:
            - $ref: "#/components/schemas/FilterDropDownControl"
            - description: A control to display a dropdown list with buttons that are used to select a single value.
        TextField:
          allOf:
            - $ref: "#/components/schemas/FilterTextFieldControl"
            - description: A control to display a text box that is used to enter a single entry.
        TextArea:
          allOf:
            - $ref: "#/components/schemas/FilterTextAreaControl"
            - description: A control to display a text box that is used to enter multiple entries.
        Slider:
          allOf:
            - $ref: "#/components/schemas/FilterSliderControl"
            - description: A control to display a horizontal toggle bar. This is used to change a value by sliding the toggle.
        RelativeDateTime:
          allOf:
            - $ref: "#/components/schemas/FilterRelativeDateTimeControl"
            - description: A control from a date filter that is used to specify the relative date.
      description: <p>The control of a filter that is used to interact with a dashboard or an analysis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    FilterControlList:
      type: array
      items:
        $ref: "#/components/schemas/FilterControl"
      maxItems: 200
    SheetControlTitle:
      type: string
      minLength: 1
      maxLength: 2048
    SheetControlDateTimePickerType:
      type: string
      enum:
        - SINGLE_VALUED
        - DATE_RANGE
    SheetControlListType:
      type: string
      enum:
        - MULTI_SELECT
        - SINGLE_SELECT
    FilterSelectableValues:
      type: object
      properties:
        Values:
          allOf:
            - $ref: "#/components/schemas/ParameterSelectableValueList"
            - description: The values that are used in the <code>FilterSelectableValues</code>.
      description: A list of selectable values that are used in a control.
    FilterList:
      type: array
      items:
        $ref: "#/components/schemas/Filter"
      maxItems: 20
    FilterScopeConfiguration:
      type: object
      properties:
        SelectedSheets:
          allOf:
            - $ref: "#/components/schemas/SelectedSheetsFilterScopeConfiguration"
            - description: The configuration for applying a filter to specific sheets.
      description: <p>The scope configuration for a <code>FilterGroup</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    FilterGroup:
      type: object
      required:
        - FilterGroupId
        - Filters
        - ScopeConfiguration
        - CrossDataset
      properties:
        FilterGroupId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The value that uniquely identifies a <code>FilterGroup</code> within a dashboard, template, or analysis.
        Filters:
          allOf:
            - $ref: "#/components/schemas/FilterList"
            - description: The list of filters that are present in a <code>FilterGroup</code>.
        ScopeConfiguration:
          allOf:
            - $ref: "#/components/schemas/FilterScopeConfiguration"
            - description: <p>The configuration that specifies what scope to apply to a <code>FilterGroup</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
        Status:
          allOf:
            - $ref: "#/components/schemas/WidgetStatus"
            - description: The status of the <code>FilterGroup</code>.
        CrossDataset:
          allOf:
            - $ref: "#/components/schemas/CrossDatasetTypes"
            - description: <p>The filter new feature which can apply filter group to all data sets. Choose one of the following options:</p> <ul> <li> <p> <code>ALL_DATASETS</code> </p> </li> <li> <p> <code>SINGLE_DATASET</code> </p> </li> </ul>
      description: <p>A grouping of individual filters. Filter groups are applied to the same group of visuals.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/add-a-compound-filter.html">Adding filter conditions (group filters) with AND and OR operators</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    ListControlDisplayOptions:
      type: object
      properties:
        SearchOptions:
          allOf:
            - $ref: "#/components/schemas/ListControlSearchOptions"
            - description: The configuration of the search options in a list control.
        SelectAllOptions:
          allOf:
            - $ref: "#/components/schemas/ListControlSelectAllOptions"
            - description: The configuration of the <code>Select all</code> options in a list control.
        TitleOptions:
          allOf:
            - $ref: "#/components/schemas/LabelOptions"
            - description: The options to configure the title visibility, name, and font size.
      description: The display options of a control.
    FilterOperation:
      type: object
      required:
        - ConditionExpression
      properties:
        ConditionExpression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: An expression that must evaluate to a Boolean value. Rows for which the expression evaluates to true are kept in the dataset.
      description: A transform operation that filters rows based on a condition.
    SelectedFieldList:
      type: array
      items:
        $ref: "#/components/schemas/FieldId"
      minItems: 1
      maxItems: 20
    SelectedFieldOptions:
      type: string
      enum:
        - ALL_FIELDS
    SameSheetTargetVisualConfiguration:
      type: object
      properties:
        TargetVisuals:
          allOf:
            - $ref: "#/components/schemas/TargetVisualList"
            - description: A list of the target visual IDs that are located in the same sheet of the analysis.
        TargetVisualOptions:
          allOf:
            - $ref: "#/components/schemas/TargetVisualOptions"
            - description: "<p>The options that choose the target visual in the same sheet.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>ALL_VISUALS</code>: Applies the filter operation to all visuals in the same sheet.</p> </li> </ul>"
      description: <p>The configuration of the same-sheet target visuals that you want to be filtered.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    RelativeDateTimeControlDisplayOptions:
      type: object
      properties:
        TitleOptions:
          allOf:
            - $ref: "#/components/schemas/LabelOptions"
            - description: The options to configure the title visibility, name, and font size.
        DateTimeFormat:
          allOf:
            - $ref: "#/components/schemas/DateTimeFormat"
            - description: Customize how dates are formatted in controls.
      description: The display options of a control.
    SelectedSheetsFilterScopeConfiguration:
      type: object
      properties:
        SheetVisualScopingConfigurations:
          allOf:
            - $ref: "#/components/schemas/SheetVisualScopingConfigurations"
            - description: The sheet ID and visual IDs of the sheet and visuals that the filter is applied to.
      description: <p>The configuration for applying a filter to specific sheets or visuals. You can apply this filter to multiple visuals that are on one sheet or to all visuals on a sheet.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    ParameterSelectableValueList:
      type: array
      items:
        $ref: "#/components/schemas/String"
      maxItems: 50000
    SliderControlDisplayOptions:
      type: object
      properties:
        TitleOptions:
          allOf:
            - $ref: "#/components/schemas/LabelOptions"
            - description: The options to configure the title visibility, name, and font size.
      description: The display options of a control.
    SheetControlSliderType:
      type: string
      enum:
        - SINGLE_POINT
        - RANGE
    TextAreaControlDelimiter:
      type: string
      minLength: 1
      maxLength: 2048
    TextAreaControlDisplayOptions:
      type: object
      properties:
        TitleOptions:
          allOf:
            - $ref: "#/components/schemas/LabelOptions"
            - description: The options to configure the title visibility, name, and font size.
        PlaceholderOptions:
          allOf:
            - $ref: "#/components/schemas/TextControlPlaceholderOptions"
            - description: The configuration of the placeholder options in a text area control.
      description: The display options of a control.
    TextFieldControlDisplayOptions:
      type: object
      properties:
        TitleOptions:
          allOf:
            - $ref: "#/components/schemas/LabelOptions"
            - description: The options to configure the title visibility, name, and font size.
        PlaceholderOptions:
          allOf:
            - $ref: "#/components/schemas/TextControlPlaceholderOptions"
            - description: The configuration of the placeholder options in a text field control.
      description: The display options of a control.
    FilterVisualScope:
      type: string
      enum:
        - ALL_VISUALS
        - SELECTED_VISUALS
    FilteredVisualsList:
      type: array
      items:
        $ref: "#/components/schemas/ShortRestrictiveResourceId"
      maxItems: 50
    Path:
      type: array
      items:
        $ref: "#/components/schemas/Arn"
      minItems: 1
      maxItems: 10
    FolderFilterAttribute:
      type: string
      enum:
        - PARENT_FOLDER_ARN
        - DIRECT_QUICKSIGHT_OWNER
        - DIRECT_QUICKSIGHT_SOLE_OWNER
        - DIRECT_QUICKSIGHT_VIEWER_OR_OWNER
        - QUICKSIGHT_OWNER
        - QUICKSIGHT_VIEWER_OR_OWNER
        - FOLDER_NAME
    MemberIdArnPair:
      type: object
      properties:
        MemberId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: The ID of the member.
        MemberArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the member.
      description: An object that consists of a member Amazon Resource Name (ARN) and a member ID.
    FolderMemberList:
      type: array
      items:
        $ref: "#/components/schemas/MemberIdArnPair"
      maxItems: 100
    FolderSearchFilterList:
      type: array
      items:
        $ref: "#/components/schemas/FolderSearchFilter"
      maxItems: 100
    FolderSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the folder.
        FolderId:
          allOf:
            - $ref: "#/components/schemas/RestrictiveResourceId"
            - description: The ID of the folder.
        Name:
          allOf:
            - $ref: "#/components/schemas/FolderName"
            - description: The display name of the folder.
        FolderType:
          allOf:
            - $ref: "#/components/schemas/FolderType"
            - description: The type of folder.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that the folder was created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that the folder was last updated.
      description: "A summary of information about an existing Amazon QuickSight folder. "
    FolderSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/FolderSummary"
      maxItems: 100
    Font:
      type: object
      properties:
        FontFamily:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Determines the font family settings.
      description: Determines the font settings.
    FontSize:
      type: object
      properties:
        Relative:
          allOf:
            - $ref: "#/components/schemas/RelativeFontSize"
            - description: The lexical name for the text size, proportional to its surrounding context.
      description: The option that determines the text display size.
    FontDecoration:
      type: string
      enum:
        - UNDERLINE
        - NONE
    FontWeight:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/FontWeightName"
            - description: The lexical name for the level of boldness of the text display.
      description: The option that determines the text display weight, or boldness.
    FontStyle:
      type: string
      enum:
        - NORMAL
        - ITALIC
    FontList:
      type: array
      items:
        $ref: "#/components/schemas/Font"
      maxItems: 5
    RelativeFontSize:
      type: string
      enum:
        - EXTRA_SMALL
        - SMALL
        - MEDIUM
        - LARGE
        - EXTRA_LARGE
    FontWeightName:
      type: string
      enum:
        - NORMAL
        - BOLD
    PeriodsForward:
      type: integer
      minimum: 1
      maximum: 1000
    PeriodsBackward:
      type: integer
      minimum: 0
      maximum: 1000
    PredictionInterval:
      type: integer
      minimum: 50
      maximum: 95
    ForecastComputationSeasonality:
      type: string
      enum:
        - AUTOMATIC
        - CUSTOM
    ForecastComputationCustomSeasonalityValue:
      type: integer
      minimum: 1
      maximum: 180
    TimeBasedForecastProperties:
      type: object
      properties:
        PeriodsForward:
          allOf:
            - $ref: "#/components/schemas/PeriodsForward"
            - description: The periods forward setup of a forecast computation.
        PeriodsBackward:
          allOf:
            - $ref: "#/components/schemas/PeriodsBackward"
            - description: The periods backward setup of a forecast computation.
        UpperBoundary:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The upper boundary setup of a forecast computation.
        LowerBoundary:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The lower boundary setup of a forecast computation.
        PredictionInterval:
          allOf:
            - $ref: "#/components/schemas/PredictionInterval"
            - description: The prediction interval setup of a forecast computation.
        Seasonality:
          allOf:
            - $ref: "#/components/schemas/Seasonality"
            - description: "<p>The seasonality setup of a forecast computation. Choose one of the following options:</p> <ul> <li> <p> <code>NULL</code>: The input is set to <code>NULL</code>.</p> </li> <li> <p> <code>NON_NULL</code>: The input is set to a custom value.</p> </li> </ul>"
      description: The forecast properties setup of a forecast in the line chart.
    ForecastScenario:
      type: object
      properties:
        WhatIfPointScenario:
          allOf:
            - $ref: "#/components/schemas/WhatIfPointScenario"
            - description: The what-if analysis forecast setup with the target date.
        WhatIfRangeScenario:
          allOf:
            - $ref: "#/components/schemas/WhatIfRangeScenario"
            - description: The what-if analysis forecast setup with the date range.
      description: The forecast scenario of a forecast in the line chart.
    ForecastConfiguration:
      type: object
      properties:
        ForecastProperties:
          allOf:
            - $ref: "#/components/schemas/TimeBasedForecastProperties"
            - description: The forecast properties setup of a forecast in the line chart.
        Scenario:
          allOf:
            - $ref: "#/components/schemas/ForecastScenario"
            - description: The forecast scenario of a forecast in the line chart.
      description: The forecast configuration that is used in a line chart's display properties.
    ForecastConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/ForecastConfiguration"
      maxItems: 10
    WhatIfPointScenario:
      type: object
      required:
        - Date
        - Value
      properties:
        Date:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The date that you need the forecast results for.
        Value:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The target value that you want to meet for the provided date.
      description: Provides the forecast to meet the target for a particular date.
    WhatIfRangeScenario:
      type: object
      required:
        - StartDate
        - EndDate
        - Value
      properties:
        StartDate:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The start date in the date range that you need the forecast results for.
        EndDate:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The end date in the date range that you need the forecast results for.
        Value:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The target value that you want to meet for the provided date range.
      description: Provides the forecast to meet the target for a particular date range.
    NumberFormatConfiguration:
      type: object
      properties:
        FormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumericFormatConfiguration"
            - description: The options that determine the numeric format configuration.
      description: Formatting configuration for number fields.
    FreeFormLayoutScreenCanvasSizeOptions:
      type: object
      required:
        - OptimizedViewPortWidth
      properties:
        OptimizedViewPortWidth:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: The width that the view port will be optimized for when the layout renders.
      description: The options that determine the sizing of the canvas used in a free-form layout.
    FreeFromLayoutElementList:
      type: array
      items:
        $ref: "#/components/schemas/FreeFormLayoutElement"
      maxItems: 430
    FreeFormLayoutConfiguration:
      type: object
      required:
        - Elements
      properties:
        Elements:
          allOf:
            - $ref: "#/components/schemas/FreeFromLayoutElementList"
            - description: The elements that are included in a free-form layout.
        CanvasSizeOptions:
          $ref: "#/components/schemas/FreeFormLayoutCanvasSizeOptions"
      description: The configuration of a free-form layout.
    LayoutElementType:
      type: string
      enum:
        - VISUAL
        - FILTER_CONTROL
        - PARAMETER_CONTROL
        - TEXT_BOX
    UnlimitedPixelLength:
      type: string
      description: String based length that is composed of value and unit in px with Integer.MAX_VALUE as maximum value
    SheetElementRenderingRuleList:
      type: array
      items:
        $ref: "#/components/schemas/SheetElementRenderingRule"
      maxItems: 10000
    FreeFormLayoutElementBorderStyle:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The border visibility of a free-form layout element.
        Color:
          allOf:
            - $ref: "#/components/schemas/HexColorWithTransparency"
            - description: The border color of a free-form layout element.
      description: The background style configuration of a free-form layout element.
    FreeFormLayoutElementBackgroundStyle:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The background visibility of a free-form layout element.
        Color:
          allOf:
            - $ref: "#/components/schemas/HexColorWithTransparency"
            - description: The background color of a free-form layout element.
      description: The background style configuration of a free-form layout element.
    LoadingAnimation:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility configuration of <code>LoadingAnimation</code>.
      description: "The configuration of loading animation in free-form layout. "
    FreeFormLayoutElement:
      type: object
      required:
        - ElementId
        - ElementType
        - XAxisLocation
        - YAxisLocation
        - Width
        - Height
      properties:
        ElementId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: A unique identifier for an element within a free-form layout.
        ElementType:
          allOf:
            - $ref: "#/components/schemas/LayoutElementType"
            - description: The type of element.
        XAxisLocation:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: The x-axis coordinate of the element.
        YAxisLocation:
          allOf:
            - $ref: "#/components/schemas/UnlimitedPixelLength"
            - description: The y-axis coordinate of the element.
        Width:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: The width of an element within a free-form layout.
        Height:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: The height of an element within a free-form layout.
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of an element within a free-form layout.
        RenderingRules:
          allOf:
            - $ref: "#/components/schemas/SheetElementRenderingRuleList"
            - description: The rendering rules that determine when an element should be displayed within a free-form layout.
        BorderStyle:
          allOf:
            - $ref: "#/components/schemas/FreeFormLayoutElementBorderStyle"
            - description: The border style configuration of a free-form layout element.
        SelectedBorderStyle:
          allOf:
            - $ref: "#/components/schemas/FreeFormLayoutElementBorderStyle"
            - description: The border style configuration of a free-form layout element. This border style is used when the element is selected.
        BackgroundStyle:
          allOf:
            - $ref: "#/components/schemas/FreeFormLayoutElementBackgroundStyle"
            - description: The background style configuration of a free-form layout element.
        LoadingAnimation:
          allOf:
            - $ref: "#/components/schemas/LoadingAnimation"
            - description: The loading animation configuration of a free-form layout element.
      description: An element within a free-form layout.
    HexColorWithTransparency:
      type: string
      pattern: ^#[A-F0-9]{6}(?:[A-F0-9]{2})?$
    FreeFormSectionLayoutConfiguration:
      type: object
      required:
        - Elements
      properties:
        Elements:
          allOf:
            - $ref: "#/components/schemas/FreeFromLayoutElementList"
            - description: The elements that are included in the free-form layout.
      description: The free-form layout configuration of a section.
    FunnelChartDimensionFieldList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionField"
      maxItems: 1
    FunnelChartMeasureFieldList:
      type: array
      items:
        $ref: "#/components/schemas/MeasureField"
      maxItems: 1
    FunnelChartAggregatedFieldWells:
      type: object
      properties:
        Category:
          allOf:
            - $ref: "#/components/schemas/FunnelChartDimensionFieldList"
            - description: The category field wells of a funnel chart. Values are grouped by category fields.
        Values:
          allOf:
            - $ref: "#/components/schemas/FunnelChartMeasureFieldList"
            - description: The value field wells of a funnel chart. Values are aggregated based on categories.
      description: The field well configuration of a <code>FunnelChartVisual</code>.
    FunnelChartFieldWells:
      type: object
      properties:
        FunnelChartAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/FunnelChartAggregatedFieldWells"
            - description: The field well configuration of a <code>FunnelChartVisual</code>.
      description: <p>The field well configuration of a <code>FunnelChartVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    FunnelChartSortConfiguration:
      type: object
      properties:
        CategorySort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the category fields.
        CategoryItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of categories displayed.
      description: The sort configuration of a <code>FunnelChartVisual</code>.
    FunnelChartDataLabelOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility option that determines if data labels are displayed.
        CategoryLabelVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the category labels within the data labels.
        MeasureLabelVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the measure labels within the data labels.
        Position:
          allOf:
            - $ref: "#/components/schemas/DataLabelPosition"
            - description: Determines the positioning of the data label relative to a section of the funnel.
        LabelFontConfiguration:
          allOf:
            - $ref: "#/components/schemas/FontConfiguration"
            - description: <p>The font configuration for the data labels.</p> <p>Only the <code>FontSize</code> attribute of the font configuration is used for data labels.</p>
        LabelColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color of the data label text.
        MeasureDataLabelStyle:
          allOf:
            - $ref: "#/components/schemas/FunnelChartMeasureDataLabelStyle"
            - description: Determines the style of the metric labels.
      description: The options that determine the presentation of the data labels.
    FunnelChartConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/FunnelChartFieldWells"
            - description: The field well configuration of a <code>FunnelChartVisual</code>.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/FunnelChartSortConfiguration"
            - description: The sort configuration of a <code>FunnelChartVisual</code>.
        CategoryLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options of the categories that are displayed in a <code>FunnelChartVisual</code>.
        ValueLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options for the values that are displayed in a <code>FunnelChartVisual</code>.
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The tooltip configuration of a <code>FunnelChartVisual</code>.
        DataLabelOptions:
          allOf:
            - $ref: "#/components/schemas/FunnelChartDataLabelOptions"
            - description: The options that determine the presentation of the data labels.
        VisualPalette:
          allOf:
            - $ref: "#/components/schemas/VisualPalette"
            - description: The visual palette configuration of a <code>FunnelChartVisual</code>.
      description: The configuration of a <code>FunnelChartVisual</code>.
    FunnelChartMeasureDataLabelStyle:
      type: string
      enum:
        - VALUE_ONLY
        - PERCENTAGE_BY_FIRST_STAGE
        - PERCENTAGE_BY_PREVIOUS_STAGE
        - VALUE_AND_PERCENTAGE_BY_FIRST_STAGE
        - VALUE_AND_PERCENTAGE_BY_PREVIOUS_STAGE
    FunnelChartVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers..
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/FunnelChartConfiguration"
            - description: The configuration of a <code>FunnelChartVisual</code>.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: <p>A funnel chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/funnel-visual-content.html">Using funnel charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    GaugeChartArcConditionalFormatting:
      type: object
      properties:
        ForegroundColor:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingColor"
            - description: The conditional formatting of the arc foreground color.
      description: The options that determine the presentation of the arc of a <code>GaugeChartVisual</code>.
    GaugeChartConditionalFormattingOptionList:
      type: array
      items:
        $ref: "#/components/schemas/GaugeChartConditionalFormattingOption"
      maxItems: 100
    GaugeChartConditionalFormatting:
      type: object
      properties:
        ConditionalFormattingOptions:
          allOf:
            - $ref: "#/components/schemas/GaugeChartConditionalFormattingOptionList"
            - description: Conditional formatting options of a <code>GaugeChartVisual</code>.
      description: The conditional formatting of a <code>GaugeChartVisual</code>.
    GaugeChartPrimaryValueConditionalFormatting:
      type: object
      properties:
        TextColor:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingColor"
            - description: The conditional formatting of the primary value text color.
        Icon:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingIcon"
            - description: The conditional formatting of the primary value icon.
      description: The conditional formatting for the primary value of a <code>GaugeChartVisual</code>.
    GaugeChartConditionalFormattingOption:
      type: object
      properties:
        PrimaryValue:
          allOf:
            - $ref: "#/components/schemas/GaugeChartPrimaryValueConditionalFormatting"
            - description: The conditional formatting for the primary value of a <code>GaugeChartVisual</code>.
        Arc:
          allOf:
            - $ref: "#/components/schemas/GaugeChartArcConditionalFormatting"
            - description: The options that determine the presentation of the arc of a <code>GaugeChartVisual</code>.
      description: Conditional formatting options of a <code>GaugeChartVisual</code>.
    GaugeChartFieldWells:
      type: object
      properties:
        Values:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The value field wells of a <code>GaugeChartVisual</code>.
        TargetValues:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The target value field wells of a <code>GaugeChartVisual</code>.
      description: The field well configuration of a <code>GaugeChartVisual</code>.
    GaugeChartOptions:
      type: object
      properties:
        PrimaryValueDisplayType:
          allOf:
            - $ref: "#/components/schemas/PrimaryValueDisplayType"
            - description: The options that determine the primary value display type.
        Comparison:
          allOf:
            - $ref: "#/components/schemas/ComparisonConfiguration"
            - description: The comparison configuration of a <code>GaugeChartVisual</code>.
        ArcAxis:
          allOf:
            - $ref: "#/components/schemas/ArcAxisConfiguration"
            - description: The arc axis configuration of a <code>GaugeChartVisual</code>.
        Arc:
          allOf:
            - $ref: "#/components/schemas/ArcConfiguration"
            - description: The arc configuration of a <code>GaugeChartVisual</code>.
        PrimaryValueFontConfiguration:
          allOf:
            - $ref: "#/components/schemas/FontConfiguration"
            - description: The options that determine the primary value font configuration.
      description: The options that determine the presentation of the <code>GaugeChartVisual</code>.
    GaugeChartConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/GaugeChartFieldWells"
            - description: The field well configuration of a <code>GaugeChartVisual</code>.
        GaugeChartOptions:
          allOf:
            - $ref: "#/components/schemas/GaugeChartOptions"
            - description: The options that determine the presentation of the <code>GaugeChartVisual</code>.
        DataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: The data label configuration of a <code>GaugeChartVisual</code>.
        TooltipOptions:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The tooltip configuration of a <code>GaugeChartVisual</code>.
        VisualPalette:
          allOf:
            - $ref: "#/components/schemas/VisualPalette"
            - description: The visual palette configuration of a <code>GaugeChartVisual</code>.
      description: The configuration of a <code>GaugeChartVisual</code>.
    PrimaryValueDisplayType:
      type: string
      enum:
        - HIDDEN
        - COMPARISON
        - ACTUAL
    GaugeChartVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/GaugeChartConfiguration"
            - description: The configuration of a <code>GaugeChartVisual</code>.
        ConditionalFormatting:
          allOf:
            - $ref: "#/components/schemas/GaugeChartConditionalFormatting"
            - description: The conditional formatting of a <code>GaugeChartVisual</code>.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
      description: <p>A gauge chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/gauge-chart.html">Using gauge charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    SessionLifetimeInMinutes:
      type: integer
      minimum: 15
      maximum: 600
    SessionTagList:
      type: array
      items:
        $ref: "#/components/schemas/SessionTag"
      minItems: 1
      maxItems: 50
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    GenerateEmbedUrlForAnonymousUserRequest:
      type: object
      required:
        - Namespace
        - AuthorizedResourceArns
        - ExperienceConfiguration
      title: GenerateEmbedUrlForAnonymousUserRequest
      properties:
        SessionLifetimeInMinutes:
          allOf:
            - $ref: "#/components/schemas/SessionLifetimeInMinutes"
            - description: How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.
        Namespace:
          allOf:
            - $ref: "#/components/schemas/Namespace"
            - description: The Amazon QuickSight namespace that the anonymous user virtually belongs to. If you are not using an Amazon QuickSight custom namespace, set this to <code>default</code>.
        SessionTags:
          allOf:
            - $ref: "#/components/schemas/SessionTagList"
            - description: <p>The session tags used for row-level security. Before you use this parameter, make sure that you have configured the relevant datasets using the <code>DataSet$RowLevelPermissionTagConfiguration</code> parameter so that session tags can be used to provide row-level security.</p> <p>These are not the tags used for the Amazon Web Services resource tagging feature. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-rls-tags.html">Using Row-Level Security (RLS) with Tags</a>in the <i>Amazon QuickSight User Guide</i>.</p>
        AuthorizedResourceArns:
          allOf:
            - $ref: "#/components/schemas/ArnList"
            - description: The Amazon Resource Names (ARNs) for the Amazon QuickSight resources that the user is authorized to access during the lifetime of the session. If you choose <code>Dashboard</code> embedding experience, pass the list of dashboard ARNs in the account that you want the user to be able to view. Currently, you can pass up to 25 dashboard ARNs in each API call.
        ExperienceConfiguration:
          allOf:
            - $ref: "#/components/schemas/AnonymousUserEmbeddingExperienceConfiguration"
            - description: The configuration of the experience that you are embedding.
        AllowedDomains:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: <p>The domains that you want to add to the allow list for access to the generated URL that is then embedded. This optional parameter overrides the static domains that are configured in the Manage QuickSight menu in the Amazon QuickSight console. Instead, it allows only the domains that you include in this parameter. You can list up to three domains or subdomains in each API call.</p> <p>To include all subdomains under a specific domain to the allow list, use <code>*</code>. For example, <code>https://*.sapp.amazon.com</code> includes all subdomains under <code>https://sapp.amazon.com</code>.</p>
    RegisteredUserEmbeddingExperienceConfiguration:
      type: object
      properties:
        Dashboard:
          allOf:
            - $ref: "#/components/schemas/RegisteredUserDashboardEmbeddingConfiguration"
            - description: The configuration details for providing a dashboard embedding experience.
        QuickSightConsole:
          allOf:
            - $ref: "#/components/schemas/RegisteredUserQuickSightConsoleEmbeddingConfiguration"
            - description: <p>The configuration details for providing each Amazon QuickSight console embedding experience. This can be used along with custom permissions to restrict access to certain features. For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>Use <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_GenerateEmbedUrlForRegisteredUser.html">GenerateEmbedUrlForRegisteredUser</a> </code> where you want to provide an authoring portal that allows users to create data sources, datasets, analyses, and dashboards. The users who accesses an embedded Amazon QuickSight console needs to belong to the author or admin security cohort. If you want to restrict permissions to some of these features, add a custom permissions profile to the user with the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a> </code> API operation. Use the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_RegisterUser.html">RegisterUser</a> </code> API operation to add a new user with a custom permission profile attached. For more information, see the following sections in the <i>Amazon QuickSight User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedded-analytics-full-console-for-authenticated-users.html">Embedding the Full Functionality of the Amazon QuickSight Console for Authenticated Users</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/quicksight/latest/user/customizing-permissions-to-the-quicksight-console.html">Customizing Access to the Amazon QuickSight Console</a> </p> </li> </ul> <p>For more information about the high-level steps for embedding and for an interactive demo of the ways you can customize embedding, visit the <a href="https://docs.aws.amazon.com/quicksight/latest/user/quicksight-dev-portal.html">Amazon QuickSight Developer Portal</a>.</p>
        QSearchBar:
          allOf:
            - $ref: "#/components/schemas/RegisteredUserQSearchBarEmbeddingConfiguration"
            - description: <p>The configuration details for embedding the Q search bar.</p> <p>For more information about embedding the Q search bar, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/embedding-overview.html">Embedding Overview</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        DashboardVisual:
          allOf:
            - $ref: "#/components/schemas/RegisteredUserDashboardVisualEmbeddingConfiguration"
            - description: The type of embedding experience. In this case, Amazon QuickSight visuals.
      description: <p>The type of experience you want to embed. For registered users, you can embed Amazon QuickSight dashboards or the Amazon QuickSight console.</p> <note> <p>Exactly one of the experience configurations is required. You can choose <code>Dashboard</code> or <code>QuickSightConsole</code>. You cannot choose more than one experience configuration.</p> </note>
    GenerateEmbedUrlForRegisteredUserRequest:
      type: object
      required:
        - UserArn
        - ExperienceConfiguration
      title: GenerateEmbedUrlForRegisteredUserRequest
      properties:
        SessionLifetimeInMinutes:
          allOf:
            - $ref: "#/components/schemas/SessionLifetimeInMinutes"
            - description: How many minutes the session is valid. The session lifetime must be in [15-600] minutes range.
        UserArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name for the registered user.
        ExperienceConfiguration:
          allOf:
            - $ref: "#/components/schemas/RegisteredUserEmbeddingExperienceConfiguration"
            - description: The experience you are embedding. For registered users, you can embed Amazon QuickSight dashboards, Amazon QuickSight visuals, the Amazon QuickSight Q search bar, or the entire Amazon QuickSight console.
        AllowedDomains:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: <p>The domains that you want to add to the allow list for access to the generated URL that is then embedded. This optional parameter overrides the static domains that are configured in the Manage QuickSight menu in the Amazon QuickSight console. Instead, it allows only the domains that you include in this parameter. You can list up to three domains or subdomains in each API call.</p> <p>To include all subdomains under a specific domain to the allow list, use <code>*</code>. For example, <code>https://*.sapp.amazon.com</code> includes all subdomains under <code>https://sapp.amazon.com</code>.</p>
    GeoSpatialCountryCode:
      type: string
      enum:
        - US
    Latitude:
      type: number
      format: double
      minimum: -90
      maximum: 90
    Longitude:
      type: number
      format: double
      minimum: -1800
      maximum: 1800
    GeospatialCoordinateBounds:
      type: object
      required:
        - North
        - South
        - West
        - East
      properties:
        North:
          allOf:
            - $ref: "#/components/schemas/Latitude"
            - description: The latitude of the north bound of the geospatial coordinate bounds.
        South:
          allOf:
            - $ref: "#/components/schemas/Latitude"
            - description: The latitude of the south bound of the geospatial coordinate bounds.
        West:
          allOf:
            - $ref: "#/components/schemas/Longitude"
            - description: The longitude of the west bound of the geospatial coordinate bounds.
        East:
          allOf:
            - $ref: "#/components/schemas/Longitude"
            - description: The longitude of the east bound of the geospatial coordinate bounds.
      description: The bound options (north, south, west, east) of the geospatial window options.
    GeospatialMapAggregatedFieldWells:
      type: object
      properties:
        Geospatial:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The geospatial field wells of a geospatial map. Values are grouped by geospatial fields.
        Values:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The size field wells of a geospatial map. Values are aggregated based on geospatial fields.
        Colors:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The color field wells of a geospatial map.
      description: The aggregated field wells for a geospatial map.
    GeospatialMapFieldWells:
      type: object
      properties:
        GeospatialMapAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/GeospatialMapAggregatedFieldWells"
            - description: The aggregated field well for a geospatial map.
      description: <p>The field wells of a <code>GeospatialMapVisual</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    GeospatialPointStyleOptions:
      type: object
      properties:
        SelectedPointStyle:
          allOf:
            - $ref: "#/components/schemas/GeospatialSelectedPointStyle"
            - description: The selected point styles (point, cluster) of the geospatial map.
        ClusterMarkerConfiguration:
          allOf:
            - $ref: "#/components/schemas/ClusterMarkerConfiguration"
            - description: The cluster marker configuration of the geospatial point style.
      description: The point style of the geospatial map.
    GeospatialMapConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/GeospatialMapFieldWells"
            - description: The field wells of the visual.
        Legend:
          allOf:
            - $ref: "#/components/schemas/LegendOptions"
            - description: The legend display setup of the visual.
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The tooltip display setup of the visual.
        WindowOptions:
          allOf:
            - $ref: "#/components/schemas/GeospatialWindowOptions"
            - description: The window options of the geospatial map.
        MapStyleOptions:
          allOf:
            - $ref: "#/components/schemas/GeospatialMapStyleOptions"
            - description: The map style options of the geospatial map.
        PointStyleOptions:
          allOf:
            - $ref: "#/components/schemas/GeospatialPointStyleOptions"
            - description: The point style options of the geospatial map.
        VisualPalette:
          $ref: "#/components/schemas/VisualPalette"
      description: The configuration of a <code>GeospatialMapVisual</code>.
    GeospatialMapVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers..
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/GeospatialMapConfiguration"
            - description: The configuration settings of the visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
      description: <p>A geospatial map or a points on map visual.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/point-maps.html">Creating point maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    GeospatialSelectedPointStyle:
      type: string
      enum:
        - POINT
        - CLUSTER
    MapZoomMode:
      type: string
      enum:
        - AUTO
        - MANUAL
    GetDashboardEmbedUrlRequest:
      type: object
      title: GetDashboardEmbedUrlRequest
      properties: {}
    GetSessionEmbedUrlRequest:
      type: object
      title: GetSessionEmbedUrlRequest
      properties: {}
    TableBorderOptions:
      type: object
      properties:
        Color:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color of a table border.
        Thickness:
          allOf:
            - $ref: "#/components/schemas/TableBorderThickness"
            - description: The thickness of a table border.
        Style:
          allOf:
            - $ref: "#/components/schemas/TableBorderStyle"
            - description: The style (none, solid) of a table border.
      description: The border options for a table border.
    TableSideBorderOptions:
      type: object
      properties:
        InnerVertical:
          allOf:
            - $ref: "#/components/schemas/TableBorderOptions"
            - description: The table border options of the inner vertical border.
        InnerHorizontal:
          allOf:
            - $ref: "#/components/schemas/TableBorderOptions"
            - description: The table border options of the inner horizontal border.
        Left:
          allOf:
            - $ref: "#/components/schemas/TableBorderOptions"
            - description: The table border options of the left border.
        Right:
          allOf:
            - $ref: "#/components/schemas/TableBorderOptions"
            - description: The table border options of the right border.
        Top:
          allOf:
            - $ref: "#/components/schemas/TableBorderOptions"
            - description: The table border options of the top border.
        Bottom:
          allOf:
            - $ref: "#/components/schemas/TableBorderOptions"
            - description: The table border options of the bottom border.
      description: The side border options for a table.
    GlobalTableBorderOptions:
      type: object
      properties:
        UniformBorder:
          allOf:
            - $ref: "#/components/schemas/TableBorderOptions"
            - description: Determines the options for uniform border.
        SideSpecificBorder:
          allOf:
            - $ref: "#/components/schemas/TableSideBorderOptions"
            - description: Determines the options for side specific border.
      description: Determines the border options for a table visual.
    GradientStopList:
      type: array
      items:
        $ref: "#/components/schemas/GradientStop"
      maxItems: 100
    GradientStop:
      type: object
      required:
        - GradientOffset
      properties:
        GradientOffset:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: Determines gradient offset value.
        DataValue:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: Determines the data value.
        Color:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: Determines the color.
      description: Determines the gradient stop configuration.
    GridLayoutScreenCanvasSizeOptions:
      type: object
      required:
        - ResizeOption
      properties:
        ResizeOption:
          allOf:
            - $ref: "#/components/schemas/ResizeOption"
            - description: "<p>This value determines the layout behavior when the viewport is resized.</p> <ul> <li> <p> <code>FIXED</code>: A fixed width will be used when optimizing the layout. In the Amazon QuickSight console, this option is called <code>Classic</code>.</p> </li> <li> <p> <code>RESPONSIVE</code>: The width of the canvas will be responsive and optimized to the view port. In the Amazon QuickSight console, this option is called <code>Tiled</code>.</p> </li> </ul>"
        OptimizedViewPortWidth:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: The width that the view port will be optimized for when the layout renders.
      description: The options that determine the sizing of the canvas used in a grid layout.
    GridLayoutElementList:
      type: array
      items:
        $ref: "#/components/schemas/GridLayoutElement"
      maxItems: 430
    GridLayoutConfiguration:
      type: object
      required:
        - Elements
      properties:
        Elements:
          allOf:
            - $ref: "#/components/schemas/GridLayoutElementList"
            - description: The elements that are included in a grid layout.
        CanvasSizeOptions:
          $ref: "#/components/schemas/GridLayoutCanvasSizeOptions"
      description: <p>The configuration for a grid layout. Also called a tiled layout.</p> <p>Visuals snap to a grid with standard spacing and alignment. Dashboards are displayed as designed, with options to fit to screen or view at actual size.</p>
    GridLayoutElementColumnIndex:
      type: integer
      minimum: 0
      maximum: 35
    GridLayoutElementColumnSpan:
      type: integer
      minimum: 1
      maximum: 36
    GridLayoutElementRowIndex:
      type: integer
      minimum: 0
      maximum: 9009
    GridLayoutElementRowSpan:
      type: integer
      minimum: 1
      maximum: 21
    GridLayoutElement:
      type: object
      required:
        - ElementId
        - ElementType
        - ColumnSpan
        - RowSpan
      properties:
        ElementId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: A unique identifier for an element within a grid layout.
        ElementType:
          allOf:
            - $ref: "#/components/schemas/LayoutElementType"
            - description: The type of element.
        ColumnIndex:
          allOf:
            - $ref: "#/components/schemas/GridLayoutElementColumnIndex"
            - description: The column index for the upper left corner of an element.
        ColumnSpan:
          allOf:
            - $ref: "#/components/schemas/GridLayoutElementColumnSpan"
            - description: The width of a grid element expressed as a number of grid columns.
        RowIndex:
          allOf:
            - $ref: "#/components/schemas/GridLayoutElementRowIndex"
            - description: The row index for the upper left corner of an element.
        RowSpan:
          allOf:
            - $ref: "#/components/schemas/GridLayoutElementRowSpan"
            - description: The height of a grid element expressed as a number of grid rows.
      description: An element within a grid layout.
    ResizeOption:
      type: string
      enum:
        - FIXED
        - RESPONSIVE
    GroupFilterAttribute:
      type: string
      enum:
        - GROUP_NAME
    GroupFilterOperator:
      type: string
      enum:
        - StartsWith
    GroupList:
      type: array
      items:
        $ref: "#/components/schemas/Group"
    GroupMemberList:
      type: array
      items:
        $ref: "#/components/schemas/GroupMember"
    GroupSearchFilterList:
      type: array
      items:
        $ref: "#/components/schemas/GroupSearchFilter"
      minItems: 1
      maxItems: 1
    GrowthRatePeriodSize:
      type: integer
      minimum: 2
      maximum: 52
    GutterStyle:
      type: object
      properties:
        Show:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "This Boolean value controls whether to display a gutter space between sheet tiles. "
      description: The display options for gutter spacing between tiles on a sheet.
    HeaderFooterSectionConfiguration:
      type: object
      required:
        - SectionId
        - Layout
      properties:
        SectionId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of the header or footer section.
        Layout:
          allOf:
            - $ref: "#/components/schemas/SectionLayoutConfiguration"
            - description: The layout configuration of the header or footer section.
        Style:
          allOf:
            - $ref: "#/components/schemas/SectionStyle"
            - description: The style options of a header or footer section.
      description: The configuration of a header or footer section.
    HeaderFooterSectionConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/HeaderFooterSectionConfiguration"
      maxItems: 1
    HeatMapDimensionFieldList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionField"
      maxItems: 1
    HeatMapMeasureFieldList:
      type: array
      items:
        $ref: "#/components/schemas/MeasureField"
      maxItems: 1
    HeatMapAggregatedFieldWells:
      type: object
      properties:
        Rows:
          allOf:
            - $ref: "#/components/schemas/HeatMapDimensionFieldList"
            - description: The rows field well of a heat map.
        Columns:
          allOf:
            - $ref: "#/components/schemas/HeatMapDimensionFieldList"
            - description: The columns field well of a heat map.
        Values:
          allOf:
            - $ref: "#/components/schemas/HeatMapMeasureFieldList"
            - description: The values field well of a heat map.
      description: The aggregated field wells of a heat map.
    HeatMapFieldWells:
      type: object
      properties:
        HeatMapAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/HeatMapAggregatedFieldWells"
            - description: The aggregated field wells of a heat map.
      description: <p>The field well configuration of a heat map.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    HeatMapSortConfiguration:
      type: object
      properties:
        HeatMapRowSort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The field sort configuration of the rows fields.
        HeatMapColumnSort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The column sort configuration for heat map for columns that aren't a part of a field well.
        HeatMapRowItemsLimitConfiguration:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of rows that are displayed in a heat map.
        HeatMapColumnItemsLimitConfiguration:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of columns that are displayed in a heat map.
      description: The sort configuration of a heat map.
    HeatMapConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/HeatMapFieldWells"
            - description: The field wells of the visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/HeatMapSortConfiguration"
            - description: The sort configuration of a heat map.
        RowLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options of the row that is displayed in a <code>heat map</code>.
        ColumnLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options of the column that is displayed in a heat map.
        ColorScale:
          allOf:
            - $ref: "#/components/schemas/ColorScale"
            - description: The color options (gradient color, point of divergence) in a heat map.
        Legend:
          allOf:
            - $ref: "#/components/schemas/LegendOptions"
            - description: The legend display setup of the visual.
        DataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: The options that determine if visual data labels are displayed.
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The tooltip display setup of the visual.
      description: The configuration of a heat map.
    HeatMapVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/HeatMapConfiguration"
            - description: The configuration of a heat map.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
      description: <p>A heat map.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/heat-map.html">Using heat maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    HistogramMeasureFieldList:
      type: array
      items:
        $ref: "#/components/schemas/MeasureField"
      maxItems: 1
    HistogramAggregatedFieldWells:
      type: object
      properties:
        Values:
          allOf:
            - $ref: "#/components/schemas/HistogramMeasureFieldList"
            - description: The value field wells of a histogram. Values are aggregated by <code>COUNT</code> or <code>DISTINCT_COUNT</code>.
      description: The field well configuration of a histogram.
    HistogramBinType:
      type: string
      enum:
        - BIN_COUNT
        - BIN_WIDTH
    HistogramBinOptions:
      type: object
      properties:
        SelectedBinType:
          allOf:
            - $ref: "#/components/schemas/HistogramBinType"
            - description: The options that determine the selected bin type.
        BinCount:
          allOf:
            - $ref: "#/components/schemas/BinCountOptions"
            - description: The options that determine the bin count of a histogram.
        BinWidth:
          allOf:
            - $ref: "#/components/schemas/BinWidthOptions"
            - description: The options that determine the bin width of a histogram.
        StartValue:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The options that determine the bin start value.
      description: The options that determine the presentation of histogram bins.
    HistogramFieldWells:
      type: object
      properties:
        HistogramAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/HistogramAggregatedFieldWells"
            - description: The field well configuration of a histogram.
      description: The field well configuration of a histogram.
    HistogramConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/HistogramFieldWells"
            - description: The field well configuration of a histogram.
        XAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The options that determine the presentation of the x-axis.
        XAxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The options that determine the presentation of the x-axis label.
        YAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The options that determine the presentation of the y-axis.
        BinOptions:
          allOf:
            - $ref: "#/components/schemas/HistogramBinOptions"
            - description: The options that determine the presentation of histogram bins.
        DataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: The data label configuration of a histogram.
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The tooltip configuration of a histogram.
        VisualPalette:
          allOf:
            - $ref: "#/components/schemas/VisualPalette"
            - description: The visual palette configuration of a histogram.
      description: The configuration for a <code>HistogramVisual</code>.
    HistogramVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/HistogramConfiguration"
            - description: The configuration for a <code>HistogramVisual</code>.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
      description: <p>A histogram.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/histogram-charts.html">Using histograms</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    HorizontalTextAlignment:
      type: string
      enum:
        - LEFT
        - CENTER
        - RIGHT
        - AUTO
    IAMPolicyAssignmentSummary:
      type: object
      properties:
        AssignmentName:
          allOf:
            - $ref: "#/components/schemas/IAMPolicyAssignmentName"
            - description: Assignment name.
        AssignmentStatus:
          allOf:
            - $ref: "#/components/schemas/AssignmentStatus"
            - description: Assignment status.
      description: IAM policy assignment summary.
    IAMPolicyAssignmentSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/IAMPolicyAssignmentSummary"
    IdentityName:
      type: string
      pattern: "[\\u0020-\\u00FF]+"
      minLength: 1
    IdentityType:
      type: string
      enum:
        - IAM
        - QUICKSIGHT
    LookbackWindow:
      type: object
      required:
        - ColumnName
        - Size
        - SizeUnit
      properties:
        ColumnName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the lookback window column.
        Size:
          allOf:
            - $ref: "#/components/schemas/PositiveLong"
            - description: The lookback window column size.
        SizeUnit:
          allOf:
            - $ref: "#/components/schemas/LookbackWindowSizeUnit"
            - description: The size unit that is used for the lookback window column. Valid values for this structure are <code>HOUR</code>, <code>DAY</code>, and <code>WEEK</code>.
      description: The lookback window setup of an incremental refresh configuration.
    IncrementalRefresh:
      type: object
      required:
        - LookbackWindow
      properties:
        LookbackWindow:
          allOf:
            - $ref: "#/components/schemas/LookbackWindow"
            - description: The lookback window setup for an incremental refresh configuration.
      description: The incremental refresh configuration for a dataset.
    RowInfo:
      type: object
      properties:
        RowsIngested:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The number of rows that were ingested.
        RowsDropped:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The number of rows that were not ingested.
        TotalRowsInDataset:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The total number of rows in the dataset.
      description: Information about rows for a data set SPICE ingestion.
    QueueInfo:
      type: object
      required:
        - WaitingOnIngestion
        - QueuedIngestion
      properties:
        WaitingOnIngestion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the queued ingestion.
        QueuedIngestion:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the ongoing ingestion. The queued ingestion is waiting for the ongoing ingestion to complete.
      description: Information about a queued dataset SPICE ingestion.
    IngestionRequestSource:
      type: string
      enum:
        - MANUAL
        - SCHEDULED
    IngestionRequestType:
      type: string
      enum:
        - INITIAL_INGESTION
        - EDIT
        - INCREMENTAL_REFRESH
        - FULL_REFRESH
      description: This defines the type of ingestion request. This is returned as part of create ingestion response.
    IngestionMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    Ingestions:
      type: array
      items:
        $ref: "#/components/schemas/Ingestion"
    InputColumnDataType:
      type: string
      enum:
        - STRING
        - INTEGER
        - DECIMAL
        - DATETIME
        - BIT
        - BOOLEAN
        - JSON
    InputColumn:
      type: object
      required:
        - Name
        - Type
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: The name of this column in the underlying data source.
        Type:
          allOf:
            - $ref: "#/components/schemas/InputColumnDataType"
            - description: The data type of the column.
      description: Metadata for a column that is used as the input of a transform operation.
    InsightConfiguration:
      type: object
      properties:
        Computations:
          allOf:
            - $ref: "#/components/schemas/ComputationList"
            - description: The computations configurations of the insight visual
        CustomNarrative:
          allOf:
            - $ref: "#/components/schemas/CustomNarrativeOptions"
            - description: The custom narrative of the insight visual.
      description: The configuration of an insight visual.
    InsightVisual:
      type: object
      required:
        - VisualId
        - DataSetIdentifier
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        InsightConfiguration:
          allOf:
            - $ref: "#/components/schemas/InsightConfiguration"
            - description: The configuration of an insight visual.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        DataSetIdentifier:
          allOf:
            - $ref: "#/components/schemas/DataSetIdentifier"
            - description: The dataset that is used in the insight visual.
      description: <p>An insight visual.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/computational-insights.html">Working with insights</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    InstanceId:
      type: string
      minLength: 1
      maxLength: 64
    SensitiveLongObject:
      type: integer
    IntegerDefaultValues:
      type: object
      properties:
        DynamicValue:
          allOf:
            - $ref: "#/components/schemas/DynamicDefaultValue"
            - description: The dynamic value of the <code>IntegerDefaultValues</code>. Different defaults are displayed according to users, groups, and values mapping.
        StaticValues:
          allOf:
            - $ref: "#/components/schemas/IntegerDefaultValueList"
            - description: The static values of the <code>IntegerDefaultValues</code>.
      description: The default values of the <code>IntegerParameterDeclaration</code>.
    SensitiveLongList:
      type: array
      items:
        $ref: "#/components/schemas/SensitiveLong"
    IntegerParameter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the integer parameter.
        Values:
          allOf:
            - $ref: "#/components/schemas/SensitiveLongList"
            - description: The values for the integer parameter.
      description: An integer parameter.
    IntegerValueWhenUnsetConfiguration:
      type: object
      properties:
        ValueWhenUnsetOption:
          allOf:
            - $ref: "#/components/schemas/ValueWhenUnsetOption"
            - description: "<p>The built-in options for default values. The value can be one of the following:</p> <ul> <li> <p> <code>RECOMMENDED</code>: The recommended value.</p> </li> <li> <p> <code>NULL</code>: The <code>NULL</code> value.</p> </li> </ul>"
        CustomValue:
          allOf:
            - $ref: "#/components/schemas/SensitiveLong"
            - description: A custom value that's used when the value of a parameter isn't set.
      description: <p>A parameter declaration for the <code>Integer</code> data type.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    IntegerParameterDeclaration:
      type: object
      required:
        - ParameterValueType
        - Name
      properties:
        ParameterValueType:
          allOf:
            - $ref: "#/components/schemas/ParameterValueType"
            - description: The value type determines whether the parameter is a single-value or multi-value parameter.
        Name:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The name of the parameter that is being declared.
        DefaultValues:
          allOf:
            - $ref: "#/components/schemas/IntegerDefaultValues"
            - description: The default values of a parameter. If the parameter is a single-value parameter, a maximum of one default value can be provided.
        ValueWhenUnset:
          allOf:
            - $ref: "#/components/schemas/IntegerValueWhenUnsetConfiguration"
            - description: A parameter declaration for the <code>Integer</code> data type.
      description: A parameter declaration for the <code>Integer</code> data type.
    SensitiveLong:
      type: integer
    OtherCategories:
      type: string
      enum:
        - INCLUDE
        - EXCLUDE
    SiteBaseUrl:
      type: string
      minLength: 1
      maxLength: 1024
    LogicalTableId:
      type: string
      pattern: "[0-9a-zA-Z-]*"
      minLength: 1
      maxLength: 64
    JoinKeyProperties:
      type: object
      properties:
        UniqueKey:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: A value that indicates that a row in a table is uniquely identified by the columns in a join key. This is used by Amazon QuickSight to optimize query performance.
      description: Properties associated with the columns participating in a join.
    JoinType:
      type: string
      enum:
        - INNER
        - OUTER
        - LEFT
        - RIGHT
    OnClause:
      type: string
      minLength: 1
      maxLength: 512
    JoinInstruction:
      type: object
      required:
        - LeftOperand
        - RightOperand
        - Type
        - OnClause
      properties:
        LeftOperand:
          allOf:
            - $ref: "#/components/schemas/LogicalTableId"
            - description: The operand on the left side of a join.
        RightOperand:
          allOf:
            - $ref: "#/components/schemas/LogicalTableId"
            - description: The operand on the right side of a join.
        LeftJoinKeyProperties:
          allOf:
            - $ref: "#/components/schemas/JoinKeyProperties"
            - description: Join key properties of the left operand.
        RightJoinKeyProperties:
          allOf:
            - $ref: "#/components/schemas/JoinKeyProperties"
            - description: Join key properties of the right operand.
        Type:
          allOf:
            - $ref: "#/components/schemas/JoinType"
            - description: The type of join that it is.
        OnClause:
          allOf:
            - $ref: "#/components/schemas/OnClause"
            - description: The join instructions provided in the <code>ON</code> clause of a join.
      description: "The instructions associated with a join. "
    KPIConditionalFormattingOptionList:
      type: array
      items:
        $ref: "#/components/schemas/KPIConditionalFormattingOption"
      maxItems: 100
    KPIConditionalFormatting:
      type: object
      properties:
        ConditionalFormattingOptions:
          allOf:
            - $ref: "#/components/schemas/KPIConditionalFormattingOptionList"
            - description: The conditional formatting options of a KPI visual.
      description: The conditional formatting of a KPI visual.
    KPIPrimaryValueConditionalFormatting:
      type: object
      properties:
        TextColor:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingColor"
            - description: The conditional formatting of the primary value's text color.
        Icon:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingIcon"
            - description: The conditional formatting of the primary value's icon.
      description: The conditional formatting for the primary value of a KPI visual.
    KPIProgressBarConditionalFormatting:
      type: object
      properties:
        ForegroundColor:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingColor"
            - description: The conditional formatting of the progress bar's foreground color.
      description: The conditional formatting for the progress bar of a KPI visual.
    KPIConditionalFormattingOption:
      type: object
      properties:
        PrimaryValue:
          allOf:
            - $ref: "#/components/schemas/KPIPrimaryValueConditionalFormatting"
            - description: The conditional formatting for the primary value of a KPI visual.
        ProgressBar:
          allOf:
            - $ref: "#/components/schemas/KPIProgressBarConditionalFormatting"
            - description: The conditional formatting for the progress bar of a KPI visual.
      description: The conditional formatting options of a KPI visual.
    KPIFieldWells:
      type: object
      properties:
        Values:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The value field wells of a KPI visual.
        TargetValues:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The target value field wells of a KPI visual.
        TrendGroups:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The trend group field wells of a KPI visual.
      description: The field well configuration of a KPI visual.
    KPISortConfiguration:
      type: object
      properties:
        TrendGroupSort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the trend group fields.
      description: The sort configuration of a KPI visual.
    KPIOptions:
      type: object
      properties:
        ProgressBar:
          allOf:
            - $ref: "#/components/schemas/ProgressBarOptions"
            - description: The options that determine the presentation of the progress bar of a KPI visual.
        TrendArrows:
          allOf:
            - $ref: "#/components/schemas/TrendArrowOptions"
            - description: The options that determine the presentation of trend arrows in a KPI visual.
        SecondaryValue:
          allOf:
            - $ref: "#/components/schemas/SecondaryValueOptions"
            - description: The options that determine the presentation of the secondary value of a KPI visual.
        Comparison:
          allOf:
            - $ref: "#/components/schemas/ComparisonConfiguration"
            - description: The comparison configuration of a KPI visual.
        PrimaryValueDisplayType:
          allOf:
            - $ref: "#/components/schemas/PrimaryValueDisplayType"
            - description: The options that determine the primary value display type.
        PrimaryValueFontConfiguration:
          allOf:
            - $ref: "#/components/schemas/FontConfiguration"
            - description: The options that determine the primary value font configuration.
        SecondaryValueFontConfiguration:
          allOf:
            - $ref: "#/components/schemas/FontConfiguration"
            - description: The options that determine the secondary value font configuration.
      description: The options that determine the presentation of a KPI visual.
    KPIConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/KPIFieldWells"
            - description: The field well configuration of a KPI visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/KPISortConfiguration"
            - description: The sort configuration of a KPI visual.
        KPIOptions:
          allOf:
            - $ref: "#/components/schemas/KPIOptions"
            - description: The options that determine the presentation of a KPI visual.
      description: The configuration of a KPI visual.
    ProgressBarOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the progress bar.
      description: The options that determine the presentation of the progress bar of a KPI visual.
    TrendArrowOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the trend arrows.
      description: The options that determine the presentation of trend arrows in a KPI visual.
    SecondaryValueOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines the visibility of the secondary value.
      description: The options that determine the presentation of the secondary value of a KPI visual.
    KPIVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/KPIConfiguration"
            - description: The configuration of a KPI visual.
        ConditionalFormatting:
          allOf:
            - $ref: "#/components/schemas/KPIConditionalFormatting"
            - description: The conditional formatting of a KPI visual.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: <p>A key performance indicator (KPI).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/kpi.html">Using KPIs</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    LayoutConfiguration:
      type: object
      properties:
        GridLayout:
          allOf:
            - $ref: "#/components/schemas/GridLayoutConfiguration"
            - description: "A type of layout that can be used on a sheet. In a grid layout, visuals snap to a grid with standard spacing and alignment. Dashboards are displayed as designed, with options to fit to screen or view at actual size. A grid layout can be configured to behave in one of two ways when the viewport is resized: <code>FIXED</code> or <code>RESPONSIVE</code>."
        FreeFormLayout:
          allOf:
            - $ref: "#/components/schemas/FreeFormLayoutConfiguration"
            - description: A free-form is optimized for a fixed width and has more control over the exact placement of layout elements.
        SectionBasedLayout:
          allOf:
            - $ref: "#/components/schemas/SectionBasedLayoutConfiguration"
            - description: A section based layout organizes visuals into multiple sections and has customized header, footer and page break.
      description: <p>The configuration that determines what the type of layout will be used on a sheet.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    Layout:
      type: object
      required:
        - Configuration
      properties:
        Configuration:
          allOf:
            - $ref: "#/components/schemas/LayoutConfiguration"
            - description: The configuration that determines what the type of layout for a sheet.
      description: <p>A <code>Layout</code> defines the placement of elements within a sheet.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/types-of-layout.html">Types of layout</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    SectionBasedLayoutConfiguration:
      type: object
      required:
        - HeaderSections
        - BodySections
        - FooterSections
        - CanvasSizeOptions
      properties:
        HeaderSections:
          allOf:
            - $ref: "#/components/schemas/HeaderFooterSectionConfigurationList"
            - description: A list of header section configurations.
        BodySections:
          allOf:
            - $ref: "#/components/schemas/BodySectionConfigurationList"
            - description: A list of body section configurations.
        FooterSections:
          allOf:
            - $ref: "#/components/schemas/HeaderFooterSectionConfigurationList"
            - description: A list of footer section configurations.
        CanvasSizeOptions:
          allOf:
            - $ref: "#/components/schemas/SectionBasedLayoutCanvasSizeOptions"
            - description: The options for the canvas of a section-based layout.
      description: The configuration for a section-based layout.
    LayoutList:
      type: array
      items:
        $ref: "#/components/schemas/Layout"
      minItems: 1
      maxItems: 1
    LegendPosition:
      type: string
      enum:
        - AUTO
        - RIGHT
        - BOTTOM
        - TOP
    Length:
      type: string
      description: String based length that is composed of value and unit
    LineChartAggregatedFieldWells:
      type: object
      properties:
        Category:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The category field wells of a line chart. Values are grouped by category fields.
        Values:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The value field wells of a line chart. Values are aggregated based on categories.
        Colors:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The color field wells of a line chart. Values are grouped by category fields.
        SmallMultiples:
          allOf:
            - $ref: "#/components/schemas/SmallMultiplesDimensionFieldList"
            - description: The small multiples field well of a line chart.
      description: The field well configuration of a line chart.
    LineChartFieldWells:
      type: object
      properties:
        LineChartAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/LineChartAggregatedFieldWells"
            - description: The field well configuration of a line chart.
      description: The field well configuration of a line chart.
    LineChartSortConfiguration:
      type: object
      properties:
        CategorySort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the category fields.
        CategoryItemsLimitConfiguration:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of categories that are displayed in a line chart.
        ColorItemsLimitConfiguration:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of lines that are displayed in a line chart.
        SmallMultiplesSort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the small multiples field.
        SmallMultiplesLimitConfiguration:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of small multiples panels that are displayed.
      description: The sort configuration of a line chart.
    LineChartType:
      type: string
      enum:
        - LINE
        - AREA
        - STACKED_AREA
    LineSeriesAxisDisplayOptions:
      type: object
      properties:
        AxisOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The options that determine the presentation of the line series axis.
        MissingDataConfigurations:
          allOf:
            - $ref: "#/components/schemas/MissingDataConfigurationList"
            - description: The configuration options that determine how missing data is treated during the rendering of a line chart.
      description: The series axis configuration of a line chart.
    LineChartDefaultSeriesSettings:
      type: object
      properties:
        AxisBinding:
          allOf:
            - $ref: "#/components/schemas/AxisBinding"
            - description: The axis to which you are binding all line series to.
        LineStyleSettings:
          allOf:
            - $ref: "#/components/schemas/LineChartLineStyleSettings"
            - description: Line styles options for all line series in the visual.
        MarkerStyleSettings:
          allOf:
            - $ref: "#/components/schemas/LineChartMarkerStyleSettings"
            - description: Marker styles options for all line series in the visual.
      description: The options that determine the default presentation of all line series in <code>LineChartVisual</code>.
    SeriesItemList:
      type: array
      items:
        $ref: "#/components/schemas/SeriesItem"
      maxItems: 10
    LineChartConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/LineChartFieldWells"
            - description: The field well configuration of a line chart.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/LineChartSortConfiguration"
            - description: The sort configuration of a line chart.
        ForecastConfigurations:
          allOf:
            - $ref: "#/components/schemas/ForecastConfigurationList"
            - description: The forecast configuration of a line chart.
        Type:
          allOf:
            - $ref: "#/components/schemas/LineChartType"
            - description: Determines the type of the line chart.
        SmallMultiplesOptions:
          allOf:
            - $ref: "#/components/schemas/SmallMultiplesOptions"
            - description: The small multiples setup for the visual.
        XAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The options that determine the presentation of the x-axis.
        XAxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The options that determine the presentation of the x-axis label.
        PrimaryYAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/LineSeriesAxisDisplayOptions"
            - description: The series axis configuration of a line chart.
        PrimaryYAxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The options that determine the presentation of the y-axis label.
        SecondaryYAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/LineSeriesAxisDisplayOptions"
            - description: The series axis configuration of a line chart.
        SecondaryYAxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The options that determine the presentation of the secondary y-axis label.
        DefaultSeriesSettings:
          allOf:
            - $ref: "#/components/schemas/LineChartDefaultSeriesSettings"
            - description: The options that determine the default presentation of all line series in <code>LineChartVisual</code>.
        Series:
          allOf:
            - $ref: "#/components/schemas/SeriesItemList"
            - description: The series item configuration of a line chart.
        Legend:
          allOf:
            - $ref: "#/components/schemas/LegendOptions"
            - description: The legend configuration of a line chart.
        DataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: The data label configuration of a line chart.
        ReferenceLines:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineList"
            - description: The reference lines configuration of a line chart.
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The tooltip configuration of a line chart.
        ContributionAnalysisDefaults:
          allOf:
            - $ref: "#/components/schemas/ContributionAnalysisDefaultList"
            - description: The default configuration of a line chart's contribution analysis.
        VisualPalette:
          allOf:
            - $ref: "#/components/schemas/VisualPalette"
            - description: The visual palette configuration of a line chart.
      description: The configuration of a line chart.
    LineChartLineStyleSettings:
      type: object
      properties:
        LineVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Configuration option that determines whether to show the line for the series.
        LineInterpolation:
          allOf:
            - $ref: "#/components/schemas/LineInterpolation"
            - description: "<p>Interpolation style for line series.</p> <ul> <li> <p> <code>LINEAR</code>: Show as default, linear style.</p> </li> <li> <p> <code>SMOOTH</code>: Show as a smooth curve.</p> </li> <li> <p> <code>STEPPED</code>: Show steps in line.</p> </li> </ul>"
        LineStyle:
          allOf:
            - $ref: "#/components/schemas/LineChartLineStyle"
            - description: "<p>Line style for line series.</p> <ul> <li> <p> <code>SOLID</code>: Show as a solid line.</p> </li> <li> <p> <code>DOTTED</code>: Show as a dotted line.</p> </li> <li> <p> <code>DASHED</code>: Show as a dashed line.</p> </li> </ul>"
        LineWidth:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: Width that determines the line thickness.
      description: Line styles options for a line series in <code>LineChartVisual</code>.
    LineChartMarkerStyleSettings:
      type: object
      properties:
        MarkerVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Configuration option that determines whether to show the markers in the series.
        MarkerShape:
          allOf:
            - $ref: "#/components/schemas/LineChartMarkerShape"
            - description: "<p>Shape option for markers in the series.</p> <ul> <li> <p> <code>CIRCLE</code>: Show marker as a circle.</p> </li> <li> <p> <code>TRIANGLE</code>: Show marker as a triangle.</p> </li> <li> <p> <code>SQUARE</code>: Show marker as a square.</p> </li> <li> <p> <code>DIAMOND</code>: Show marker as a diamond.</p> </li> <li> <p> <code>ROUNDED_SQUARE</code>: Show marker as a rounded square.</p> </li> </ul>"
        MarkerSize:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: Size of marker in the series.
        MarkerColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: Color of marker in the series.
      description: Marker styles options for a line series in <code>LineChartVisual</code>.
    LineChartLineStyle:
      type: string
      enum:
        - SOLID
        - DOTTED
        - DASHED
    LineInterpolation:
      type: string
      enum:
        - LINEAR
        - SMOOTH
        - STEPPED
    LineChartMarkerShape:
      type: string
      enum:
        - CIRCLE
        - TRIANGLE
        - SQUARE
        - DIAMOND
        - ROUNDED_SQUARE
    LineChartVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/LineChartConfiguration"
            - description: The configuration of a line chart.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: <p>A line chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/line-charts.html">Using line charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    MissingDataConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/MissingDataConfiguration"
      maxItems: 100
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListAnalysesRequest:
      type: object
      title: ListAnalysesRequest
      properties: {}
    ListControlSearchOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility configuration of the search options in a list control.
      description: The configuration of the search options in a list control.
    ListDashboardVersionsRequest:
      type: object
      title: ListDashboardVersionsRequest
      properties: {}
    ListDashboardsRequest:
      type: object
      title: ListDashboardsRequest
      properties: {}
    ListDataSetsRequest:
      type: object
      title: ListDataSetsRequest
      properties: {}
    ListDataSourcesRequest:
      type: object
      title: ListDataSourcesRequest
      properties: {}
    ListFolderMembersRequest:
      type: object
      title: ListFolderMembersRequest
      properties: {}
    ListFoldersRequest:
      type: object
      title: ListFoldersRequest
      properties: {}
    ListGroupMembershipsRequest:
      type: object
      title: ListGroupMembershipsRequest
      properties: {}
    ListGroupsRequest:
      type: object
      title: ListGroupsRequest
      properties: {}
    ListIAMPolicyAssignmentsForUserRequest:
      type: object
      title: ListIAMPolicyAssignmentsForUserRequest
      properties: {}
    ListIAMPolicyAssignmentsRequest:
      type: object
      title: ListIAMPolicyAssignmentsRequest
      properties:
        AssignmentStatus:
          allOf:
            - $ref: "#/components/schemas/AssignmentStatus"
            - description: The status of the assignments.
    ListIngestionsRequest:
      type: object
      title: ListIngestionsRequest
      properties: {}
    ListNamespacesRequest:
      type: object
      title: ListNamespacesRequest
      properties: {}
    Namespaces:
      type: array
      items:
        $ref: "#/components/schemas/NamespaceInfoV2"
    ListRefreshSchedulesRequest:
      type: object
      title: ListRefreshSchedulesRequest
      properties: {}
    RefreshSchedules:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/RefreshSchedule"
          - description: A list of <code>RefreshSchedule</code> objects.
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListTemplateAliasesRequest:
      type: object
      title: ListTemplateAliasesRequest
      properties: {}
    TemplateAliasList:
      type: array
      items:
        $ref: "#/components/schemas/TemplateAlias"
      maxItems: 100
    ListTemplateVersionsRequest:
      type: object
      title: ListTemplateVersionsRequest
      properties: {}
    TemplateVersionSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/TemplateVersionSummary"
      maxItems: 100
    ListTemplatesRequest:
      type: object
      title: ListTemplatesRequest
      properties: {}
    TemplateSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/TemplateSummary"
      maxItems: 100
    ListThemeAliasesRequest:
      type: object
      title: ListThemeAliasesRequest
      properties: {}
    ThemeAliasList:
      type: array
      items:
        $ref: "#/components/schemas/ThemeAlias"
      maxItems: 100
    ListThemeVersionsRequest:
      type: object
      title: ListThemeVersionsRequest
      properties: {}
    ThemeVersionSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ThemeVersionSummary"
      maxItems: 100
    ThemeType:
      type: string
      enum:
        - QUICKSIGHT
        - CUSTOM
        - ALL
    ListThemesRequest:
      type: object
      title: ListThemesRequest
      properties: {}
    ThemeSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ThemeSummary"
      maxItems: 100
    ListUserGroupsRequest:
      type: object
      title: ListUserGroupsRequest
      properties: {}
    ListUsersRequest:
      type: object
      title: ListUsersRequest
      properties: {}
    UserList:
      type: array
      items:
        $ref: "#/components/schemas/User"
    LogicalTableAlias:
      type: string
      minLength: 1
      maxLength: 64
    TransformOperationList:
      type: array
      items:
        $ref: "#/components/schemas/TransformOperation"
      minItems: 1
      maxItems: 2048
    LogicalTableSource:
      type: object
      properties:
        JoinInstruction:
          allOf:
            - $ref: "#/components/schemas/JoinInstruction"
            - description: Specifies the result of a join of two logical tables.
        PhysicalTableId:
          allOf:
            - $ref: "#/components/schemas/PhysicalTableId"
            - description: Physical table ID.
        DataSetArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Number (ARN) of the parent dataset.
      description: Information about the source of a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    PhysicalTableId:
      type: string
      pattern: "[0-9a-zA-Z-]*"
      minLength: 1
      maxLength: 64
    LongPlainText:
      type: string
      minLength: 1
      maxLength: 1024
    LongRichText:
      type: string
      minLength: 1
      maxLength: 2048
    LongFormatText:
      type: object
      properties:
        PlainText:
          allOf:
            - $ref: "#/components/schemas/LongPlainText"
            - description: Plain text format.
        RichText:
          allOf:
            - $ref: "#/components/schemas/LongRichText"
            - description: Rich text. Examples of rich text include bold, underline, and italics.
      description: <p>The text format for a subtitle.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    PositiveLong:
      type: integer
      minimum: 1
    LookbackWindowSizeUnit:
      type: string
      enum:
        - HOUR
        - DAY
        - WEEK
    S3Bucket:
      type: string
      minLength: 1
      maxLength: 1024
    S3Key:
      type: string
      minLength: 1
      maxLength: 1024
    ManifestFileLocation:
      type: object
      required:
        - Bucket
        - Key
      properties:
        Bucket:
          allOf:
            - $ref: "#/components/schemas/S3Bucket"
            - description: Amazon S3 bucket.
        Key:
          allOf:
            - $ref: "#/components/schemas/S3Key"
            - description: Amazon S3 key that identifies an object.
      description: Amazon S3 manifest file location.
    MarginStyle:
      type: object
      properties:
        Show:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: This Boolean value controls whether to display sheet margins.
      description: The display options for margins around the outside edge of sheets.
    MaximumMinimumComputationType:
      type: string
      enum:
        - MAXIMUM
        - MINIMUM
    NumericalMeasureField:
      type: object
      required:
        - FieldId
        - Column
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The custom field ID.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that is used in the <code>NumericalMeasureField</code>.
        AggregationFunction:
          allOf:
            - $ref: "#/components/schemas/NumericalAggregationFunction"
            - description: The aggregation function of the measure field.
        FormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumberFormatConfiguration"
            - description: The format configuration of the field.
      description: The measure type field with numerical type columns.
    MissingDataTreatmentOption:
      type: string
      enum:
        - INTERPOLATE
        - SHOW_AS_ZERO
        - SHOW_AS_BLANK
    MissingDataConfiguration:
      type: object
      properties:
        TreatmentOption:
          allOf:
            - $ref: "#/components/schemas/MissingDataTreatmentOption"
            - description: "<p>The treatment option that determines how missing data should be rendered. Choose from the following options:</p> <ul> <li> <p> <code>INTERPOLATE</code>: Interpolate missing values between the prior and the next known value.</p> </li> <li> <p> <code>SHOW_AS_ZERO</code>: Show missing values as the value <code>0</code>.</p> </li> <li> <p> <code>SHOW_AS_BLANK</code>: Display a blank space when rendering missing data.</p> </li> </ul>"
      description: The configuration options that determine how missing data is treated during the rendering of a line chart.
    NamespaceErrorType:
      type: string
      enum:
        - PERMISSION_DENIED
        - INTERNAL_SERVICE_ERROR
    NamespaceError:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NamespaceErrorType"
            - description: The error type.
        Message:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The message for the error.
      description: Errors that occur during namespace creation.
    NegativeValueDisplayMode:
      type: string
      enum:
        - POSITIVE
        - NEGATIVE
    NullString:
      type: string
      minLength: 1
      maxLength: 128
      format: password
    NumericFilterSelectAllOptions:
      type: string
      enum:
        - FILTER_ALL_VALUES
    NumericEqualityMatchOperator:
      type: string
      enum:
        - EQUALS
        - DOES_NOT_EQUAL
    NumericRangeFilterValue:
      type: object
      properties:
        StaticValue:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The static value of the numeric range filter.
        Parameter:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The parameter that is used in the numeric range.
      description: The value input pf the numeric range filter.
    NumericSeparatorSymbol:
      type: string
      enum:
        - COMMA
        - DOT
        - SPACE
    ThousandSeparatorOptions:
      type: object
      properties:
        Symbol:
          allOf:
            - $ref: "#/components/schemas/NumericSeparatorSymbol"
            - description: Determines the thousands separator symbol.
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines the visibility of the thousands separator.
      description: The options that determine the thousands separator configuration.
    SimpleNumericalAggregationFunction:
      type: string
      enum:
        - SUM
        - AVERAGE
        - MIN
        - MAX
        - COUNT
        - DISTINCT_COUNT
        - VAR
        - VARP
        - STDEV
        - STDEVP
        - MEDIAN
    PercentileAggregation:
      type: object
      properties:
        PercentileValue:
          allOf:
            - $ref: "#/components/schemas/PercentileValue"
            - description: The percentile value. This value can be any numeric constant 0–100. A percentile value of 50 computes the median value of the measure.
      description: An aggregation based on the percentile of values in a dimension or measure.
    OptionalPort:
      type: integer
      minimum: 0
      maximum: 65535
    OutputColumn:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: A display name for the dataset.
        Description:
          allOf:
            - $ref: "#/components/schemas/ColumnDescriptiveText"
            - description: A description for a column.
        Type:
          allOf:
            - $ref: "#/components/schemas/ColumnDataType"
            - description: Type.
      description: Output column.
    PageNumber:
      type: integer
      minimum: 0
    PanelBorderStyle:
      type: string
      enum:
        - SOLID
        - DASHED
        - DOTTED
    PanelTitleOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines whether or not panel titles are displayed.
        FontConfiguration:
          $ref: "#/components/schemas/FontConfiguration"
        HorizontalTextAlignment:
          allOf:
            - $ref: "#/components/schemas/HorizontalTextAlignment"
            - description: Sets the horizontal text alignment of the title within each panel.
      description: The options that determine the title styles for each small multiples panel.
    PanelConfiguration:
      type: object
      properties:
        Title:
          allOf:
            - $ref: "#/components/schemas/PanelTitleOptions"
            - description: Configures the title display within each small multiples panel.
        BorderVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines whether or not each panel displays a border.
        BorderThickness:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: Sets the line thickness of panel borders.
        BorderStyle:
          allOf:
            - $ref: "#/components/schemas/PanelBorderStyle"
            - description: Sets the line style of panel borders.
        BorderColor:
          allOf:
            - $ref: "#/components/schemas/HexColorWithTransparency"
            - description: Sets the line color of panel borders.
        GutterVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines whether or not negative space between sibling panels is rendered.
        GutterSpacing:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: Sets the total amount of negative space to display between sibling panels.
        BackgroundVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines whether or not a background for each small multiples panel is rendered.
        BackgroundColor:
          allOf:
            - $ref: "#/components/schemas/HexColorWithTransparency"
            - description: Sets the background color for each panel.
      description: A collection of options that configure how each panel displays in a small multiples chart.
    PaperOrientation:
      type: string
      enum:
        - PORTRAIT
        - LANDSCAPE
    PaperSize:
      type: string
      enum:
        - US_LETTER
        - US_LEGAL
        - US_TABLOID_LEDGER
        - A0
        - A1
        - A2
        - A3
        - A4
        - A5
        - JIS_B4
        - JIS_B5
    ParameterDateTimePickerControl:
      type: object
      required:
        - ParameterControlId
        - Title
        - SourceParameterName
      properties:
        ParameterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>ParameterDateTimePickerControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>ParameterDateTimePickerControl</code>.
        SourceParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The name of the <code>ParameterDateTimePickerControl</code>.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/DateTimePickerControlDisplayOptions"
            - description: The display options of a control.
      description: A control from a date parameter that specifies date and time.
    ParameterListControl:
      type: object
      required:
        - ParameterControlId
        - Title
        - SourceParameterName
      properties:
        ParameterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>ParameterListControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>ParameterListControl</code>.
        SourceParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The source parameter name of the <code>ParameterListControl</code>.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/ListControlDisplayOptions"
            - description: The display options of a control.
        Type:
          allOf:
            - $ref: "#/components/schemas/SheetControlListType"
            - description: The type of <code>ParameterListControl</code>.
        SelectableValues:
          allOf:
            - $ref: "#/components/schemas/ParameterSelectableValues"
            - description: A list of selectable values that are used in a control.
        CascadingControlConfiguration:
          allOf:
            - $ref: "#/components/schemas/CascadingControlConfiguration"
            - description: The values that are displayed in a control can be configured to only show values that are valid based on what's selected in other controls.
      description: A control to display a list with buttons or boxes that are used to select either a single value or multiple values.
    ParameterDropDownControl:
      type: object
      required:
        - ParameterControlId
        - Title
        - SourceParameterName
      properties:
        ParameterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>ParameterDropDownControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>ParameterDropDownControl</code>.
        SourceParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The source parameter name of the <code>ParameterDropDownControl</code>.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/DropDownControlDisplayOptions"
            - description: The display options of a control.
        Type:
          allOf:
            - $ref: "#/components/schemas/SheetControlListType"
            - description: The type parameter name of the <code>ParameterDropDownControl</code>.
        SelectableValues:
          allOf:
            - $ref: "#/components/schemas/ParameterSelectableValues"
            - description: A list of selectable values that are used in a control.
        CascadingControlConfiguration:
          allOf:
            - $ref: "#/components/schemas/CascadingControlConfiguration"
            - description: The values that are displayed in a control can be configured to only show values that are valid based on what's selected in other controls.
      description: A control to display a dropdown list with buttons that are used to select a single value.
    ParameterTextFieldControl:
      type: object
      required:
        - ParameterControlId
        - Title
        - SourceParameterName
      properties:
        ParameterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>ParameterTextFieldControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>ParameterTextFieldControl</code>.
        SourceParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The source parameter name of the <code>ParameterTextFieldControl</code>.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/TextFieldControlDisplayOptions"
            - description: The display options of a control.
      description: A control to display a text box that is used to enter a single entry.
    ParameterTextAreaControl:
      type: object
      required:
        - ParameterControlId
        - Title
        - SourceParameterName
      properties:
        ParameterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>ParameterTextAreaControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>ParameterTextAreaControl</code>.
        SourceParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The source parameter name of the <code>ParameterTextAreaControl</code>.
        Delimiter:
          allOf:
            - $ref: "#/components/schemas/TextAreaControlDelimiter"
            - description: The delimiter that is used to separate the lines in text.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/TextAreaControlDisplayOptions"
            - description: The display options of a control.
      description: A control to display a text box that is used to enter multiple entries.
    ParameterSliderControl:
      type: object
      required:
        - ParameterControlId
        - Title
        - SourceParameterName
        - MaximumValue
        - MinimumValue
        - StepSize
      properties:
        ParameterControlId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>ParameterSliderControl</code>.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetControlTitle"
            - description: The title of the <code>ParameterSliderControl</code>.
        SourceParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The source parameter name of the <code>ParameterSliderControl</code>.
        DisplayOptions:
          allOf:
            - $ref: "#/components/schemas/SliderControlDisplayOptions"
            - description: The display options of a control.
        MaximumValue:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The smaller value that is displayed at the left of the slider.
        MinimumValue:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The larger value that is displayed at the right of the slider.
        StepSize:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The number of increments that the slider bar is divided into.
      description: A control to display a horizontal toggle bar. This is used to change a value by sliding the toggle.
    ParameterControl:
      type: object
      properties:
        DateTimePicker:
          allOf:
            - $ref: "#/components/schemas/ParameterDateTimePickerControl"
            - description: A control from a date parameter that specifies date and time.
        List:
          allOf:
            - $ref: "#/components/schemas/ParameterListControl"
            - description: A control to display a list with buttons or boxes that are used to select either a single value or multiple values.
        Dropdown:
          allOf:
            - $ref: "#/components/schemas/ParameterDropDownControl"
            - description: A control to display a dropdown list with buttons that are used to select a single value.
        TextField:
          allOf:
            - $ref: "#/components/schemas/ParameterTextFieldControl"
            - description: A control to display a text box that is used to enter a single entry.
        TextArea:
          allOf:
            - $ref: "#/components/schemas/ParameterTextAreaControl"
            - description: A control to display a text box that is used to enter multiple entries.
        Slider:
          allOf:
            - $ref: "#/components/schemas/ParameterSliderControl"
            - description: A control to display a horizontal toggle bar. This is used to change a value by sliding the toggle.
      description: <p>The control of a parameter that users can interact with in a dashboard or an analysis.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    ParameterControlList:
      type: array
      items:
        $ref: "#/components/schemas/ParameterControl"
      maxItems: 200
    StringParameterDeclaration:
      type: object
      required:
        - ParameterValueType
        - Name
      properties:
        ParameterValueType:
          allOf:
            - $ref: "#/components/schemas/ParameterValueType"
            - description: The value type determines whether the parameter is a single-value or multi-value parameter.
        Name:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The name of the parameter that is being declared.
        DefaultValues:
          allOf:
            - $ref: "#/components/schemas/StringDefaultValues"
            - description: The default values of a parameter. If the parameter is a single-value parameter, a maximum of one default value can be provided.
        ValueWhenUnset:
          allOf:
            - $ref: "#/components/schemas/StringValueWhenUnsetConfiguration"
            - description: The configuration that defines the default value of a <code>String</code> parameter when a value has not been set.
      description: A parameter declaration for the <code>String</code> data type.
    ParameterDeclaration:
      type: object
      properties:
        StringParameterDeclaration:
          allOf:
            - $ref: "#/components/schemas/StringParameterDeclaration"
            - description: A parameter declaration for the <code>String</code> data type.
        DecimalParameterDeclaration:
          allOf:
            - $ref: "#/components/schemas/DecimalParameterDeclaration"
            - description: A parameter declaration for the <code>Decimal</code> data type.
        IntegerParameterDeclaration:
          allOf:
            - $ref: "#/components/schemas/IntegerParameterDeclaration"
            - description: A parameter declaration for the <code>Integer</code> data type.
        DateTimeParameterDeclaration:
          allOf:
            - $ref: "#/components/schemas/DateTimeParameterDeclaration"
            - description: A parameter declaration for the <code>DateTime</code> data type.
      description: <p>The declaration definition of a parameter.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-in-quicksight.html">Parameters in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    ParameterSelectableValues:
      type: object
      properties:
        Values:
          allOf:
            - $ref: "#/components/schemas/ParameterSelectableValueList"
            - description: The values that are used in <code>ParameterSelectableValues</code>.
        LinkToDataSetColumn:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column identifier that fetches values from the data set.
      description: A list of selectable values that are used in a control.
    PercentNumber:
      type: number
      format: double
      minimum: 0
      maximum: 100
    PercentVisibleRange:
      type: object
      properties:
        From:
          allOf:
            - $ref: "#/components/schemas/PercentNumber"
            - description: The lower bound of the range.
        To:
          allOf:
            - $ref: "#/components/schemas/PercentNumber"
            - description: The top bound of the range.
      description: The percent range in the visible range.
    PercentileValue:
      type: number
      format: double
      minimum: 0
      maximum: 100
    RelationalTable:
      type: object
      required:
        - DataSourceArn
        - Name
        - InputColumns
      properties:
        DataSourceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the data source.
        Catalog:
          allOf:
            - $ref: "#/components/schemas/RelationalTableCatalog"
            - description: The catalog associated with a table.
        Schema:
          allOf:
            - $ref: "#/components/schemas/RelationalTableSchema"
            - description: The schema name. This name applies to certain relational database engines.
        Name:
          allOf:
            - $ref: "#/components/schemas/RelationalTableName"
            - description: The name of the relational table.
        InputColumns:
          allOf:
            - $ref: "#/components/schemas/InputColumnList"
            - description: The column schema of the table.
      description: A physical table type for relational data sources.
    S3Source:
      type: object
      required:
        - DataSourceArn
        - InputColumns
      properties:
        DataSourceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the data source.
        UploadSettings:
          allOf:
            - $ref: "#/components/schemas/UploadSettings"
            - description: Information about the format for the S3 source file or files.
        InputColumns:
          allOf:
            - $ref: "#/components/schemas/InputColumnList"
            - description: <p>A physical table type for an S3 data source.</p> <note> <p>For files that aren't JSON, only <code>STRING</code> data types are supported in input columns.</p> </note>
      description: A physical table type for an S3 data source.
    PieChartAggregatedFieldWells:
      type: object
      properties:
        Category:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The category (group/color) field wells of a pie chart.
        Values:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The value field wells of a pie chart. Values are aggregated based on categories.
        SmallMultiples:
          allOf:
            - $ref: "#/components/schemas/SmallMultiplesDimensionFieldList"
            - description: The small multiples field well of a pie chart.
      description: The field well configuration of a pie chart.
    PieChartFieldWells:
      type: object
      properties:
        PieChartAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/PieChartAggregatedFieldWells"
            - description: The field well configuration of a pie chart.
      description: <p>The field well configuration of a pie chart.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    PieChartSortConfiguration:
      type: object
      properties:
        CategorySort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the category fields.
        CategoryItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of categories that are displayed in a pie chart.
        SmallMultiplesSort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the small multiples field.
        SmallMultiplesLimitConfiguration:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of small multiples panels that are displayed.
      description: The sort configuration of a pie chart.
    PieChartConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/PieChartFieldWells"
            - description: The field wells of the visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/PieChartSortConfiguration"
            - description: The sort configuration of a pie chart.
        DonutOptions:
          allOf:
            - $ref: "#/components/schemas/DonutOptions"
            - description: The options that determine the shape of the chart. This option determines whether the chart is a pie chart or a donut chart.
        SmallMultiplesOptions:
          allOf:
            - $ref: "#/components/schemas/SmallMultiplesOptions"
            - description: The small multiples setup for the visual.
        CategoryLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options of the group/color that is displayed in a pie chart.
        ValueLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options for the value that is displayed in a pie chart.
        Legend:
          allOf:
            - $ref: "#/components/schemas/LegendOptions"
            - description: The legend display setup of the visual.
        DataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: The options that determine if visual data labels are displayed.
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The tooltip display setup of the visual.
        VisualPalette:
          allOf:
            - $ref: "#/components/schemas/VisualPalette"
            - description: The palette (chart color) display setup of the visual.
        ContributionAnalysisDefaults:
          allOf:
            - $ref: "#/components/schemas/ContributionAnalysisDefaultList"
            - description: The contribution analysis (anomaly configuration) setup of the visual.
      description: The configuration of a pie chart.
    PieChartVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/PieChartConfiguration"
            - description: The configuration of a pie chart.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: <p>A pie or donut chart.</p> <p>The <code>PieChartVisual</code> structure describes a visual that is a member of the pie chart family.</p> <p>The following charts can be described by using this structure:</p> <ul> <li> <p>Pie charts</p> </li> <li> <p>Donut charts</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/pie-chart.html">Using pie charts</a> in the <i>Amazon QuickSight User Guide</i>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/donut-chart.html">Using donut charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    PivotTableSortBy:
      type: object
      properties:
        Field:
          allOf:
            - $ref: "#/components/schemas/FieldSort"
            - description: The field sort (field id, direction) for the pivot table sort by options.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnSort"
            - description: The column sort (field id, direction) for the pivot table sort by options.
        DataPath:
          allOf:
            - $ref: "#/components/schemas/DataPathSort"
            - description: The data path sort (data path value, direction) for the pivot table sort by options.
      description: The sort by field for the field sort options.
    PivotFieldSortOptions:
      type: object
      required:
        - FieldId
        - SortBy
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID for the field sort options.
        SortBy:
          allOf:
            - $ref: "#/components/schemas/PivotTableSortBy"
            - description: The sort by field for the field sort options.
      description: The field sort options for a pivot table sort configuration.
    PivotFieldSortOptionsList:
      type: array
      items:
        $ref: "#/components/schemas/PivotFieldSortOptions"
      maxItems: 200
    PivotMeasureFieldList:
      type: array
      items:
        $ref: "#/components/schemas/MeasureField"
      maxItems: 40
    PivotTableDimensionList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionField"
      maxItems: 40
    PivotTableAggregatedFieldWells:
      type: object
      properties:
        Rows:
          allOf:
            - $ref: "#/components/schemas/PivotTableDimensionList"
            - description: The rows field well for a pivot table. Values are grouped by rows fields.
        Columns:
          allOf:
            - $ref: "#/components/schemas/PivotTableDimensionList"
            - description: The columns field well for a pivot table. Values are grouped by columns fields.
        Values:
          allOf:
            - $ref: "#/components/schemas/PivotMeasureFieldList"
            - description: The values field well for a pivot table. Values are aggregated based on rows and columns fields.
      description: The aggregated field well for the pivot table.
    TextConditionalFormat:
      type: object
      properties:
        BackgroundColor:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingColor"
            - description: The conditional formatting for the text background color.
        TextColor:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingColor"
            - description: The conditional formatting for the text color.
        Icon:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingIcon"
            - description: The conditional formatting for the icon.
      description: The conditional formatting for the text.
    PivotTableConditionalFormattingScope:
      type: object
      properties:
        Role:
          allOf:
            - $ref: "#/components/schemas/PivotTableConditionalFormattingScopeRole"
            - description: The role (field, field total, grand total) of the cell for conditional formatting.
      description: The scope of the cell for conditional formatting.
    PivotTableCellConditionalFormatting:
      type: object
      required:
        - FieldId
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID of the cell for conditional formatting.
        TextFormat:
          allOf:
            - $ref: "#/components/schemas/TextConditionalFormat"
            - description: The text format of the cell for conditional formatting.
        Scope:
          allOf:
            - $ref: "#/components/schemas/PivotTableConditionalFormattingScope"
            - description: The scope of the cell for conditional formatting.
      description: The cell conditional formatting option for a pivot table.
    PivotTableConditionalFormattingOptionList:
      type: array
      items:
        $ref: "#/components/schemas/PivotTableConditionalFormattingOption"
      maxItems: 100
    PivotTableConditionalFormatting:
      type: object
      properties:
        ConditionalFormattingOptions:
          allOf:
            - $ref: "#/components/schemas/PivotTableConditionalFormattingOptionList"
            - description: Conditional formatting options for a <code>PivotTableVisual</code>.
      description: The conditional formatting for a <code>PivotTableVisual</code>.
    PivotTableConditionalFormattingOption:
      type: object
      properties:
        Cell:
          allOf:
            - $ref: "#/components/schemas/PivotTableCellConditionalFormatting"
            - description: The cell conditional formatting option for a pivot table.
      description: Conditional formatting options for a <code>PivotTableVisual</code>.
    PivotTableConditionalFormattingScopeRole:
      type: string
      enum:
        - FIELD
        - FIELD_TOTAL
        - GRAND_TOTAL
    PivotTableFieldWells:
      type: object
      properties:
        PivotTableAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/PivotTableAggregatedFieldWells"
            - description: The aggregated field well for the pivot table.
      description: <p>The field wells for a pivot table visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    PivotTableSortConfiguration:
      type: object
      properties:
        FieldSortOptions:
          allOf:
            - $ref: "#/components/schemas/PivotFieldSortOptionsList"
            - description: The field sort options for a pivot table sort configuration.
      description: The sort configuration for a <code>PivotTableVisual</code>.
    PivotTableOptions:
      type: object
      properties:
        MetricPlacement:
          allOf:
            - $ref: "#/components/schemas/PivotTableMetricPlacement"
            - description: The metric placement (row, column) options.
        SingleMetricVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the single metric options.
        ColumnNamesVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the column names.
        ToggleButtonsVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines the visibility of the pivot table.
        ColumnHeaderStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The table cell style of the column header.
        RowHeaderStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The table cell style of the row headers.
        CellStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The table cell style of cells.
        RowFieldNamesStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The table cell style of row field names.
        RowAlternateColorOptions:
          allOf:
            - $ref: "#/components/schemas/RowAlternateColorOptions"
            - description: The row alternate color options (widget status, row alternate colors).
        CollapsedRowDimensionsVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility setting of a pivot table's collapsed row dimension fields. If the value of this structure is <code>HIDDEN</code>, all collapsed columns in a pivot table are automatically hidden. The default value is <code>VISIBLE</code>.
      description: The table options for a pivot table visual.
    PivotTableTotalOptions:
      type: object
      properties:
        RowSubtotalOptions:
          allOf:
            - $ref: "#/components/schemas/SubtotalOptions"
            - description: The row subtotal options.
        ColumnSubtotalOptions:
          allOf:
            - $ref: "#/components/schemas/SubtotalOptions"
            - description: The column subtotal options.
        RowTotalOptions:
          allOf:
            - $ref: "#/components/schemas/PivotTotalOptions"
            - description: The row total options.
        ColumnTotalOptions:
          allOf:
            - $ref: "#/components/schemas/PivotTotalOptions"
            - description: The column total options.
      description: The total options for a pivot table visual.
    PivotTableFieldOptions:
      type: object
      properties:
        SelectedFieldOptions:
          allOf:
            - $ref: "#/components/schemas/PivotTableFieldOptionList"
            - description: The selected field options for the pivot table field options.
        DataPathOptions:
          allOf:
            - $ref: "#/components/schemas/PivotTableDataPathOptionList"
            - description: The data path options for the pivot table field options.
      description: The field options for a pivot table visual.
    PivotTablePaginatedReportOptions:
      type: object
      properties:
        VerticalOverflowVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the printing table overflow across pages.
        OverflowColumnHeaderVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the repeating header rows on each page.
      description: The paginated report options for a pivot table visual.
    PivotTableConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/PivotTableFieldWells"
            - description: The field wells of the visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/PivotTableSortConfiguration"
            - description: The sort configuration for a <code>PivotTableVisual</code>.
        TableOptions:
          allOf:
            - $ref: "#/components/schemas/PivotTableOptions"
            - description: The table options for a pivot table visual.
        TotalOptions:
          allOf:
            - $ref: "#/components/schemas/PivotTableTotalOptions"
            - description: The total options for a pivot table visual.
        FieldOptions:
          allOf:
            - $ref: "#/components/schemas/PivotTableFieldOptions"
            - description: The field options for a pivot table visual.
        PaginatedReportOptions:
          allOf:
            - $ref: "#/components/schemas/PivotTablePaginatedReportOptions"
            - description: The paginated report options for a pivot table visual.
      description: The configuration for a <code>PivotTableVisual</code>.
    PivotTableDataPathOption:
      type: object
      required:
        - DataPathList
      properties:
        DataPathList:
          allOf:
            - $ref: "#/components/schemas/DataPathValueList"
            - description: The list of data path values for the data path options.
        Width:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: The width of the data path option.
      description: The data path options for the pivot table field options.
    PivotTableDataPathOptionList:
      type: array
      items:
        $ref: "#/components/schemas/PivotTableDataPathOption"
      maxItems: 100
    PivotTableFieldOption:
      type: object
      required:
        - FieldId
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID of the pivot table field.
        CustomLabel:
          allOf:
            - $ref: "#/components/schemas/CustomLabel"
            - description: The custom label of the pivot table field.
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the pivot table field.
      description: The selected field options for the pivot table field options.
    PivotTableFieldOptionList:
      type: array
      items:
        $ref: "#/components/schemas/PivotTableFieldOption"
      maxItems: 100
    PivotTableFieldSubtotalOptions:
      type: object
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID of the subtotal options.
      description: The optional configuration of subtotals cells.
    PivotTableFieldSubtotalOptionsList:
      type: array
      items:
        $ref: "#/components/schemas/PivotTableFieldSubtotalOptions"
      maxItems: 100
    PivotTableMetricPlacement:
      type: string
      enum:
        - ROW
        - COLUMN
    TableCellStyle:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of the table cells.
        FontConfiguration:
          allOf:
            - $ref: "#/components/schemas/FontConfiguration"
            - description: The font configuration of the table cells.
        TextWrap:
          allOf:
            - $ref: "#/components/schemas/TextWrap"
            - description: The text wrap (none, wrap) for the table cells.
        HorizontalTextAlignment:
          allOf:
            - $ref: "#/components/schemas/HorizontalTextAlignment"
            - description: The horizontal text alignment (left, center, right, auto) for the table cells.
        VerticalTextAlignment:
          allOf:
            - $ref: "#/components/schemas/VerticalTextAlignment"
            - description: The vertical text alignment (top, middle, bottom) for the table cells.
        BackgroundColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The background color for the table cells.
        Height:
          allOf:
            - $ref: "#/components/schemas/TableFieldHeight"
            - description: The height color for the table cells.
        Border:
          allOf:
            - $ref: "#/components/schemas/GlobalTableBorderOptions"
            - description: The borders for the table cells.
      description: The table cell style for a cell in pivot table or table visual.
    RowAlternateColorOptions:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/WidgetStatus"
            - description: Determines the widget status.
        RowAlternateColors:
          allOf:
            - $ref: "#/components/schemas/RowAlternateColorList"
            - description: Determines the list of row alternate colors.
      description: Determines the row alternate color options.
    PivotTableSubtotalLevel:
      type: string
      enum:
        - ALL
        - CUSTOM
        - LAST
    SubtotalOptions:
      type: object
      properties:
        TotalsVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility configuration for the subtotal cells.
        CustomLabel:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The custom label string for the subtotal cells.
        FieldLevel:
          allOf:
            - $ref: "#/components/schemas/PivotTableSubtotalLevel"
            - description: The field level (all, custom, last) for the subtotal cells.
        FieldLevelOptions:
          allOf:
            - $ref: "#/components/schemas/PivotTableFieldSubtotalOptionsList"
            - description: The optional configuration of subtotal cells.
        TotalCellStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The cell styling options for the subtotal cells.
        ValueCellStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The cell styling options for the subtotals of value cells.
        MetricHeaderCellStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The cell styling options for the subtotals of header cells.
      description: The subtotal options.
    PivotTotalOptions:
      type: object
      properties:
        TotalsVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility configuration for the total cells.
        Placement:
          allOf:
            - $ref: "#/components/schemas/TableTotalsPlacement"
            - description: The placement (start, end) for the total cells.
        ScrollStatus:
          allOf:
            - $ref: "#/components/schemas/TableTotalsScrollStatus"
            - description: The scroll status (pinned, scrolled) for the total cells.
        CustomLabel:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The custom label string for the total cells.
        TotalCellStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The cell styling options for the total cells.
        ValueCellStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The cell styling options for the totals of value cells.
        MetricHeaderCellStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The cell styling options for the total of header cells.
      description: The optional configuration of totals cells in a <code>PivotTableVisual</code>.
    PivotTableVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers..
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/PivotTableConfiguration"
            - description: The configuration settings of the visual.
        ConditionalFormatting:
          allOf:
            - $ref: "#/components/schemas/PivotTableConditionalFormatting"
            - description: The conditional formatting for a <code>PivotTableVisual</code>.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
      description: <p>A pivot table.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/pivot-table.html">Using pivot tables</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    TableTotalsPlacement:
      type: string
      enum:
        - START
        - END
    TableTotalsScrollStatus:
      type: string
      enum:
        - PINNED
        - SCROLLED
    PositiveInteger:
      type: integer
      minimum: 1
    PredefinedHierarchyColumnList:
      type: array
      items:
        $ref: "#/components/schemas/ColumnIdentifier"
      minItems: 1
      maxItems: 10
    Principal:
      type: string
      minLength: 1
      maxLength: 256
    ProjectedColumnList:
      type: array
      items:
        $ref: "#/components/schemas/String"
      minItems: 1
      maxItems: 2000
    ProjectOperation:
      type: object
      required:
        - ProjectedColumns
      properties:
        ProjectedColumns:
          allOf:
            - $ref: "#/components/schemas/ProjectedColumnList"
            - description: Projected columns.
      description: A transform operation that projects columns. Operations that come after a projection can only refer to projected columns.
    PutDataSetRefreshPropertiesRequest:
      type: object
      required:
        - DataSetRefreshProperties
      title: PutDataSetRefreshPropertiesRequest
      properties:
        DataSetRefreshProperties:
          allOf:
            - $ref: "#/components/schemas/DataSetRefreshProperties"
            - description: The dataset refresh properties.
    Query:
      type: string
      minLength: 1
      maxLength: 256
    RadarChartCategoryFieldList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionField"
      maxItems: 1
    RadarChartColorFieldList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionField"
      maxItems: 1
    RadarChartValuesFieldList:
      type: array
      items:
        $ref: "#/components/schemas/MeasureField"
      maxItems: 20
    RadarChartAggregatedFieldWells:
      type: object
      properties:
        Category:
          allOf:
            - $ref: "#/components/schemas/RadarChartCategoryFieldList"
            - description: The aggregated field well categories of a radar chart.
        Color:
          allOf:
            - $ref: "#/components/schemas/RadarChartColorFieldList"
            - description: The color that are assigned to the aggregated field wells of a radar chart.
        Values:
          allOf:
            - $ref: "#/components/schemas/RadarChartValuesFieldList"
            - description: The values that are assigned to the aggregated field wells of a radar chart.
      description: The aggregated field well configuration of a <code>RadarChartVisual</code>.
    RadarChartAreaStyleSettings:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility settings of a radar chart.
      description: The configured style settings of a radar chart.
    RadarChartFieldWells:
      type: object
      properties:
        RadarChartAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/RadarChartAggregatedFieldWells"
            - description: The aggregated field wells of a radar chart visual.
      description: The field wells of a radar chart visual.
    RadarChartSortConfiguration:
      type: object
      properties:
        CategorySort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The category sort options of a radar chart.
        CategoryItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The category items limit for a radar chart.
        ColorSort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The color sort configuration of a radar chart.
        ColorItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The color items limit of a radar chart.
      description: The sort configuration of a <code>RadarChartVisual</code>.
    RadarChartShape:
      type: string
      enum:
        - CIRCLE
        - POLYGON
    RadarChartSeriesSettings:
      type: object
      properties:
        AreaStyleSettings:
          allOf:
            - $ref: "#/components/schemas/RadarChartAreaStyleSettings"
            - description: The area style settings of a radar chart.
      description: The series settings of a radar chart.
    RadarChartStartAngle:
      type: number
      format: double
      minimum: -360
      maximum: 360
    RadarChartConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/RadarChartFieldWells"
            - description: The field well configuration of a <code>RadarChartVisual</code>.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/RadarChartSortConfiguration"
            - description: The sort configuration of a <code>RadarChartVisual</code>.
        Shape:
          allOf:
            - $ref: "#/components/schemas/RadarChartShape"
            - description: The shape of the radar chart.
        BaseSeriesSettings:
          allOf:
            - $ref: "#/components/schemas/RadarChartSeriesSettings"
            - description: The base sreies settings of a radar chart.
        StartAngle:
          allOf:
            - $ref: "#/components/schemas/RadarChartStartAngle"
            - description: The start angle of a radar chart's axis.
        VisualPalette:
          allOf:
            - $ref: "#/components/schemas/VisualPalette"
            - description: The palette (chart color) display setup of the visual.
        AlternateBandColorsVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: Determines the visibility of the colors of alternatign bands in a radar chart.
        AlternateBandEvenColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color of the even-numbered alternate bands of a radar chart.
        AlternateBandOddColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The color of the odd-numbered alternate bands of a radar chart.
        CategoryAxis:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The category axis of a radar chart.
        CategoryLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The category label options of a radar chart.
        ColorAxis:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The color axis of a radar chart.
        ColorLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The color label options of a radar chart.
        Legend:
          allOf:
            - $ref: "#/components/schemas/LegendOptions"
            - description: The legend display setup of the visual.
      description: The configuration of a <code>RadarChartVisual</code>.
    RadarChartVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/RadarChartConfiguration"
            - description: The configuration settings of the visual.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: A radar chart visual.
    ReferenceLineDataConfiguration:
      type: object
      properties:
        StaticConfiguration:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineStaticDataConfiguration"
            - description: The static data configuration of the reference line data configuration.
        DynamicConfiguration:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineDynamicDataConfiguration"
            - description: The dynamic configuration of the reference line data configuration.
        AxisBinding:
          allOf:
            - $ref: "#/components/schemas/AxisBinding"
            - description: <p>The axis binding type of the reference line. Choose one of the following options:</p> <ul> <li> <p>PrimaryY</p> </li> <li> <p>SecondaryY</p> </li> </ul>
      description: The data configuration of the reference line.
    ReferenceLineStyleConfiguration:
      type: object
      properties:
        Pattern:
          allOf:
            - $ref: "#/components/schemas/ReferenceLinePatternType"
            - description: <p>The pattern type of the line style. Choose one of the following options:</p> <ul> <li> <p> <code>SOLID</code> </p> </li> <li> <p> <code>DASHED</code> </p> </li> <li> <p> <code>DOTTED</code> </p> </li> </ul>
        Color:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The hex color of the reference line.
      description: The style configuration of the reference line.
    ReferenceLineLabelConfiguration:
      type: object
      properties:
        ValueLabelConfiguration:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineValueLabelConfiguration"
            - description: The value label configuration of the label in a reference line.
        CustomLabelConfiguration:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineCustomLabelConfiguration"
            - description: The custom label configuration of the label in a reference line.
        FontConfiguration:
          allOf:
            - $ref: "#/components/schemas/FontConfiguration"
            - description: The font configuration of the label in a reference line.
        FontColor:
          allOf:
            - $ref: "#/components/schemas/HexColor"
            - description: The font color configuration of the label in a reference line.
        HorizontalPosition:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineLabelHorizontalPosition"
            - description: <p>The horizontal position configuration of the label in a reference line. Choose one of the following options:</p> <ul> <li> <p> <code>LEFT</code> </p> </li> <li> <p> <code>CENTER</code> </p> </li> <li> <p> <code>RIGHT</code> </p> </li> </ul>
        VerticalPosition:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineLabelVerticalPosition"
            - description: <p>The vertical position configuration of the label in a reference line. Choose one of the following options:</p> <ul> <li> <p> <code>ABOVE</code> </p> </li> <li> <p> <code>BELOW</code> </p> </li> </ul>
      description: The label configuration of a reference line.
    ReferenceLine:
      type: object
      required:
        - DataConfiguration
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/WidgetStatus"
            - description: <p>The status of the reference line. Choose one of the following options:</p> <ul> <li> <p> <code>ENABLE</code> </p> </li> <li> <p> <code>DISABLE</code> </p> </li> </ul>
        DataConfiguration:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineDataConfiguration"
            - description: The data configuration of the reference line.
        StyleConfiguration:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineStyleConfiguration"
            - description: The style configuration of the reference line.
        LabelConfiguration:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineLabelConfiguration"
            - description: The label configuration of the reference line.
      description: The reference line visual display options.
    ReferenceLineCustomLabelConfiguration:
      type: object
      required:
        - CustomLabel
      properties:
        CustomLabel:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The string text of the custom label.
      description: The configuration for a custom label on a <code>ReferenceLine</code>.
    ReferenceLineStaticDataConfiguration:
      type: object
      required:
        - Value
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/SensitiveDouble"
            - description: The double input of the static data.
      description: The static data configuration of the reference line data configuration.
    ReferenceLineDynamicDataConfiguration:
      type: object
      required:
        - Column
        - MeasureAggregationFunction
        - Calculation
      properties:
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that the dynamic data targets.
        MeasureAggregationFunction:
          allOf:
            - $ref: "#/components/schemas/AggregationFunction"
            - description: The aggregation function that is used in the dynamic data.
        Calculation:
          allOf:
            - $ref: "#/components/schemas/NumericalAggregationFunction"
            - description: The calculation that is used in the dynamic data.
      description: The dynamic configuration of the reference line data configuration.
    ReferenceLineValueLabelConfiguration:
      type: object
      properties:
        RelativePosition:
          allOf:
            - $ref: "#/components/schemas/ReferenceLineValueLabelRelativePosition"
            - description: <p>The relative position of the value label. Choose one of the following options:</p> <ul> <li> <p> <code>BEFORE_CUSTOM_LABEL</code> </p> </li> <li> <p> <code>AFTER_CUSTOM_LABEL</code> </p> </li> </ul>
        FormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/NumericFormatConfiguration"
            - description: The format configuration of the value label.
      description: The value label configuration of the label in a reference line.
    ReferenceLineLabelHorizontalPosition:
      type: string
      enum:
        - LEFT
        - CENTER
        - RIGHT
    ReferenceLineLabelVerticalPosition:
      type: string
      enum:
        - ABOVE
        - BELOW
    ReferenceLinePatternType:
      type: string
      enum:
        - SOLID
        - DASHED
        - DOTTED
    ReferenceLineValueLabelRelativePosition:
      type: string
      enum:
        - BEFORE_CUSTOM_LABEL
        - AFTER_CUSTOM_LABEL
    RefreshInterval:
      type: string
      enum:
        - MINUTE15
        - MINUTE30
        - HOURLY
        - DAILY
        - WEEKLY
        - MONTHLY
    ScheduleRefreshOnEntity:
      type: object
      properties:
        DayOfWeek:
          allOf:
            - $ref: "#/components/schemas/DayOfWeek"
            - description: The day of the week that you want to schedule a refresh on.
        DayOfMonth:
          allOf:
            - $ref: "#/components/schemas/DayOfMonth"
            - description: The day of the month that you want to schedule refresh on.
      description: The refresh on entity for weekly or monthly schedules.
    UserRole:
      type: string
      enum:
        - ADMIN
        - AUTHOR
        - READER
        - RESTRICTED_AUTHOR
        - RESTRICTED_READER
    RoleSessionName:
      type: string
      pattern: "[\\w+=.@-]*"
      minLength: 2
      maxLength: 64
    RoleName:
      type: string
      pattern: ^[a-zA-Z0-9+=,.@_-]+$
      minLength: 1
      maxLength: 64
    RegisterUserRequest:
      type: object
      required:
        - IdentityType
        - Email
        - UserRole
      title: RegisterUserRequest
      properties:
        IdentityType:
          allOf:
            - $ref: "#/components/schemas/IdentityType"
            - description: "<p>Amazon QuickSight supports several ways of managing the identity of users. This parameter accepts two values:</p> <ul> <li> <p> <code>IAM</code>: A user whose identity maps to an existing IAM user or role. </p> </li> <li> <p> <code>QUICKSIGHT</code>: A user whose identity is owned and managed internally by Amazon QuickSight. </p> </li> </ul>"
        Email:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The email address of the user that you want to register.
        UserRole:
          allOf:
            - $ref: "#/components/schemas/UserRole"
            - description: "<p>The Amazon QuickSight role for the user. The user role can be one of the following:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> <li> <p> <code>RESTRICTED_READER</code>: This role isn't currently available for use.</p> </li> <li> <p> <code>RESTRICTED_AUTHOR</code>: This role isn't currently available for use.</p> </li> </ul>"
        IamArn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: "The ARN of the IAM user or role that you are registering with Amazon QuickSight. "
        SessionName:
          allOf:
            - $ref: "#/components/schemas/RoleSessionName"
            - description: "You need to use this parameter only when you register one or more users using an assumed IAM role. You don't need to provide the session name for other scenarios, for example when you are registering an IAM user or an Amazon QuickSight user. You can register multiple users using the same IAM role if each user has a different session name. For more information on assuming IAM roles, see <a href=\"https://docs.aws.amazon.com/cli/latest/reference/sts/assume-role.html\"> <code>assume-role</code> </a> in the <i>CLI Reference.</i> "
        UserName:
          allOf:
            - $ref: "#/components/schemas/UserName"
            - description: The Amazon QuickSight user name that you want to create for the user you are registering.
        CustomPermissionsName:
          allOf:
            - $ref: "#/components/schemas/RoleName"
            - description: <p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user's access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>To add custom permissions to an existing user, use <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_UpdateUser.html">UpdateUser</a> </code> instead.</p> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the Amazon QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a Amazon QuickSight user. </p> <p>Amazon QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning Amazon QuickSight users to one of the default security cohorts in Amazon QuickSight (admin, author, reader).</p> <p>This feature is available only to Amazon QuickSight Enterprise edition subscriptions.</p>
        ExternalLoginFederationProviderType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: '<p>The type of supported external login provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> </ul>'
        CustomFederationProviderUrl:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.
        ExternalLoginId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The identity ID for a user in the external login provider.
    StatePersistenceConfigurations:
      type: object
      required:
        - Enabled
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Determines if a Amazon QuickSight dashboard's state persistence settings are turned on or off.
      description: The state perssitence configuration of an embedded dashboard.
    RegisteredUserConsoleFeatureConfigurations:
      type: object
      properties:
        StatePersistence:
          allOf:
            - $ref: "#/components/schemas/StatePersistenceConfigurations"
            - description: The state persistence configurations of an embedded Amazon QuickSight console.
      description: The feature configurations of an embedded Amazon QuickSight console.
    RegisteredUserDashboardFeatureConfigurations:
      type: object
      properties:
        StatePersistence:
          allOf:
            - $ref: "#/components/schemas/StatePersistenceConfigurations"
            - description: The state persistence settings of an embedded dashboard.
      description: The feature configuration for an embedded dashboard.
    RelationalTableCatalog:
      type: string
      maxLength: 256
    RelationalTableSchema:
      type: string
      maxLength: 64
    RelationalTableName:
      type: string
      minLength: 1
      maxLength: 64
    RelativeDateType:
      type: string
      enum:
        - PREVIOUS
        - THIS
        - LAST
        - NOW
        - NEXT
    RenameColumnOperation:
      type: object
      required:
        - ColumnName
        - NewColumnName
      properties:
        ColumnName:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: The name of the column to be renamed.
        NewColumnName:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: The new name for the column.
      description: A transform operation that renames a column.
    RestoreAnalysisRequest:
      type: object
      title: RestoreAnalysisRequest
      properties: {}
    RowAlternateColorList:
      type: array
      items:
        $ref: "#/components/schemas/HexColor"
      maxItems: 1
    RowLevelPermissionTagDelimiter:
      type: string
      maxLength: 10
    SessionTagKey:
      type: string
      minLength: 1
      maxLength: 128
    SessionTagValue:
      type: string
      minLength: 1
      maxLength: 256
      format: password
    RowLevelPermissionTagRule:
      type: object
      required:
        - TagKey
        - ColumnName
      properties:
        TagKey:
          allOf:
            - $ref: "#/components/schemas/SessionTagKey"
            - description: The unique key for a tag.
        ColumnName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The column name that a tag key is assigned to.
        TagMultiValueDelimiter:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionTagDelimiter"
            - description: A string that you want to use to delimit the values when you pass the values at run time. For example, you can delimit the values with a comma.
        MatchAllValue:
          allOf:
            - $ref: "#/components/schemas/SessionTagValue"
            - description: A string that you want to use to filter by all the values in a column in the dataset and don’t want to list the values one by one. For example, you can use an asterisk as your match all value.
      description: A set of rules associated with a tag.
    RowLevelPermissionTagRuleConfiguration:
      type: array
      items:
        $ref: "#/components/schemas/SessionTagKey"
      minItems: 1
      maxItems: 50
    RowSortList:
      type: array
      items:
        $ref: "#/components/schemas/FieldSortOptions"
      maxItems: 100
    UploadSettings:
      type: object
      properties:
        Format:
          allOf:
            - $ref: "#/components/schemas/FileFormat"
            - description: File format.
        StartFromRow:
          allOf:
            - $ref: "#/components/schemas/PositiveInteger"
            - description: A row number to start reading data from.
        ContainsHeader:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the file has a header row, or the files each have a header row.
        TextQualifier:
          allOf:
            - $ref: "#/components/schemas/TextQualifier"
            - description: Text qualifier.
        Delimiter:
          allOf:
            - $ref: "#/components/schemas/Delimiter"
            - description: The delimiter between values in the file.
      description: Information about the format for a source file or files.
    TargetVisualList:
      type: array
      items:
        $ref: "#/components/schemas/ShortRestrictiveResourceId"
      minItems: 1
      maxItems: 30
    TargetVisualOptions:
      type: string
      enum:
        - ALL_VISUALS
    SankeyDiagramAggregatedFieldWells:
      type: object
      properties:
        Source:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The source field wells of a sankey diagram.
        Destination:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The destination field wells of a sankey diagram.
        Weight:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The weight field wells of a sankey diagram.
      description: The field well configuration of a sankey diagram.
    SankeyDiagramFieldWells:
      type: object
      properties:
        SankeyDiagramAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/SankeyDiagramAggregatedFieldWells"
            - description: The field well configuration of a sankey diagram.
      description: The field well configuration of a sankey diagram.
    SankeyDiagramSortConfiguration:
      type: object
      properties:
        WeightSort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the weight fields.
        SourceItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of source nodes that are displayed in a sankey diagram.
        DestinationItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of destination nodes that are displayed in a sankey diagram.
      description: The sort configuration of a sankey diagram.
    SankeyDiagramChartConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/SankeyDiagramFieldWells"
            - description: The field well configuration of a sankey diagram.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/SankeyDiagramSortConfiguration"
            - description: The sort configuration of a sankey diagram.
        DataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: The data label configuration of a sankey diagram.
      description: The configuration of a sankey diagram.
    SankeyDiagramVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/SankeyDiagramChartConfiguration"
            - description: The configuration of a sankey diagram.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
      description: <p>A sankey diagram.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/sankey-diagram.html">Using Sankey diagrams</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    ScatterPlotCategoricallyAggregatedFieldWells:
      type: object
      properties:
        XAxis:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: <p>The x-axis field well of a scatter plot.</p> <p>The x-axis is aggregated by category.</p>
        YAxis:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: <p>The y-axis field well of a scatter plot.</p> <p>The y-axis is aggregated by category.</p>
        Category:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The category field well of a scatter plot.
        Size:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The size field well of a scatter plot.
      description: The aggregated field well of a scatter plot.
    ScatterPlotFieldWells:
      type: object
      properties:
        ScatterPlotCategoricallyAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/ScatterPlotCategoricallyAggregatedFieldWells"
            - description: The aggregated field wells of a scatter plot. Scatter plots that have a field in the category (group/color) field will have aggregated field wells. The x and y-axes of these scatter plots are aggregated by category.
        ScatterPlotUnaggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/ScatterPlotUnaggregatedFieldWells"
            - description: The unaggregated field wells of a scatter plot. Scatter plots without a category field well have unaggregated field wells. The x and y-axes of these scatter plots are unaggregated.
      description: <p>The field well configuration of a scatter plot.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    ScatterPlotConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/ScatterPlotFieldWells"
            - description: The field wells of the visual.
        XAxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility, and sort icon visibility) of the scatter plot's x-axis.
        XAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The label display options (grid line, range, scale, and axis step) of the scatter plot's x-axis.
        YAxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility, and sort icon visibility) of the scatter plot's y-axis.
        YAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The label display options (grid line, range, scale, and axis step) of the scatter plot's y-axis.
        Legend:
          allOf:
            - $ref: "#/components/schemas/LegendOptions"
            - description: The legend display setup of the visual.
        DataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: The options that determine if visual data labels are displayed.
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The legend display setup of the visual.
        VisualPalette:
          allOf:
            - $ref: "#/components/schemas/VisualPalette"
            - description: The palette (chart color) display setup of the visual.
      description: The configuration of a scatter plot.
    ScatterPlotUnaggregatedFieldWells:
      type: object
      properties:
        XAxis:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: <p>The x-axis field well of a scatter plot.</p> <p>The x-axis is a dimension field and cannot be aggregated.</p>
        YAxis:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: <p>The y-axis field well of a scatter plot.</p> <p>The y-axis is a dimension field and cannot be aggregated.</p>
        Size:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The size field well of a scatter plot.
      description: The unaggregated field wells of a scatter plot.
    ScatterPlotVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/ScatterPlotConfiguration"
            - description: The configuration settings of the visual.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: <p>A scatter plot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/scatter-plot.html">Using scatter plots</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    VisibleRangeOptions:
      type: object
      properties:
        PercentRange:
          allOf:
            - $ref: "#/components/schemas/PercentVisibleRange"
            - description: The percent range in the visible range.
      description: The range options for the data zoom scroll bar.
    SearchAnalysesRequest:
      type: object
      required:
        - Filters
      title: SearchAnalysesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/AnalysisSearchFilterList"
            - description: "The structure for the search filters that you want to apply to your search. "
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A pagination token that can be used in a subsequent request.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to return.
    SearchDashboardsRequest:
      type: object
      required:
        - Filters
      title: SearchDashboardsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/DashboardSearchFilterList"
            - description: 'The filters to apply to the search. Currently, you can search only by user name, for example, <code>"Filters": [ { "Name": "QUICKSIGHT_USER", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:user/default/UserName1" } ]</code> '
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to be returned per request.
    SearchDataSetsRequest:
      type: object
      required:
        - Filters
      title: SearchDataSetsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/DataSetSearchFilterList"
            - description: The filters to apply to the search.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A pagination token that can be used in a subsequent request.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to be returned per request.
    SearchDataSourcesRequest:
      type: object
      required:
        - Filters
      title: SearchDataSourcesRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/DataSourceSearchFilterList"
            - description: The filters to apply to the search.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A pagination token that can be used in a subsequent request.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to be returned per request.
    SearchFoldersRequest:
      type: object
      required:
        - Filters
      title: SearchFoldersRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/FolderSearchFilterList"
            - description: 'The filters to apply to the search. Currently, you can search only by the parent folder ARN. For example, <code>"Filters": [ { "Name": "PARENT_FOLDER_ARN", "Operator": "StringEquals", "Value": "arn:aws:quicksight:us-east-1:1:folder/folderId" } ]</code>.'
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to be returned per request.
    SearchGroupsRequest:
      type: object
      required:
        - Filters
      title: SearchGroupsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/GroupSearchFilterList"
            - description: The structure for the search filters that you want to apply to your search.
    Seasonality:
      type: integer
      minimum: 1
      maximum: 180
    SectionPageBreakStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    SectionAfterPageBreak:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/SectionPageBreakStatus"
            - description: The option that enables or disables a page break at the end of a section.
      description: The configuration of a page break after a section.
    SectionBasedLayoutPaperCanvasSizeOptions:
      type: object
      properties:
        PaperSize:
          allOf:
            - $ref: "#/components/schemas/PaperSize"
            - description: The paper size that is used to define canvas dimensions.
        PaperOrientation:
          allOf:
            - $ref: "#/components/schemas/PaperOrientation"
            - description: <p>The paper orientation that is used to define canvas dimensions. Choose one of the following options:</p> <ul> <li> <p>PORTRAIT</p> </li> <li> <p>LANDSCAPE</p> </li> </ul>
        PaperMargin:
          allOf:
            - $ref: "#/components/schemas/Spacing"
            - description: Defines the spacing between the canvas content and the top, bottom, left, and right edges.
      description: The options for a paper canvas of a section-based layout.
    Spacing:
      type: object
      properties:
        Top:
          allOf:
            - $ref: "#/components/schemas/Length"
            - description: Define the top spacing.
        Bottom:
          allOf:
            - $ref: "#/components/schemas/Length"
            - description: Define the bottom spacing.
        Left:
          allOf:
            - $ref: "#/components/schemas/Length"
            - description: Define the left spacing.
        Right:
          allOf:
            - $ref: "#/components/schemas/Length"
            - description: Define the right spacing.
      description: The configuration of spacing (often a margin or padding).
    SheetVisualScopingConfigurations:
      type: array
      items:
        $ref: "#/components/schemas/SheetVisualScopingConfiguration"
      minItems: 1
      maxItems: 50
    SelectedTooltipType:
      type: string
      enum:
        - BASIC
        - DETAILED
    SensitiveStringList:
      type: array
      items:
        $ref: "#/components/schemas/SensitiveString"
    SensitiveStringObject:
      type: string
      format: password
    SeriesItem:
      type: object
      properties:
        FieldSeriesItem:
          allOf:
            - $ref: "#/components/schemas/FieldSeriesItem"
            - description: The field series item configuration of a line chart.
        DataFieldSeriesItem:
          allOf:
            - $ref: "#/components/schemas/DataFieldSeriesItem"
            - description: The data field series item configuration of a line chart.
      description: <p>The series item configuration of a line chart.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    SetParameterValueConfiguration:
      type: object
      required:
        - DestinationParameterName
        - Value
      properties:
        DestinationParameterName:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The destination parameter name of the <code>SetParameterValueConfiguration</code>.
        Value:
          $ref: "#/components/schemas/DestinationParameterValueConfiguration"
      description: The configuration of adding parameters in action.
    SheetName:
      type: string
      minLength: 1
      maxLength: 2048
    Sheet:
      type: object
      properties:
        SheetId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier associated with a sheet.
        Name:
          allOf:
            - $ref: "#/components/schemas/SheetName"
            - description: The name of a sheet. This name is displayed on the sheet's tab in the Amazon QuickSight console.
      description: A <i>sheet</i>, which is an object that contains a set of visuals that are viewed together on one page in Amazon QuickSight. Every analysis and dashboard contains at least one sheet. Each sheet contains at least one visualization widget, for example a chart, pivot table, or narrative insight. Sheets can be associated with other components, such as controls, filters, and so on.
    SheetControlLayoutConfiguration:
      type: object
      properties:
        GridLayout:
          allOf:
            - $ref: "#/components/schemas/GridLayoutConfiguration"
            - description: The configuration that determines the elements and canvas size options of sheet control.
      description: The configuration that determines the elements and canvas size options of sheet control.
    SheetControlLayout:
      type: object
      required:
        - Configuration
      properties:
        Configuration:
          allOf:
            - $ref: "#/components/schemas/SheetControlLayoutConfiguration"
            - description: The configuration that determines the elements and canvas size options of sheet control.
      description: A grid layout to define the placement of sheet control.
    SheetControlLayoutList:
      type: array
      items:
        $ref: "#/components/schemas/SheetControlLayout"
      minItems: 0
      maxItems: 1
    SheetTitle:
      type: string
      minLength: 1
      maxLength: 1024
    SheetDescription:
      type: string
      minLength: 1
      maxLength: 1024
    VisualList:
      type: array
      items:
        $ref: "#/components/schemas/Visual"
      maxItems: 30
    SheetTextBoxList:
      type: array
      items:
        $ref: "#/components/schemas/SheetTextBox"
      maxItems: 100
    SheetDefinition:
      type: object
      required:
        - SheetId
      properties:
        SheetId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a sheet.
        Title:
          allOf:
            - $ref: "#/components/schemas/SheetTitle"
            - description: The title of the sheet.
        Description:
          allOf:
            - $ref: "#/components/schemas/SheetDescription"
            - description: A description of the sheet.
        Name:
          allOf:
            - $ref: "#/components/schemas/SheetName"
            - description: The name of the sheet. This name is displayed on the sheet's tab in the Amazon QuickSight console.
        ParameterControls:
          allOf:
            - $ref: "#/components/schemas/ParameterControlList"
            - description: <p>The list of parameter controls that are on a sheet.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/parameters-controls.html">Using a Control with a Parameter in Amazon QuickSight</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        FilterControls:
          allOf:
            - $ref: "#/components/schemas/FilterControlList"
            - description: <p>The list of filter controls that are on a sheet.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/filter-controls.html">Adding filter controls to analysis sheets</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        Visuals:
          allOf:
            - $ref: "#/components/schemas/VisualList"
            - description: A list of the visuals that are on a sheet. Visual placement is determined by the layout of the sheet.
        TextBoxes:
          allOf:
            - $ref: "#/components/schemas/SheetTextBoxList"
            - description: The text boxes that are on a sheet.
        Layouts:
          allOf:
            - $ref: "#/components/schemas/LayoutList"
            - description: <p>Layouts define how the components of a sheet are arranged.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/types-of-layout.html">Types of layout</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        SheetControlLayouts:
          allOf:
            - $ref: "#/components/schemas/SheetControlLayoutList"
            - description: The control layouts of the sheet.
        ContentType:
          allOf:
            - $ref: "#/components/schemas/SheetContentType"
            - description: "<p>The layout content type of the sheet. Choose one of the following options:</p> <ul> <li> <p> <code>PAGINATED</code>: Creates a sheet for a paginated report.</p> </li> <li> <p> <code>INTERACTIVE</code>: Creates a sheet for an interactive dashboard.</p> </li> </ul>"
      description: A sheet is an object that contains a set of visuals that are viewed together on one page in a paginated report. Every analysis and dashboard must contain at least one sheet.
    SheetElementConfigurationOverrides:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: <p>Determines whether or not the overrides are visible. Choose one of the following options:</p> <ul> <li> <p> <code>VISIBLE</code> </p> </li> <li> <p> <code>HIDDEN</code> </p> </li> </ul>
      description: The override configuration of the rendering rules of a sheet.
    SheetElementRenderingRule:
      type: object
      required:
        - Expression
        - ConfigurationOverrides
      properties:
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The expression of the rendering rules of a sheet.
        ConfigurationOverrides:
          allOf:
            - $ref: "#/components/schemas/SheetElementConfigurationOverrides"
            - description: The override configuration of the rendering rules of a sheet.
      description: The rendering rules of a sheet that uses a free-form layout.
    TileStyle:
      type: object
      properties:
        Border:
          allOf:
            - $ref: "#/components/schemas/BorderStyle"
            - description: The border around a tile.
      description: Display options related to tiles on a sheet.
    TileLayoutStyle:
      type: object
      properties:
        Gutter:
          allOf:
            - $ref: "#/components/schemas/GutterStyle"
            - description: "The gutter settings that apply between tiles. "
        Margin:
          allOf:
            - $ref: "#/components/schemas/MarginStyle"
            - description: The margin settings that apply around the outside edge of sheets.
      description: The display options for the layout of tiles on a sheet.
    SheetTextBoxContent:
      type: string
      maxLength: 150000
    SheetTextBox:
      type: object
      required:
        - SheetTextBoxId
      properties:
        SheetTextBoxId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier for a text box. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have text boxes that share identifiers.
        Content:
          allOf:
            - $ref: "#/components/schemas/SheetTextBoxContent"
            - description: The content that is displayed in the text box.
      description: A text box.
    SheetVisualScopingConfiguration:
      type: object
      required:
        - SheetId
        - Scope
      properties:
        SheetId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The selected sheet that the filter is applied to.
        Scope:
          allOf:
            - $ref: "#/components/schemas/FilterVisualScope"
            - description: <p>The scope of the applied entities. Choose one of the following options:</p> <ul> <li> <p> <code>ALL_VISUALS</code> </p> </li> <li> <p> <code>SELECTED_VISUALS</code> </p> </li> </ul>
        VisualIds:
          allOf:
            - $ref: "#/components/schemas/FilteredVisualsList"
            - description: The selected visuals that the filter is applied to.
      description: The filter that is applied to the options.
    ShortPlainText:
      type: string
      minLength: 1
      maxLength: 512
    ShortRichText:
      type: string
      minLength: 1
      maxLength: 1024
    ShortFormatText:
      type: object
      properties:
        PlainText:
          allOf:
            - $ref: "#/components/schemas/ShortPlainText"
            - description: Plain text format.
        RichText:
          allOf:
            - $ref: "#/components/schemas/ShortRichText"
            - description: Rich text. Examples of rich text include bold, underline, and italics.
      description: <p>The text format for the title.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    VisiblePanelRows:
      type: integer
      minimum: 1
      maximum: 10
    VisiblePanelColumns:
      type: integer
      minimum: 1
      maximum: 10
    Warehouse:
      type: string
      maxLength: 128
    StringDefaultValues:
      type: object
      properties:
        DynamicValue:
          allOf:
            - $ref: "#/components/schemas/DynamicDefaultValue"
            - description: The dynamic value of the <code>StringDefaultValues</code>. Different defaults displayed according to users, groups, and values mapping.
        StaticValues:
          allOf:
            - $ref: "#/components/schemas/StringDefaultValueList"
            - description: The static values of the <code>DecimalDefaultValues</code>.
      description: The default values of the <code>StringParameterDeclaration</code>.
    StringParameter:
      type: object
      required:
        - Name
        - Values
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A display name for a string parameter.
        Values:
          allOf:
            - $ref: "#/components/schemas/SensitiveStringList"
            - description: The values of a string parameter.
      description: A string parameter.
    StringValueWhenUnsetConfiguration:
      type: object
      properties:
        ValueWhenUnsetOption:
          allOf:
            - $ref: "#/components/schemas/ValueWhenUnsetOption"
            - description: "<p>The built-in options for default values. The value can be one of the following:</p> <ul> <li> <p> <code>RECOMMENDED</code>: The recommended value.</p> </li> <li> <p> <code>NULL</code>: The <code>NULL</code> value.</p> </li> </ul>"
        CustomValue:
          allOf:
            - $ref: "#/components/schemas/SensitiveString"
            - description: A custom value that's used when the value of a parameter isn't set.
      description: The configuration that defines the default value of a <code>String</code> parameter when a value has not been set.
    TableAggregatedFieldWells:
      type: object
      properties:
        GroupBy:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The group by field well for a pivot table. Values are grouped by group by fields.
        Values:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The values field well for a pivot table. Values are aggregated based on group by fields.
      description: The aggregated field well for the table.
    TableBorderThickness:
      type: integer
      minimum: 1
      maximum: 4
    TableBorderStyle:
      type: string
      enum:
        - NONE
        - SOLID
    TableCellConditionalFormatting:
      type: object
      required:
        - FieldId
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID of the cell for conditional formatting.
        TextFormat:
          allOf:
            - $ref: "#/components/schemas/TextConditionalFormat"
            - description: The text format of the cell for conditional formatting.
      description: The cell conditional formatting option for a table.
    TableCellImageScalingConfiguration:
      type: string
      enum:
        - FIT_TO_CELL_HEIGHT
        - FIT_TO_CELL_WIDTH
        - DO_NOT_SCALE
    TableCellImageSizingConfiguration:
      type: object
      properties:
        TableCellImageScalingConfiguration:
          allOf:
            - $ref: "#/components/schemas/TableCellImageScalingConfiguration"
            - description: The cell scaling configuration of the sizing options for the table image configuration.
      description: The sizing options for the table image configuration.
    TextWrap:
      type: string
      enum:
        - NONE
        - WRAP
    VerticalTextAlignment:
      type: string
      enum:
        - TOP
        - MIDDLE
        - BOTTOM
    TableFieldHeight:
      type: integer
      minimum: 8
      maximum: 500
    TableConditionalFormattingOptionList:
      type: array
      items:
        $ref: "#/components/schemas/TableConditionalFormattingOption"
      maxItems: 100
    TableConditionalFormatting:
      type: object
      properties:
        ConditionalFormattingOptions:
          allOf:
            - $ref: "#/components/schemas/TableConditionalFormattingOptionList"
            - description: Conditional formatting options for a <code>PivotTableVisual</code>.
      description: The conditional formatting for a <code>PivotTableVisual</code>.
    TableRowConditionalFormatting:
      type: object
      properties:
        BackgroundColor:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingColor"
            - description: The conditional formatting color (solid, gradient) of the background for a table row.
        TextColor:
          allOf:
            - $ref: "#/components/schemas/ConditionalFormattingColor"
            - description: The conditional formatting color (solid, gradient) of the text for a table row.
      description: The conditional formatting of a table row.
    TableConditionalFormattingOption:
      type: object
      properties:
        Cell:
          allOf:
            - $ref: "#/components/schemas/TableCellConditionalFormatting"
            - description: The cell conditional formatting option for a table.
        Row:
          allOf:
            - $ref: "#/components/schemas/TableRowConditionalFormatting"
            - description: The row conditional formatting option for a table.
      description: Conditional formatting options for a <code>PivotTableVisual</code>.
    TableFieldWells:
      type: object
      properties:
        TableAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/TableAggregatedFieldWells"
            - description: The aggregated field well for the table.
        TableUnaggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/TableUnaggregatedFieldWells"
            - description: The unaggregated field well for the table.
      description: <p>The field wells for a table visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    TableSortConfiguration:
      type: object
      properties:
        RowSort:
          allOf:
            - $ref: "#/components/schemas/RowSortList"
            - description: The field sort options for rows in the table.
        PaginationConfiguration:
          allOf:
            - $ref: "#/components/schemas/PaginationConfiguration"
            - description: The pagination configuration (page size, page number) for the table.
      description: The sort configuration for a <code>TableVisual</code>.
    TableOptions:
      type: object
      properties:
        Orientation:
          allOf:
            - $ref: "#/components/schemas/TableOrientation"
            - description: The orientation (vertical, horizontal) for a table.
        HeaderStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The table cell style of a table header.
        CellStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: The table cell style of table cells.
        RowAlternateColorOptions:
          allOf:
            - $ref: "#/components/schemas/RowAlternateColorOptions"
            - description: The row alternate color options (widget status, row alternate colors) for a table.
      description: The table options for a table visual.
    TotalOptions:
      type: object
      properties:
        TotalsVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility configuration for the total cells.
        Placement:
          allOf:
            - $ref: "#/components/schemas/TableTotalsPlacement"
            - description: The placement (start, end) for the total cells.
        ScrollStatus:
          allOf:
            - $ref: "#/components/schemas/TableTotalsScrollStatus"
            - description: The scroll status (pinned, scrolled) for the total cells.
        CustomLabel:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The custom label string for the total cells.
        TotalCellStyle:
          allOf:
            - $ref: "#/components/schemas/TableCellStyle"
            - description: Cell styling options for the total cells.
      description: The total options for a table visual.
    TableFieldOptions:
      type: object
      properties:
        SelectedFieldOptions:
          allOf:
            - $ref: "#/components/schemas/TableFieldOptionList"
            - description: The selected field options for the table field options.
        Order:
          allOf:
            - $ref: "#/components/schemas/FieldOrderList"
            - description: The order of field IDs of the field options for a table visual.
      description: The field options for a table visual.
    TablePaginatedReportOptions:
      type: object
      properties:
        VerticalOverflowVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of printing table overflow across pages.
        OverflowColumnHeaderVisibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of repeating header rows on each page.
      description: The paginated report options for a table visual.
    TableInlineVisualizationList:
      type: array
      items:
        $ref: "#/components/schemas/TableInlineVisualization"
      maxItems: 200
    TableConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/TableFieldWells"
            - description: The field wells of the visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/TableSortConfiguration"
            - description: The sort configuration for a <code>TableVisual</code>.
        TableOptions:
          allOf:
            - $ref: "#/components/schemas/TableOptions"
            - description: The table options for a table visual.
        TotalOptions:
          allOf:
            - $ref: "#/components/schemas/TotalOptions"
            - description: The total options for a table visual.
        FieldOptions:
          allOf:
            - $ref: "#/components/schemas/TableFieldOptions"
            - description: The field options for a table visual.
        PaginatedReportOptions:
          allOf:
            - $ref: "#/components/schemas/TablePaginatedReportOptions"
            - description: The paginated report options for a table visual.
        TableInlineVisualizations:
          allOf:
            - $ref: "#/components/schemas/TableInlineVisualizationList"
            - description: A collection of inline visualizations to display within a chart.
      description: The configuration for a <code>TableVisual</code>.
    TableFieldIconSetType:
      type: string
      enum:
        - LINK
    TableFieldCustomIconContent:
      type: object
      properties:
        Icon:
          allOf:
            - $ref: "#/components/schemas/TableFieldIconSetType"
            - description: The icon set type (link) of the custom icon content for table URL link content.
      description: The custom icon content for the table link content configuration.
    TableFieldCustomTextContent:
      type: object
      required:
        - FontConfiguration
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The string value of the custom text content for the table URL link content.
        FontConfiguration:
          allOf:
            - $ref: "#/components/schemas/FontConfiguration"
            - description: The font configuration of the custom text content for the table URL link content.
      description: The custom text content (value, font configuration) for the table link content configuration.
    TableFieldImageConfiguration:
      type: object
      properties:
        SizingOptions:
          allOf:
            - $ref: "#/components/schemas/TableCellImageSizingConfiguration"
            - description: The sizing options for the table image configuration.
      description: The image configuration of a table field URL.
    TableFieldLinkContentConfiguration:
      type: object
      properties:
        CustomTextContent:
          allOf:
            - $ref: "#/components/schemas/TableFieldCustomTextContent"
            - description: The custom text content (value, font configuration) for the table link content configuration.
        CustomIconContent:
          allOf:
            - $ref: "#/components/schemas/TableFieldCustomIconContent"
            - description: The custom icon content for the table link content configuration.
      description: The URL content (text, icon) for the table link configuration.
    TableFieldLinkConfiguration:
      type: object
      required:
        - Target
        - Content
      properties:
        Target:
          allOf:
            - $ref: "#/components/schemas/URLTargetConfiguration"
            - description: The URL target (new tab, new window, same tab) for the table link configuration.
        Content:
          allOf:
            - $ref: "#/components/schemas/TableFieldLinkContentConfiguration"
            - description: The URL content (text, icon) for the table link configuration.
      description: The link configuration of a table field URL.
    TableFieldURLConfiguration:
      type: object
      properties:
        LinkConfiguration:
          allOf:
            - $ref: "#/components/schemas/TableFieldLinkConfiguration"
            - description: The link configuration of a table field URL.
        ImageConfiguration:
          allOf:
            - $ref: "#/components/schemas/TableFieldImageConfiguration"
            - description: The image configuration of a table field URL.
      description: The URL configuration for a table field.
    TableFieldOption:
      type: object
      required:
        - FieldId
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The field ID for a table field.
        Width:
          allOf:
            - $ref: "#/components/schemas/PixelLength"
            - description: The width for a table field.
        CustomLabel:
          allOf:
            - $ref: "#/components/schemas/CustomLabel"
            - description: The custom label for a table field.
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility of a table field.
        URLStyling:
          allOf:
            - $ref: "#/components/schemas/TableFieldURLConfiguration"
            - description: The URL configuration for a table field.
      description: The options for a table field.
    TableFieldOptionList:
      type: array
      items:
        $ref: "#/components/schemas/TableFieldOption"
      maxItems: 100
    TableUnaggregatedFieldWells:
      type: object
      properties:
        Values:
          allOf:
            - $ref: "#/components/schemas/UnaggregatedFieldList"
            - description: The values field well for a pivot table. Values are unaggregated for an unaggregated table.
      description: The unaggregated field well for the table.
    TableInlineVisualization:
      type: object
      properties:
        DataBars:
          allOf:
            - $ref: "#/components/schemas/DataBarsOptions"
            - description: The configuration of the inline visualization of the data bars within a chart.
      description: The inline visualization of a specific type to display within a chart.
    TableOrientation:
      type: string
      enum:
        - VERTICAL
        - HORIZONTAL
    UnaggregatedFieldList:
      type: array
      items:
        $ref: "#/components/schemas/UnaggregatedField"
      maxItems: 200
    TableVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers..
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/TableConfiguration"
            - description: The configuration settings of the visual.
        ConditionalFormatting:
          allOf:
            - $ref: "#/components/schemas/TableConditionalFormatting"
            - description: The conditional formatting for a <code>PivotTableVisual</code>.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
      description: <p>A table visual.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/tabular.html">Using tables as visuals</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    TagColumnOperation:
      type: object
      required:
        - ColumnName
        - Tags
      properties:
        ColumnName:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: The column that this operation acts on.
        Tags:
          allOf:
            - $ref: "#/components/schemas/ColumnTagList"
            - description: <p>The dataset column tag, currently only used for geospatial type tagging.</p> <note> <p>This is not tags for the Amazon Web Services tagging feature.</p> </note>
      description: A transform operation that tags a column with additional information.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.
    TemplateVersion:
      type: object
      properties:
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that this template version was created.
        Errors:
          allOf:
            - $ref: "#/components/schemas/TemplateErrorList"
            - description: Errors associated with this template version.
        VersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: The version number of the template version.
        Status:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: <p>The status that is associated with the template.</p> <ul> <li> <p> <code>CREATION_IN_PROGRESS</code> </p> </li> <li> <p> <code>CREATION_SUCCESSFUL</code> </p> </li> <li> <p> <code>CREATION_FAILED</code> </p> </li> <li> <p> <code>UPDATE_IN_PROGRESS</code> </p> </li> <li> <p> <code>UPDATE_SUCCESSFUL</code> </p> </li> <li> <p> <code>UPDATE_FAILED</code> </p> </li> <li> <p> <code>DELETED</code> </p> </li> </ul>
        DataSetConfigurations:
          allOf:
            - $ref: "#/components/schemas/DataSetConfigurationList"
            - description: Schema of the dataset identified by the placeholder. Any dashboard created from this template should be bound to new datasets matching the same schema described through this API operation.
        Description:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: The description of the template.
        SourceEntityArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of an analysis or template that was used to create this template.
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of the theme associated with this version of the template.
        Sheets:
          allOf:
            - $ref: "#/components/schemas/SheetList"
            - description: A list of the associated sheets with the unique identifier and name of each sheet.
      description: A version of a template.
    TemplateErrorType:
      type: string
      enum:
        - SOURCE_NOT_FOUND
        - DATA_SET_NOT_FOUND
        - INTERNAL_FAILURE
        - ACCESS_DENIED
    TemplateError:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/TemplateErrorType"
            - description: Type of error.
        Message:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Description of the error type.
        ViolatedEntities:
          allOf:
            - $ref: "#/components/schemas/EntityList"
            - description: An error path that shows which entities caused the template error.
      description: List of errors that occurred when the template version creation failed.
    TemplateSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: A summary of a template.
        TemplateId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the template. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        Name:
          allOf:
            - $ref: "#/components/schemas/TemplateName"
            - description: A display name for the template.
        LatestVersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: A structure containing a list of version numbers for the template summary.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The last time that this template was created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The last time that this template was updated.
      description: The template summary.
    TemplateVersionSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the template version.
        VersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: The version number of the template version.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that this template version was created.
        Status:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The status of the template version.
        Description:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: The description of the template version.
      description: The template version.
    TextControlPlaceholderOptions:
      type: object
      properties:
        Visibility:
          allOf:
            - $ref: "#/components/schemas/Visibility"
            - description: The visibility configuration of the placeholder options in a text control.
      description: The configuration of the placeholder options in a text control.
    TextQualifier:
      type: string
      enum:
        - DOUBLE_QUOTE
        - SINGLE_QUOTE
    ThemeVersion:
      type: object
      properties:
        VersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: The version number of the theme.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        Description:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: The description of the theme.
        BaseThemeId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The Amazon QuickSight-defined ID of the theme that a custom theme inherits from. All themes initially inherit from a default Amazon QuickSight theme.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The date and time that this theme version was created.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/ThemeConfiguration"
            - description: The theme configuration, which contains all the theme display properties.
        Errors:
          allOf:
            - $ref: "#/components/schemas/ThemeErrorList"
            - description: Errors associated with the theme.
        Status:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The status of the theme version.
      description: A version of a theme.
    ThemeErrorType:
      type: string
      enum:
        - INTERNAL_FAILURE
    ThemeError:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/ThemeErrorType"
            - description: The type of error.
        Message:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The error message.
      description: Theme error.
    ThemeErrorList:
      type: array
      items:
        $ref: "#/components/schemas/ThemeError"
      minItems: 1
    ThemeSummary:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource.
        Name:
          allOf:
            - $ref: "#/components/schemas/ThemeName"
            - description: the display name for the theme.
        ThemeId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the theme. This ID is unique per Amazon Web Services Region for each Amazon Web Services account.
        LatestVersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: "The latest version number for the theme. "
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The date and time that this theme was created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The last date and time that this theme was updated.
      description: The theme summary.
    ThemeVersionSummary:
      type: object
      properties:
        VersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: The version number of the theme version.
        Arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the theme version.
        Description:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: The description of the theme version.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The date and time that this theme version was created.
        Status:
          allOf:
            - $ref: "#/components/schemas/ResourceStatus"
            - description: The status of the theme version.
      description: The theme version.
    TimeRangeFilterValue:
      type: object
      properties:
        StaticValue:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The static input value.
        RollingDate:
          allOf:
            - $ref: "#/components/schemas/RollingDateConfiguration"
            - description: The rolling date input value.
        Parameter:
          allOf:
            - $ref: "#/components/schemas/ParameterName"
            - description: The parameter type input value.
      description: <p>The value of a time range filter.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    TooltipItem:
      type: object
      properties:
        FieldTooltipItem:
          allOf:
            - $ref: "#/components/schemas/FieldTooltipItem"
            - description: The tooltip item for the fields.
        ColumnTooltipItem:
          allOf:
            - $ref: "#/components/schemas/ColumnTooltipItem"
            - description: The tooltip item for the columns that are not part of a field well.
      description: <p>The tooltip.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    TopBottomComputationType:
      type: string
      enum:
        - TOP
        - BOTTOM
    TopBottomMoversComputationMoverSize:
      type: integer
      minimum: 1
      maximum: 20
    TopBottomSortOrder:
      type: string
      enum:
        - PERCENT_DIFFERENCE
        - ABSOLUTE_DIFFERENCE
    TopBottomRankedComputationResultSize:
      type: integer
      minimum: 1
      maximum: 20
    UntagColumnOperation:
      type: object
      required:
        - ColumnName
        - TagNames
      properties:
        ColumnName:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: The column that this operation acts on.
        TagNames:
          allOf:
            - $ref: "#/components/schemas/ColumnTagNames"
            - description: The column tags to remove from this column.
      description: A transform operation that removes tags associated with a column.
    TransformOperation:
      type: object
      properties:
        ProjectOperation:
          allOf:
            - $ref: "#/components/schemas/ProjectOperation"
            - description: An operation that projects columns. Operations that come after a projection can only refer to projected columns.
        FilterOperation:
          allOf:
            - $ref: "#/components/schemas/FilterOperation"
            - description: An operation that filters rows based on some condition.
        CreateColumnsOperation:
          allOf:
            - $ref: "#/components/schemas/CreateColumnsOperation"
            - description: An operation that creates calculated columns. Columns created in one such operation form a lexical closure.
        RenameColumnOperation:
          allOf:
            - $ref: "#/components/schemas/RenameColumnOperation"
            - description: An operation that renames a column.
        CastColumnTypeOperation:
          allOf:
            - $ref: "#/components/schemas/CastColumnTypeOperation"
            - description: A transform operation that casts a column to a different type.
        TagColumnOperation:
          allOf:
            - $ref: "#/components/schemas/TagColumnOperation"
            - description: An operation that tags a column with additional information.
        UntagColumnOperation:
          $ref: "#/components/schemas/UntagColumnOperation"
      description: A data transformation on a logical table. This is a variant type structure. For this structure to be valid, only one of the attributes can be non-null.
    TreeMapDimensionFieldList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionField"
      maxItems: 1
    TreeMapMeasureFieldList:
      type: array
      items:
        $ref: "#/components/schemas/MeasureField"
      maxItems: 1
    TreeMapAggregatedFieldWells:
      type: object
      properties:
        Groups:
          allOf:
            - $ref: "#/components/schemas/TreeMapDimensionFieldList"
            - description: The group by field well of a tree map. Values are grouped based on group by fields.
        Sizes:
          allOf:
            - $ref: "#/components/schemas/TreeMapMeasureFieldList"
            - description: The size field well of a tree map. Values are aggregated based on group by fields.
        Colors:
          allOf:
            - $ref: "#/components/schemas/TreeMapMeasureFieldList"
            - description: The color field well of a tree map. Values are grouped by aggregations based on group by fields.
      description: Aggregated field wells of a tree map.
    TreeMapFieldWells:
      type: object
      properties:
        TreeMapAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/TreeMapAggregatedFieldWells"
            - description: The aggregated field wells of a tree map.
      description: <p>The field wells of a tree map.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    TreeMapSortConfiguration:
      type: object
      properties:
        TreeMapSort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of group by fields.
        TreeMapGroupItemsLimitConfiguration:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of groups that are displayed.
      description: The sort configuration of a tree map.
    TreeMapConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/TreeMapFieldWells"
            - description: The field wells of the visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/TreeMapSortConfiguration"
            - description: The sort configuration of a tree map.
        GroupLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility) of the groups that are displayed in a tree map.
        SizeLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility) of the sizes that are displayed in a tree map.
        ColorLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility) for the colors displayed in a tree map.
        ColorScale:
          allOf:
            - $ref: "#/components/schemas/ColorScale"
            - description: The color options (gradient color, point of divergence) of a tree map.
        Legend:
          allOf:
            - $ref: "#/components/schemas/LegendOptions"
            - description: The legend display setup of the visual.
        DataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: The options that determine if visual data labels are displayed.
        Tooltip:
          allOf:
            - $ref: "#/components/schemas/TooltipOptions"
            - description: The tooltip display setup of the visual.
      description: The configuration of a tree map.
    TreeMapVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers..
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/TreeMapConfiguration"
            - description: The configuration settings of the visual.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: <p>A tree map.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/tree-map.html">Using tree maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    UnaggregatedField:
      type: object
      required:
        - FieldId
        - Column
      properties:
        FieldId:
          allOf:
            - $ref: "#/components/schemas/FieldId"
            - description: The custom field ID.
        Column:
          allOf:
            - $ref: "#/components/schemas/ColumnIdentifier"
            - description: The column that is used in the <code>UnaggregatedField</code>.
        FormatConfiguration:
          allOf:
            - $ref: "#/components/schemas/FormatConfiguration"
            - description: The format configuration of the field.
      description: The unaggregated field for a table.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateAccountCustomizationRequest:
      type: object
      required:
        - AccountCustomization
      title: UpdateAccountCustomizationRequest
      properties:
        AccountCustomization:
          allOf:
            - $ref: "#/components/schemas/AccountCustomization"
            - description: "The Amazon QuickSight customizations you're updating in the current Amazon Web Services Region. "
    UpdateAccountSettingsRequest:
      type: object
      required:
        - DefaultNamespace
      title: UpdateAccountSettingsRequest
      properties:
        DefaultNamespace:
          allOf:
            - $ref: "#/components/schemas/Namespace"
            - description: "The default namespace for this Amazon Web Services account. Currently, the default is <code>default</code>. IAM users that register for the first time with Amazon QuickSight provide an email address that becomes associated with the default namespace. "
        NotificationEmail:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The email address that you want Amazon QuickSight to send notifications to regarding your Amazon Web Services account or Amazon QuickSight subscription.
        TerminationProtectionEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: A boolean value that determines whether or not an Amazon QuickSight account can be deleted. A <code>True</code> value doesn't allow the account to be deleted and results in an error message if a user tries to make a <code>DeleteAccountSubscription</code> request. A <code>False</code> value will allow the account to be deleted.
    UpdateResourcePermissionList:
      type: array
      items:
        $ref: "#/components/schemas/ResourcePermission"
      maxItems: 100
    UpdateAnalysisPermissionsRequest:
      type: object
      title: UpdateAnalysisPermissionsRequest
      properties:
        GrantPermissions:
          allOf:
            - $ref: "#/components/schemas/UpdateResourcePermissionList"
            - description: A structure that describes the permissions to add and the principal to add them to.
        RevokePermissions:
          allOf:
            - $ref: "#/components/schemas/UpdateResourcePermissionList"
            - description: A structure that describes the permissions to remove and the principal to remove them from.
    UpdateAnalysisRequest:
      type: object
      required:
        - Name
      title: UpdateAnalysisRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/AnalysisName"
            - description: A descriptive name for the analysis that you're updating. This name displays for the analysis in the Amazon QuickSight console.
        Parameters:
          allOf:
            - $ref: "#/components/schemas/Parameters"
            - description: "The parameter names and override values that you want to use. An analysis can have any parameter type, and some parameters might accept multiple values. "
        SourceEntity:
          allOf:
            - $ref: "#/components/schemas/AnalysisSourceEntity"
            - description: A source entity to use for the analysis that you're updating. This metadata structure contains details that describe a source template and one or more datasets.
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) for the theme to apply to the analysis that you're creating. To see the theme in the Amazon QuickSight console, make sure that you have access to it.
        Definition:
          allOf:
            - $ref: "#/components/schemas/AnalysisDefinition"
            - description: <p>The definition of an analysis.</p> <p>A definition is the data model of all features in a Dashboard, Template, or Analysis.</p>
    UpdateLinkPermissionList:
      type: array
      items:
        $ref: "#/components/schemas/ResourcePermission"
      maxItems: 2
    UpdateDashboardPermissionsRequest:
      type: object
      title: UpdateDashboardPermissionsRequest
      properties:
        GrantPermissions:
          allOf:
            - $ref: "#/components/schemas/UpdateResourcePermissionList"
            - description: The permissions that you want to grant on this resource.
        RevokePermissions:
          allOf:
            - $ref: "#/components/schemas/UpdateResourcePermissionList"
            - description: The permissions that you want to revoke from this resource.
        GrantLinkPermissions:
          allOf:
            - $ref: "#/components/schemas/UpdateLinkPermissionList"
            - description: Grants link permissions to all users in a defined namespace.
        RevokeLinkPermissions:
          allOf:
            - $ref: "#/components/schemas/UpdateLinkPermissionList"
            - description: Revokes link permissions from all users in a defined namespace.
    UpdateDashboardPublishedVersionRequest:
      type: object
      title: UpdateDashboardPublishedVersionRequest
      properties: {}
    UpdateDashboardRequest:
      type: object
      required:
        - Name
      title: UpdateDashboardRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/DashboardName"
            - description: The display name of the dashboard.
        SourceEntity:
          allOf:
            - $ref: "#/components/schemas/DashboardSourceEntity"
            - description: <p>The entity that you are using as a source when you update the dashboard. In <code>SourceEntity</code>, you specify the type of object you're using as source. You can only update a dashboard from a template, so you use a <code>SourceTemplate</code> entity. If you need to update a dashboard from an analysis, first convert the analysis to a template by using the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_CreateTemplate.html">CreateTemplate</a> </code> API operation. For <code>SourceTemplate</code>, specify the Amazon Resource Name (ARN) of the source template. The <code>SourceTemplate</code> ARN can contain any Amazon Web Services account and any Amazon QuickSight-supported Amazon Web Services Region. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p>
        Parameters:
          allOf:
            - $ref: "#/components/schemas/Parameters"
            - description: A structure that contains the parameters of the dashboard. These are parameter overrides for a dashboard. A dashboard can have any type of parameters, and some parameters might accept multiple values.
        VersionDescription:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: A description for the first version of the dashboard being created.
        DashboardPublishOptions:
          allOf:
            - $ref: "#/components/schemas/DashboardPublishOptions"
            - description: <p>Options for publishing the dashboard when you create it:</p> <ul> <li> <p> <code>AvailabilityStatus</code> for <code>AdHocFilteringOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. When this is set to <code>DISABLED</code>, Amazon QuickSight disables the left filter pane on the published dashboard, which can be used for ad hoc (one-time) filtering. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>AvailabilityStatus</code> for <code>ExportToCSVOption</code> - This status can be either <code>ENABLED</code> or <code>DISABLED</code>. The visual option to export data to .CSV format isn't enabled when this is set to <code>DISABLED</code>. This option is <code>ENABLED</code> by default. </p> </li> <li> <p> <code>VisibilityState</code> for <code>SheetControlsOption</code> - This visibility state can be either <code>COLLAPSED</code> or <code>EXPANDED</code>. This option is <code>COLLAPSED</code> by default. </p> </li> </ul>
        ThemeArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the theme that is being used for this dashboard. If you add a value for this field, it overrides the value that was originally associated with the entity. The theme ARN must exist in the same Amazon Web Services account where you create the dashboard.
        Definition:
          allOf:
            - $ref: "#/components/schemas/DashboardVersionDefinition"
            - description: <p>The definition of a dashboard.</p> <p>A definition is the data model of all features in a Dashboard, Template, or Analysis.</p>
    UpdateDataSetPermissionsRequest:
      type: object
      title: UpdateDataSetPermissionsRequest
      properties:
        GrantPermissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: The resource permissions that you want to grant to the dataset.
        RevokePermissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: The resource permissions that you want to revoke from the dataset.
    UpdateDataSetRequest:
      type: object
      required:
        - Name
        - PhysicalTableMap
        - ImportMode
      title: UpdateDataSetRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The display name for the dataset.
        PhysicalTableMap:
          allOf:
            - $ref: "#/components/schemas/PhysicalTableMap"
            - description: Declares the physical tables that are available in the underlying data sources.
        LogicalTableMap:
          allOf:
            - $ref: "#/components/schemas/LogicalTableMap"
            - description: Configures the combination and transformation of the data from the physical tables.
        ImportMode:
          allOf:
            - $ref: "#/components/schemas/DataSetImportMode"
            - description: Indicates whether you want to import the data into SPICE.
        ColumnGroups:
          allOf:
            - $ref: "#/components/schemas/ColumnGroupList"
            - description: Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.
        FieldFolders:
          allOf:
            - $ref: "#/components/schemas/FieldFolderMap"
            - description: The folder that contains fields and nested subfolders for your dataset.
        RowLevelPermissionDataSet:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionDataSet"
            - description: The row-level security configuration for the data you want to create.
        RowLevelPermissionTagConfiguration:
          allOf:
            - $ref: "#/components/schemas/RowLevelPermissionTagConfiguration"
            - description: The configuration of tags on a dataset to set row-level security. Row-level security tags are currently supported for anonymous embedding only.
        ColumnLevelPermissionRules:
          allOf:
            - $ref: "#/components/schemas/ColumnLevelPermissionRuleList"
            - description: A set of one or more definitions of a <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html">ColumnLevelPermissionRule</a> </code>.
        DataSetUsageConfiguration:
          $ref: "#/components/schemas/DataSetUsageConfiguration"
    UpdateDataSourcePermissionsRequest:
      type: object
      title: UpdateDataSourcePermissionsRequest
      properties:
        GrantPermissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: A list of resource permissions that you want to grant on the data source.
        RevokePermissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: A list of resource permissions that you want to revoke on the data source.
    UpdateDataSourceRequest:
      type: object
      required:
        - Name
      title: UpdateDataSourceRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: A display name for the data source.
        DataSourceParameters:
          allOf:
            - $ref: "#/components/schemas/DataSourceParameters"
            - description: The parameters that Amazon QuickSight uses to connect to your underlying source.
        Credentials:
          allOf:
            - $ref: "#/components/schemas/DataSourceCredentials"
            - description: The credentials that Amazon QuickSight that uses to connect to your underlying source. Currently, only credentials based on user name and password are supported.
        VpcConnectionProperties:
          allOf:
            - $ref: "#/components/schemas/VpcConnectionProperties"
            - description: Use this parameter only when you want Amazon QuickSight to use a VPC connection when connecting to your underlying source.
        SslProperties:
          allOf:
            - $ref: "#/components/schemas/SslProperties"
            - description: Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your underlying source.
    UpdateFolderPermissionsRequest:
      type: object
      title: UpdateFolderPermissionsRequest
      properties:
        GrantPermissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: The permissions that you want to grant on a resource.
        RevokePermissions:
          allOf:
            - $ref: "#/components/schemas/ResourcePermissionList"
            - description: The permissions that you want to revoke from a resource.
    UpdateFolderRequest:
      type: object
      required:
        - Name
      title: UpdateFolderRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/FolderName"
            - description: The name of the folder.
    UpdateGroupRequest:
      type: object
      title: UpdateGroupRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/GroupDescription"
            - description: The description for the group that you want to update.
    UpdateIAMPolicyAssignmentRequest:
      type: object
      title: UpdateIAMPolicyAssignmentRequest
      properties:
        AssignmentStatus:
          allOf:
            - $ref: "#/components/schemas/AssignmentStatus"
            - description: <p>The status of the assignment. Possible values are as follows:</p> <ul> <li> <p> <code>ENABLED</code> - Anything specified in this assignment is used when creating the data source.</p> </li> <li> <p> <code>DISABLED</code> - This assignment isn't used when creating the data source.</p> </li> <li> <p> <code>DRAFT</code> - This assignment is an unfinished draft and isn't used when creating the data source.</p> </li> </ul>
        PolicyArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN for the IAM policy to apply to the Amazon QuickSight users and groups specified in this assignment.
        Identities:
          allOf:
            - $ref: "#/components/schemas/IdentityMap"
            - description: The Amazon QuickSight users, groups, or both that you want to assign the policy to.
    UpdateIpRestrictionRequest:
      type: object
      title: UpdateIpRestrictionRequest
      properties:
        IpRestrictionRuleMap:
          allOf:
            - $ref: "#/components/schemas/IpRestrictionRuleMap"
            - description: A map that describes the updated IP rules with CIDR ranges and descriptions.
        Enabled:
          allOf:
            - $ref: "#/components/schemas/NullableBoolean"
            - description: A value that specifies whether IP rules are turned on.
    UpdatePublicSharingSettingsRequest:
      type: object
      title: UpdatePublicSharingSettingsRequest
      properties:
        PublicSharingEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: A Boolean value that indicates whether public sharing is turned on for an Amazon QuickSight account.
    UpdateRefreshScheduleRequest:
      type: object
      required:
        - Schedule
      title: UpdateRefreshScheduleRequest
      properties:
        Schedule:
          allOf:
            - $ref: "#/components/schemas/RefreshSchedule"
            - description: The refresh schedule.
    UpdateTemplateAliasRequest:
      type: object
      required:
        - TemplateVersionNumber
      title: UpdateTemplateAliasRequest
      properties:
        TemplateVersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: The version number of the template.
    UpdateTemplatePermissionsRequest:
      type: object
      title: UpdateTemplatePermissionsRequest
      properties:
        GrantPermissions:
          allOf:
            - $ref: "#/components/schemas/UpdateResourcePermissionList"
            - description: "A list of resource permissions to be granted on the template. "
        RevokePermissions:
          allOf:
            - $ref: "#/components/schemas/UpdateResourcePermissionList"
            - description: "A list of resource permissions to be revoked from the template. "
    UpdateTemplateRequest:
      type: object
      title: UpdateTemplateRequest
      properties:
        SourceEntity:
          allOf:
            - $ref: "#/components/schemas/TemplateSourceEntity"
            - description: "<p>The entity that you are using as a source when you update the template. In <code>SourceEntity</code>, you specify the type of object you're using as source: <code>SourceTemplate</code> for a template or <code>SourceAnalysis</code> for an analysis. Both of these require an Amazon Resource Name (ARN). For <code>SourceTemplate</code>, specify the ARN of the source template. For <code>SourceAnalysis</code>, specify the ARN of the source analysis. The <code>SourceTemplate</code> ARN can contain any Amazon Web Services account and any Amazon QuickSight-supported Amazon Web Services Region;. </p> <p>Use the <code>DataSetReferences</code> entity within <code>SourceTemplate</code> or <code>SourceAnalysis</code> to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder. </p>"
        VersionDescription:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: A description of the current template version that is being updated. Every time you call <code>UpdateTemplate</code>, you create a new version of the template. Each version of the template maintains a description of the version in the <code>VersionDescription</code> field.
        Name:
          allOf:
            - $ref: "#/components/schemas/TemplateName"
            - description: The name for the template.
        Definition:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionDefinition"
            - description: <p>The definition of a template.</p> <p>A definition is the data model of all features in a Dashboard, Template, or Analysis.</p>
    UpdateThemeAliasRequest:
      type: object
      required:
        - ThemeVersionNumber
      title: UpdateThemeAliasRequest
      properties:
        ThemeVersionNumber:
          allOf:
            - $ref: "#/components/schemas/VersionNumber"
            - description: The version number of the theme that the alias should reference.
    UpdateThemePermissionsRequest:
      type: object
      title: UpdateThemePermissionsRequest
      properties:
        GrantPermissions:
          allOf:
            - $ref: "#/components/schemas/UpdateResourcePermissionList"
            - description: A list of resource permissions to be granted for the theme.
        RevokePermissions:
          allOf:
            - $ref: "#/components/schemas/UpdateResourcePermissionList"
            - description: A list of resource permissions to be revoked from the theme.
    UpdateThemeRequest:
      type: object
      required:
        - BaseThemeId
      title: UpdateThemeRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ThemeName"
            - description: The name for the theme.
        BaseThemeId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The theme ID, defined by Amazon QuickSight, that a custom theme inherits from. All themes initially inherit from a default Amazon QuickSight theme.
        VersionDescription:
          allOf:
            - $ref: "#/components/schemas/VersionDescription"
            - description: A description of the theme version that you're updating Every time that you call <code>UpdateTheme</code>, you create a new version of the theme. Each version of the theme maintains a description of the version in <code>VersionDescription</code>.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/ThemeConfiguration"
            - description: The theme configuration, which contains the theme display properties.
    UpdateUserRequest:
      type: object
      required:
        - Email
        - Role
      title: UpdateUserRequest
      properties:
        Email:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The email address of the user that you want to update.
        Role:
          allOf:
            - $ref: "#/components/schemas/UserRole"
            - description: "<p>The Amazon QuickSight role of the user. The role can be one of the following default security cohorts:</p> <ul> <li> <p> <code>READER</code>: A user who has read-only access to dashboards.</p> </li> <li> <p> <code>AUTHOR</code>: A user who can create data sources, datasets, analyses, and dashboards.</p> </li> <li> <p> <code>ADMIN</code>: A user who is an author, who can also manage Amazon QuickSight settings.</p> </li> </ul> <p>The name of the Amazon QuickSight role is invisible to the user except for the console screens dealing with permissions.</p>"
        CustomPermissionsName:
          allOf:
            - $ref: "#/components/schemas/RoleName"
            - description: <p>(Enterprise edition only) The name of the custom permissions profile that you want to assign to this user. Customized permissions allows you to control a user's access by restricting access the following operations:</p> <ul> <li> <p>Create and update data sources</p> </li> <li> <p>Create and update datasets</p> </li> <li> <p>Create and update email reports</p> </li> <li> <p>Subscribe to email reports</p> </li> </ul> <p>A set of custom permissions includes any combination of these restrictions. Currently, you need to create the profile names for custom permission sets by using the Amazon QuickSight console. Then, you use the <code>RegisterUser</code> API operation to assign the named set of permissions to a Amazon QuickSight user. </p> <p>Amazon QuickSight custom permissions are applied through IAM policies. Therefore, they override the permissions typically granted by assigning Amazon QuickSight users to one of the default security cohorts in Amazon QuickSight (admin, author, reader).</p> <p>This feature is available only to Amazon QuickSight Enterprise edition subscriptions.</p>
        UnapplyCustomPermissions:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: A flag that you use to indicate that you want to remove all custom permissions from this user. Using this parameter resets the user to the state it was in before a custom permissions profile was applied. This parameter defaults to NULL and it doesn't accept any other value.
        ExternalLoginFederationProviderType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: '<p>The type of supported external login provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. The type of supported external login provider can be one of the following.</p> <ul> <li> <p> <code>COGNITO</code>: Amazon Cognito. The provider URL is cognito-identity.amazonaws.com. When choosing the <code>COGNITO</code> provider type, don’t use the "CustomFederationProviderUrl" parameter which is only needed when the external provider is custom.</p> </li> <li> <p> <code>CUSTOM_OIDC</code>: Custom OpenID Connect (OIDC) provider. When choosing <code>CUSTOM_OIDC</code> type, use the <code>CustomFederationProviderUrl</code> parameter to provide the custom OIDC provider URL.</p> </li> <li> <p> <code>NONE</code>: This clears all the previously saved external login information for a user. Use the <code> <a href="https://docs.aws.amazon.com/quicksight/latest/APIReference/API_DescribeUser.html">DescribeUser</a> </code> API operation to check the external login information.</p> </li> </ul>'
        CustomFederationProviderUrl:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The URL of the custom OpenID Connect (OIDC) provider that provides identity to let a user federate into Amazon QuickSight with an associated Identity and Access Management(IAM) role. This parameter should only be used when <code>ExternalLoginFederationProviderType</code> parameter is set to <code>CUSTOM_OIDC</code>.
        ExternalLoginId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The identity ID for a user in the external login provider.
    WaterfallVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers.
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/WaterfallChartConfiguration"
            - description: The configuration for a waterfall visual.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: <p>A waterfall chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/waterfall-chart.html">Using waterfall charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    WordCloudVisual:
      type: object
      required:
        - VisualId
      properties:
        VisualId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The unique identifier of a visual. This identifier must be unique within the context of a dashboard, template, or analysis. Two dashboards, analyses, or templates can have visuals with the same identifiers..
        Title:
          allOf:
            - $ref: "#/components/schemas/VisualTitleLabelOptions"
            - description: The title that is displayed on the visual.
        Subtitle:
          allOf:
            - $ref: "#/components/schemas/VisualSubtitleLabelOptions"
            - description: The subtitle that is displayed on the visual.
        ChartConfiguration:
          allOf:
            - $ref: "#/components/schemas/WordCloudChartConfiguration"
            - description: The configuration settings of the visual.
        Actions:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionList"
            - description: The list of custom actions that are configured for a visual.
        ColumnHierarchies:
          allOf:
            - $ref: "#/components/schemas/ColumnHierarchyList"
            - description: The column hierarchy that is used during drill-downs and drill-ups.
      description: <p>A word cloud.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/word-cloud.html">Using word clouds</a> in the <i>Amazon QuickSight User Guide</i>.</p>
    Visual:
      type: object
      properties:
        TableVisual:
          allOf:
            - $ref: "#/components/schemas/TableVisual"
            - description: <p>A table visual.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/tabular.html">Using tables as visuals</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        PivotTableVisual:
          allOf:
            - $ref: "#/components/schemas/PivotTableVisual"
            - description: <p>A pivot table.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/pivot-table.html">Using pivot tables</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        BarChartVisual:
          allOf:
            - $ref: "#/components/schemas/BarChartVisual"
            - description: <p>A bar chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/bar-charts.html">Using bar charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        KPIVisual:
          allOf:
            - $ref: "#/components/schemas/KPIVisual"
            - description: <p>A key performance indicator (KPI).</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/kpi.html">Using KPIs</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        PieChartVisual:
          allOf:
            - $ref: "#/components/schemas/PieChartVisual"
            - description: <p>A pie or donut chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/pie-chart.html">Using pie charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        GaugeChartVisual:
          allOf:
            - $ref: "#/components/schemas/GaugeChartVisual"
            - description: <p>A gauge chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/gauge-chart.html">Using gauge charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        LineChartVisual:
          allOf:
            - $ref: "#/components/schemas/LineChartVisual"
            - description: <p>A line chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/line-charts.html">Using line charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        HeatMapVisual:
          allOf:
            - $ref: "#/components/schemas/HeatMapVisual"
            - description: <p>A heat map.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/heat-map.html">Using heat maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        TreeMapVisual:
          allOf:
            - $ref: "#/components/schemas/TreeMapVisual"
            - description: <p>A tree map.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/tree-map.html">Using tree maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        GeospatialMapVisual:
          allOf:
            - $ref: "#/components/schemas/GeospatialMapVisual"
            - description: <p>A geospatial map or a points on map visual.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/point-maps.html">Creating point maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        FilledMapVisual:
          allOf:
            - $ref: "#/components/schemas/FilledMapVisual"
            - description: <p>A filled map.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/filled-maps.html">Creating filled maps</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        FunnelChartVisual:
          allOf:
            - $ref: "#/components/schemas/FunnelChartVisual"
            - description: <p>A funnel chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/funnel-visual-content.html">Using funnel charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        ScatterPlotVisual:
          allOf:
            - $ref: "#/components/schemas/ScatterPlotVisual"
            - description: <p>A scatter plot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/scatter-plot.html">Using scatter plots</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        ComboChartVisual:
          allOf:
            - $ref: "#/components/schemas/ComboChartVisual"
            - description: <p>A combo chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/combo-charts.html">Using combo charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        BoxPlotVisual:
          allOf:
            - $ref: "#/components/schemas/BoxPlotVisual"
            - description: <p>A box plot.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/box-plots.html">Using box plots</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        WaterfallVisual:
          allOf:
            - $ref: "#/components/schemas/WaterfallVisual"
            - description: <p>A waterfall chart.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/waterfall-chart.html">Using waterfall charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        HistogramVisual:
          allOf:
            - $ref: "#/components/schemas/HistogramVisual"
            - description: <p>A histogram.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/histogram-charts.html">Using histograms</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        WordCloudVisual:
          allOf:
            - $ref: "#/components/schemas/WordCloudVisual"
            - description: <p>A word cloud.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/word-cloud.html">Using word clouds</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        InsightVisual:
          allOf:
            - $ref: "#/components/schemas/InsightVisual"
            - description: <p>An insight visual.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/computational-insights.html">Working with insights</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        SankeyDiagramVisual:
          allOf:
            - $ref: "#/components/schemas/SankeyDiagramVisual"
            - description: <p>A sankey diagram.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/sankey-diagram.html">Using Sankey diagrams</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        CustomContentVisual:
          allOf:
            - $ref: "#/components/schemas/CustomContentVisual"
            - description: <p>A visual that contains custom content.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/custom-visual-content.html">Using custom visual content</a> in the <i>Amazon QuickSight User Guide</i>.</p>
        EmptyVisual:
          allOf:
            - $ref: "#/components/schemas/EmptyVisual"
            - description: An empty visual.
        RadarChartVisual:
          allOf:
            - $ref: "#/components/schemas/RadarChartVisual"
            - description: <p>A radar chart visual.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/quicksight/latest/user/radar-chart.html">Using radar charts</a> in the <i>Amazon QuickSight User Guide</i>.</p>
      description: <p>A visual displayed on a sheet in an analysis, dashboard, or template.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    VisualCustomActionName:
      type: string
      minLength: 1
      maxLength: 256
    VisualCustomActionTrigger:
      type: string
      enum:
        - DATA_POINT_CLICK
        - DATA_POINT_MENU
    VisualCustomActionOperationList:
      type: array
      items:
        $ref: "#/components/schemas/VisualCustomActionOperation"
      minItems: 1
      maxItems: 2
    VisualCustomAction:
      type: object
      required:
        - CustomActionId
        - Name
        - Trigger
        - ActionOperations
      properties:
        CustomActionId:
          allOf:
            - $ref: "#/components/schemas/ShortRestrictiveResourceId"
            - description: The ID of the <code>VisualCustomAction</code>.
        Name:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionName"
            - description: The name of the <code>VisualCustomAction</code>.
        Status:
          allOf:
            - $ref: "#/components/schemas/WidgetStatus"
            - description: The status of the <code>VisualCustomAction</code>.
        Trigger:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionTrigger"
            - description: "<p>The trigger of the <code>VisualCustomAction</code>.</p> <p>Valid values are defined as follows:</p> <ul> <li> <p> <code>DATA_POINT_CLICK</code>: Initiates a custom action by a left pointer click on a data point.</p> </li> <li> <p> <code>DATA_POINT_MENU</code>: Initiates a custom action by right pointer click from the menu.</p> </li> </ul>"
        ActionOperations:
          allOf:
            - $ref: "#/components/schemas/VisualCustomActionOperationList"
            - description: <p>A list of <code>VisualCustomActionOperations</code>.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
      description: A custom action defined on a visual.
    VisualCustomActionOperation:
      type: object
      properties:
        FilterOperation:
          allOf:
            - $ref: "#/components/schemas/CustomActionFilterOperation"
            - description: The filter operation that filters data included in a visual or in an entire sheet.
        NavigationOperation:
          allOf:
            - $ref: "#/components/schemas/CustomActionNavigationOperation"
            - description: The navigation operation that navigates between different sheets in the same analysis.
        URLOperation:
          allOf:
            - $ref: "#/components/schemas/CustomActionURLOperation"
            - description: The URL operation that opens a link to another webpage.
        SetParametersOperation:
          allOf:
            - $ref: "#/components/schemas/CustomActionSetParametersOperation"
            - description: The set parameter operation that sets parameters in custom action.
      description: <p>The operation that is defined by the custom action.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    WaterfallChartAggregatedFieldWells:
      type: object
      properties:
        Categories:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The category field wells of a waterfall visual.
        Values:
          allOf:
            - $ref: "#/components/schemas/MeasureFieldList"
            - description: The value field wells of a waterfall visual.
        Breakdowns:
          allOf:
            - $ref: "#/components/schemas/DimensionFieldList"
            - description: The breakdown field wells of a waterfall visual.
      description: The field well configuration of a waterfall visual.
    WaterfallChartFieldWells:
      type: object
      properties:
        WaterfallChartAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/WaterfallChartAggregatedFieldWells"
            - description: The field well configuration of a waterfall visual.
      description: The field well configuration of a waterfall visual.
    WaterfallChartSortConfiguration:
      type: object
      properties:
        CategorySort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of the category fields.
        BreakdownItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of bar groups that are displayed.
      description: The sort configuration of a waterfall visual.
    WaterfallChartOptions:
      type: object
      properties:
        TotalBarLabel:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: This option determines the total bar label of a waterfall visual.
      description: The options that determine the presentation of a waterfall visual.
    WaterfallChartConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/WaterfallChartFieldWells"
            - description: The field well configuration of a waterfall visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/WaterfallChartSortConfiguration"
            - description: The sort configuration of a waterfall visual.
        WaterfallChartOptions:
          allOf:
            - $ref: "#/components/schemas/WaterfallChartOptions"
            - description: The options that determine the presentation of a waterfall visual.
        CategoryAxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The options that determine the presentation of the category axis label.
        CategoryAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The options that determine the presentation of the category axis.
        PrimaryYAxisLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The options that determine the presentation of the y-axis label.
        PrimaryYAxisDisplayOptions:
          allOf:
            - $ref: "#/components/schemas/AxisDisplayOptions"
            - description: The options that determine the presentation of the y-axis.
        Legend:
          allOf:
            - $ref: "#/components/schemas/LegendOptions"
            - description: The legend configuration of a waterfall visual.
        DataLabels:
          allOf:
            - $ref: "#/components/schemas/DataLabelOptions"
            - description: The data label configuration of a waterfall visual.
        VisualPalette:
          allOf:
            - $ref: "#/components/schemas/VisualPalette"
            - description: The visual palette configuration of a waterfall visual.
      description: The configuration for a waterfall visual.
    WordCloudDimensionFieldList:
      type: array
      items:
        $ref: "#/components/schemas/DimensionField"
      maxItems: 10
    WordCloudMeasureFieldList:
      type: array
      items:
        $ref: "#/components/schemas/MeasureField"
      maxItems: 1
    WordCloudAggregatedFieldWells:
      type: object
      properties:
        GroupBy:
          allOf:
            - $ref: "#/components/schemas/WordCloudDimensionFieldList"
            - description: The group by field well of a word cloud. Values are grouped by group by fields.
        Size:
          allOf:
            - $ref: "#/components/schemas/WordCloudMeasureFieldList"
            - description: The size field well of a word cloud. Values are aggregated based on group by fields.
      description: The aggregated field wells of a word cloud.
    WordCloudFieldWells:
      type: object
      properties:
        WordCloudAggregatedFieldWells:
          allOf:
            - $ref: "#/components/schemas/WordCloudAggregatedFieldWells"
            - description: The aggregated field wells of a word cloud.
      description: <p>The field wells of a word cloud visual.</p> <p>This is a union type structure. For this structure to be valid, only one of the attributes can be defined.</p>
    WordCloudSortConfiguration:
      type: object
      properties:
        CategoryItemsLimit:
          allOf:
            - $ref: "#/components/schemas/ItemsLimitConfiguration"
            - description: The limit on the number of groups that are displayed in a word cloud.
        CategorySort:
          allOf:
            - $ref: "#/components/schemas/FieldSortOptionsList"
            - description: The sort configuration of group by fields.
      description: The sort configuration of a word cloud visual.
    WordCloudOptions:
      type: object
      properties:
        WordOrientation:
          allOf:
            - $ref: "#/components/schemas/WordCloudWordOrientation"
            - description: The word orientation options (horizontal, horizontal_and_vertical) for the words in a word cloud.
        WordScaling:
          allOf:
            - $ref: "#/components/schemas/WordCloudWordScaling"
            - description: The word scaling options (emphasize, normal) for the words in a word cloud.
        CloudLayout:
          allOf:
            - $ref: "#/components/schemas/WordCloudCloudLayout"
            - description: The cloud layout options (fluid, normal) of a word cloud.
        WordCasing:
          allOf:
            - $ref: "#/components/schemas/WordCloudWordCasing"
            - description: The word casing options (lower_case, existing_case) for the words in a word cloud.
        WordPadding:
          allOf:
            - $ref: "#/components/schemas/WordCloudWordPadding"
            - description: The word padding options (none, small, medium, large) for the words in a word cloud.
        MaximumStringLength:
          allOf:
            - $ref: "#/components/schemas/WordCloudMaximumStringLength"
            - description: The length limit of each word from 1-100.
      description: The word cloud options for a word cloud visual.
    WordCloudChartConfiguration:
      type: object
      properties:
        FieldWells:
          allOf:
            - $ref: "#/components/schemas/WordCloudFieldWells"
            - description: The field wells of the visual.
        SortConfiguration:
          allOf:
            - $ref: "#/components/schemas/WordCloudSortConfiguration"
            - description: The sort configuration of a word cloud visual.
        CategoryLabelOptions:
          allOf:
            - $ref: "#/components/schemas/ChartAxisLabelOptions"
            - description: The label options (label text, label visibility, and sort icon visibility) for the word cloud category.
        WordCloudOptions:
          allOf:
            - $ref: "#/components/schemas/WordCloudOptions"
            - description: The options for a word cloud visual.
      description: The configuration of a word cloud visual.
    WordCloudCloudLayout:
      type: string
      enum:
        - FLUID
        - NORMAL
    WordCloudMaximumStringLength:
      type: integer
      minimum: 1
      maximum: 100
    WordCloudWordOrientation:
      type: string
      enum:
        - HORIZONTAL
        - HORIZONTAL_AND_VERTICAL
    WordCloudWordScaling:
      type: string
      enum:
        - EMPHASIZE
        - NORMAL
    WordCloudWordCasing:
      type: string
      enum:
        - LOWER_CASE
        - EXISTING_CASE
    WordCloudWordPadding:
      type: string
      enum:
        - NONE
        - SMALL
        - MEDIUM
        - LARGE
security:
  - hmac: []
