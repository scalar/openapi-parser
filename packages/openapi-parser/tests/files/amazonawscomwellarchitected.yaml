openapi: 3.0.0
info:
  version: 2020-03-31
  x-release: v4
  title: AWS Well-Architected Tool
  description: <fullname>Well-Architected Tool</fullname> <p>This is the <i>Well-Architected Tool API Reference</i>. The WA Tool API provides programmatic access to the <a href="http://aws.amazon.com/well-architected-tool">Well-Architected Tool</a> in the <a href="https://console.aws.amazon.com/wellarchitected">Amazon Web Services Management Console</a>. For information about the Well-Architected Tool, see the <a href="https://docs.aws.amazon.com/wellarchitected/latest/userguide/intro.html">Well-Architected Tool User Guide</a>.</p>
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: wellarchitected
  x-aws-signingName: wellarchitected
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/wellarchitected-2020-03-31.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/wellarchitected/
servers:
  - url: http://wellarchitected.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Well-Architected multi-region endpoint
  - url: https://wellarchitected.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Well-Architected multi-region endpoint
  - url: http://wellarchitected.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Well-Architected endpoint for China (Beijing) and China (Ningxia)
  - url: https://wellarchitected.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Well-Architected endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  "/workloads/{WorkloadId}/associateLenses":
    patch:
      operationId: AssociateLenses
      description: <p>Associate a lens to a workload.</p> <p>Up to 10 lenses can be associated with a workload in a single API operation. A maximum of 20 lenses can be associated with a workload.</p> <note> <p> <b>Disclaimer</b> </p> <p>By accessing and/or applying custom lenses created by another Amazon Web Services user or account, you acknowledge that custom lenses created by other users and shared with you are Third Party Content as defined in the Amazon Web Services Customer Agreement. </p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LensAliases
              properties:
                LensAliases:
                  description: <p>List of lens aliases to associate or disassociate with a workload. Up to 10 lenses can be specified.</p> <p>Identify a lens using its <a>LensSummary$LensAlias</a>.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/LensAlias"
                  minItems: 1
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/lenses/{LensAlias}/shares":
    post:
      operationId: CreateLensShare
      description: <p>Create a lens share.</p> <p>The owner of a lens can share it with other Amazon Web Services accounts, users, an organization, and organizational units (OUs) in the same Amazon Web Services Region. Lenses provided by Amazon Web Services (Amazon Web Services Official Content) cannot be shared.</p> <p> Shared access to a lens is not removed until the lens invitation is deleted.</p> <p>If you share a lens with an organization or OU, all accounts in the organization or OU are granted access to the lens.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/wellarchitected/latest/userguide/lenses-sharing.html">Sharing a custom lens</a> in the <i>Well-Architected Tool User Guide</i>.</p> <note> <p> <b>Disclaimer</b> </p> <p>By sharing your custom lenses with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your custom lenses available to those other accounts. Those other accounts may continue to access and use your shared custom lenses even if you delete the custom lenses from your own Amazon Web Services account or terminate your Amazon Web Services account.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLensShareOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SharedWith
                - ClientRequestToken
              properties:
                SharedWith:
                  description: The Amazon Web Services account ID, IAM role, organization ID, or organizational unit (OU) ID with which the workload is shared.
                  type: string
                  minLength: 12
                  maxLength: 2048
                ClientRequestToken:
                  description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListLensShares
      description: List the lens shares associated with the lens.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLensSharesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: SharedWithPrefix
          in: query
          required: false
          description: The Amazon Web Services account ID, IAM role, organization ID, or organizational unit (OU) ID with which the lens is shared.
          schema:
            type: string
            maxLength: 100
        - name: NextToken
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for this request.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: Status
          in: query
          required: false
          description: ""
          schema:
            type: string
            enum:
              - ACCEPTED
              - REJECTED
              - PENDING
              - REVOKED
              - EXPIRED
              - ASSOCIATING
              - ASSOCIATED
              - FAILED
            description: The status of a workload share.
  "/lenses/{LensAlias}/versions":
    post:
      operationId: CreateLensVersion
      description: <p>Create a new lens version.</p> <p>A lens can have up to 100 versions.</p> <p>Use this operation to publish a new lens version after you have imported a lens. The <code>LensAlias</code> is used to identify the lens to be published. The owner of a lens can share the lens with other Amazon Web Services accounts and users in the same Amazon Web Services Region. Only the owner of a lens can delete it. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLensVersionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LensVersion
                - ClientRequestToken
              properties:
                LensVersion:
                  description: The version of the lens being created.
                  type: string
                  minLength: 1
                  maxLength: 32
                IsMajorVersion:
                  description: Set to true if this new major lens version.
                  type: boolean
                ClientRequestToken:
                  description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/milestones":
    post:
      operationId: CreateMilestone
      description: Create a milestone for an existing workload.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMilestoneOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MilestoneName
                - ClientRequestToken
              properties:
                MilestoneName:
                  description: <p>The name of the milestone in a workload.</p> <p>Milestone names must be unique within a workload.</p>
                  type: string
                  minLength: 3
                  maxLength: 100
                ClientRequestToken:
                  description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /workloads:
    post:
      operationId: CreateWorkload
      description: <p>Create a new workload.</p> <p>The owner of a workload can share the workload with other Amazon Web Services accounts, users, an organization, and organizational units (OUs) in the same Amazon Web Services Region. Only the owner of a workload can delete it.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/wellarchitected/latest/userguide/define-workload.html">Defining a Workload</a> in the <i>Well-Architected Tool User Guide</i>.</p> <important> <p>Either <code>AwsRegions</code>, <code>NonAwsRegions</code>, or both must be specified when creating a workload.</p> <p>You also must specify <code>ReviewOwner</code>, even though the parameter is listed as not being required in the following section. </p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkloadOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - WorkloadName
                - Description
                - Environment
                - Lenses
                - ClientRequestToken
              properties:
                WorkloadName:
                  description: <p>The name of the workload.</p> <p>The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.</p>
                  type: string
                  minLength: 3
                  maxLength: 100
                Description:
                  description: The description for the workload.
                  type: string
                  minLength: 3
                  maxLength: 250
                Environment:
                  description: The environment for the workload.
                  type: string
                  enum:
                    - PRODUCTION
                    - PREPRODUCTION
                AccountIds:
                  description: The list of Amazon Web Services account IDs associated with the workload.
                  type: array
                  items:
                    $ref: "#/components/schemas/AwsAccountId"
                  maxItems: 100
                AwsRegions:
                  description: The list of Amazon Web Services Regions associated with the workload, for example, <code>us-east-2</code>, or <code>ca-central-1</code>.
                  type: array
                  items:
                    $ref: "#/components/schemas/AwsRegion"
                  maxItems: 50
                NonAwsRegions:
                  description: " The list of non-Amazon Web Services Regions associated with the workload."
                  type: array
                  items:
                    $ref: "#/components/schemas/WorkloadNonAwsRegion"
                  maxItems: 5
                PillarPriorities:
                  description: The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its <a>PillarReviewSummary$PillarId</a>.
                  type: array
                  items:
                    $ref: "#/components/schemas/PillarId"
                ArchitecturalDesign:
                  description: The URL of the architectural design for the workload.
                  type: string
                  pattern: ^(|(https?|ftp):\/\/[^\s/$.?#].[^\s]*)$
                  maxLength: 2048
                ReviewOwner:
                  description: The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.
                  type: string
                  minLength: 3
                  maxLength: 255
                IndustryType:
                  description: <p>The industry type for the workload.</p> <p>If specified, must be one of the following:</p> <ul> <li> <p> <code>Agriculture</code> </p> </li> <li> <p> <code>Automobile</code> </p> </li> <li> <p> <code>Defense</code> </p> </li> <li> <p> <code>Design and Engineering</code> </p> </li> <li> <p> <code>Digital Advertising</code> </p> </li> <li> <p> <code>Education</code> </p> </li> <li> <p> <code>Environmental Protection</code> </p> </li> <li> <p> <code>Financial Services</code> </p> </li> <li> <p> <code>Gaming</code> </p> </li> <li> <p> <code>General Public Services</code> </p> </li> <li> <p> <code>Healthcare</code> </p> </li> <li> <p> <code>Hospitality</code> </p> </li> <li> <p> <code>InfoTech</code> </p> </li> <li> <p> <code>Justice and Public Safety</code> </p> </li> <li> <p> <code>Life Sciences</code> </p> </li> <li> <p> <code>Manufacturing</code> </p> </li> <li> <p> <code>Media &amp; Entertainment</code> </p> </li> <li> <p> <code>Mining &amp; Resources</code> </p> </li> <li> <p> <code>Oil &amp; Gas</code> </p> </li> <li> <p> <code>Power &amp; Utilities</code> </p> </li> <li> <p> <code>Professional Services</code> </p> </li> <li> <p> <code>Real Estate &amp; Construction</code> </p> </li> <li> <p> <code>Retail &amp; Wholesale</code> </p> </li> <li> <p> <code>Social Protection</code> </p> </li> <li> <p> <code>Telecommunications</code> </p> </li> <li> <p> <code>Travel, Transportation &amp; Logistics</code> </p> </li> <li> <p> <code>Other</code> </p> </li> </ul>
                  type: string
                  maxLength: 100
                Industry:
                  description: The industry for the workload.
                  type: string
                  maxLength: 100
                Lenses:
                  description: The list of lenses associated with the workload. Each lens is identified by its <a>LensSummary$LensAlias</a>.
                  type: array
                  items:
                    $ref: "#/components/schemas/LensAlias"
                Notes:
                  description: The notes associated with the workload.
                  type: string
                  maxLength: 2084
                ClientRequestToken:
                  description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
                  type: string
                Tags:
                  description: The tags to be associated with the workload.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
                DiscoveryConfig:
                  description: Discovery configuration associated to the workload.
                  type: object
                  properties:
                    TrustedAdvisorIntegrationStatus:
                      allOf:
                        - $ref: "#/components/schemas/TrustedAdvisorIntegrationStatus"
                        - description: Discovery integration status in respect to Trusted Advisor for the workload.
                Applications:
                  description: List of AppRegistry application ARNs associated to the workload.
                  type: array
                  items:
                    $ref: "#/components/schemas/ApplicationArn"
                  maxItems: 1
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/shares":
    post:
      operationId: CreateWorkloadShare
      description: <p>Create a workload share.</p> <p>The owner of a workload can share it with other Amazon Web Services accounts and users in the same Amazon Web Services Region. Shared access to a workload is not removed until the workload invitation is deleted.</p> <p>If you share a workload with an organization or OU, all accounts in the organization or OU are granted access to the workload.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/wellarchitected/latest/userguide/workloads-sharing.html">Sharing a workload</a> in the <i>Well-Architected Tool User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWorkloadShareOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SharedWith
                - PermissionType
                - ClientRequestToken
              properties:
                SharedWith:
                  description: The Amazon Web Services account ID, IAM role, organization ID, or organizational unit (OU) ID with which the workload is shared.
                  type: string
                  minLength: 12
                  maxLength: 2048
                PermissionType:
                  description: Permission granted on a workload share.
                  type: string
                  enum:
                    - READONLY
                    - CONTRIBUTOR
                ClientRequestToken:
                  description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListWorkloadShares
      description: List the workload shares associated with the workload.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkloadSharesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: SharedWithPrefix
          in: query
          required: false
          description: The Amazon Web Services account ID, IAM role, organization ID, or organizational unit (OU) ID with which the workload is shared.
          schema:
            type: string
            maxLength: 100
        - name: NextToken
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for this request.
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: Status
          in: query
          required: false
          description: ""
          schema:
            type: string
            enum:
              - ACCEPTED
              - REJECTED
              - PENDING
              - REVOKED
              - EXPIRED
              - ASSOCIATING
              - ASSOCIATED
              - FAILED
            description: The status of a workload share.
  "/lenses/{LensAlias}#ClientRequestToken&LensStatus":
    delete:
      operationId: DeleteLens
      description: <p>Delete an existing lens.</p> <p>Only the owner of a lens can delete it. After the lens is deleted, Amazon Web Services accounts and users that you shared the lens with can continue to use it, but they will no longer be able to apply it to new workloads. </p> <note> <p> <b>Disclaimer</b> </p> <p>By sharing your custom lenses with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your custom lenses available to those other accounts. Those other accounts may continue to access and use your shared custom lenses even if you delete the custom lenses from your own Amazon Web Services account or terminate your Amazon Web Services account.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: ClientRequestToken
          in: query
          required: true
          description: ""
          schema:
            type: string
            description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
        - name: LensStatus
          in: query
          required: true
          description: The status of the lens to be deleted.
          schema:
            type: string
            enum:
              - ALL
              - DRAFT
              - PUBLISHED
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/lenses/{LensAlias}/shares/{ShareId}#ClientRequestToken":
    delete:
      operationId: DeleteLensShare
      description: <p>Delete a lens share.</p> <p>After the lens share is deleted, Amazon Web Services accounts, users, organizations, and organizational units (OUs) that you shared the lens with can continue to use it, but they will no longer be able to apply it to new workloads.</p> <note> <p> <b>Disclaimer</b> </p> <p>By sharing your custom lenses with other Amazon Web Services accounts, you acknowledge that Amazon Web Services will make your custom lenses available to those other accounts. Those other accounts may continue to access and use your shared custom lenses even if you delete the custom lenses from your own Amazon Web Services account or terminate your Amazon Web Services account.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: ShareId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID associated with the workload share.
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: ClientRequestToken
          in: query
          required: true
          description: ""
          schema:
            type: string
            description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}#ClientRequestToken":
    delete:
      operationId: DeleteWorkload
      description: Delete an existing workload.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: ClientRequestToken
          in: query
          required: true
          description: ""
          schema:
            type: string
            description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/shares/{ShareId}#ClientRequestToken":
    delete:
      operationId: DeleteWorkloadShare
      description: Delete a workload share.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: ShareId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID associated with the workload share.
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: ClientRequestToken
          in: query
          required: true
          description: ""
          schema:
            type: string
            description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/disassociateLenses":
    patch:
      operationId: DisassociateLenses
      description: <p>Disassociate a lens from a workload.</p> <p>Up to 10 lenses can be disassociated from a workload in a single API operation.</p> <note> <p>The Amazon Web Services Well-Architected Framework lens (<code>wellarchitected</code>) cannot be removed from a workload.</p> </note>
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LensAliases
              properties:
                LensAliases:
                  description: <p>List of lens aliases to associate or disassociate with a workload. Up to 10 lenses can be specified.</p> <p>Identify a lens using its <a>LensSummary$LensAlias</a>.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/LensAlias"
                  minItems: 1
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/lenses/{LensAlias}/export":
    get:
      operationId: ExportLens
      description: '<p>Export an existing lens.</p> <p>Only the owner of a lens can export it. Lenses provided by Amazon Web Services (Amazon Web Services Official Content) cannot be exported.</p> <p>Lenses are defined in JSON. For more information, see <a href="https://docs.aws.amazon.com/wellarchitected/latest/userguide/lenses-format-specification.html">JSON format specification</a> in the <i>Well-Architected Tool User Guide</i>.</p> <note> <p> <b>Disclaimer</b> </p> <p>Do not include or gather personal identifiable information (PII) of end users or other identifiable individuals in or via your custom lenses. If your custom lens or those shared with you and used in your account do include or collect PII you are responsible for: ensuring that the included PII is processed in accordance with applicable law, providing adequate privacy notices, and obtaining necessary consents for processing such data.</p> </note>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExportLensOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: LensVersion
          in: query
          required: false
          description: The lens version to be exported.
          schema:
            type: string
            minLength: 1
            maxLength: 32
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/lensReviews/{LensAlias}/answers/{QuestionId}":
    get:
      operationId: GetAnswer
      description: Get the answer to a specific question in a workload review.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAnswerOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: QuestionId
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the question.
            minLength: 1
            maxLength: 128
        - name: MilestoneNumber
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateAnswer
      description: Update the answer to a specific question in a workload review.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAnswerOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: QuestionId
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the question.
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SelectedChoices:
                  description: <p>List of selected choice IDs in a question answer.</p> <p>The values entered replace the previously selected choices.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/ChoiceId"
                ChoiceUpdates:
                  description: A list of choices to update on a question in your workload. The String key corresponds to the choice ID to be updated.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/ChoiceUpdate"
                Notes:
                  description: The notes associated with the workload.
                  type: string
                  maxLength: 2084
                IsApplicable:
                  description: Defines whether this question is applicable to a lens review.
                  type: boolean
                Reason:
                  description: The reason why a question is not applicable to your workload.
                  type: string
                  enum:
                    - OUT_OF_SCOPE
                    - BUSINESS_PRIORITIES
                    - ARCHITECTURE_CONSTRAINTS
                    - OTHER
                    - NONE
  /consolidatedReport#Format:
    get:
      operationId: GetConsolidatedReport
      description: <p>Get a consolidated report of your workloads.</p> <p>You can optionally choose to include workloads that have been shared with you.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConsolidatedReportOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
      parameters:
        - name: Format
          in: query
          required: true
          description: <p>The format of the consolidated report.</p> <p>For <code>PDF</code>, <code>Base64String</code> is returned. For <code>JSON</code>, <code>Metrics</code> is returned.</p>
          schema:
            type: string
            enum:
              - PDF
              - JSON
        - name: IncludeSharedResources
          in: query
          required: false
          description: Set to <code>true</code> to have shared resources included in the report.
          schema:
            type: boolean
        - name: NextToken
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for this request.
          schema:
            type: integer
            minimum: 1
            maximum: 15
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/lenses/{LensAlias}":
    get:
      operationId: GetLens
      description: Get an existing lens.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLensOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: LensVersion
          in: query
          required: false
          description: The lens version to be retrieved.
          schema:
            type: string
            minLength: 1
            maxLength: 32
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/lensReviews/{LensAlias}":
    get:
      operationId: GetLensReview
      description: Get lens review.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLensReviewOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: MilestoneNumber
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateLensReview
      description: Update lens review for a particular workload.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLensReviewOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LensNotes:
                  description: The notes associated with the workload.
                  type: string
                  maxLength: 2084
                PillarNotes:
                  description: List of pillar notes of a lens review in a workload.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/Notes"
  "/workloads/{WorkloadId}/lensReviews/{LensAlias}/report":
    get:
      operationId: GetLensReviewReport
      description: Get lens review report.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLensReviewReportOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: MilestoneNumber
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/lenses/{LensAlias}/versionDifference":
    get:
      operationId: GetLensVersionDifference
      description: Get lens version differences.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLensVersionDifferenceOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: BaseLensVersion
          in: query
          required: false
          description: The base version of the lens.
          schema:
            type: string
            minLength: 1
            maxLength: 32
        - name: TargetLensVersion
          in: query
          required: false
          description: The lens version to target a difference for.
          schema:
            type: string
            minLength: 1
            maxLength: 32
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/milestones/{MilestoneNumber}":
    get:
      operationId: GetMilestone
      description: Get a milestone for an existing workload.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMilestoneOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: MilestoneNumber
          in: path
          required: true
          description: ""
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}":
    get:
      operationId: GetWorkload
      description: Get an existing workload.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWorkloadOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateWorkload
      description: Update an existing workload.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateWorkloadOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WorkloadName:
                  description: <p>The name of the workload.</p> <p>The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.</p>
                  type: string
                  minLength: 3
                  maxLength: 100
                Description:
                  description: The description for the workload.
                  type: string
                  minLength: 3
                  maxLength: 250
                Environment:
                  description: The environment for the workload.
                  type: string
                  enum:
                    - PRODUCTION
                    - PREPRODUCTION
                AccountIds:
                  description: The list of Amazon Web Services account IDs associated with the workload.
                  type: array
                  items:
                    $ref: "#/components/schemas/AwsAccountId"
                  maxItems: 100
                AwsRegions:
                  description: The list of Amazon Web Services Regions associated with the workload, for example, <code>us-east-2</code>, or <code>ca-central-1</code>.
                  type: array
                  items:
                    $ref: "#/components/schemas/AwsRegion"
                  maxItems: 50
                NonAwsRegions:
                  description: " The list of non-Amazon Web Services Regions associated with the workload."
                  type: array
                  items:
                    $ref: "#/components/schemas/WorkloadNonAwsRegion"
                  maxItems: 5
                PillarPriorities:
                  description: The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its <a>PillarReviewSummary$PillarId</a>.
                  type: array
                  items:
                    $ref: "#/components/schemas/PillarId"
                ArchitecturalDesign:
                  description: The URL of the architectural design for the workload.
                  type: string
                  pattern: ^(|(https?|ftp):\/\/[^\s/$.?#].[^\s]*)$
                  maxLength: 2048
                ReviewOwner:
                  description: The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.
                  type: string
                  minLength: 3
                  maxLength: 255
                IsReviewOwnerUpdateAcknowledged:
                  description: <p>Flag indicating whether the workload owner has acknowledged that the <i>Review owner</i> field is required.</p> <p>If a <b>Review owner</b> is not added to the workload within 60 days of acknowledgement, access to the workload is restricted until an owner is added.</p>
                  type: boolean
                IndustryType:
                  description: <p>The industry type for the workload.</p> <p>If specified, must be one of the following:</p> <ul> <li> <p> <code>Agriculture</code> </p> </li> <li> <p> <code>Automobile</code> </p> </li> <li> <p> <code>Defense</code> </p> </li> <li> <p> <code>Design and Engineering</code> </p> </li> <li> <p> <code>Digital Advertising</code> </p> </li> <li> <p> <code>Education</code> </p> </li> <li> <p> <code>Environmental Protection</code> </p> </li> <li> <p> <code>Financial Services</code> </p> </li> <li> <p> <code>Gaming</code> </p> </li> <li> <p> <code>General Public Services</code> </p> </li> <li> <p> <code>Healthcare</code> </p> </li> <li> <p> <code>Hospitality</code> </p> </li> <li> <p> <code>InfoTech</code> </p> </li> <li> <p> <code>Justice and Public Safety</code> </p> </li> <li> <p> <code>Life Sciences</code> </p> </li> <li> <p> <code>Manufacturing</code> </p> </li> <li> <p> <code>Media &amp; Entertainment</code> </p> </li> <li> <p> <code>Mining &amp; Resources</code> </p> </li> <li> <p> <code>Oil &amp; Gas</code> </p> </li> <li> <p> <code>Power &amp; Utilities</code> </p> </li> <li> <p> <code>Professional Services</code> </p> </li> <li> <p> <code>Real Estate &amp; Construction</code> </p> </li> <li> <p> <code>Retail &amp; Wholesale</code> </p> </li> <li> <p> <code>Social Protection</code> </p> </li> <li> <p> <code>Telecommunications</code> </p> </li> <li> <p> <code>Travel, Transportation &amp; Logistics</code> </p> </li> <li> <p> <code>Other</code> </p> </li> </ul>
                  type: string
                  maxLength: 100
                Industry:
                  description: The industry for the workload.
                  type: string
                  maxLength: 100
                Notes:
                  description: The notes associated with the workload.
                  type: string
                  maxLength: 2084
                ImprovementStatus:
                  description: The improvement status for a workload.
                  type: string
                  enum:
                    - NOT_APPLICABLE
                    - NOT_STARTED
                    - IN_PROGRESS
                    - COMPLETE
                    - RISK_ACKNOWLEDGED
                DiscoveryConfig:
                  description: Discovery configuration associated to the workload.
                  type: object
                  properties:
                    TrustedAdvisorIntegrationStatus:
                      allOf:
                        - $ref: "#/components/schemas/TrustedAdvisorIntegrationStatus"
                        - description: Discovery integration status in respect to Trusted Advisor for the workload.
                Applications:
                  description: List of AppRegistry application ARNs to associate to the workload.
                  type: array
                  items:
                    $ref: "#/components/schemas/ApplicationArn"
                  maxItems: 1
  /importLens:
    put:
      operationId: ImportLens
      description: "<p>Import a new custom lens or update an existing custom lens.</p> <p>To update an existing custom lens, specify its ARN as the <code>LensAlias</code>. If no ARN is specified, a new custom lens is created.</p> <p>The new or updated lens will have a status of <code>DRAFT</code>. The lens cannot be applied to workloads or shared with other Amazon Web Services accounts until it's published with <a>CreateLensVersion</a>.</p> <p>Lenses are defined in JSON. For more information, see <a href=\"https://docs.aws.amazon.com/wellarchitected/latest/userguide/lenses-format-specification.html\">JSON format specification</a> in the <i>Well-Architected Tool User Guide</i>.</p> <p>A custom lens cannot exceed 500 KB in size.</p> <note> <p> <b>Disclaimer</b> </p> <p>Do not include or gather personal identifiable information (PII) of end users or other identifiable individuals in or via your custom lenses. If your custom lens or those shared with you and used in your account do include or collect PII you are responsible for: ensuring that the included PII is processed in accordance with applicable law, providing adequate privacy notices, and obtaining necessary consents for processing such data.</p> </note>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ImportLensOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - JSONString
                - ClientRequestToken
              properties:
                LensAlias:
                  description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
                  type: string
                  minLength: 1
                  maxLength: 128
                JSONString:
                  description: The JSON representation of a lens.
                  type: string
                  minLength: 2
                  maxLength: 500000
                ClientRequestToken:
                  description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
                  type: string
                Tags:
                  description: Tags to associate to a lens.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/lensReviews/{LensAlias}/answers":
    get:
      operationId: ListAnswers
      description: List of answers for a particular workload and lens.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAnswersOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: PillarId
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: <p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>
            minLength: 1
            maxLength: 64
        - name: MilestoneNumber
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for this request.
          schema:
            type: integer
            minimum: 1
            maximum: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/checks":
    post:
      operationId: ListCheckDetails
      description: List of Trusted Advisor check details by account related to the workload.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCheckDetailsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LensArn
                - PillarId
                - QuestionId
                - ChoiceId
              properties:
                NextToken:
                  description: The token to use to retrieve the next set of results.
                  type: string
                MaxResults:
                  description: The maximum number of results to return for this request.
                  type: integer
                  minimum: 1
                  maximum: 50
                LensArn:
                  description: Well-Architected Lens ARN.
                  type: string
                PillarId:
                  description: <p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>
                  type: string
                  minLength: 1
                  maxLength: 64
                QuestionId:
                  description: The ID of the question.
                  type: string
                  minLength: 1
                  maxLength: 128
                ChoiceId:
                  description: The ID of a choice.
                  type: string
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/checkSummaries":
    post:
      operationId: ListCheckSummaries
      description: List of Trusted Advisor checks summarized for all accounts related to the workload.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCheckSummariesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LensArn
                - PillarId
                - QuestionId
                - ChoiceId
              properties:
                NextToken:
                  description: The token to use to retrieve the next set of results.
                  type: string
                MaxResults:
                  description: The maximum number of results to return for this request.
                  type: integer
                  minimum: 1
                  maximum: 50
                LensArn:
                  description: Well-Architected Lens ARN.
                  type: string
                PillarId:
                  description: <p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>
                  type: string
                  minLength: 1
                  maxLength: 64
                QuestionId:
                  description: The ID of the question.
                  type: string
                  minLength: 1
                  maxLength: 128
                ChoiceId:
                  description: The ID of a choice.
                  type: string
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/lensReviews/{LensAlias}/improvements":
    get:
      operationId: ListLensReviewImprovements
      description: List lens review improvements.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLensReviewImprovementsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
        - name: PillarId
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: <p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>
            minLength: 1
            maxLength: 64
        - name: MilestoneNumber
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for this request.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/lensReviews":
    get:
      operationId: ListLensReviews
      description: List lens reviews for a particular workload.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLensReviewsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: MilestoneNumber
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: The maximum number of results to return for this request.
            minimum: 1
            maximum: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /lenses:
    get:
      operationId: ListLenses
      description: List the available lenses.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLensesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: The maximum number of results to return for this request.
            minimum: 1
            maximum: 50
        - name: LensType
          in: query
          required: false
          description: The type of lenses to be returned.
          schema:
            type: string
            enum:
              - AWS_OFFICIAL
              - CUSTOM_SHARED
              - CUSTOM_SELF
        - name: LensStatus
          in: query
          required: false
          description: The status of lenses to be returned.
          schema:
            type: string
            enum:
              - ALL
              - DRAFT
              - PUBLISHED
        - name: LensName
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: The full name of the lens.
            minLength: 1
            maxLength: 128
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/milestonesSummaries":
    post:
      operationId: ListMilestones
      description: List all milestones for an existing workload.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMilestonesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: The token to use to retrieve the next set of results.
                  type: string
                MaxResults:
                  description: The maximum number of results to return for this request.
                  type: integer
                  minimum: 1
                  maximum: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /notifications:
    post:
      operationId: ListNotifications
      description: List lens notifications.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNotificationsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WorkloadId:
                  description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
                  type: string
                  pattern: "[0-9a-f]{32}"
                NextToken:
                  description: The token to use to retrieve the next set of results.
                  type: string
                MaxResults:
                  description: The maximum number of results to return for this request.
                  type: integer
                  minimum: 1
                  maximum: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /shareInvitations:
    get:
      operationId: ListShareInvitations
      description: List the workload invitations.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListShareInvitationsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadNamePrefix
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: An optional string added to the beginning of each workload name returned in the results.
            maxLength: 100
        - name: LensNamePrefix
          in: query
          required: false
          description: An optional string added to the beginning of each lens name returned in the results.
          schema:
            type: string
            maxLength: 100
        - name: ShareResourceType
          in: query
          required: false
          description: The type of share invitations to be returned.
          schema:
            type: string
            enum:
              - WORKLOAD
              - LENS
        - name: NextToken
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: The token to use to retrieve the next set of results.
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return for this request.
          schema:
            type: integer
            minimum: 1
            maximum: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{WorkloadArn}":
    get:
      operationId: ListTagsForResource
      description: <p>List the tags for a resource.</p> <note> <p>The WorkloadArn parameter can be either a workload ARN or a custom lens ARN.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceOutput"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: WorkloadArn
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ARN for the workload.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: <p>Adds one or more tags to the specified resource.</p> <note> <p>The WorkloadArn parameter can be either a workload ARN or a custom lens ARN.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceOutput"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: WorkloadArn
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ARN for the workload.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tags for the resource.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
  /workloadsSummaries:
    post:
      operationId: ListWorkloads
      description: Paginated list of workloads.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkloadsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WorkloadNamePrefix:
                  description: An optional string added to the beginning of each workload name returned in the results.
                  type: string
                  maxLength: 100
                NextToken:
                  description: The token to use to retrieve the next set of results.
                  type: string
                MaxResults:
                  description: The maximum number of results to return for this request.
                  type: integer
                  minimum: 1
                  maximum: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{WorkloadArn}#tagKeys":
    delete:
      operationId: UntagResource
      description: <p>Deletes specified tags from a resource.</p> <note> <p>The WorkloadArn parameter can be either a workload ARN or a custom lens ARN.</p> </note> <p>To specify multiple tags, use separate <b>tagKeys</b> parameters, for example:</p> <p> <code>DELETE /tags/WorkloadArn?tagKeys=key1&amp;tagKeys=key2</code> </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceOutput"
        "480":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: WorkloadArn
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ARN for the workload.
        - name: tagKeys
          in: query
          required: true
          description: A list of tag keys. Existing tags of the resource whose keys are members of this list are removed from the resource.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TagKey"
            minItems: 1
            maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /global-settings:
    patch:
      operationId: UpdateGlobalSettings
      description: Updates whether the Amazon Web Services account is opted into organization sharing features.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OrganizationSharingStatus:
                  description: The status of organization sharing settings.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/shareInvitations/{ShareInvitationId}":
    patch:
      operationId: UpdateShareInvitation
      description: <p>Update a workload or custom lens share invitation.</p> <note> <p>This API operation can be called independently of any resource. Previous documentation implied that a workload ARN must be specified.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateShareInvitationOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: ShareInvitationId
          in: path
          required: true
          description: The ID assigned to the share invitation.
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ShareInvitationAction
              properties:
                ShareInvitationAction:
                  description: Share invitation action taken by contributor.
                  type: string
                  enum:
                    - ACCEPT
                    - REJECT
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/shares/{ShareId}":
    patch:
      operationId: UpdateWorkloadShare
      description: Update a workload share.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateWorkloadShareOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: ShareId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID associated with the workload share.
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PermissionType
              properties:
                PermissionType:
                  description: Permission granted on a workload share.
                  type: string
                  enum:
                    - READONLY
                    - CONTRIBUTOR
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/workloads/{WorkloadId}/lensReviews/{LensAlias}/upgrade":
    put:
      operationId: UpgradeLensReview
      description: Upgrade lens review for a particular workload.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: WorkloadId
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[0-9a-f]{32}"
            description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
        - name: LensAlias
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
            minLength: 1
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MilestoneName
              properties:
                MilestoneName:
                  description: <p>The name of the milestone in a workload.</p> <p>Milestone names must be unique within a workload.</p>
                  type: string
                  minLength: 3
                  maxLength: 100
                ClientRequestToken:
                  description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    LensAlias:
      type: string
      description: <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1::lens/serverless</code>. Note that some operations (such as ExportLens and CreateLensShare) are not permitted on Amazon Web Services official lenses.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2:123456789012:lens/0123456789abcdef01234567890abcdef</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
      minLength: 1
      maxLength: 128
    ValidationException: {}
    ResourceNotFoundException: {}
    ConflictException: {}
    InternalServerException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    CreateLensShareOutput:
      type: object
      properties:
        ShareId:
          $ref: "#/components/schemas/ShareId"
    ServiceQuotaExceededException: {}
    CreateLensVersionOutput:
      type: object
      properties:
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
        LensVersion:
          allOf:
            - $ref: "#/components/schemas/LensVersion"
            - description: The version of the lens.
    CreateMilestoneOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        MilestoneNumber:
          $ref: "#/components/schemas/MilestoneNumber"
      description: Output of a create milestone call.
    CreateWorkloadOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        WorkloadArn:
          $ref: "#/components/schemas/WorkloadArn"
      description: Output of a create workload call.
    AwsAccountId:
      type: string
      pattern: "[0-9]{12}"
      description: An Amazon Web Services account ID.
    AwsRegion:
      type: string
      description: An Amazon Web Services Region, for example, <code>us-west-2</code> or <code>ap-northeast-1</code>.
      maxLength: 100
    WorkloadNonAwsRegion:
      type: string
      minLength: 3
      maxLength: 25
    PillarId:
      type: string
      description: <p>The ID used to identify a pillar, for example, <code>security</code>.</p> <p>A pillar is identified by its <a>PillarReviewSummary$PillarId</a>.</p>
      minLength: 1
      maxLength: 64
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TrustedAdvisorIntegrationStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    ApplicationArn:
      type: string
      pattern: arn:aws[-a-z]*:servicecatalog:[a-z]{2}(-gov)?-[a-z]+-\d:\d{12}:/applications/[a-z0-9]+
      maxLength: 2084
    CreateWorkloadShareOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        ShareId:
          $ref: "#/components/schemas/ShareId"
      description: Input for Create Workload Share
    ExportLensOutput:
      type: object
      properties:
        LensJSON:
          allOf:
            - $ref: "#/components/schemas/LensJSON"
            - description: The JSON representation of a lens.
    GetAnswerOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        MilestoneNumber:
          $ref: "#/components/schemas/MilestoneNumber"
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
        Answer:
          $ref: "#/components/schemas/Answer"
      description: Output of a get answer call.
    GetConsolidatedReportOutput:
      type: object
      properties:
        Metrics:
          allOf:
            - $ref: "#/components/schemas/ConsolidatedReportMetrics"
            - description: <p>The metrics that make up the consolidated report.</p> <p>Only returned when <code>JSON</code> format is requested.</p>
        NextToken:
          $ref: "#/components/schemas/NextToken"
        Base64String:
          $ref: "#/components/schemas/Base64String"
    GetLensOutput:
      type: object
      properties:
        Lens:
          allOf:
            - $ref: "#/components/schemas/Lens"
            - description: A lens return object.
    GetLensReviewOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        MilestoneNumber:
          $ref: "#/components/schemas/MilestoneNumber"
        LensReview:
          $ref: "#/components/schemas/LensReview"
      description: Output of a get lens review call.
    GetLensReviewReportOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        MilestoneNumber:
          $ref: "#/components/schemas/MilestoneNumber"
        LensReviewReport:
          $ref: "#/components/schemas/LensReviewReport"
      description: Output of a get lens review report call.
    GetLensVersionDifferenceOutput:
      type: object
      properties:
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
        BaseLensVersion:
          allOf:
            - $ref: "#/components/schemas/LensVersion"
            - description: The base version of the lens.
        TargetLensVersion:
          allOf:
            - $ref: "#/components/schemas/LensVersion"
            - description: The target lens version for the lens.
        LatestLensVersion:
          allOf:
            - $ref: "#/components/schemas/LensVersion"
            - description: The latest version of the lens.
        VersionDifferences:
          $ref: "#/components/schemas/VersionDifferences"
    GetMilestoneOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        Milestone:
          $ref: "#/components/schemas/Milestone"
      description: Output of a get milestone call.
    GetWorkloadOutput:
      type: object
      properties:
        Workload:
          $ref: "#/components/schemas/Workload"
      description: Output of a get workload call.
    ImportLensOutput:
      type: object
      properties:
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens that was created or updated.
        Status:
          allOf:
            - $ref: "#/components/schemas/ImportLensStatus"
            - description: The status of the imported lens.
    ListAnswersOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        MilestoneNumber:
          $ref: "#/components/schemas/MilestoneNumber"
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
        AnswerSummaries:
          $ref: "#/components/schemas/AnswerSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Output of a list answers call.
    ListCheckDetailsOutput:
      type: object
      properties:
        CheckDetails:
          allOf:
            - $ref: "#/components/schemas/CheckDetails"
            - description: The details about the Trusted Advisor checks related to the Well-Architected best practice.
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListCheckSummariesOutput:
      type: object
      properties:
        CheckSummaries:
          allOf:
            - $ref: "#/components/schemas/CheckSummaries"
            - description: List of Trusted Advisor summaries related to the Well-Architected best practice.
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListLensReviewImprovementsOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        MilestoneNumber:
          $ref: "#/components/schemas/MilestoneNumber"
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
        ImprovementSummaries:
          $ref: "#/components/schemas/ImprovementSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Output of a list lens review improvements call.
    ListLensReviewsOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        MilestoneNumber:
          $ref: "#/components/schemas/MilestoneNumber"
        LensReviewSummaries:
          $ref: "#/components/schemas/LensReviewSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Output of a list lens reviews call.
    ListLensSharesOutput:
      type: object
      properties:
        LensShareSummaries:
          allOf:
            - $ref: "#/components/schemas/LensShareSummaries"
            - description: A list of lens share summaries.
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListLensesOutput:
      type: object
      properties:
        LensSummaries:
          $ref: "#/components/schemas/LensSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Output of a list lenses call.
    ListMilestonesOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        MilestoneSummaries:
          $ref: "#/components/schemas/MilestoneSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Output of a list milestones call.
    ListNotificationsOutput:
      type: object
      properties:
        NotificationSummaries:
          allOf:
            - $ref: "#/components/schemas/NotificationSummaries"
            - description: List of lens notification summaries in a workload.
        NextToken:
          $ref: "#/components/schemas/NextToken"
    ListShareInvitationsOutput:
      type: object
      properties:
        ShareInvitationSummaries:
          allOf:
            - $ref: "#/components/schemas/ShareInvitationSummaries"
            - description: List of share invitation summaries in a workload.
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Input for List Share Invitations
    ListTagsForResourceOutput:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags for the resource.
    ListWorkloadSharesOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        WorkloadShareSummaries:
          $ref: "#/components/schemas/WorkloadShareSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Input for List Workload Share
    ListWorkloadsOutput:
      type: object
      properties:
        WorkloadSummaries:
          $ref: "#/components/schemas/WorkloadSummaries"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: Output of a list workloads call.
    TagResourceOutput:
      type: object
      properties: {}
    UntagResourceOutput:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateAnswerOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
        Answer:
          $ref: "#/components/schemas/Answer"
      description: Output of a update answer call.
    ChoiceId:
      type: string
      description: The ID of a choice.
      minLength: 1
      maxLength: 64
    ChoiceUpdate:
      type: object
      required:
        - Status
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/ChoiceStatus"
            - description: The status of a choice.
        Reason:
          allOf:
            - $ref: "#/components/schemas/ChoiceReason"
            - description: The reason why a choice is non-applicable to a question in your workload.
        Notes:
          allOf:
            - $ref: "#/components/schemas/ChoiceNotes"
            - description: The notes associated with a choice.
      description: A list of choices to be updated.
    UpdateLensReviewOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        LensReview:
          $ref: "#/components/schemas/LensReview"
      description: Output of a update lens review call.
    Notes:
      type: string
      description: The notes associated with the workload.
      maxLength: 2084
    UpdateShareInvitationOutput:
      type: object
      properties:
        ShareInvitation:
          allOf:
            - $ref: "#/components/schemas/ShareInvitation"
            - description: The updated workload or custom lens share invitation.
    UpdateWorkloadOutput:
      type: object
      properties:
        Workload:
          $ref: "#/components/schemas/Workload"
      description: Output of an update workload call.
    UpdateWorkloadShareOutput:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        WorkloadShare:
          $ref: "#/components/schemas/WorkloadShare"
      description: Input for Update Workload Share
    CheckStatusCount:
      type: integer
      minimum: 1
      maximum: 101
    AccountSummary:
      type: object
      description: Account summary for a Well-Architected best practice in relation to Trusted Advisor checks.
      additionalProperties:
        $ref: "#/components/schemas/CheckStatusCount"
    AdditionalResourceType:
      type: string
      enum:
        - HELPFUL_RESOURCE
        - IMPROVEMENT_PLAN
    Urls:
      type: array
      items:
        $ref: "#/components/schemas/ChoiceContent"
    AdditionalResources:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/AdditionalResourceType"
            - description: Type of additional resource for a custom lens.
        Content:
          allOf:
            - $ref: "#/components/schemas/Urls"
            - description: The URLs for additional resources, either helpful resources or improvement plans, for a custom lens. Up to five additional URLs can be specified.
      description: <p>The choice level additional resources for a custom lens.</p> <p>This field does not apply to Amazon Web Services official lenses.</p>
    AdditionalResourcesList:
      type: array
      items:
        $ref: "#/components/schemas/AdditionalResources"
    QuestionId:
      type: string
      description: The ID of the question.
      minLength: 1
      maxLength: 128
    QuestionTitle:
      type: string
      description: The title of the question.
      minLength: 1
      maxLength: 512
    QuestionDescription:
      type: string
      description: The description of the question.
      minLength: 1
      maxLength: 1024
    ImprovementPlanUrl:
      type: string
      description: <p>The improvement plan URL for a question in an Amazon Web Services official lenses.</p> <p>This value is only available if the question has been answered.</p> <p>This value does not apply to custom lenses.</p>
      minLength: 1
      maxLength: 2048
    HelpfulResourceUrl:
      type: string
      description: <p>The helpful resource URL.</p> <p>For Amazon Web Services official lenses, this is the helpful resource URL for a question or choice.</p> <p>For custom lenses, this is the helpful resource URL for a question and is only provided if <code>HelpfulResourceDisplayText</code> was specified for the question.</p>
      minLength: 1
      maxLength: 2048
    DisplayText:
      type: string
      minLength: 1
      maxLength: 64
    Choices:
      type: array
      description: List of choices available for a question.
      items:
        $ref: "#/components/schemas/Choice"
    SelectedChoices:
      type: array
      description: <p>List of selected choice IDs in a question answer.</p> <p>The values entered replace the previously selected choices.</p>
      items:
        $ref: "#/components/schemas/ChoiceId"
    ChoiceAnswers:
      type: array
      items:
        $ref: "#/components/schemas/ChoiceAnswer"
    IsApplicable:
      type: boolean
      description: Defines whether this question is applicable to a lens review.
    Risk:
      type: string
      enum:
        - UNANSWERED
        - HIGH
        - MEDIUM
        - NONE
        - NOT_APPLICABLE
      description: The risk for a given workload, lens review, pillar, or question.
    AnswerReason:
      type: string
      enum:
        - OUT_OF_SCOPE
        - BUSINESS_PRIORITIES
        - ARCHITECTURE_CONSTRAINTS
        - OTHER
        - NONE
    Answer:
      type: object
      properties:
        QuestionId:
          $ref: "#/components/schemas/QuestionId"
        PillarId:
          $ref: "#/components/schemas/PillarId"
        QuestionTitle:
          $ref: "#/components/schemas/QuestionTitle"
        QuestionDescription:
          $ref: "#/components/schemas/QuestionDescription"
        ImprovementPlanUrl:
          $ref: "#/components/schemas/ImprovementPlanUrl"
        HelpfulResourceUrl:
          $ref: "#/components/schemas/HelpfulResourceUrl"
        HelpfulResourceDisplayText:
          allOf:
            - $ref: "#/components/schemas/DisplayText"
            - description: <p>The helpful resource text to be displayed for a custom lens.</p> <p>This field does not apply to Amazon Web Services official lenses.</p>
        Choices:
          $ref: "#/components/schemas/Choices"
        SelectedChoices:
          $ref: "#/components/schemas/SelectedChoices"
        ChoiceAnswers:
          allOf:
            - $ref: "#/components/schemas/ChoiceAnswers"
            - description: A list of selected choices to a question in your workload.
        IsApplicable:
          $ref: "#/components/schemas/IsApplicable"
        Risk:
          $ref: "#/components/schemas/Risk"
        Notes:
          $ref: "#/components/schemas/Notes"
        Reason:
          allOf:
            - $ref: "#/components/schemas/AnswerReason"
            - description: The reason why the question is not applicable to your workload.
      description: An answer of the question.
    AnswerSummary:
      type: object
      properties:
        QuestionId:
          $ref: "#/components/schemas/QuestionId"
        PillarId:
          $ref: "#/components/schemas/PillarId"
        QuestionTitle:
          $ref: "#/components/schemas/QuestionTitle"
        Choices:
          $ref: "#/components/schemas/Choices"
        SelectedChoices:
          $ref: "#/components/schemas/SelectedChoices"
        ChoiceAnswerSummaries:
          allOf:
            - $ref: "#/components/schemas/ChoiceAnswerSummaries"
            - description: A list of selected choices to a question in your workload.
        IsApplicable:
          $ref: "#/components/schemas/IsApplicable"
        Risk:
          $ref: "#/components/schemas/Risk"
        Reason:
          allOf:
            - $ref: "#/components/schemas/AnswerReason"
            - description: The reason why a choice is non-applicable to a question in your workload.
      description: An answer summary of a lens review in a workload.
    AnswerSummaries:
      type: array
      description: List of answer summaries of lens review in a workload.
      items:
        $ref: "#/components/schemas/AnswerSummary"
    ChoiceAnswerSummaries:
      type: array
      items:
        $ref: "#/components/schemas/ChoiceAnswerSummary"
    WorkloadId:
      type: string
      pattern: "[0-9a-f]{32}"
      description: The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.
    LensAliases:
      type: array
      description: <p>List of lens aliases to associate or disassociate with a workload. Up to 10 lenses can be specified.</p> <p>Identify a lens using its <a>LensSummary$LensAlias</a>.</p>
      items:
        $ref: "#/components/schemas/LensAlias"
      minItems: 1
    AssociateLensesInput:
      type: object
      required:
        - LensAliases
      title: AssociateLensesInput
      properties:
        LensAliases:
          $ref: "#/components/schemas/LensAliases"
      description: Input to associate lens reviews.
    Base64String:
      type: string
      description: <p>The Base64-encoded string representation of a lens review report.</p> <p>This data can be used to create a PDF file.</p> <p>Only returned by <a>GetConsolidatedReport</a> when <code>PDF</code> format is requested.</p>
    ChoiceTitle:
      type: string
      description: The title of a choice.
      minLength: 1
      maxLength: 512
    BestPractice:
      type: object
      properties:
        ChoiceId:
          $ref: "#/components/schemas/ChoiceId"
        ChoiceTitle:
          $ref: "#/components/schemas/ChoiceTitle"
      description: A best practice, or question choice, that has been identified as a risk in this question.
    BestPractices:
      type: array
      items:
        $ref: "#/components/schemas/BestPractice"
    CheckDescription:
      type: string
    CheckId:
      type: string
    CheckName:
      type: string
    CheckProvider:
      type: string
      enum:
        - TRUSTED_ADVISOR
    LensArn:
      type: string
    CheckStatus:
      type: string
      enum:
        - OKAY
        - WARNING
        - ERROR
        - NOT_AVAILABLE
        - FETCH_FAILED
    FlaggedResources:
      type: integer
      minimum: 1
      maximum: 9999
    CheckFailureReason:
      type: string
      enum:
        - ASSUME_ROLE_ERROR
        - ACCESS_DENIED
        - UNKNOWN_ERROR
        - PREMIUM_SUPPORT_REQUIRED
    Timestamp:
      type: string
      description: The date and time recorded.
      format: date-time
    CheckDetail:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/CheckId"
            - description: Trusted Advisor check ID.
        Name:
          allOf:
            - $ref: "#/components/schemas/CheckName"
            - description: Trusted Advisor check name.
        Description:
          allOf:
            - $ref: "#/components/schemas/CheckDescription"
            - description: Trusted Advisor check description.
        Provider:
          allOf:
            - $ref: "#/components/schemas/CheckProvider"
            - description: Provider of the check related to the best practice.
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: Well-Architected Lens ARN associated to the check.
        PillarId:
          $ref: "#/components/schemas/PillarId"
        QuestionId:
          $ref: "#/components/schemas/QuestionId"
        ChoiceId:
          $ref: "#/components/schemas/ChoiceId"
        Status:
          allOf:
            - $ref: "#/components/schemas/CheckStatus"
            - description: Status associated to the check.
        AccountId:
          $ref: "#/components/schemas/AwsAccountId"
        FlaggedResources:
          allOf:
            - $ref: "#/components/schemas/FlaggedResources"
            - description: Count of flagged resources associated to the check.
        Reason:
          allOf:
            - $ref: "#/components/schemas/CheckFailureReason"
            - description: Reason associated to the check.
        UpdatedAt:
          $ref: "#/components/schemas/Timestamp"
      description: Account details for a Well-Architected best practice in relation to Trusted Advisor checks.
    CheckDetails:
      type: array
      items:
        $ref: "#/components/schemas/CheckDetail"
    CheckSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/CheckId"
            - description: Trusted Advisor check ID.
        Name:
          allOf:
            - $ref: "#/components/schemas/CheckName"
            - description: Trusted Advisor check name.
        Provider:
          allOf:
            - $ref: "#/components/schemas/CheckProvider"
            - description: Provider of the check related to the best practice.
        Description:
          allOf:
            - $ref: "#/components/schemas/CheckDescription"
            - description: Trusted Advisor check description.
        UpdatedAt:
          $ref: "#/components/schemas/Timestamp"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: Well-Architected Lens ARN associated to the check.
        PillarId:
          $ref: "#/components/schemas/PillarId"
        QuestionId:
          $ref: "#/components/schemas/QuestionId"
        ChoiceId:
          $ref: "#/components/schemas/ChoiceId"
        Status:
          allOf:
            - $ref: "#/components/schemas/CheckStatus"
            - description: Status associated to the check.
        AccountSummary:
          allOf:
            - $ref: "#/components/schemas/AccountSummary"
            - description: Account summary associated to the check.
      description: Trusted Advisor check summary.
    CheckSummaries:
      type: array
      items:
        $ref: "#/components/schemas/CheckSummary"
    ChoiceDescription:
      type: string
      description: The description of a choice.
      minLength: 1
      maxLength: 1024
    ChoiceContent:
      type: object
      properties:
        DisplayText:
          allOf:
            - $ref: "#/components/schemas/ChoiceContentDisplayText"
            - description: The display text for the choice content.
        Url:
          allOf:
            - $ref: "#/components/schemas/ChoiceContentUrl"
            - description: The URL for the choice content.
      description: The choice content.
    Choice:
      type: object
      properties:
        ChoiceId:
          $ref: "#/components/schemas/ChoiceId"
        Title:
          $ref: "#/components/schemas/ChoiceTitle"
        Description:
          $ref: "#/components/schemas/ChoiceDescription"
        HelpfulResource:
          allOf:
            - $ref: "#/components/schemas/ChoiceContent"
            - description: <p>The helpful resource (both text and URL) for a particular choice.</p> <p>This field only applies to custom lenses. Each choice can have only one helpful resource.</p>
        ImprovementPlan:
          allOf:
            - $ref: "#/components/schemas/ChoiceContent"
            - description: <p>The improvement plan (both text and URL) for a particular choice.</p> <p>This field only applies to custom lenses. Each choice can have only one improvement plan.</p>
        AdditionalResources:
          allOf:
            - $ref: "#/components/schemas/AdditionalResourcesList"
            - description: "<p>The additional resources for a choice in a custom lens.</p> <p>A choice can have up to two additional resources: one of type <code>HELPFUL_RESOURCE</code>, one of type <code>IMPROVEMENT_PLAN</code>, or both.</p>"
      description: A choice available to answer question.
    ChoiceStatus:
      type: string
      enum:
        - SELECTED
        - NOT_APPLICABLE
        - UNSELECTED
    ChoiceReason:
      type: string
      enum:
        - OUT_OF_SCOPE
        - BUSINESS_PRIORITIES
        - ARCHITECTURE_CONSTRAINTS
        - OTHER
        - NONE
    ChoiceNotes:
      type: string
      maxLength: 250
    ChoiceAnswer:
      type: object
      properties:
        ChoiceId:
          $ref: "#/components/schemas/ChoiceId"
        Status:
          allOf:
            - $ref: "#/components/schemas/ChoiceStatus"
            - description: The status of a choice.
        Reason:
          allOf:
            - $ref: "#/components/schemas/ChoiceReason"
            - description: The reason why a choice is non-applicable to a question in your workload.
        Notes:
          allOf:
            - $ref: "#/components/schemas/ChoiceNotes"
            - description: The notes associated with a choice.
      description: A choice that has been answered on a question in your workload.
    ChoiceAnswerSummary:
      type: object
      properties:
        ChoiceId:
          $ref: "#/components/schemas/ChoiceId"
        Status:
          allOf:
            - $ref: "#/components/schemas/ChoiceStatus"
            - description: The status of a choice.
        Reason:
          allOf:
            - $ref: "#/components/schemas/ChoiceReason"
            - description: The reason why a choice is non-applicable to a question in your workload.
      description: A choice summary that has been answered on a question in your workload.
    ChoiceContentDisplayText:
      type: string
      minLength: 1
      maxLength: 1024
    ChoiceContentUrl:
      type: string
      minLength: 1
      maxLength: 1024
    ChoiceImprovementPlan:
      type: object
      properties:
        ChoiceId:
          $ref: "#/components/schemas/ChoiceId"
        DisplayText:
          allOf:
            - $ref: "#/components/schemas/DisplayText"
            - description: The display text for the improvement plan.
        ImprovementPlanUrl:
          $ref: "#/components/schemas/ImprovementPlanUrl"
      description: The choice level improvement plan.
    ChoiceImprovementPlans:
      type: array
      items:
        $ref: "#/components/schemas/ChoiceImprovementPlan"
    ChoiceUpdates:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ChoiceUpdate"
    ClientRequestToken:
      type: string
      description: <p>A unique case-sensitive string used to ensure that this request is idempotent (executes only once).</p> <p>You should not reuse the same token for other requests. If you retry a request with the same client request token and the same parameters after the original request has completed successfully, the result of the original request is returned.</p> <important> <p>This token is listed as required, however, if you do not specify it, the Amazon Web Services SDKs automatically generate one for you. If you are not using the Amazon Web Services SDK or the CLI, you must provide this token or the request will fail.</p> </important>
    MetricType:
      type: string
      enum:
        - WORKLOAD
    RiskCounts:
      type: object
      description: A map from risk names to the count of how many questions have that rating.
      additionalProperties:
        $ref: "#/components/schemas/Count"
    WorkloadName:
      type: string
      description: <p>The name of the workload.</p> <p>The name must be unique within an account within an Amazon Web Services Region. Spaces and capitalization are ignored when checking for uniqueness.</p>
      minLength: 3
      maxLength: 100
    WorkloadArn:
      type: string
      description: The ARN for the workload.
    LensMetrics:
      type: array
      items:
        $ref: "#/components/schemas/LensMetric"
    LensesAppliedCount:
      type: integer
      minimum: 0
    ConsolidatedReportMetric:
      type: object
      properties:
        MetricType:
          allOf:
            - $ref: "#/components/schemas/MetricType"
            - description: The metric type of a metric in the consolidated report. Currently only WORKLOAD metric types are supported.
        RiskCounts:
          $ref: "#/components/schemas/RiskCounts"
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        WorkloadName:
          $ref: "#/components/schemas/WorkloadName"
        WorkloadArn:
          $ref: "#/components/schemas/WorkloadArn"
        UpdatedAt:
          $ref: "#/components/schemas/Timestamp"
        Lenses:
          allOf:
            - $ref: "#/components/schemas/LensMetrics"
            - description: The metrics for the lenses in the workload.
        LensesAppliedCount:
          allOf:
            - $ref: "#/components/schemas/LensesAppliedCount"
            - description: The total number of lenses applied to the workload.
      description: A metric that contributes to the consolidated report.
    ConsolidatedReportMetrics:
      type: array
      items:
        $ref: "#/components/schemas/ConsolidatedReportMetric"
    Count:
      type: integer
      description: A non-negative integer that denotes how many.
      minimum: 0
    SharedWith:
      type: string
      description: The Amazon Web Services account ID, IAM role, organization ID, or organizational unit (OU) ID with which the workload is shared.
      minLength: 12
      maxLength: 2048
    CreateLensShareInput:
      type: object
      required:
        - SharedWith
        - ClientRequestToken
      title: CreateLensShareInput
      properties:
        SharedWith:
          $ref: "#/components/schemas/SharedWith"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    ShareId:
      type: string
      pattern: "[0-9a-f]{32}"
      description: The ID associated with the workload share.
    LensVersion:
      type: string
      minLength: 1
      maxLength: 32
    IsMajorVersion:
      type: boolean
    CreateLensVersionInput:
      type: object
      required:
        - LensVersion
        - ClientRequestToken
      title: CreateLensVersionInput
      properties:
        LensVersion:
          allOf:
            - $ref: "#/components/schemas/LensVersion"
            - description: The version of the lens being created.
        IsMajorVersion:
          allOf:
            - $ref: "#/components/schemas/IsMajorVersion"
            - description: Set to true if this new major lens version.
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    MilestoneName:
      type: string
      description: <p>The name of the milestone in a workload.</p> <p>Milestone names must be unique within a workload.</p>
      minLength: 3
      maxLength: 100
    CreateMilestoneInput:
      type: object
      required:
        - MilestoneName
        - ClientRequestToken
      title: CreateMilestoneInput
      properties:
        MilestoneName:
          $ref: "#/components/schemas/MilestoneName"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
      description: Input for milestone creation.
    MilestoneNumber:
      type: integer
      description: <p>The milestone number.</p> <p>A workload can have a maximum of 100 milestones.</p>
      minimum: 1
      maximum: 100
    WorkloadDescription:
      type: string
      description: The description for the workload.
      minLength: 3
      maxLength: 250
    WorkloadEnvironment:
      type: string
      enum:
        - PRODUCTION
        - PREPRODUCTION
      description: The environment for the workload.
    WorkloadAccountIds:
      type: array
      description: The list of Amazon Web Services account IDs associated with the workload.
      items:
        $ref: "#/components/schemas/AwsAccountId"
      maxItems: 100
    WorkloadAwsRegions:
      type: array
      description: The list of Amazon Web Services Regions associated with the workload, for example, <code>us-east-2</code>, or <code>ca-central-1</code>.
      items:
        $ref: "#/components/schemas/AwsRegion"
      maxItems: 50
    WorkloadNonAwsRegions:
      type: array
      description: " The list of non-Amazon Web Services Regions associated with the workload."
      items:
        $ref: "#/components/schemas/WorkloadNonAwsRegion"
      maxItems: 5
    WorkloadPillarPriorities:
      type: array
      description: The priorities of the pillars, which are used to order items in the improvement plan. Each pillar is represented by its <a>PillarReviewSummary$PillarId</a>.
      items:
        $ref: "#/components/schemas/PillarId"
    WorkloadArchitecturalDesign:
      type: string
      pattern: ^(|(https?|ftp):\/\/[^\s/$.?#].[^\s]*)$
      description: The URL of the architectural design for the workload.
      maxLength: 2048
    WorkloadReviewOwner:
      type: string
      description: The review owner of the workload. The name, email address, or identifier for the primary group or individual that owns the workload review process.
      minLength: 3
      maxLength: 255
    WorkloadIndustryType:
      type: string
      description: <p>The industry type for the workload.</p> <p>If specified, must be one of the following:</p> <ul> <li> <p> <code>Agriculture</code> </p> </li> <li> <p> <code>Automobile</code> </p> </li> <li> <p> <code>Defense</code> </p> </li> <li> <p> <code>Design and Engineering</code> </p> </li> <li> <p> <code>Digital Advertising</code> </p> </li> <li> <p> <code>Education</code> </p> </li> <li> <p> <code>Environmental Protection</code> </p> </li> <li> <p> <code>Financial Services</code> </p> </li> <li> <p> <code>Gaming</code> </p> </li> <li> <p> <code>General Public Services</code> </p> </li> <li> <p> <code>Healthcare</code> </p> </li> <li> <p> <code>Hospitality</code> </p> </li> <li> <p> <code>InfoTech</code> </p> </li> <li> <p> <code>Justice and Public Safety</code> </p> </li> <li> <p> <code>Life Sciences</code> </p> </li> <li> <p> <code>Manufacturing</code> </p> </li> <li> <p> <code>Media &amp; Entertainment</code> </p> </li> <li> <p> <code>Mining &amp; Resources</code> </p> </li> <li> <p> <code>Oil &amp; Gas</code> </p> </li> <li> <p> <code>Power &amp; Utilities</code> </p> </li> <li> <p> <code>Professional Services</code> </p> </li> <li> <p> <code>Real Estate &amp; Construction</code> </p> </li> <li> <p> <code>Retail &amp; Wholesale</code> </p> </li> <li> <p> <code>Social Protection</code> </p> </li> <li> <p> <code>Telecommunications</code> </p> </li> <li> <p> <code>Travel, Transportation &amp; Logistics</code> </p> </li> <li> <p> <code>Other</code> </p> </li> </ul>
      maxLength: 100
    WorkloadIndustry:
      type: string
      description: The industry for the workload.
      maxLength: 100
    WorkloadLenses:
      type: array
      description: The list of lenses associated with the workload. Each lens is identified by its <a>LensSummary$LensAlias</a>.
      items:
        $ref: "#/components/schemas/LensAlias"
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    WorkloadDiscoveryConfig:
      type: object
      properties:
        TrustedAdvisorIntegrationStatus:
          allOf:
            - $ref: "#/components/schemas/TrustedAdvisorIntegrationStatus"
            - description: Discovery integration status in respect to Trusted Advisor for the workload.
      description: Discovery configuration associated to the workload.
    WorkloadApplications:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationArn"
      maxItems: 1
    CreateWorkloadInput:
      type: object
      required:
        - WorkloadName
        - Description
        - Environment
        - Lenses
        - ClientRequestToken
      title: CreateWorkloadInput
      properties:
        WorkloadName:
          $ref: "#/components/schemas/WorkloadName"
        Description:
          $ref: "#/components/schemas/WorkloadDescription"
        Environment:
          $ref: "#/components/schemas/WorkloadEnvironment"
        AccountIds:
          $ref: "#/components/schemas/WorkloadAccountIds"
        AwsRegions:
          $ref: "#/components/schemas/WorkloadAwsRegions"
        NonAwsRegions:
          $ref: "#/components/schemas/WorkloadNonAwsRegions"
        PillarPriorities:
          $ref: "#/components/schemas/WorkloadPillarPriorities"
        ArchitecturalDesign:
          $ref: "#/components/schemas/WorkloadArchitecturalDesign"
        ReviewOwner:
          $ref: "#/components/schemas/WorkloadReviewOwner"
        IndustryType:
          $ref: "#/components/schemas/WorkloadIndustryType"
        Industry:
          $ref: "#/components/schemas/WorkloadIndustry"
        Lenses:
          $ref: "#/components/schemas/WorkloadLenses"
        Notes:
          $ref: "#/components/schemas/Notes"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags to be associated with the workload.
        DiscoveryConfig:
          allOf:
            - $ref: "#/components/schemas/WorkloadDiscoveryConfig"
            - description: Well-Architected discovery configuration settings associated to the workload.
        Applications:
          allOf:
            - $ref: "#/components/schemas/WorkloadApplications"
            - description: List of AppRegistry application ARNs associated to the workload.
      description: Input for workload creation.
    PermissionType:
      type: string
      enum:
        - READONLY
        - CONTRIBUTOR
      description: Permission granted on a workload share.
    CreateWorkloadShareInput:
      type: object
      required:
        - SharedWith
        - PermissionType
        - ClientRequestToken
      title: CreateWorkloadShareInput
      properties:
        SharedWith:
          $ref: "#/components/schemas/SharedWith"
        PermissionType:
          $ref: "#/components/schemas/PermissionType"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
      description: Input for Create Workload Share
    LensStatusType:
      type: string
      enum:
        - ALL
        - DRAFT
        - PUBLISHED
    DeleteLensInput:
      type: object
      title: DeleteLensInput
      properties: {}
    DeleteLensShareInput:
      type: object
      title: DeleteLensShareInput
      properties: {}
    DeleteWorkloadInput:
      type: object
      title: DeleteWorkloadInput
      properties: {}
      description: Input for workload deletion.
    DeleteWorkloadShareInput:
      type: object
      title: DeleteWorkloadShareInput
      properties: {}
      description: Input for Delete Workload Share
    DifferenceStatus:
      type: string
      enum:
        - UPDATED
        - NEW
        - DELETED
    DisassociateLensesInput:
      type: object
      required:
        - LensAliases
      title: DisassociateLensesInput
      properties:
        LensAliases:
          $ref: "#/components/schemas/LensAliases"
      description: Input to disassociate lens reviews.
    ExportLensInput:
      type: object
      title: ExportLensInput
      properties: {}
    LensJSON:
      type: string
      minLength: 2
      maxLength: 500000
    GetAnswerInput:
      type: object
      title: GetAnswerInput
      properties: {}
      description: Input to get answer.
    ReportFormat:
      type: string
      enum:
        - PDF
        - JSON
    IncludeSharedResources:
      type: boolean
    NextToken:
      type: string
      description: The token to use to retrieve the next set of results.
    GetConsolidatedReportMaxResults:
      type: integer
      minimum: 1
      maximum: 15
    GetConsolidatedReportInput:
      type: object
      title: GetConsolidatedReportInput
      properties: {}
    GetLensInput:
      type: object
      title: GetLensInput
      properties: {}
    Lens:
      type: object
      properties:
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN of a lens.
        LensVersion:
          allOf:
            - $ref: "#/components/schemas/LensVersion"
            - description: The version of a lens.
        Name:
          $ref: "#/components/schemas/LensName"
        Description:
          $ref: "#/components/schemas/LensDescription"
        Owner:
          allOf:
            - $ref: "#/components/schemas/LensOwner"
            - description: The Amazon Web Services account ID that owns the lens.
        ShareInvitationId:
          allOf:
            - $ref: "#/components/schemas/ShareInvitationId"
            - description: The ID assigned to the share invitation.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags assigned to the lens.
      description: A lens return object.
    GetLensReviewInput:
      type: object
      title: GetLensReviewInput
      properties: {}
      description: Input to get lens review.
    LensReview:
      type: object
      properties:
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
        LensVersion:
          allOf:
            - $ref: "#/components/schemas/LensVersion"
            - description: The version of the lens.
        LensName:
          $ref: "#/components/schemas/LensName"
        LensStatus:
          allOf:
            - $ref: "#/components/schemas/LensStatus"
            - description: The status of the lens.
        PillarReviewSummaries:
          $ref: "#/components/schemas/PillarReviewSummaries"
        UpdatedAt:
          $ref: "#/components/schemas/Timestamp"
        Notes:
          $ref: "#/components/schemas/Notes"
        RiskCounts:
          $ref: "#/components/schemas/RiskCounts"
        NextToken:
          $ref: "#/components/schemas/NextToken"
      description: A lens review of a question.
    GetLensReviewReportInput:
      type: object
      title: GetLensReviewReportInput
      properties: {}
      description: Input to get lens review report.
    LensReviewReport:
      type: object
      properties:
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
        Base64String:
          $ref: "#/components/schemas/Base64String"
      description: A report of a lens review.
    GetLensVersionDifferenceInput:
      type: object
      title: GetLensVersionDifferenceInput
      properties: {}
    VersionDifferences:
      type: object
      properties:
        PillarDifferences:
          allOf:
            - $ref: "#/components/schemas/PillarDifferences"
            - description: The differences between the base and latest versions of the lens.
      description: The differences between the base and latest versions of the lens.
    GetMilestoneInput:
      type: object
      title: GetMilestoneInput
      properties: {}
      description: Input to get a milestone.
    Milestone:
      type: object
      properties:
        MilestoneNumber:
          $ref: "#/components/schemas/MilestoneNumber"
        MilestoneName:
          $ref: "#/components/schemas/MilestoneName"
        RecordedAt:
          $ref: "#/components/schemas/Timestamp"
        Workload:
          $ref: "#/components/schemas/Workload"
      description: A milestone return object.
    GetWorkloadInput:
      type: object
      title: GetWorkloadInput
      properties: {}
      description: Input to get a workload.
    Workload:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        WorkloadArn:
          $ref: "#/components/schemas/WorkloadArn"
        WorkloadName:
          $ref: "#/components/schemas/WorkloadName"
        Description:
          $ref: "#/components/schemas/WorkloadDescription"
        Environment:
          $ref: "#/components/schemas/WorkloadEnvironment"
        UpdatedAt:
          $ref: "#/components/schemas/Timestamp"
        AccountIds:
          $ref: "#/components/schemas/WorkloadAccountIds"
        AwsRegions:
          $ref: "#/components/schemas/WorkloadAwsRegions"
        NonAwsRegions:
          $ref: "#/components/schemas/WorkloadNonAwsRegions"
        ArchitecturalDesign:
          $ref: "#/components/schemas/WorkloadArchitecturalDesign"
        ReviewOwner:
          $ref: "#/components/schemas/WorkloadReviewOwner"
        ReviewRestrictionDate:
          $ref: "#/components/schemas/Timestamp"
        IsReviewOwnerUpdateAcknowledged:
          allOf:
            - $ref: "#/components/schemas/IsReviewOwnerUpdateAcknowledged"
            - description: <p>Flag indicating whether the workload owner has acknowledged that the <i>Review owner</i> field is required.</p> <p>If a <b>Review owner</b> is not added to the workload within 60 days of acknowledgement, access to the workload is restricted until an owner is added.</p>
        IndustryType:
          $ref: "#/components/schemas/WorkloadIndustryType"
        Industry:
          $ref: "#/components/schemas/WorkloadIndustry"
        Notes:
          $ref: "#/components/schemas/Notes"
        ImprovementStatus:
          $ref: "#/components/schemas/WorkloadImprovementStatus"
        RiskCounts:
          $ref: "#/components/schemas/RiskCounts"
        PillarPriorities:
          $ref: "#/components/schemas/WorkloadPillarPriorities"
        Lenses:
          $ref: "#/components/schemas/WorkloadLenses"
        Owner:
          $ref: "#/components/schemas/AwsAccountId"
        ShareInvitationId:
          allOf:
            - $ref: "#/components/schemas/ShareInvitationId"
            - description: The ID assigned to the share invitation.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags associated with the workload.
        DiscoveryConfig:
          allOf:
            - $ref: "#/components/schemas/WorkloadDiscoveryConfig"
            - description: Discovery configuration associated to the workload.
        Applications:
          allOf:
            - $ref: "#/components/schemas/WorkloadApplications"
            - description: List of AppRegistry application ARNs associated to the workload.
      description: A workload return object.
    ImportLensInput:
      type: object
      required:
        - JSONString
        - ClientRequestToken
      title: ImportLensInput
      properties:
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        JSONString:
          allOf:
            - $ref: "#/components/schemas/LensJSON"
            - description: The JSON representation of a lens.
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: Tags to associate to a lens.
    ImportLensStatus:
      type: string
      enum:
        - IN_PROGRESS
        - COMPLETE
        - ERROR
    ImprovementSummary:
      type: object
      properties:
        QuestionId:
          $ref: "#/components/schemas/QuestionId"
        PillarId:
          $ref: "#/components/schemas/PillarId"
        QuestionTitle:
          $ref: "#/components/schemas/QuestionTitle"
        Risk:
          $ref: "#/components/schemas/Risk"
        ImprovementPlanUrl:
          $ref: "#/components/schemas/ImprovementPlanUrl"
        ImprovementPlans:
          allOf:
            - $ref: "#/components/schemas/ChoiceImprovementPlans"
            - description: The improvement plan details.
      description: An improvement summary of a lens review in a workload.
    ImprovementSummaries:
      type: array
      description: List of improvement summaries of lens review in a workload.
      items:
        $ref: "#/components/schemas/ImprovementSummary"
    IsReviewOwnerUpdateAcknowledged:
      type: boolean
    LensName:
      type: string
      description: The full name of the lens.
      minLength: 1
      maxLength: 128
    LensDescription:
      type: string
      description: The description of the lens.
      minLength: 1
      maxLength: 1024
    LensOwner:
      type: string
    ShareInvitationId:
      type: string
      pattern: "[0-9a-f]{32}"
    PillarMetrics:
      type: array
      items:
        $ref: "#/components/schemas/PillarMetric"
    LensMetric:
      type: object
      properties:
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The lens ARN.
        Pillars:
          allOf:
            - $ref: "#/components/schemas/PillarMetrics"
            - description: The metrics for the pillars in a lens.
        RiskCounts:
          $ref: "#/components/schemas/RiskCounts"
      description: A metric for a particular lens in a workload.
    LensNamePrefix:
      type: string
      maxLength: 100
    LensStatus:
      type: string
      enum:
        - CURRENT
        - NOT_CURRENT
        - DEPRECATED
        - DELETED
        - UNSHARED
    PillarReviewSummaries:
      type: array
      description: List of pillar review summaries of lens review in a workload.
      items:
        $ref: "#/components/schemas/PillarReviewSummary"
    LensReviewSummary:
      type: object
      properties:
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
        LensVersion:
          allOf:
            - $ref: "#/components/schemas/LensVersion"
            - description: The version of the lens.
        LensName:
          $ref: "#/components/schemas/LensName"
        LensStatus:
          allOf:
            - $ref: "#/components/schemas/LensStatus"
            - description: The status of the lens.
        UpdatedAt:
          $ref: "#/components/schemas/Timestamp"
        RiskCounts:
          $ref: "#/components/schemas/RiskCounts"
      description: A lens review summary of a workload.
    LensReviewSummaries:
      type: array
      description: List of lens summaries of lens reviews of a workload.
      items:
        $ref: "#/components/schemas/LensReviewSummary"
    LensShareSummary:
      type: object
      properties:
        ShareId:
          $ref: "#/components/schemas/ShareId"
        SharedWith:
          $ref: "#/components/schemas/SharedWith"
        Status:
          $ref: "#/components/schemas/ShareStatus"
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: Optional message to compliment the Status field.
      description: A lens share summary return object.
    LensShareSummaries:
      type: array
      items:
        $ref: "#/components/schemas/LensShareSummary"
    ShareStatus:
      type: string
      enum:
        - ACCEPTED
        - REJECTED
        - PENDING
        - REVOKED
        - EXPIRED
        - ASSOCIATING
        - ASSOCIATED
        - FAILED
      description: The status of a workload share.
    StatusMessage:
      type: string
      minLength: 1
      maxLength: 512
    LensSummary:
      type: object
      properties:
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN of the lens.
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        LensName:
          $ref: "#/components/schemas/LensName"
        LensType:
          allOf:
            - $ref: "#/components/schemas/LensType"
            - description: The type of the lens.
        Description:
          $ref: "#/components/schemas/LensDescription"
        CreatedAt:
          $ref: "#/components/schemas/Timestamp"
        UpdatedAt:
          $ref: "#/components/schemas/Timestamp"
        LensVersion:
          allOf:
            - $ref: "#/components/schemas/LensVersion"
            - description: The version of the lens.
        Owner:
          $ref: "#/components/schemas/AwsAccountId"
        LensStatus:
          allOf:
            - $ref: "#/components/schemas/LensStatus"
            - description: The status of the lens.
      description: A lens summary of a lens.
    LensSummaries:
      type: array
      description: List of lens summaries of available lenses.
      items:
        $ref: "#/components/schemas/LensSummary"
    LensType:
      type: string
      enum:
        - AWS_OFFICIAL
        - CUSTOM_SHARED
        - CUSTOM_SELF
    LensUpgradeSummary:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        WorkloadName:
          $ref: "#/components/schemas/WorkloadName"
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
        CurrentLensVersion:
          allOf:
            - $ref: "#/components/schemas/LensVersion"
            - description: The current version of the lens.
        LatestLensVersion:
          allOf:
            - $ref: "#/components/schemas/LensVersion"
            - description: The latest version of the lens.
      description: Lens upgrade summary return object.
    ListAnswersMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListAnswersInput:
      type: object
      title: ListAnswersInput
      properties: {}
      description: Input to list answers.
    MaxResults:
      type: integer
      description: The maximum number of results to return for this request.
      minimum: 1
      maximum: 50
    ListCheckDetailsInput:
      type: object
      required:
        - LensArn
        - PillarId
        - QuestionId
        - ChoiceId
      title: ListCheckDetailsInput
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: Well-Architected Lens ARN.
        PillarId:
          $ref: "#/components/schemas/PillarId"
        QuestionId:
          $ref: "#/components/schemas/QuestionId"
        ChoiceId:
          $ref: "#/components/schemas/ChoiceId"
    ListCheckSummariesInput:
      type: object
      required:
        - LensArn
        - PillarId
        - QuestionId
        - ChoiceId
      title: ListCheckSummariesInput
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: Well-Architected Lens ARN.
        PillarId:
          $ref: "#/components/schemas/PillarId"
        QuestionId:
          $ref: "#/components/schemas/QuestionId"
        ChoiceId:
          $ref: "#/components/schemas/ChoiceId"
    ListLensReviewImprovementsMaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListLensReviewImprovementsInput:
      type: object
      title: ListLensReviewImprovementsInput
      properties: {}
      description: Input to list lens review improvements.
    ListLensReviewsInput:
      type: object
      title: ListLensReviewsInput
      properties: {}
      description: Input to list lens reviews.
    SharedWithPrefix:
      type: string
      maxLength: 100
    ListWorkloadSharesMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListLensSharesInput:
      type: object
      title: ListLensSharesInput
      properties: {}
    ListLensesInput:
      type: object
      title: ListLensesInput
      properties: {}
      description: Input to list lenses.
    ListMilestonesInput:
      type: object
      title: ListMilestonesInput
      properties:
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          $ref: "#/components/schemas/MaxResults"
      description: Input to list all milestones for a workload.
    MilestoneSummaries:
      type: array
      description: A list of milestone summaries.
      items:
        $ref: "#/components/schemas/MilestoneSummary"
    ListNotificationsMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListNotificationsInput:
      type: object
      title: ListNotificationsInput
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/ListNotificationsMaxResults"
            - description: The maximum number of results to return for this request.
    NotificationSummaries:
      type: array
      items:
        $ref: "#/components/schemas/NotificationSummary"
    WorkloadNamePrefix:
      type: string
      description: An optional string added to the beginning of each workload name returned in the results.
      maxLength: 100
    ShareResourceType:
      type: string
      enum:
        - WORKLOAD
        - LENS
    ListShareInvitationsMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListShareInvitationsInput:
      type: object
      title: ListShareInvitationsInput
      properties: {}
      description: Input for List Share Invitations
    ShareInvitationSummaries:
      type: array
      items:
        $ref: "#/components/schemas/ShareInvitationSummary"
    ListTagsForResourceInput:
      type: object
      title: ListTagsForResourceInput
      properties: {}
    ListWorkloadSharesInput:
      type: object
      title: ListWorkloadSharesInput
      properties: {}
      description: Input for List Workload Share
    WorkloadShareSummaries:
      type: array
      description: A list of workload share summaries.
      items:
        $ref: "#/components/schemas/WorkloadShareSummary"
    ListWorkloadsMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    ListWorkloadsInput:
      type: object
      title: ListWorkloadsInput
      properties:
        WorkloadNamePrefix:
          $ref: "#/components/schemas/WorkloadNamePrefix"
        NextToken:
          $ref: "#/components/schemas/NextToken"
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/ListWorkloadsMaxResults"
            - description: The maximum number of results to return for this request.
      description: Input to list all workloads.
    WorkloadSummaries:
      type: array
      description: A list of workload summaries.
      items:
        $ref: "#/components/schemas/WorkloadSummary"
    MilestoneSummary:
      type: object
      properties:
        MilestoneNumber:
          $ref: "#/components/schemas/MilestoneNumber"
        MilestoneName:
          $ref: "#/components/schemas/MilestoneName"
        RecordedAt:
          $ref: "#/components/schemas/Timestamp"
        WorkloadSummary:
          $ref: "#/components/schemas/WorkloadSummary"
      description: A milestone summary return object.
    WorkloadSummary:
      type: object
      properties:
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        WorkloadArn:
          $ref: "#/components/schemas/WorkloadArn"
        WorkloadName:
          $ref: "#/components/schemas/WorkloadName"
        Owner:
          $ref: "#/components/schemas/AwsAccountId"
        UpdatedAt:
          $ref: "#/components/schemas/Timestamp"
        Lenses:
          $ref: "#/components/schemas/WorkloadLenses"
        RiskCounts:
          $ref: "#/components/schemas/RiskCounts"
        ImprovementStatus:
          $ref: "#/components/schemas/WorkloadImprovementStatus"
      description: A workload summary return object.
    NotificationSummary:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NotificationType"
            - description: The type of notification.
        LensUpgradeSummary:
          allOf:
            - $ref: "#/components/schemas/LensUpgradeSummary"
            - description: Summary of lens upgrade.
      description: A notification summary return object.
    NotificationType:
      type: string
      enum:
        - LENS_VERSION_UPGRADED
        - LENS_VERSION_DEPRECATED
    OrganizationSharingStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    PillarName:
      type: string
      description: The name of the pillar.
      minLength: 1
      maxLength: 128
    QuestionDifferences:
      type: array
      items:
        $ref: "#/components/schemas/QuestionDifference"
    PillarDifference:
      type: object
      properties:
        PillarId:
          $ref: "#/components/schemas/PillarId"
        PillarName:
          $ref: "#/components/schemas/PillarName"
        DifferenceStatus:
          allOf:
            - $ref: "#/components/schemas/DifferenceStatus"
            - description: Indicates the type of change to the pillar.
        QuestionDifferences:
          allOf:
            - $ref: "#/components/schemas/QuestionDifferences"
            - description: List of question differences.
      description: A pillar difference return object.
    PillarDifferences:
      type: array
      items:
        $ref: "#/components/schemas/PillarDifference"
    QuestionMetrics:
      type: array
      items:
        $ref: "#/components/schemas/QuestionMetric"
    PillarMetric:
      type: object
      properties:
        PillarId:
          $ref: "#/components/schemas/PillarId"
        RiskCounts:
          $ref: "#/components/schemas/RiskCounts"
        Questions:
          allOf:
            - $ref: "#/components/schemas/QuestionMetrics"
            - description: The questions that have been identified as risks in the pillar.
      description: A metric for a particular pillar in a lens.
    PillarNotes:
      type: object
      description: List of pillar notes of a lens review in a workload.
      additionalProperties:
        $ref: "#/components/schemas/Notes"
    PillarReviewSummary:
      type: object
      properties:
        PillarId:
          $ref: "#/components/schemas/PillarId"
        PillarName:
          $ref: "#/components/schemas/PillarName"
        Notes:
          $ref: "#/components/schemas/Notes"
        RiskCounts:
          $ref: "#/components/schemas/RiskCounts"
      description: A pillar review summary of a lens review.
    QuestionDifference:
      type: object
      properties:
        QuestionId:
          $ref: "#/components/schemas/QuestionId"
        QuestionTitle:
          $ref: "#/components/schemas/QuestionTitle"
        DifferenceStatus:
          allOf:
            - $ref: "#/components/schemas/DifferenceStatus"
            - description: Indicates the type of change to the question.
      description: A question difference return object.
    QuestionMetric:
      type: object
      properties:
        QuestionId:
          $ref: "#/components/schemas/QuestionId"
        Risk:
          $ref: "#/components/schemas/Risk"
        BestPractices:
          allOf:
            - $ref: "#/components/schemas/BestPractices"
            - description: The best practices, or choices, that have been identified as contributing to risk in a question.
      description: "A metric for a particular question in the pillar. "
    ShareInvitation:
      type: object
      properties:
        ShareInvitationId:
          allOf:
            - $ref: "#/components/schemas/ShareInvitationId"
            - description: The ID assigned to the share invitation.
        ShareResourceType:
          allOf:
            - $ref: "#/components/schemas/ShareResourceType"
            - description: The resource type of the share invitation.
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        LensAlias:
          $ref: "#/components/schemas/LensAlias"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
      description: The share invitation.
    ShareInvitationAction:
      type: string
      enum:
        - ACCEPT
        - REJECT
      description: Share invitation action taken by contributor.
    ShareInvitationSummary:
      type: object
      properties:
        ShareInvitationId:
          allOf:
            - $ref: "#/components/schemas/ShareInvitationId"
            - description: The ID assigned to the share invitation.
        SharedBy:
          $ref: "#/components/schemas/AwsAccountId"
        SharedWith:
          $ref: "#/components/schemas/SharedWith"
        PermissionType:
          $ref: "#/components/schemas/PermissionType"
        ShareResourceType:
          allOf:
            - $ref: "#/components/schemas/ShareResourceType"
            - description: The resource type of the share invitation.
        WorkloadName:
          $ref: "#/components/schemas/WorkloadName"
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
        LensName:
          $ref: "#/components/schemas/LensName"
        LensArn:
          allOf:
            - $ref: "#/components/schemas/LensArn"
            - description: The ARN for the lens.
      description: A share invitation summary return object.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    TagResourceInput:
      type: object
      required:
        - Tags
      title: TagResourceInput
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags for the resource.
    UntagResourceInput:
      type: object
      title: UntagResourceInput
      properties: {}
    UpdateAnswerInput:
      type: object
      title: UpdateAnswerInput
      properties:
        SelectedChoices:
          $ref: "#/components/schemas/SelectedChoices"
        ChoiceUpdates:
          allOf:
            - $ref: "#/components/schemas/ChoiceUpdates"
            - description: A list of choices to update on a question in your workload. The String key corresponds to the choice ID to be updated.
        Notes:
          $ref: "#/components/schemas/Notes"
        IsApplicable:
          $ref: "#/components/schemas/IsApplicable"
        Reason:
          allOf:
            - $ref: "#/components/schemas/AnswerReason"
            - description: The reason why a question is not applicable to your workload.
      description: Input to update answer.
    UpdateGlobalSettingsInput:
      type: object
      title: UpdateGlobalSettingsInput
      properties:
        OrganizationSharingStatus:
          allOf:
            - $ref: "#/components/schemas/OrganizationSharingStatus"
            - description: The status of organization sharing settings.
    UpdateLensReviewInput:
      type: object
      title: UpdateLensReviewInput
      properties:
        LensNotes:
          $ref: "#/components/schemas/Notes"
        PillarNotes:
          $ref: "#/components/schemas/PillarNotes"
      description: Input for update lens review.
    UpdateShareInvitationInput:
      type: object
      required:
        - ShareInvitationAction
      title: UpdateShareInvitationInput
      properties:
        ShareInvitationAction:
          $ref: "#/components/schemas/ShareInvitationAction"
      description: Input for Update Share Invitation
    WorkloadImprovementStatus:
      type: string
      enum:
        - NOT_APPLICABLE
        - NOT_STARTED
        - IN_PROGRESS
        - COMPLETE
        - RISK_ACKNOWLEDGED
      description: The improvement status for a workload.
    UpdateWorkloadInput:
      type: object
      title: UpdateWorkloadInput
      properties:
        WorkloadName:
          $ref: "#/components/schemas/WorkloadName"
        Description:
          $ref: "#/components/schemas/WorkloadDescription"
        Environment:
          $ref: "#/components/schemas/WorkloadEnvironment"
        AccountIds:
          $ref: "#/components/schemas/WorkloadAccountIds"
        AwsRegions:
          $ref: "#/components/schemas/WorkloadAwsRegions"
        NonAwsRegions:
          $ref: "#/components/schemas/WorkloadNonAwsRegions"
        PillarPriorities:
          $ref: "#/components/schemas/WorkloadPillarPriorities"
        ArchitecturalDesign:
          $ref: "#/components/schemas/WorkloadArchitecturalDesign"
        ReviewOwner:
          $ref: "#/components/schemas/WorkloadReviewOwner"
        IsReviewOwnerUpdateAcknowledged:
          allOf:
            - $ref: "#/components/schemas/IsReviewOwnerUpdateAcknowledged"
            - description: <p>Flag indicating whether the workload owner has acknowledged that the <i>Review owner</i> field is required.</p> <p>If a <b>Review owner</b> is not added to the workload within 60 days of acknowledgement, access to the workload is restricted until an owner is added.</p>
        IndustryType:
          $ref: "#/components/schemas/WorkloadIndustryType"
        Industry:
          $ref: "#/components/schemas/WorkloadIndustry"
        Notes:
          $ref: "#/components/schemas/Notes"
        ImprovementStatus:
          $ref: "#/components/schemas/WorkloadImprovementStatus"
        DiscoveryConfig:
          allOf:
            - $ref: "#/components/schemas/WorkloadDiscoveryConfig"
            - description: Well-Architected discovery configuration settings to associate to the workload.
        Applications:
          allOf:
            - $ref: "#/components/schemas/WorkloadApplications"
            - description: List of AppRegistry application ARNs to associate to the workload.
      description: Input to update a workload.
    UpdateWorkloadShareInput:
      type: object
      required:
        - PermissionType
      title: UpdateWorkloadShareInput
      properties:
        PermissionType:
          $ref: "#/components/schemas/PermissionType"
      description: Input for Update Workload Share
    WorkloadShare:
      type: object
      properties:
        ShareId:
          $ref: "#/components/schemas/ShareId"
        SharedBy:
          $ref: "#/components/schemas/AwsAccountId"
        SharedWith:
          $ref: "#/components/schemas/SharedWith"
        PermissionType:
          $ref: "#/components/schemas/PermissionType"
        Status:
          $ref: "#/components/schemas/ShareStatus"
        WorkloadName:
          $ref: "#/components/schemas/WorkloadName"
        WorkloadId:
          $ref: "#/components/schemas/WorkloadId"
      description: A workload share return object.
    UpgradeLensReviewInput:
      type: object
      required:
        - MilestoneName
      title: UpgradeLensReviewInput
      properties:
        MilestoneName:
          $ref: "#/components/schemas/MilestoneName"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    WorkloadShareSummary:
      type: object
      properties:
        ShareId:
          $ref: "#/components/schemas/ShareId"
        SharedWith:
          $ref: "#/components/schemas/SharedWith"
        PermissionType:
          $ref: "#/components/schemas/PermissionType"
        Status:
          $ref: "#/components/schemas/ShareStatus"
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: Optional message to compliment the Status field.
      description: A workload share summary return object.
security:
  - hmac: []
