openapi: 3.0.0
info:
  version: 2018-10-26
  x-release: v4
  title: AWS SecurityHub
  description: <p>Security Hub provides you with a comprehensive view of the security state of your Amazon Web Services environment and resources. It also provides you with the readiness status of your environment based on controls from supported security standards. Security Hub collects security data from Amazon Web Services accounts, services, and integrated third-party products and helps you analyze security trends in your environment to identify the highest priority security issues. For more information about Security Hub, see the <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/what-is-securityhub.html">Security HubUser Guide</a>.</p> <p>When you use operations in the Security Hub API, the requests are executed only in the Amazon Web Services Region that is currently active or in the specific Amazon Web Services Region that you specify in your request. Any configuration or settings change that results from the operation is applied only to that Region. To make the same change in other Regions, run the same command for each Region in which you want to apply the change.</p> <p>For example, if your Region is set to <code>us-west-2</code>, when you use <code>CreateMembers</code> to add a member account to Security Hub, the association of the member account with the administrator account is created only in the <code>us-west-2</code> Region. Security Hub must be enabled for the member account in the same Region that the invitation was sent from.</p> <p>The following throttling limits apply to using Security Hub API operations.</p> <ul> <li> <p> <code>BatchEnableStandards</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 1 request per second.</p> </li> <li> <p> <code>GetFindings</code> - <code>RateLimit</code> of 3 requests per second. <code>BurstLimit</code> of 6 requests per second.</p> </li> <li> <p> <code>BatchImportFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>BatchUpdateFindings</code> - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> <li> <p> <code>UpdateStandardsControl</code> - <code>RateLimit</code> of 1 request per second. <code>BurstLimit</code> of 5 requests per second.</p> </li> <li> <p>All other operations - <code>RateLimit</code> of 10 requests per second. <code>BurstLimit</code> of 30 requests per second.</p> </li> </ul>
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: securityhub
  x-aws-signingName: securityhub
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/securityhub-2018-10-26.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/securityhub/
servers:
  - url: http://securityhub.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS SecurityHub multi-region endpoint
  - url: https://securityhub.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS SecurityHub multi-region endpoint
  - url: http://securityhub.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS SecurityHub endpoint for China (Beijing) and China (Ningxia)
  - url: https://securityhub.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS SecurityHub endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /administrator:
    post:
      operationId: AcceptAdministratorInvitation
      description: <p>Accepts the invitation to be a member account and be monitored by the Security Hub administrator account that the invitation was sent from.</p> <p>This operation is only used by member accounts that are not added through Organizations.</p> <p>When the member account accepts the invitation, permission is granted to the administrator account to view findings generated in the member account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptAdministratorInvitationResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AdministratorId
                - InvitationId
              properties:
                AdministratorId:
                  description: The account ID of the Security Hub administrator account that sent the invitation.
                  type: string
                  pattern: .*\S.*
                InvitationId:
                  description: The identifier of the invitation sent from the Security Hub administrator account.
                  type: string
                  pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetAdministratorAccount
      description: <p>Provides the details for the Security Hub administrator account for the current member account.</p> <p>Can be used by both member accounts that are managed using Organizations and accounts that were invited manually.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAdministratorAccountResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
  /master:
    post:
      deprecated: true
      operationId: AcceptInvitation
      description: <p>This method is deprecated. Instead, use <code>AcceptAdministratorInvitation</code>.</p> <p>The Security Hub console continues to use <code>AcceptInvitation</code>. It will eventually change to use <code>AcceptAdministratorInvitation</code>. Any IAM policies that specifically control access to this function must continue to use <code>AcceptInvitation</code>. You should also add <code>AcceptAdministratorInvitation</code> to your policies to ensure that the correct permissions are in place after the console begins to use <code>AcceptAdministratorInvitation</code>.</p> <p>Accepts the invitation to be a member account and be monitored by the Security Hub administrator account that the invitation was sent from.</p> <p>This operation is only used by member accounts that are not added through Organizations.</p> <p>When the member account accepts the invitation, permission is granted to the administrator account to view findings generated in the member account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptInvitationResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MasterId
                - InvitationId
              properties:
                MasterId:
                  description: The account ID of the Security Hub administrator account that sent the invitation.
                  type: string
                  pattern: .*\S.*
                InvitationId:
                  description: The identifier of the invitation sent from the Security Hub administrator account.
                  type: string
                  pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      deprecated: true
      operationId: GetMasterAccount
      description: <p>This method is deprecated. Instead, use <code>GetAdministratorAccount</code>.</p> <p>The Security Hub console continues to use <code>GetMasterAccount</code>. It will eventually change to use <code>GetAdministratorAccount</code>. Any IAM policies that specifically control access to this function must continue to use <code>GetMasterAccount</code>. You should also add <code>GetAdministratorAccount</code> to your policies to ensure that the correct permissions are in place after the console begins to use <code>GetAdministratorAccount</code>.</p> <p>Provides the details for the Security Hub administrator account for the current member account.</p> <p>Can be used by both member accounts that are managed using Organizations and accounts that were invited manually.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMasterAccountResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
  /standards/deregister:
    post:
      operationId: BatchDisableStandards
      description: <p>Disables the standards specified by the provided <code>StandardsSubscriptionArns</code>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html">Security Standards</a> section of the <i>Security Hub User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDisableStandardsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StandardsSubscriptionArns
              properties:
                StandardsSubscriptionArns:
                  description: The ARNs of the standards subscriptions to disable.
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
                  minItems: 1
                  maxItems: 25
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /standards/register:
    post:
      operationId: BatchEnableStandards
      description: <p>Enables the standards specified by the provided <code>StandardsArn</code>. To obtain the ARN for a standard, use the <code>DescribeStandards</code> operation.</p> <p>For more information, see the <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards.html">Security Standards</a> section of the <i>Security Hub User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchEnableStandardsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StandardsSubscriptionRequests
              properties:
                StandardsSubscriptionRequests:
                  description: The list of standards checks to enable.
                  type: array
                  items:
                    $ref: "#/components/schemas/StandardsSubscriptionRequest"
                  minItems: 1
                  maxItems: 25
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /securityControls/batchGet:
    post:
      operationId: BatchGetSecurityControls
      description: " Provides details about a batch of security controls for the current Amazon Web Services account and Amazon Web Services Region. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetSecurityControlsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - SecurityControlIds
              properties:
                SecurityControlIds:
                  description: " A list of security controls (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters). The security control ID or Amazon Resource Name (ARN) is the same across standards. "
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /associations/batchGet:
    post:
      operationId: BatchGetStandardsControlAssociations
      description: " For a batch of security controls and standards, identifies whether each control is currently enabled or disabled in a standard. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetStandardsControlAssociationsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StandardsControlAssociationIds
              properties:
                StandardsControlAssociationIds:
                  description: " An array with one or more objects that includes a security control (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters) and the Amazon Resource Name (ARN) of a standard. This field is used to query the enablement status of a control in a specified standard. The security control ID or ARN is the same across standards. "
                  type: array
                  items:
                    $ref: "#/components/schemas/StandardsControlAssociationId"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /findings/import:
    post:
      operationId: BatchImportFindings
      description: <p>Imports security findings generated by a finding provider into Security Hub. This action is requested by the finding provider to import its findings into Security Hub.</p> <p> <code>BatchImportFindings</code> must be called by one of the following:</p> <ul> <li> <p>The Amazon Web Services account that is associated with a finding if you are using the <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-custom-providers.html#securityhub-custom-providers-bfi-reqs">default product ARN</a> or are a partner sending findings from within a customer's Amazon Web Services account. In these cases, the identifier of the account that you are calling <code>BatchImportFindings</code> from needs to be the same as the <code>AwsAccountId</code> attribute for the finding.</p> </li> <li> <p>An Amazon Web Services account that Security Hub has allow-listed for an official partner integration. In this case, you can call <code>BatchImportFindings</code> from the allow-listed account and send findings from different customer accounts in the same batch.</p> </li> </ul> <p>The maximum allowed size for a finding is 240 Kb. An error is returned for any finding larger than 240 Kb.</p> <p>After a finding is created, <code>BatchImportFindings</code> cannot be used to update the following finding fields and objects, which Security Hub customers use to manage their investigation workflow.</p> <ul> <li> <p> <code>Note</code> </p> </li> <li> <p> <code>UserDefinedFields</code> </p> </li> <li> <p> <code>VerificationState</code> </p> </li> <li> <p> <code>Workflow</code> </p> </li> </ul> <p>Finding providers also should not use <code>BatchImportFindings</code> to update the following attributes.</p> <ul> <li> <p> <code>Confidence</code> </p> </li> <li> <p> <code>Criticality</code> </p> </li> <li> <p> <code>RelatedFindings</code> </p> </li> <li> <p> <code>Severity</code> </p> </li> <li> <p> <code>Types</code> </p> </li> </ul> <p>Instead, finding providers use <code>FindingProviderFields</code> to provide values for these attributes.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchImportFindingsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Findings
              properties:
                Findings:
                  description: A list of findings to import. To successfully import a finding, it must follow the <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html">Amazon Web Services Security Finding Format</a>. Maximum of 100 findings per request.
                  type: array
                  items:
                    $ref: "#/components/schemas/AwsSecurityFinding"
                  minItems: 1
                  maxItems: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /findings/batchupdate:
    patch:
      operationId: BatchUpdateFindings
      description: <p>Used by Security Hub customers to update information about their investigation into a finding. Requested by administrator accounts or member accounts. Administrator accounts can update findings for their account and their member accounts. Member accounts can update findings for their account.</p> <p>Updates from <code>BatchUpdateFindings</code> do not affect the value of <code>UpdatedAt</code> for a finding.</p> <p>Administrator and member accounts can use <code>BatchUpdateFindings</code> to update the following finding fields and objects.</p> <ul> <li> <p> <code>Confidence</code> </p> </li> <li> <p> <code>Criticality</code> </p> </li> <li> <p> <code>Note</code> </p> </li> <li> <p> <code>RelatedFindings</code> </p> </li> <li> <p> <code>Severity</code> </p> </li> <li> <p> <code>Types</code> </p> </li> <li> <p> <code>UserDefinedFields</code> </p> </li> <li> <p> <code>VerificationState</code> </p> </li> <li> <p> <code>Workflow</code> </p> </li> </ul> <p>You can configure IAM policies to restrict access to fields and field values. For example, you might not want member accounts to be able to suppress findings or change the finding severity. See <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/finding-update-batchupdatefindings.html#batchupdatefindings-configure-access">Configuring access to BatchUpdateFindings</a> in the <i>Security Hub User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchUpdateFindingsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FindingIdentifiers
              properties:
                FindingIdentifiers:
                  description: <p>The list of findings to update. <code>BatchUpdateFindings</code> can be used to update up to 100 findings at a time.</p> <p>For each finding, the list provides the finding identifier and the ARN of the finding provider.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/AwsSecurityFindingIdentifier"
                Note:
                  description: The updated note.
                  type: object
                  properties:
                    Text:
                      allOf:
                        - $ref: "#/components/schemas/NonEmptyString"
                        - description: The updated note text.
                    UpdatedBy:
                      allOf:
                        - $ref: "#/components/schemas/NonEmptyString"
                        - description: The principal that updated the note.
                Severity:
                  description: Updates to the severity information for a finding.
                  type: object
                  properties:
                    Normalized:
                      allOf:
                        - $ref: "#/components/schemas/RatioScale"
                        - description: <p>The normalized severity for the finding. This attribute is to be deprecated in favor of <code>Label</code>.</p> <p>If you provide <code>Normalized</code> and do not provide <code>Label</code>, <code>Label</code> is set automatically as follows.</p> <ul> <li> <p>0 - <code>INFORMATIONAL</code> </p> </li> <li> <p>1–39 - <code>LOW</code> </p> </li> <li> <p>40–69 - <code>MEDIUM</code> </p> </li> <li> <p>70–89 - <code>HIGH</code> </p> </li> <li> <p>90–100 - <code>CRITICAL</code> </p> </li> </ul>
                    Product:
                      allOf:
                        - $ref: "#/components/schemas/Double"
                        - description: The native severity as defined by the Amazon Web Services service or integrated partner product that generated the finding.
                    Label:
                      allOf:
                        - $ref: "#/components/schemas/SeverityLabel"
                        - description: <p>The severity value of the finding. The allowed values are the following.</p> <ul> <li> <p> <code>INFORMATIONAL</code> - No issue was found.</p> </li> <li> <p> <code>LOW</code> - The issue does not require action on its own.</p> </li> <li> <p> <code>MEDIUM</code> - The issue must be addressed but not urgently.</p> </li> <li> <p> <code>HIGH</code> - The issue must be addressed as a priority.</p> </li> <li> <p> <code>CRITICAL</code> - The issue must be remediated immediately to avoid it escalating.</p> </li> </ul>
                VerificationState:
                  description: <p>Indicates the veracity of a finding.</p> <p>The available values for <code>VerificationState</code> are as follows.</p> <ul> <li> <p> <code>UNKNOWN</code> – The default disposition of a security finding</p> </li> <li> <p> <code>TRUE_POSITIVE</code> – The security finding is confirmed</p> </li> <li> <p> <code>FALSE_POSITIVE</code> – The security finding was determined to be a false alarm</p> </li> <li> <p> <code>BENIGN_POSITIVE</code> – A special case of <code>TRUE_POSITIVE</code> where the finding doesn't pose any threat, is expected, or both</p> </li> </ul>
                  type: string
                  enum:
                    - UNKNOWN
                    - TRUE_POSITIVE
                    - FALSE_POSITIVE
                    - BENIGN_POSITIVE
                Confidence:
                  description: <p>The updated value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
                  type: integer
                  minimum: 0
                  maximum: 100
                Criticality:
                  description: <p>The updated value for the level of importance assigned to the resources associated with the findings.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. </p>
                  type: integer
                  minimum: 0
                  maximum: 100
                Types:
                  description: <p>One or more finding types in the format of namespace/category/classifier that classify a finding.</p> <p>Valid namespace values are as follows.</p> <ul> <li> <p>Software and Configuration Checks</p> </li> <li> <p>TTPs</p> </li> <li> <p>Effects</p> </li> <li> <p>Unusual Behaviors</p> </li> <li> <p>Sensitive Data Identifications </p> </li> </ul>
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
                UserDefinedFields:
                  description: A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/NonEmptyString"
                Workflow:
                  description: Used to update information about the investigation into the finding.
                  type: object
                  properties:
                    Status:
                      allOf:
                        - $ref: "#/components/schemas/WorkflowStatus"
                        - description: <p>The status of the investigation into the finding. The workflow status is specific to an individual finding. It does not affect the generation of new findings. For example, setting the workflow status to <code>SUPPRESSED</code> or <code>RESOLVED</code> does not prevent a new finding for the same issue.</p> <p>The allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> <p>Security Hub also resets <code>WorkFlowStatus</code> from <code>NOTIFIED</code> or <code>RESOLVED</code> to <code>NEW</code> in the following cases:</p> <ul> <li> <p>The record state changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p>The compliance status changes from <code>PASSED</code> to either <code>WARNING</code>, <code>FAILED</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>NOTIFIED</code> - Indicates that you notified the resource owner about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved.</p> </li> <li> <p> <code>SUPPRESSED</code> - Indicates that you reviewed the finding and do not believe that any action is needed. The finding is no longer updated.</p> </li> </ul>
                RelatedFindings:
                  description: A list of findings that are related to the updated findings.
                  type: array
                  items:
                    $ref: "#/components/schemas/RelatedFinding"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /associations:
    patch:
      operationId: BatchUpdateStandardsControlAssociations
      description: " For a batch of security controls and standards, this operation updates the enablement status of a control in a standard. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchUpdateStandardsControlAssociationsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StandardsControlAssociationUpdates
              properties:
                StandardsControlAssociationUpdates:
                  description: " Updates the enablement status of a security control in a specified standard. "
                  type: array
                  items:
                    $ref: "#/components/schemas/StandardsControlAssociationUpdate"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /actionTargets:
    post:
      operationId: CreateActionTarget
      description: <p>Creates a custom action target in Security Hub.</p> <p>You can use custom actions on findings and insights in Security Hub to trigger target actions in Amazon CloudWatch Events.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateActionTargetResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceConflictException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Description
                - Id
              properties:
                Name:
                  description: The name of the custom action target. Can contain up to 20 characters.
                  type: string
                  pattern: .*\S.*
                Description:
                  description: The description for the custom action target.
                  type: string
                  pattern: .*\S.*
                Id:
                  description: The ID for the custom action target. Can contain up to 20 alphanumeric characters.
                  type: string
                  pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /findingAggregator/create:
    post:
      operationId: CreateFindingAggregator
      description: <p>Used to enable finding aggregation. Must be called from the aggregation Region.</p> <p>For more details about cross-Region replication, see <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/finding-aggregation.html">Configuring finding aggregation</a> in the <i>Security Hub User Guide</i>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFindingAggregatorResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RegionLinkingMode
              properties:
                RegionLinkingMode:
                  description: <p>Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.</p> <p>The selected option also determines how to use the Regions provided in the Regions list.</p> <p>The options are as follows:</p> <ul> <li> <p> <code>ALL_REGIONS</code> - Indicates to aggregate findings from all of the Regions where Security Hub is enabled. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. </p> </li> <li> <p> <code>ALL_REGIONS_EXCEPT_SPECIFIED</code> - Indicates to aggregate findings from all of the Regions where Security Hub is enabled, except for the Regions listed in the <code>Regions</code> parameter. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. </p> </li> <li> <p> <code>SPECIFIED_REGIONS</code> - Indicates to aggregate findings only from the Regions listed in the <code>Regions</code> parameter. Security Hub does not automatically aggregate findings from new Regions. </p> </li> </ul>
                  type: string
                  pattern: .*\S.*
                Regions:
                  description: <p>If <code>RegionLinkingMode</code> is <code>ALL_REGIONS_EXCEPT_SPECIFIED</code>, then this is a space-separated list of Regions that do not aggregate findings to the aggregation Region.</p> <p>If <code>RegionLinkingMode</code> is <code>SPECIFIED_REGIONS</code>, then this is a space-separated list of Regions that do aggregate findings to the aggregation Region. </p>
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /insights:
    post:
      operationId: CreateInsight
      description: <p>Creates a custom insight in Security Hub. An insight is a consolidation of findings that relate to a security issue that requires attention or remediation.</p> <p>To group the related findings in the insight, use the <code>GroupByAttribute</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateInsightResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "484":
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceConflictException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - Filters
                - GroupByAttribute
              properties:
                Name:
                  description: The name of the custom insight to create.
                  type: string
                  pattern: .*\S.*
                Filters:
                  description: <p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>
                  type: object
                  properties:
                    ProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
                    AwsAccountId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Amazon Web Services account ID that a finding is generated in.
                    Id:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The security findings provider-specific identifier for a finding.
                    GeneratorId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc.
                    Region:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Region from which the finding was generated.
                    Type:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding type in the format of <code>namespace/category/classifier</code> that classifies a finding.
                    FirstObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    LastObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    CreatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    UpdatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. </p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    SeverityProduct:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - deprecated: true
                          description: The native severity as defined by the security-findings provider's solution that generated the finding.This filter is deprecated. Instead, use FindingProviderSeverityOriginal.
                    SeverityNormalized:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - deprecated: true
                          description: The normalized severity of a finding.This filter is deprecated. Instead, use SeverityLabel or FindingProviderFieldsSeverityLabel.
                    SeverityLabel:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The label of a finding's severity.
                    Confidence:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
                    Criticality:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>
                    Title:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding's title.
                    Description:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding's description.
                    RecommendationText:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The recommendation of what to do about the issue described in a finding.
                    SourceUrl:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A URL that links to a page about the current finding in the security-findings provider's solution.
                    ProductFields:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format.
                    ProductName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the solution (product) that generates findings.
                    CompanyName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the findings provider (company) that owns the solution (product) that generates findings.
                    UserDefinedFields:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
                    MalwareName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the malware that was observed.
                    MalwareType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The type of the malware that was observed.
                    MalwarePath:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The filesystem path of the malware that was observed.
                    MalwareState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The state of the malware that was observed.
                    NetworkDirection:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Indicates the direction of network traffic associated with a finding.
                    NetworkProtocol:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The protocol of network-related information about a finding.
                    NetworkSourceIpV4:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The source IPv4 address of network-related information about a finding.
                    NetworkSourceIpV6:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The source IPv6 address of network-related information about a finding.
                    NetworkSourcePort:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The source port of network-related information about a finding.
                    NetworkSourceDomain:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source domain of network-related information about a finding.
                    NetworkSourceMac:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source media access control (MAC) address of network-related information about a finding.
                    NetworkDestinationIpV4:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The destination IPv4 address of network-related information about a finding.
                    NetworkDestinationIpV6:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The destination IPv6 address of network-related information about a finding.
                    NetworkDestinationPort:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The destination port of network-related information about a finding.
                    NetworkDestinationDomain:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The destination domain of network-related information about a finding.
                    ProcessName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the process.
                    ProcessPath:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The path to the process executable.
                    ProcessPid:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The process ID.
                    ProcessParentPid:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The parent process ID. This field accepts positive integers between <code>O</code> and <code>2147483647</code>.
                    ProcessLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the process was launched.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ProcessTerminatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the process was terminated.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ThreatIntelIndicatorType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The type of a threat intelligence indicator.
                    ThreatIntelIndicatorValue:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The value of a threat intelligence indicator.
                    ThreatIntelIndicatorCategory:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The category of a threat intelligence indicator.
                    ThreatIntelIndicatorLastObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: A timestamp that identifies the last observation of a threat intelligence indicator.
                    ThreatIntelIndicatorSource:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source of the threat intelligence.
                    ThreatIntelIndicatorSourceUrl:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The URL for more details from the source of the threat intelligence.
                    ResourceType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Specifies the type of the resource that details are provided for.
                    ResourceId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical identifier for the given resource type.
                    ResourcePartition:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical Amazon Web Services partition name that the Region is assigned to.
                    ResourceRegion:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical Amazon Web Services external Region name where this resource is located.
                    ResourceTags:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: A list of Amazon Web Services tags associated with a resource at the time the finding was processed.
                    ResourceAwsEc2InstanceType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The instance type of the instance.
                    ResourceAwsEc2InstanceImageId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Amazon Machine Image (AMI) ID of the instance.
                    ResourceAwsEc2InstanceIpV4Addresses:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The IPv4 addresses associated with the instance.
                    ResourceAwsEc2InstanceIpV6Addresses:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The IPv6 addresses associated with the instance.
                    ResourceAwsEc2InstanceKeyName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The key name associated with the instance.
                    ResourceAwsEc2InstanceIamInstanceProfileArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The IAM profile ARN of the instance.
                    ResourceAwsEc2InstanceVpcId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the VPC that the instance was launched in.
                    ResourceAwsEc2InstanceSubnetId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the subnet that the instance was launched in.
                    ResourceAwsEc2InstanceLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The date and time the instance was launched.
                    ResourceAwsS3BucketOwnerId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical user ID of the owner of the S3 bucket.
                    ResourceAwsS3BucketOwnerName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The display name of the owner of the S3 bucket.
                    ResourceAwsIamAccessKeyUserName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - deprecated: true
                          description: The user associated with the IAM access key related to a finding.This filter is deprecated. Instead, use ResourceAwsIamAccessKeyPrincipalName.
                    ResourceAwsIamAccessKeyPrincipalName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the principal that is associated with an IAM access key.
                    ResourceAwsIamAccessKeyStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The status of the IAM access key related to a finding.
                    ResourceAwsIamAccessKeyCreatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The creation date/time of the IAM access key related to a finding.
                    ResourceAwsIamUserUserName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of an IAM user.
                    ResourceContainerName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the container related to a finding.
                    ResourceContainerImageId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the image related to a finding.
                    ResourceContainerImageName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the image related to a finding.
                    ResourceContainerLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the container was started.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ResourceDetailsOther:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: The details of a resource that doesn't have a specific subfield for the resource type defined.
                    ComplianceStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS Amazon Web Services Foundations. Contains security standard-related finding details.
                    VerificationState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The veracity of a finding.
                    WorkflowState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: <p>The workflow state of a finding.</p> <p>Note that this field is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>
                    WorkflowStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: <p>The status of the investigation into a finding. Allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> <p>Security Hub also resets the workflow status from <code>NOTIFIED</code> or <code>RESOLVED</code> to <code>NEW</code> in the following cases:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to either <code>WARNING</code>, <code>FAILED</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>NOTIFIED</code> - Indicates that the resource owner has been notified about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> <p>If one of the following occurs, the workflow status is changed automatically from <code>NOTIFIED</code> to <code>NEW</code>:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>SUPPRESSED</code> - Indicates that you reviewed the finding and do not believe that any action is needed.</p> <p>The workflow status of a <code>SUPPRESSED</code> finding does not change if <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> <p>The finding remains <code>RESOLVED</code> unless one of the following occurs:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> <p>In those cases, the workflow status is automatically reset to <code>NEW</code>.</p> <p>For findings from controls, if <code>Compliance.Status</code> is <code>PASSED</code>, then Security Hub automatically sets the workflow status to <code>RESOLVED</code>.</p> </li> </ul>
                    RecordState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The updated record state for the finding.
                    RelatedFindingsProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN of the solution that generated a related finding.
                    RelatedFindingsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The solution-generated identifier for a related finding.
                    NoteText:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The text of a note.
                    NoteUpdatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The timestamp of when the note was updated.
                    NoteUpdatedBy:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The principal that created a note.
                    Keyword:
                      allOf:
                        - $ref: "#/components/schemas/KeywordFilterList"
                        - deprecated: true
                          description: A keyword for a finding.The Keyword property is deprecated.
                    FindingProviderFieldsConfidence:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
                    FindingProviderFieldsCriticality:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The finding provider value for the level of importance assigned to the resources associated with the findings.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. </p>
                    FindingProviderFieldsRelatedFindingsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding identifier of a related finding that is identified by the finding provider.
                    FindingProviderFieldsRelatedFindingsProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN of the solution that generated a related finding that is identified by the finding provider.
                    FindingProviderFieldsSeverityLabel:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding provider value for the severity label.
                    FindingProviderFieldsSeverityOriginal:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding provider's original value for the severity.
                    FindingProviderFieldsTypes:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: "<p>One or more finding types that the finding provider assigned to the finding. Uses the format of <code>namespace/category/classifier</code> that classify a finding.</p> <p>Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications</p>"
                    Sample:
                      allOf:
                        - $ref: "#/components/schemas/BooleanFilterList"
                        - description: Indicates whether or not sample findings are included in the filter results.
                    ComplianceSecurityControlId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: " The unique identifier of a control across standards. Values for this field typically consist of an Amazon Web Service and a number, such as APIGateway.5. "
                    ComplianceAssociatedStandardsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: ' The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html">DescribeStandards</a> API response. '
                GroupByAttribute:
                  description: The attribute used to group the findings for the insight. The grouping attribute identifies the type of item that the insight applies to. For example, if an insight is grouped by resource identifier, then the insight produces a list of resource identifiers.
                  type: string
                  pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /members:
    post:
      operationId: CreateMembers
      description: <p>Creates a member association in Security Hub between the specified accounts and the account used to make the request, which is the administrator account. If you are integrated with Organizations, then the administrator account is designated by the organization management account.</p> <p> <code>CreateMembers</code> is always used to add accounts that are not organization members.</p> <p>For accounts that are managed using Organizations, <code>CreateMembers</code> is only used in the following cases:</p> <ul> <li> <p>Security Hub is not configured to automatically add new organization accounts.</p> </li> <li> <p>The account was disassociated or deleted in Security Hub.</p> </li> </ul> <p>This action can only be used by an account that has Security Hub enabled. To enable Security Hub, you can use the <code>EnableSecurityHub</code> operation.</p> <p>For accounts that are not organization members, you create the account association and then send an invitation to the member account. To send the invitation, you use the <code>InviteMembers</code> operation. If the account owner accepts the invitation, the account becomes a member account in Security Hub.</p> <p>Accounts that are managed using Organizations do not receive an invitation. They automatically become a member account in Security Hub.</p> <ul> <li> <p>If the organization account does not have Security Hub enabled, then Security Hub and the default standards are automatically enabled. Note that Security Hub cannot be enabled automatically for the organization management account. The organization management account must enable Security Hub before the administrator account enables it as a member account.</p> </li> <li> <p>For organization accounts that already have Security Hub enabled, Security Hub does not make any other changes to those accounts. It does not change their enabled standards or controls.</p> </li> </ul> <p>A permissions policy is added that permits the administrator account to view the findings generated in the member account.</p> <p>To remove the association between the administrator and member accounts, use the <code>DisassociateFromMasterAccount</code> or <code>DisassociateMembers</code> operation.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMembersResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "484":
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceConflictException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountDetails
              properties:
                AccountDetails:
                  description: The list of accounts to associate with the Security Hub administrator account. For each account, the list includes the account ID and optionally the email address.
                  type: array
                  items:
                    $ref: "#/components/schemas/AccountDetails"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListMembers
      description: <p>Lists details about all member accounts for the current Security Hub administrator account.</p> <p>The results include both member accounts that belong to an organization and member accounts that were invited manually.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMembersResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: OnlyAssociated
          in: query
          required: false
          description: <p>Specifies which member accounts to include in the response based on their relationship status with the administrator account. The default value is <code>TRUE</code>.</p> <p>If <code>OnlyAssociated</code> is set to <code>TRUE</code>, the response includes member accounts whose relationship status with the administrator account is set to <code>ENABLED</code>.</p> <p>If <code>OnlyAssociated</code> is set to <code>FALSE</code>, the response includes all existing member accounts. </p>
          schema:
            type: boolean
        - name: MaxResults
          in: query
          required: false
          description: "The maximum number of items to return in the response. "
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: NextToken
          in: query
          required: false
          description: <p>The token that is required for pagination. On your first call to the <code>ListMembers</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
          schema:
            type: string
  /invitations/decline:
    post:
      operationId: DeclineInvitations
      description: <p>Declines invitations to become a member account.</p> <p>A prospective member account uses this operation to decline an invitation to become a member.</p> <p>This operation is only called by member accounts that aren't part of an organization. Organization accounts don't receive invitations.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeclineInvitationsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountIds
              properties:
                AccountIds:
                  description: The list of prospective member account IDs for which to decline an invitation.
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/actionTargets/{ActionTargetArn}":
    delete:
      operationId: DeleteActionTarget
      description: <p>Deletes a custom action target from Security Hub.</p> <p>Deleting a custom action target does not affect any findings or insights that were already sent to Amazon CloudWatch Events using the custom action.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteActionTargetResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: ActionTargetArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the custom action target to delete.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateActionTarget
      description: Updates the name and description of a custom action target in Security Hub.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateActionTargetResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: ActionTargetArn
          in: path
          required: true
          description: The ARN of the custom action target to update.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The updated name of the custom action target.
                  type: string
                  pattern: .*\S.*
                Description:
                  description: The updated description for the custom action target.
                  type: string
                  pattern: .*\S.*
  "/findingAggregator/delete/{FindingAggregatorArn}":
    delete:
      operationId: DeleteFindingAggregator
      description: <p>Deletes a finding aggregator. When you delete the finding aggregator, you stop finding aggregation.</p> <p>When you stop finding aggregation, findings that were already aggregated to the aggregation Region are still visible from the aggregation Region. New findings and finding updates are not aggregated. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteFindingAggregatorResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: FindingAggregatorArn
          in: path
          required: true
          description: The ARN of the finding aggregator to delete. To obtain the ARN, use <code>ListFindingAggregators</code>.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/insights/{InsightArn}":
    delete:
      operationId: DeleteInsight
      description: Deletes the insight specified by the <code>InsightArn</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteInsightResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: InsightArn
          in: path
          required: true
          description: The ARN of the insight to delete.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateInsight
      description: Updates the Security Hub insight identified by the specified insight ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateInsightResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: InsightArn
          in: path
          required: true
          description: The ARN of the insight that you want to update.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The updated name for the insight.
                  type: string
                  pattern: .*\S.*
                Filters:
                  description: <p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>
                  type: object
                  properties:
                    ProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
                    AwsAccountId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Amazon Web Services account ID that a finding is generated in.
                    Id:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The security findings provider-specific identifier for a finding.
                    GeneratorId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc.
                    Region:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Region from which the finding was generated.
                    Type:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding type in the format of <code>namespace/category/classifier</code> that classifies a finding.
                    FirstObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    LastObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    CreatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    UpdatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. </p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    SeverityProduct:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - deprecated: true
                          description: The native severity as defined by the security-findings provider's solution that generated the finding.This filter is deprecated. Instead, use FindingProviderSeverityOriginal.
                    SeverityNormalized:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - deprecated: true
                          description: The normalized severity of a finding.This filter is deprecated. Instead, use SeverityLabel or FindingProviderFieldsSeverityLabel.
                    SeverityLabel:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The label of a finding's severity.
                    Confidence:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
                    Criticality:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>
                    Title:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding's title.
                    Description:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding's description.
                    RecommendationText:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The recommendation of what to do about the issue described in a finding.
                    SourceUrl:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A URL that links to a page about the current finding in the security-findings provider's solution.
                    ProductFields:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format.
                    ProductName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the solution (product) that generates findings.
                    CompanyName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the findings provider (company) that owns the solution (product) that generates findings.
                    UserDefinedFields:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
                    MalwareName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the malware that was observed.
                    MalwareType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The type of the malware that was observed.
                    MalwarePath:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The filesystem path of the malware that was observed.
                    MalwareState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The state of the malware that was observed.
                    NetworkDirection:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Indicates the direction of network traffic associated with a finding.
                    NetworkProtocol:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The protocol of network-related information about a finding.
                    NetworkSourceIpV4:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The source IPv4 address of network-related information about a finding.
                    NetworkSourceIpV6:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The source IPv6 address of network-related information about a finding.
                    NetworkSourcePort:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The source port of network-related information about a finding.
                    NetworkSourceDomain:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source domain of network-related information about a finding.
                    NetworkSourceMac:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source media access control (MAC) address of network-related information about a finding.
                    NetworkDestinationIpV4:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The destination IPv4 address of network-related information about a finding.
                    NetworkDestinationIpV6:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The destination IPv6 address of network-related information about a finding.
                    NetworkDestinationPort:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The destination port of network-related information about a finding.
                    NetworkDestinationDomain:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The destination domain of network-related information about a finding.
                    ProcessName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the process.
                    ProcessPath:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The path to the process executable.
                    ProcessPid:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The process ID.
                    ProcessParentPid:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The parent process ID. This field accepts positive integers between <code>O</code> and <code>2147483647</code>.
                    ProcessLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the process was launched.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ProcessTerminatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the process was terminated.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ThreatIntelIndicatorType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The type of a threat intelligence indicator.
                    ThreatIntelIndicatorValue:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The value of a threat intelligence indicator.
                    ThreatIntelIndicatorCategory:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The category of a threat intelligence indicator.
                    ThreatIntelIndicatorLastObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: A timestamp that identifies the last observation of a threat intelligence indicator.
                    ThreatIntelIndicatorSource:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source of the threat intelligence.
                    ThreatIntelIndicatorSourceUrl:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The URL for more details from the source of the threat intelligence.
                    ResourceType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Specifies the type of the resource that details are provided for.
                    ResourceId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical identifier for the given resource type.
                    ResourcePartition:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical Amazon Web Services partition name that the Region is assigned to.
                    ResourceRegion:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical Amazon Web Services external Region name where this resource is located.
                    ResourceTags:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: A list of Amazon Web Services tags associated with a resource at the time the finding was processed.
                    ResourceAwsEc2InstanceType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The instance type of the instance.
                    ResourceAwsEc2InstanceImageId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Amazon Machine Image (AMI) ID of the instance.
                    ResourceAwsEc2InstanceIpV4Addresses:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The IPv4 addresses associated with the instance.
                    ResourceAwsEc2InstanceIpV6Addresses:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The IPv6 addresses associated with the instance.
                    ResourceAwsEc2InstanceKeyName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The key name associated with the instance.
                    ResourceAwsEc2InstanceIamInstanceProfileArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The IAM profile ARN of the instance.
                    ResourceAwsEc2InstanceVpcId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the VPC that the instance was launched in.
                    ResourceAwsEc2InstanceSubnetId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the subnet that the instance was launched in.
                    ResourceAwsEc2InstanceLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The date and time the instance was launched.
                    ResourceAwsS3BucketOwnerId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical user ID of the owner of the S3 bucket.
                    ResourceAwsS3BucketOwnerName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The display name of the owner of the S3 bucket.
                    ResourceAwsIamAccessKeyUserName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - deprecated: true
                          description: The user associated with the IAM access key related to a finding.This filter is deprecated. Instead, use ResourceAwsIamAccessKeyPrincipalName.
                    ResourceAwsIamAccessKeyPrincipalName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the principal that is associated with an IAM access key.
                    ResourceAwsIamAccessKeyStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The status of the IAM access key related to a finding.
                    ResourceAwsIamAccessKeyCreatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The creation date/time of the IAM access key related to a finding.
                    ResourceAwsIamUserUserName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of an IAM user.
                    ResourceContainerName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the container related to a finding.
                    ResourceContainerImageId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the image related to a finding.
                    ResourceContainerImageName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the image related to a finding.
                    ResourceContainerLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the container was started.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ResourceDetailsOther:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: The details of a resource that doesn't have a specific subfield for the resource type defined.
                    ComplianceStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS Amazon Web Services Foundations. Contains security standard-related finding details.
                    VerificationState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The veracity of a finding.
                    WorkflowState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: <p>The workflow state of a finding.</p> <p>Note that this field is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>
                    WorkflowStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: <p>The status of the investigation into a finding. Allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> <p>Security Hub also resets the workflow status from <code>NOTIFIED</code> or <code>RESOLVED</code> to <code>NEW</code> in the following cases:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to either <code>WARNING</code>, <code>FAILED</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>NOTIFIED</code> - Indicates that the resource owner has been notified about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> <p>If one of the following occurs, the workflow status is changed automatically from <code>NOTIFIED</code> to <code>NEW</code>:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>SUPPRESSED</code> - Indicates that you reviewed the finding and do not believe that any action is needed.</p> <p>The workflow status of a <code>SUPPRESSED</code> finding does not change if <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> <p>The finding remains <code>RESOLVED</code> unless one of the following occurs:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> <p>In those cases, the workflow status is automatically reset to <code>NEW</code>.</p> <p>For findings from controls, if <code>Compliance.Status</code> is <code>PASSED</code>, then Security Hub automatically sets the workflow status to <code>RESOLVED</code>.</p> </li> </ul>
                    RecordState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The updated record state for the finding.
                    RelatedFindingsProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN of the solution that generated a related finding.
                    RelatedFindingsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The solution-generated identifier for a related finding.
                    NoteText:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The text of a note.
                    NoteUpdatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The timestamp of when the note was updated.
                    NoteUpdatedBy:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The principal that created a note.
                    Keyword:
                      allOf:
                        - $ref: "#/components/schemas/KeywordFilterList"
                        - deprecated: true
                          description: A keyword for a finding.The Keyword property is deprecated.
                    FindingProviderFieldsConfidence:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
                    FindingProviderFieldsCriticality:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The finding provider value for the level of importance assigned to the resources associated with the findings.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. </p>
                    FindingProviderFieldsRelatedFindingsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding identifier of a related finding that is identified by the finding provider.
                    FindingProviderFieldsRelatedFindingsProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN of the solution that generated a related finding that is identified by the finding provider.
                    FindingProviderFieldsSeverityLabel:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding provider value for the severity label.
                    FindingProviderFieldsSeverityOriginal:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding provider's original value for the severity.
                    FindingProviderFieldsTypes:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: "<p>One or more finding types that the finding provider assigned to the finding. Uses the format of <code>namespace/category/classifier</code> that classify a finding.</p> <p>Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications</p>"
                    Sample:
                      allOf:
                        - $ref: "#/components/schemas/BooleanFilterList"
                        - description: Indicates whether or not sample findings are included in the filter results.
                    ComplianceSecurityControlId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: " The unique identifier of a control across standards. Values for this field typically consist of an Amazon Web Service and a number, such as APIGateway.5. "
                    ComplianceAssociatedStandardsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: ' The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html">DescribeStandards</a> API response. '
                GroupByAttribute:
                  description: The updated <code>GroupBy</code> attribute that defines this insight.
                  type: string
                  pattern: .*\S.*
  /invitations/delete:
    post:
      operationId: DeleteInvitations
      description: <p>Deletes invitations received by the Amazon Web Services account to become a member account.</p> <p>A Security Hub administrator account can use this operation to delete invitations sent to one or more member accounts.</p> <p>This operation is only used to delete invitations that are sent to member accounts that aren't part of an organization. Organization accounts don't receive invitations.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteInvitationsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountIds
              properties:
                AccountIds:
                  description: The list of member account IDs that received the invitations you want to delete.
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /members/delete:
    post:
      operationId: DeleteMembers
      description: <p>Deletes the specified member accounts from Security Hub.</p> <p>Can be used to delete member accounts that belong to an organization as well as member accounts that were invited manually.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteMembersResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountIds
              properties:
                AccountIds:
                  description: The list of account IDs for the member accounts to delete.
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /actionTargets/get:
    post:
      operationId: DescribeActionTargets
      description: Returns a list of the custom action targets in Security Hub in your account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeActionTargetsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ActionTargetArns:
                  description: A list of custom action target ARNs for the custom action targets to retrieve.
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
                NextToken:
                  description: <p>The token that is required for pagination. On your first call to the <code>DescribeActionTargets</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
                  type: string
                MaxResults:
                  description: The maximum number of results to return.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /accounts:
    get:
      operationId: DescribeHub
      description: Returns details about the Hub resource in your account, including the <code>HubArn</code> and the time when you enabled Security Hub.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeHubResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: HubArn
          in: query
          required: false
          description: The ARN of the Hub resource to retrieve.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DisableSecurityHub
      description: <p>Disables Security Hub in your account only in the current Region. To disable Security Hub in all Regions, you must submit one request per Region where you have enabled Security Hub.</p> <p>When you disable Security Hub for an administrator account, it doesn't disable Security Hub for any associated member accounts.</p> <p>When you disable Security Hub, your existing findings and insights and any Security Hub configuration settings are deleted after 90 days and cannot be recovered. Any standards that were enabled are disabled, and your administrator and member account associations are removed.</p> <p>If you want to save your existing findings, you must export them before you disable Security Hub.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableSecurityHubResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
    post:
      operationId: EnableSecurityHub
      description: <p>Enables Security Hub for your account in the current Region or the Region you specify in the request.</p> <p>When you enable Security Hub, you grant to Security Hub the permissions necessary to gather findings from other services that are integrated with Security Hub.</p> <p>When you use the <code>EnableSecurityHub</code> operation to enable Security Hub, you also automatically enable the following standards:</p> <ul> <li> <p>Center for Internet Security (CIS) Amazon Web Services Foundations Benchmark v1.2.0</p> </li> <li> <p>Amazon Web Services Foundational Security Best Practices</p> </li> </ul> <p>Other standards are not automatically enabled. </p> <p>To opt out of automatically enabled standards, set <code>EnableDefaultStandards</code> to <code>false</code>.</p> <p>After you enable Security Hub, to enable a standard, use the <code>BatchEnableStandards</code> operation. To disable a standard, use the <code>BatchDisableStandards</code> operation.</p> <p>To learn more, see the <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-settingup.html">setup information</a> in the <i>Security Hub User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableSecurityHubResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceConflictException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  description: The tags to add to the hub resource when you enable Security Hub.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
                EnableDefaultStandards:
                  description: Whether to enable the security standards that Security Hub has designated as automatically enabled. If you do not provide a value for <code>EnableDefaultStandards</code>, it is set to <code>true</code>. To not enable the automatically enabled standards, set <code>EnableDefaultStandards</code> to <code>false</code>.
                  type: boolean
                ControlFindingGenerator:
                  description: <p>This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to <code>SECURITY_CONTROL</code>, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.</p> <p>If the value for this field is set to <code>STANDARD_CONTROL</code>, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.</p> <p>The value for this field in a member account matches the value in the administrator account. For accounts that aren't part of an organization, the default value of this field is <code>SECURITY_CONTROL</code> if you enabled Security Hub on or after February 23, 2023.</p>
                  type: string
                  enum:
                    - STANDARD_CONTROL
                    - SECURITY_CONTROL
    patch:
      operationId: UpdateSecurityHubConfiguration
      description: Updates configuration options for Security Hub.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSecurityHubConfigurationResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AutoEnableControls:
                  description: <p>Whether to automatically enable new controls when they are added to standards that are enabled.</p> <p>By default, this is set to <code>true</code>, and new controls are enabled automatically. To not automatically enable new controls, set this to <code>false</code>. </p>
                  type: boolean
                ControlFindingGenerator:
                  description: <p>Updates whether the calling account has consolidated control findings turned on. If the value for this field is set to <code>SECURITY_CONTROL</code>, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.</p> <p>If the value for this field is set to <code>STANDARD_CONTROL</code>, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.</p> <p>For accounts that are part of an organization, this value can only be updated in the administrator account.</p>
                  type: string
                  enum:
                    - STANDARD_CONTROL
                    - SECURITY_CONTROL
  /organization/configuration:
    get:
      operationId: DescribeOrganizationConfiguration
      description: Returns information about the Organizations configuration for Security Hub. Can only be called from a Security Hub administrator account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeOrganizationConfigurationResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters: []
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: UpdateOrganizationConfiguration
      description: Used to update the configuration related to Organizations. Can only be called from a Security Hub administrator account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateOrganizationConfigurationResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AutoEnable
              properties:
                AutoEnable:
                  description: <p>Whether to automatically enable Security Hub for new accounts in the organization.</p> <p>By default, this is <code>false</code>, and new accounts are not added automatically.</p> <p>To automatically enable Security Hub for new accounts, set this to <code>true</code>.</p>
                  type: boolean
                AutoEnableStandards:
                  description: <p>Whether to automatically enable Security Hub <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-enable-disable.html">default standards</a> for new member accounts in the organization.</p> <p>By default, this parameter is equal to <code>DEFAULT</code>, and new member accounts are automatically enabled with default Security Hub standards.</p> <p>To opt out of enabling default standards for new member accounts, set this parameter equal to <code>NONE</code>.</p>
                  type: string
                  enum:
                    - NONE
                    - DEFAULT
  /products:
    get:
      operationId: DescribeProducts
      description: <p>Returns information about product integrations in Security Hub.</p> <p>You can optionally provide an integration ARN. If you provide an integration ARN, then the results only include that integration.</p> <p>If you do not provide an integration ARN, then the results include all of the available product integrations. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeProductsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: <p>The token that is required for pagination. On your first call to the <code>DescribeProducts</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: ProductArn
          in: query
          required: false
          description: The ARN of the integration to return.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /standards:
    get:
      operationId: DescribeStandards
      description: <p>Returns a list of the available standards in Security Hub.</p> <p>For each standard, the results include the standard ARN, the name, and a description. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeStandardsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: <p>The token that is required for pagination. On your first call to the <code>DescribeStandards</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of standards to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/standards/controls/{StandardsSubscriptionArn}":
    get:
      operationId: DescribeStandardsControls
      description: <p>Returns a list of security standards controls.</p> <p>For each control, the results include information about whether it is currently enabled, the severity, and a link to remediation information.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeStandardsControlsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: StandardsSubscriptionArn
          in: path
          required: true
          description: The ARN of a resource that represents your subscription to a supported standard. To get the subscription ARNs of the standards you have enabled, use the <code>GetEnabledStandards</code> operation.
          schema:
            type: string
            pattern: .*\S.*
        - name: NextToken
          in: query
          required: false
          description: <p>The token that is required for pagination. On your first call to the <code>DescribeStandardsControls</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of security standard controls to return.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/productSubscriptions/{ProductSubscriptionArn}":
    delete:
      operationId: DisableImportFindingsForProduct
      description: Disables the integration of the specified product with Security Hub. After the integration is disabled, findings from that product are no longer sent to Security Hub.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableImportFindingsForProductResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: ProductSubscriptionArn
          in: path
          required: true
          description: The ARN of the integrated product to disable the integration for.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /organization/admin/disable:
    post:
      operationId: DisableOrganizationAdminAccount
      description: Disables a Security Hub administrator account. Can only be called by the organization management account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisableOrganizationAdminAccountResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AdminAccountId
              properties:
                AdminAccountId:
                  description: The Amazon Web Services account identifier of the Security Hub administrator account.
                  type: string
                  pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /administrator/disassociate:
    post:
      operationId: DisassociateFromAdministratorAccount
      description: <p>Disassociates the current Security Hub member account from the associated administrator account.</p> <p>This operation is only used by accounts that are not part of an organization. For organization accounts, only the administrator account can disassociate a member account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateFromAdministratorAccountResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /master/disassociate:
    post:
      deprecated: true
      operationId: DisassociateFromMasterAccount
      description: <p>This method is deprecated. Instead, use <code>DisassociateFromAdministratorAccount</code>.</p> <p>The Security Hub console continues to use <code>DisassociateFromMasterAccount</code>. It will eventually change to use <code>DisassociateFromAdministratorAccount</code>. Any IAM policies that specifically control access to this function must continue to use <code>DisassociateFromMasterAccount</code>. You should also add <code>DisassociateFromAdministratorAccount</code> to your policies to ensure that the correct permissions are in place after the console begins to use <code>DisassociateFromAdministratorAccount</code>.</p> <p>Disassociates the current Security Hub member account from the associated administrator account.</p> <p>This operation is only used by accounts that are not part of an organization. For organization accounts, only the administrator account can disassociate a member account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateFromMasterAccountResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /members/disassociate:
    post:
      operationId: DisassociateMembers
      description: <p>Disassociates the specified member accounts from the associated administrator account.</p> <p>Can be used to disassociate both accounts that are managed using Organizations and accounts that were invited manually.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateMembersResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountIds
              properties:
                AccountIds:
                  description: The account IDs of the member accounts to disassociate from the administrator account.
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /productSubscriptions:
    post:
      operationId: EnableImportFindingsForProduct
      description: <p>Enables the integration of a partner product with Security Hub. Integrated products send findings to Security Hub.</p> <p>When you enable a product integration, a permissions policy that grants permission for the product to send findings to Security Hub is applied.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableImportFindingsForProductResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: ResourceConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceConflictException"
        "484":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ProductArn
              properties:
                ProductArn:
                  description: The ARN of the product to enable the integration for.
                  type: string
                  pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListEnabledProductsForImport
      description: Lists all findings-generating solutions (products) that you are subscribed to receive findings from in Security Hub.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEnabledProductsForImportResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: <p>The token that is required for pagination. On your first call to the <code>ListEnabledProductsForImport</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of items to return in the response.
          schema:
            type: integer
            minimum: 1
            maximum: 100
  /organization/admin/enable:
    post:
      operationId: EnableOrganizationAdminAccount
      description: Designates the Security Hub administrator account for an organization. Can only be called by the organization management account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EnableOrganizationAdminAccountResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AdminAccountId
              properties:
                AdminAccountId:
                  description: The Amazon Web Services account identifier of the account to designate as the Security Hub administrator account.
                  type: string
                  pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /standards/get:
    post:
      operationId: GetEnabledStandards
      description: Returns a list of the standards that are currently enabled.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEnabledStandardsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StandardsSubscriptionArns:
                  description: The list of the standards subscription ARNs for the standards to retrieve.
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
                  minItems: 1
                  maxItems: 25
                NextToken:
                  description: <p>The token that is required for pagination. On your first call to the <code>GetEnabledStandards</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
                  type: string
                MaxResults:
                  description: The maximum number of results to return in the response.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/findingAggregator/get/{FindingAggregatorArn}":
    get:
      operationId: GetFindingAggregator
      description: Returns the current finding aggregation configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFindingAggregatorResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: FindingAggregatorArn
          in: path
          required: true
          description: The ARN of the finding aggregator to return details for. To obtain the ARN, use <code>ListFindingAggregators</code>.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /findings:
    post:
      operationId: GetFindings
      description: <p>Returns a list of findings that match the specified criteria.</p> <p>If finding aggregation is enabled, then when you call <code>GetFindings</code> from the aggregation Region, the results include all of the matching findings from both the aggregation Region and the linked Regions.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFindingsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Filters:
                  description: <p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>
                  type: object
                  properties:
                    ProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
                    AwsAccountId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Amazon Web Services account ID that a finding is generated in.
                    Id:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The security findings provider-specific identifier for a finding.
                    GeneratorId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc.
                    Region:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Region from which the finding was generated.
                    Type:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding type in the format of <code>namespace/category/classifier</code> that classifies a finding.
                    FirstObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    LastObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    CreatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    UpdatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. </p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    SeverityProduct:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - deprecated: true
                          description: The native severity as defined by the security-findings provider's solution that generated the finding.This filter is deprecated. Instead, use FindingProviderSeverityOriginal.
                    SeverityNormalized:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - deprecated: true
                          description: The normalized severity of a finding.This filter is deprecated. Instead, use SeverityLabel or FindingProviderFieldsSeverityLabel.
                    SeverityLabel:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The label of a finding's severity.
                    Confidence:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
                    Criticality:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>
                    Title:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding's title.
                    Description:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding's description.
                    RecommendationText:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The recommendation of what to do about the issue described in a finding.
                    SourceUrl:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A URL that links to a page about the current finding in the security-findings provider's solution.
                    ProductFields:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format.
                    ProductName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the solution (product) that generates findings.
                    CompanyName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the findings provider (company) that owns the solution (product) that generates findings.
                    UserDefinedFields:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
                    MalwareName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the malware that was observed.
                    MalwareType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The type of the malware that was observed.
                    MalwarePath:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The filesystem path of the malware that was observed.
                    MalwareState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The state of the malware that was observed.
                    NetworkDirection:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Indicates the direction of network traffic associated with a finding.
                    NetworkProtocol:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The protocol of network-related information about a finding.
                    NetworkSourceIpV4:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The source IPv4 address of network-related information about a finding.
                    NetworkSourceIpV6:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The source IPv6 address of network-related information about a finding.
                    NetworkSourcePort:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The source port of network-related information about a finding.
                    NetworkSourceDomain:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source domain of network-related information about a finding.
                    NetworkSourceMac:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source media access control (MAC) address of network-related information about a finding.
                    NetworkDestinationIpV4:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The destination IPv4 address of network-related information about a finding.
                    NetworkDestinationIpV6:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The destination IPv6 address of network-related information about a finding.
                    NetworkDestinationPort:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The destination port of network-related information about a finding.
                    NetworkDestinationDomain:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The destination domain of network-related information about a finding.
                    ProcessName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the process.
                    ProcessPath:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The path to the process executable.
                    ProcessPid:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The process ID.
                    ProcessParentPid:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The parent process ID. This field accepts positive integers between <code>O</code> and <code>2147483647</code>.
                    ProcessLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the process was launched.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ProcessTerminatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the process was terminated.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ThreatIntelIndicatorType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The type of a threat intelligence indicator.
                    ThreatIntelIndicatorValue:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The value of a threat intelligence indicator.
                    ThreatIntelIndicatorCategory:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The category of a threat intelligence indicator.
                    ThreatIntelIndicatorLastObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: A timestamp that identifies the last observation of a threat intelligence indicator.
                    ThreatIntelIndicatorSource:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source of the threat intelligence.
                    ThreatIntelIndicatorSourceUrl:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The URL for more details from the source of the threat intelligence.
                    ResourceType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Specifies the type of the resource that details are provided for.
                    ResourceId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical identifier for the given resource type.
                    ResourcePartition:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical Amazon Web Services partition name that the Region is assigned to.
                    ResourceRegion:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical Amazon Web Services external Region name where this resource is located.
                    ResourceTags:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: A list of Amazon Web Services tags associated with a resource at the time the finding was processed.
                    ResourceAwsEc2InstanceType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The instance type of the instance.
                    ResourceAwsEc2InstanceImageId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Amazon Machine Image (AMI) ID of the instance.
                    ResourceAwsEc2InstanceIpV4Addresses:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The IPv4 addresses associated with the instance.
                    ResourceAwsEc2InstanceIpV6Addresses:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The IPv6 addresses associated with the instance.
                    ResourceAwsEc2InstanceKeyName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The key name associated with the instance.
                    ResourceAwsEc2InstanceIamInstanceProfileArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The IAM profile ARN of the instance.
                    ResourceAwsEc2InstanceVpcId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the VPC that the instance was launched in.
                    ResourceAwsEc2InstanceSubnetId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the subnet that the instance was launched in.
                    ResourceAwsEc2InstanceLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The date and time the instance was launched.
                    ResourceAwsS3BucketOwnerId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical user ID of the owner of the S3 bucket.
                    ResourceAwsS3BucketOwnerName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The display name of the owner of the S3 bucket.
                    ResourceAwsIamAccessKeyUserName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - deprecated: true
                          description: The user associated with the IAM access key related to a finding.This filter is deprecated. Instead, use ResourceAwsIamAccessKeyPrincipalName.
                    ResourceAwsIamAccessKeyPrincipalName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the principal that is associated with an IAM access key.
                    ResourceAwsIamAccessKeyStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The status of the IAM access key related to a finding.
                    ResourceAwsIamAccessKeyCreatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The creation date/time of the IAM access key related to a finding.
                    ResourceAwsIamUserUserName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of an IAM user.
                    ResourceContainerName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the container related to a finding.
                    ResourceContainerImageId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the image related to a finding.
                    ResourceContainerImageName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the image related to a finding.
                    ResourceContainerLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the container was started.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ResourceDetailsOther:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: The details of a resource that doesn't have a specific subfield for the resource type defined.
                    ComplianceStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS Amazon Web Services Foundations. Contains security standard-related finding details.
                    VerificationState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The veracity of a finding.
                    WorkflowState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: <p>The workflow state of a finding.</p> <p>Note that this field is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>
                    WorkflowStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: <p>The status of the investigation into a finding. Allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> <p>Security Hub also resets the workflow status from <code>NOTIFIED</code> or <code>RESOLVED</code> to <code>NEW</code> in the following cases:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to either <code>WARNING</code>, <code>FAILED</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>NOTIFIED</code> - Indicates that the resource owner has been notified about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> <p>If one of the following occurs, the workflow status is changed automatically from <code>NOTIFIED</code> to <code>NEW</code>:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>SUPPRESSED</code> - Indicates that you reviewed the finding and do not believe that any action is needed.</p> <p>The workflow status of a <code>SUPPRESSED</code> finding does not change if <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> <p>The finding remains <code>RESOLVED</code> unless one of the following occurs:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> <p>In those cases, the workflow status is automatically reset to <code>NEW</code>.</p> <p>For findings from controls, if <code>Compliance.Status</code> is <code>PASSED</code>, then Security Hub automatically sets the workflow status to <code>RESOLVED</code>.</p> </li> </ul>
                    RecordState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The updated record state for the finding.
                    RelatedFindingsProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN of the solution that generated a related finding.
                    RelatedFindingsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The solution-generated identifier for a related finding.
                    NoteText:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The text of a note.
                    NoteUpdatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The timestamp of when the note was updated.
                    NoteUpdatedBy:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The principal that created a note.
                    Keyword:
                      allOf:
                        - $ref: "#/components/schemas/KeywordFilterList"
                        - deprecated: true
                          description: A keyword for a finding.The Keyword property is deprecated.
                    FindingProviderFieldsConfidence:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
                    FindingProviderFieldsCriticality:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The finding provider value for the level of importance assigned to the resources associated with the findings.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. </p>
                    FindingProviderFieldsRelatedFindingsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding identifier of a related finding that is identified by the finding provider.
                    FindingProviderFieldsRelatedFindingsProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN of the solution that generated a related finding that is identified by the finding provider.
                    FindingProviderFieldsSeverityLabel:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding provider value for the severity label.
                    FindingProviderFieldsSeverityOriginal:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding provider's original value for the severity.
                    FindingProviderFieldsTypes:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: "<p>One or more finding types that the finding provider assigned to the finding. Uses the format of <code>namespace/category/classifier</code> that classify a finding.</p> <p>Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications</p>"
                    Sample:
                      allOf:
                        - $ref: "#/components/schemas/BooleanFilterList"
                        - description: Indicates whether or not sample findings are included in the filter results.
                    ComplianceSecurityControlId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: " The unique identifier of a control across standards. Values for this field typically consist of an Amazon Web Service and a number, such as APIGateway.5. "
                    ComplianceAssociatedStandardsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: ' The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html">DescribeStandards</a> API response. '
                SortCriteria:
                  description: The finding attributes used to sort the list of returned findings.
                  type: array
                  items:
                    $ref: "#/components/schemas/SortCriterion"
                NextToken:
                  description: <p>The token that is required for pagination. On your first call to the <code>GetFindings</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
                  type: string
                MaxResults:
                  description: The maximum number of findings to return.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateFindings
      description: <p> <code>UpdateFindings</code> is deprecated. Instead of <code>UpdateFindings</code>, use <code>BatchUpdateFindings</code>.</p> <p>Updates the <code>Note</code> and <code>RecordState</code> of the Security Hub-aggregated findings that the filter attributes specify. Any member account that can view the finding also sees the update to the finding.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFindingsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "483":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Filters
              properties:
                Filters:
                  description: <p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>
                  type: object
                  properties:
                    ProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
                    AwsAccountId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Amazon Web Services account ID that a finding is generated in.
                    Id:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The security findings provider-specific identifier for a finding.
                    GeneratorId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc.
                    Region:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Region from which the finding was generated.
                    Type:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding type in the format of <code>namespace/category/classifier</code> that classifies a finding.
                    FirstObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    LastObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    CreatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    UpdatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. </p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    SeverityProduct:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - deprecated: true
                          description: The native severity as defined by the security-findings provider's solution that generated the finding.This filter is deprecated. Instead, use FindingProviderSeverityOriginal.
                    SeverityNormalized:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - deprecated: true
                          description: The normalized severity of a finding.This filter is deprecated. Instead, use SeverityLabel or FindingProviderFieldsSeverityLabel.
                    SeverityLabel:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The label of a finding's severity.
                    Confidence:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
                    Criticality:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>
                    Title:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding's title.
                    Description:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A finding's description.
                    RecommendationText:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The recommendation of what to do about the issue described in a finding.
                    SourceUrl:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: A URL that links to a page about the current finding in the security-findings provider's solution.
                    ProductFields:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format.
                    ProductName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the solution (product) that generates findings.
                    CompanyName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the findings provider (company) that owns the solution (product) that generates findings.
                    UserDefinedFields:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
                    MalwareName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the malware that was observed.
                    MalwareType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The type of the malware that was observed.
                    MalwarePath:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The filesystem path of the malware that was observed.
                    MalwareState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The state of the malware that was observed.
                    NetworkDirection:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Indicates the direction of network traffic associated with a finding.
                    NetworkProtocol:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The protocol of network-related information about a finding.
                    NetworkSourceIpV4:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The source IPv4 address of network-related information about a finding.
                    NetworkSourceIpV6:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The source IPv6 address of network-related information about a finding.
                    NetworkSourcePort:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The source port of network-related information about a finding.
                    NetworkSourceDomain:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source domain of network-related information about a finding.
                    NetworkSourceMac:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source media access control (MAC) address of network-related information about a finding.
                    NetworkDestinationIpV4:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The destination IPv4 address of network-related information about a finding.
                    NetworkDestinationIpV6:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The destination IPv6 address of network-related information about a finding.
                    NetworkDestinationPort:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The destination port of network-related information about a finding.
                    NetworkDestinationDomain:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The destination domain of network-related information about a finding.
                    ProcessName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the process.
                    ProcessPath:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The path to the process executable.
                    ProcessPid:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The process ID.
                    ProcessParentPid:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: The parent process ID. This field accepts positive integers between <code>O</code> and <code>2147483647</code>.
                    ProcessLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the process was launched.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ProcessTerminatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the process was terminated.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ThreatIntelIndicatorType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The type of a threat intelligence indicator.
                    ThreatIntelIndicatorValue:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The value of a threat intelligence indicator.
                    ThreatIntelIndicatorCategory:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The category of a threat intelligence indicator.
                    ThreatIntelIndicatorLastObservedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: A timestamp that identifies the last observation of a threat intelligence indicator.
                    ThreatIntelIndicatorSource:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The source of the threat intelligence.
                    ThreatIntelIndicatorSourceUrl:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The URL for more details from the source of the threat intelligence.
                    ResourceType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Specifies the type of the resource that details are provided for.
                    ResourceId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical identifier for the given resource type.
                    ResourcePartition:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical Amazon Web Services partition name that the Region is assigned to.
                    ResourceRegion:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical Amazon Web Services external Region name where this resource is located.
                    ResourceTags:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: A list of Amazon Web Services tags associated with a resource at the time the finding was processed.
                    ResourceAwsEc2InstanceType:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The instance type of the instance.
                    ResourceAwsEc2InstanceImageId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The Amazon Machine Image (AMI) ID of the instance.
                    ResourceAwsEc2InstanceIpV4Addresses:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The IPv4 addresses associated with the instance.
                    ResourceAwsEc2InstanceIpV6Addresses:
                      allOf:
                        - $ref: "#/components/schemas/IpFilterList"
                        - description: The IPv6 addresses associated with the instance.
                    ResourceAwsEc2InstanceKeyName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The key name associated with the instance.
                    ResourceAwsEc2InstanceIamInstanceProfileArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The IAM profile ARN of the instance.
                    ResourceAwsEc2InstanceVpcId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the VPC that the instance was launched in.
                    ResourceAwsEc2InstanceSubnetId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the subnet that the instance was launched in.
                    ResourceAwsEc2InstanceLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The date and time the instance was launched.
                    ResourceAwsS3BucketOwnerId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The canonical user ID of the owner of the S3 bucket.
                    ResourceAwsS3BucketOwnerName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The display name of the owner of the S3 bucket.
                    ResourceAwsIamAccessKeyUserName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - deprecated: true
                          description: The user associated with the IAM access key related to a finding.This filter is deprecated. Instead, use ResourceAwsIamAccessKeyPrincipalName.
                    ResourceAwsIamAccessKeyPrincipalName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the principal that is associated with an IAM access key.
                    ResourceAwsIamAccessKeyStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The status of the IAM access key related to a finding.
                    ResourceAwsIamAccessKeyCreatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The creation date/time of the IAM access key related to a finding.
                    ResourceAwsIamUserUserName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of an IAM user.
                    ResourceContainerName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the container related to a finding.
                    ResourceContainerImageId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The identifier of the image related to a finding.
                    ResourceContainerImageName:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The name of the image related to a finding.
                    ResourceContainerLaunchedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: <p>A timestamp that identifies when the container was started.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
                    ResourceDetailsOther:
                      allOf:
                        - $ref: "#/components/schemas/MapFilterList"
                        - description: The details of a resource that doesn't have a specific subfield for the resource type defined.
                    ComplianceStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS Amazon Web Services Foundations. Contains security standard-related finding details.
                    VerificationState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The veracity of a finding.
                    WorkflowState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: <p>The workflow state of a finding.</p> <p>Note that this field is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>
                    WorkflowStatus:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: <p>The status of the investigation into a finding. Allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> <p>Security Hub also resets the workflow status from <code>NOTIFIED</code> or <code>RESOLVED</code> to <code>NEW</code> in the following cases:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to either <code>WARNING</code>, <code>FAILED</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>NOTIFIED</code> - Indicates that the resource owner has been notified about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> <p>If one of the following occurs, the workflow status is changed automatically from <code>NOTIFIED</code> to <code>NEW</code>:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>SUPPRESSED</code> - Indicates that you reviewed the finding and do not believe that any action is needed.</p> <p>The workflow status of a <code>SUPPRESSED</code> finding does not change if <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> <p>The finding remains <code>RESOLVED</code> unless one of the following occurs:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> <p>In those cases, the workflow status is automatically reset to <code>NEW</code>.</p> <p>For findings from controls, if <code>Compliance.Status</code> is <code>PASSED</code>, then Security Hub automatically sets the workflow status to <code>RESOLVED</code>.</p> </li> </ul>
                    RecordState:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The updated record state for the finding.
                    RelatedFindingsProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN of the solution that generated a related finding.
                    RelatedFindingsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The solution-generated identifier for a related finding.
                    NoteText:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The text of a note.
                    NoteUpdatedAt:
                      allOf:
                        - $ref: "#/components/schemas/DateFilterList"
                        - description: The timestamp of when the note was updated.
                    NoteUpdatedBy:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The principal that created a note.
                    Keyword:
                      allOf:
                        - $ref: "#/components/schemas/KeywordFilterList"
                        - deprecated: true
                          description: A keyword for a finding.The Keyword property is deprecated.
                    FindingProviderFieldsConfidence:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
                    FindingProviderFieldsCriticality:
                      allOf:
                        - $ref: "#/components/schemas/NumberFilterList"
                        - description: <p>The finding provider value for the level of importance assigned to the resources associated with the findings.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. </p>
                    FindingProviderFieldsRelatedFindingsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding identifier of a related finding that is identified by the finding provider.
                    FindingProviderFieldsRelatedFindingsProductArn:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The ARN of the solution that generated a related finding that is identified by the finding provider.
                    FindingProviderFieldsSeverityLabel:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding provider value for the severity label.
                    FindingProviderFieldsSeverityOriginal:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: The finding provider's original value for the severity.
                    FindingProviderFieldsTypes:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: "<p>One or more finding types that the finding provider assigned to the finding. Uses the format of <code>namespace/category/classifier</code> that classify a finding.</p> <p>Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications</p>"
                    Sample:
                      allOf:
                        - $ref: "#/components/schemas/BooleanFilterList"
                        - description: Indicates whether or not sample findings are included in the filter results.
                    ComplianceSecurityControlId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: " The unique identifier of a control across standards. Values for this field typically consist of an Amazon Web Service and a number, such as APIGateway.5. "
                    ComplianceAssociatedStandardsId:
                      allOf:
                        - $ref: "#/components/schemas/StringFilterList"
                        - description: ' The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html">DescribeStandards</a> API response. '
                Note:
                  description: The updated note.
                  type: object
                  properties:
                    Text:
                      allOf:
                        - $ref: "#/components/schemas/NonEmptyString"
                        - description: The updated note text.
                    UpdatedBy:
                      allOf:
                        - $ref: "#/components/schemas/NonEmptyString"
                        - description: The principal that updated the note.
                RecordState:
                  description: The updated record state for the finding.
                  type: string
                  enum:
                    - ACTIVE
                    - ARCHIVED
  "/insights/results/{InsightArn}":
    get:
      operationId: GetInsightResults
      description: Lists the results of the Security Hub insight specified by the insight ARN.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInsightResultsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: InsightArn
          in: path
          required: true
          description: The ARN of the insight for which to return results.
          schema:
            type: string
            pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /insights/get:
    post:
      operationId: GetInsights
      description: Lists and describes insights for the specified insight ARNs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInsightsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InsightArns:
                  description: The ARNs of the insights to describe. If you do not provide any insight ARNs, then <code>GetInsights</code> returns all of your custom insights. It does not return any managed insights.
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
                NextToken:
                  description: <p>The token that is required for pagination. On your first call to the <code>GetInsights</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
                  type: string
                MaxResults:
                  description: The maximum number of items to return in the response.
                  type: integer
                  minimum: 1
                  maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /invitations/count:
    get:
      operationId: GetInvitationsCount
      description: "Returns the count of all Security Hub membership invitations that were sent to the current member account, not including the currently accepted invitation. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetInvitationsCountResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters: []
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /members/get:
    post:
      operationId: GetMembers
      description: <p>Returns the details for the Security Hub member accounts for the specified account IDs.</p> <p>An administrator account can be either the delegated Security Hub administrator account for an organization or an administrator account that enabled Security Hub manually.</p> <p>The results include both member accounts that are managed using Organizations and accounts that were invited manually.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMembersResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountIds
              properties:
                AccountIds:
                  description: "The list of account IDs for the Security Hub member accounts to return the details for. "
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /members/invite:
    post:
      operationId: InviteMembers
      description: <p>Invites other Amazon Web Services accounts to become member accounts for the Security Hub administrator account that the invitation is sent from.</p> <p>This operation is only used to invite accounts that do not belong to an organization. Organization accounts do not receive invitations.</p> <p>Before you can use this action to invite a member, you must first use the <code>CreateMembers</code> action to create the member account in Security Hub.</p> <p>When the account owner enables Security Hub and accepts the invitation to become a member account, the administrator account can view the findings generated from the member account.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InviteMembersResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AccountIds
              properties:
                AccountIds:
                  description: "The list of account IDs of the Amazon Web Services accounts to invite to Security Hub as members. "
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /findingAggregator/list:
    get:
      operationId: ListFindingAggregators
      description: If finding aggregation is enabled, then <code>ListFindingAggregators</code> returns the ARN of the finding aggregator. You can run this operation from any Region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFindingAggregatorsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: NextToken
          in: query
          required: false
          description: The token returned with the previous set of results. Identifies the next set of results to return.
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of results to return. This operation currently only returns a single result.
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /invitations:
    get:
      operationId: ListInvitations
      description: <p>Lists all Security Hub membership invitations that were sent to the current Amazon Web Services account.</p> <p>This operation is only used by accounts that are managed by invitation. Accounts that are managed using the integration with Organizations do not receive invitations.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInvitationsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: MaxResults
          in: query
          required: false
          description: "The maximum number of items to return in the response. "
          schema:
            type: integer
            minimum: 1
            maximum: 50
        - name: NextToken
          in: query
          required: false
          description: <p>The token that is required for pagination. On your first call to the <code>ListInvitations</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /organization/admin:
    get:
      operationId: ListOrganizationAdminAccounts
      description: Lists the Security Hub administrator accounts. Can only be called by the organization management account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganizationAdminAccountsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of items to return in the response.
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - name: NextToken
          in: query
          required: false
          description: "The token that is required for pagination. On your first call to the <code>ListOrganizationAdminAccounts</code> operation, set the value of this parameter to <code>NULL</code>. For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /securityControls/definitions:
    get:
      operationId: ListSecurityControlDefinitions
      description: " Lists all of the security controls that apply to a specified standard. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSecurityControlDefinitionsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
      parameters:
        - name: StandardsArn
          in: query
          required: false
          description: " The Amazon Resource Name (ARN) of the standard that you want to view controls for. "
          schema:
            type: string
            pattern: .*\S.*
        - name: NextToken
          in: query
          required: false
          description: " Optional pagination parameter. "
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: " An optional parameter that limits the total results of the API response to the specified number. If this parameter isn't provided in the request, the results include the first 25 security controls that apply to the specified standard. The results also include a <code>NextToken</code> parameter that you can use in a subsequent API call to get the next 25 controls. This repeats until all controls for the standard are returned. "
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /associations#SecurityControlId:
    get:
      operationId: ListStandardsControlAssociations
      description: " Specifies whether a control is currently enabled or disabled in each enabled standard in the calling account. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStandardsControlAssociationsResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
      parameters:
        - name: SecurityControlId
          in: query
          required: true
          description: " The identifier of the control (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters) that you want to determine the enablement status of in each enabled standard. "
          schema:
            type: string
            pattern: .*\S.*
        - name: NextToken
          in: query
          required: false
          description: " Optional pagination parameter. "
          schema:
            type: string
        - name: MaxResults
          in: query
          required: false
          description: " An optional parameter that limits the total results of the API response to the specified number. If this parameter isn't provided in the request, the results include the first 25 standard and control associations. The results also include a <code>NextToken</code> parameter that you can use in a subsequent API call to get the next 25 associations. This repeats until all associations for the specified control are returned. The number of results is limited by the number of supported Security Hub standards that you've enabled in the calling account. "
          schema:
            type: integer
            minimum: 1
            maximum: 100
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{ResourceArn}":
    get:
      operationId: ListTagsForResource
      description: Returns a list of tags associated with a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The ARN of the resource to retrieve tags for.
          schema:
            type: string
            pattern: ^arn:aws:securityhub:.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: Adds one or more tags to a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The ARN of the resource to apply the tags to.
          schema:
            type: string
            pattern: ^arn:aws:securityhub:.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tags to add to the resource. You can add up to 50 tags at a time. The tag keys can be no longer than 128 characters. The tag values can be no longer than 256 characters.
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
  "/tags/{ResourceArn}#tagKeys":
    delete:
      operationId: UntagResource
      description: Removes one or more tags from a resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The ARN of the resource to remove the tags from.
          schema:
            type: string
            pattern: ^arn:aws:securityhub:.*
        - name: tagKeys
          in: query
          required: true
          description: The tag keys associated with the tags to remove from the resource. You can remove up to 50 tags at a time.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TagKey"
            minItems: 1
            maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /findingAggregator/update:
    patch:
      operationId: UpdateFindingAggregator
      description: <p>Updates the finding aggregation configuration. Used to update the Region linking mode and the list of included or excluded Regions. You cannot use <code>UpdateFindingAggregator</code> to change the aggregation Region.</p> <p>You must run <code>UpdateFindingAggregator</code> from the current aggregation Region. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFindingAggregatorResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: LimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LimitExceededException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FindingAggregatorArn
                - RegionLinkingMode
              properties:
                FindingAggregatorArn:
                  description: The ARN of the finding aggregator. To obtain the ARN, use <code>ListFindingAggregators</code>.
                  type: string
                  pattern: .*\S.*
                RegionLinkingMode:
                  description: <p>Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.</p> <p>The selected option also determines how to use the Regions provided in the Regions list.</p> <p>The options are as follows:</p> <ul> <li> <p> <code>ALL_REGIONS</code> - Indicates to aggregate findings from all of the Regions where Security Hub is enabled. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. </p> </li> <li> <p> <code>ALL_REGIONS_EXCEPT_SPECIFIED</code> - Indicates to aggregate findings from all of the Regions where Security Hub is enabled, except for the Regions listed in the <code>Regions</code> parameter. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. </p> </li> <li> <p> <code>SPECIFIED_REGIONS</code> - Indicates to aggregate findings only from the Regions listed in the <code>Regions</code> parameter. Security Hub does not automatically aggregate findings from new Regions. </p> </li> </ul>
                  type: string
                  pattern: .*\S.*
                Regions:
                  description: <p>If <code>RegionLinkingMode</code> is <code>ALL_REGIONS_EXCEPT_SPECIFIED</code>, then this is a space-separated list of Regions that do not aggregate findings to the aggregation Region.</p> <p>If <code>RegionLinkingMode</code> is <code>SPECIFIED_REGIONS</code>, then this is a space-separated list of Regions that do aggregate findings to the aggregation Region.</p>
                  type: array
                  items:
                    $ref: "#/components/schemas/NonEmptyString"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/standards/control/{StandardsControlArn}":
    patch:
      operationId: UpdateStandardsControl
      description: Used to control whether an individual security standard control is enabled or disabled.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateStandardsControlResponse"
        "480":
          description: InternalException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalException"
        "481":
          description: InvalidInputException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidInputException"
        "482":
          description: InvalidAccessException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidAccessException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters:
        - name: StandardsControlArn
          in: path
          required: true
          description: The ARN of the security standard control to enable or disable.
          schema:
            type: string
            pattern: .*\S.*
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ControlStatus:
                  description: The updated status of the security standard control.
                  type: string
                  enum:
                    - ENABLED
                    - DISABLED
                DisabledReason:
                  description: A description of the reason why you are disabling a security standard control. If you are disabling a control, then this is required.
                  type: string
                  pattern: .*\S.*
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptAdministratorInvitationResponse:
      type: object
      properties: {}
    InternalException: {}
    InvalidInputException: {}
    LimitExceededException: {}
    ResourceNotFoundException: {}
    InvalidAccessException: {}
    AcceptInvitationResponse:
      type: object
      properties: {}
    BatchDisableStandardsResponse:
      type: object
      example:
        StandardsSubscriptions:
          - StandardsArn: arn:aws:securityhub:eu-central-1::standards/pci-dss/v/3.2.1
            StandardsInput: {}
            StandardsStatus: DELETING
            StandardsSubscriptionArn: arn:aws:securityhub:us-west-1:123456789012:subscription/pci-dss/v/3.2.1
      properties:
        StandardsSubscriptions:
          allOf:
            - $ref: "#/components/schemas/StandardsSubscriptions"
            - description: The details of the standards subscriptions that were disabled.
    NonEmptyString:
      type: string
      pattern: .*\S.*
    BatchEnableStandardsResponse:
      type: object
      example:
        StandardsSubscriptions:
          - StandardsArn: arn:aws:securityhub:us-west-1::standards/pci-dss/v/3.2.1
            StandardsInput: {}
            StandardsStatus: PENDING
            StandardsSubscriptionArn: arn:aws:securityhub:us-west-1:123456789012:subscription/pci-dss/v/3.2.1
      properties:
        StandardsSubscriptions:
          allOf:
            - $ref: "#/components/schemas/StandardsSubscriptions"
            - description: The details of the standards subscriptions that were enabled.
    StandardsSubscriptionRequest:
      type: object
      required:
        - StandardsArn
      properties:
        StandardsArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the standard that you want to enable. To view the list of available standards and their ARNs, use the <code>DescribeStandards</code> operation.
        StandardsInput:
          allOf:
            - $ref: "#/components/schemas/StandardsInputParameterMap"
            - description: A key-value pair of input for the standard.
      description: The standard that you want to enable.
    BatchGetSecurityControlsResponse:
      type: object
      required:
        - SecurityControls
      properties:
        SecurityControls:
          allOf:
            - $ref: "#/components/schemas/SecurityControls"
            - description: " An array that returns the identifier, Amazon Resource Name (ARN), and other details about a security control. The same information is returned whether the request includes <code>SecurityControlId</code> or <code>SecurityControlArn</code>. "
        UnprocessedIds:
          allOf:
            - $ref: "#/components/schemas/UnprocessedSecurityControls"
            - description: " A security control (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters) for which details cannot be returned. "
    BatchGetStandardsControlAssociationsResponse:
      type: object
      required:
        - StandardsControlAssociationDetails
      properties:
        StandardsControlAssociationDetails:
          allOf:
            - $ref: "#/components/schemas/StandardsControlAssociationDetails"
            - description: "Provides the enablement status of a security control in a specified standard and other details for the control in relation to the specified standard. "
        UnprocessedAssociations:
          allOf:
            - $ref: "#/components/schemas/UnprocessedStandardsControlAssociations"
            - description: " A security control (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters) whose enablement status in a specified standard cannot be returned. "
    StandardsControlAssociationId:
      type: object
      required:
        - SecurityControlId
        - StandardsArn
      properties:
        SecurityControlId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The unique identifier (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters) of a security control across standards. "
        StandardsArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ARN of a standard. "
      description: " An array with one or more objects that includes a security control (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters) and the Amazon Resource Name (ARN) of a standard. The security control ID or ARN is the same across standards. "
    BatchImportFindingsResponse:
      type: object
      required:
        - FailedCount
        - SuccessCount
      example:
        FailedCount: 123
        FailedFindings: []
        SuccessCount: 123
      properties:
        FailedCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of findings that failed to import.
        SuccessCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of findings that were successfully imported.
        FailedFindings:
          allOf:
            - $ref: "#/components/schemas/ImportFindingsErrorList"
            - description: The list of findings that failed to import.
    AwsSecurityFinding:
      type: object
      required:
        - SchemaVersion
        - Id
        - ProductArn
        - GeneratorId
        - AwsAccountId
        - CreatedAt
        - UpdatedAt
        - Title
        - Description
        - Resources
      properties:
        SchemaVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The schema version that a finding is formatted for.
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The security findings provider-specific identifier for a finding.
        ProductArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN generated by Security Hub that uniquely identifies a product that generates findings. This can be the ARN for a third-party product that is integrated with Security Hub, or the ARN for a custom integration.
        ProductName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The name of the product that generated the finding.</p> <p>Security Hub populates this attribute automatically for each finding. You cannot update this attribute with <code>BatchImportFindings</code> or <code>BatchUpdateFindings</code>. The exception to this is a custom integration.</p> <p>When you use the Security Hub console or API to filter findings by product name, you use this attribute.</p>
        CompanyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The name of the company for the product that generated the finding.</p> <p>Security Hub populates this attribute automatically for each finding. You cannot update this attribute with <code>BatchImportFindings</code> or <code>BatchUpdateFindings</code>. The exception to this is a custom integration.</p> <p>When you use the Security Hub console or API to filter findings by company name, you use this attribute.</p>
        Region:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The Region from which the finding was generated.</p> <p>Security Hub populates this attribute automatically for each finding. You cannot update it using <code>BatchImportFindings</code> or <code>BatchUpdateFindings</code>.</p>
        GeneratorId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc. "
        AwsAccountId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account ID that a finding is generated in.
        Types:
          allOf:
            - $ref: "#/components/schemas/TypeList"
            - description: "<p>One or more finding types in the format of <code>namespace/category/classifier</code> that classify a finding.</p> <p>Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications</p>"
        FirstObservedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the security-findings provider first observed the potential security issue that a finding captured.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        LastObservedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the security-findings provider most recently observed the potential security issue that a finding captured.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the security-findings provider created the potential security issue that a finding captured.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the security-findings provider last updated the finding record.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Severity:
          allOf:
            - $ref: "#/components/schemas/Severity"
            - description: A finding's severity.
        Confidence:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
        Criticality:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>
        Title:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>A finding's title.</p> <note> <p>In this release, <code>Title</code> is a required property.</p> </note>
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>A finding's description.</p> <note> <p>In this release, <code>Description</code> is a required property.</p> </note>
        Remediation:
          allOf:
            - $ref: "#/components/schemas/Remediation"
            - description: A data type that describes the remediation options for a finding.
        SourceUrl:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A URL that links to a page about the current finding in the security-findings provider's solution.
        ProductFields:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: <p>A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format.</p> <p>Can contain up to 50 key-value pairs. For each key-value pair, the key can contain up to 128 characters, and the value can contain up to 2048 characters.</p>
        UserDefinedFields:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
        Malware:
          allOf:
            - $ref: "#/components/schemas/MalwareList"
            - description: A list of malware related to a finding.
        Network:
          allOf:
            - $ref: "#/components/schemas/Network"
            - description: The details of network-related information about a finding.
        NetworkPath:
          allOf:
            - $ref: "#/components/schemas/NetworkPathList"
            - description: Provides information about a network path that is relevant to a finding. Each entry under <code>NetworkPath</code> represents a component of that path.
        Process:
          allOf:
            - $ref: "#/components/schemas/ProcessDetails"
            - description: The details of process-related information about a finding.
        Threats:
          allOf:
            - $ref: "#/components/schemas/ThreatList"
            - description: "Details about the threat detected in a security finding and the file paths that were affected by the threat. "
        ThreatIntelIndicators:
          allOf:
            - $ref: "#/components/schemas/ThreatIntelIndicatorList"
            - description: Threat intelligence details related to a finding.
        Resources:
          allOf:
            - $ref: "#/components/schemas/ResourceList"
            - description: A set of resource data types that describe the resources that the finding refers to.
        Compliance:
          allOf:
            - $ref: "#/components/schemas/Compliance"
            - description: This data type is exclusive to findings that are generated as the result of a check run against a specific rule in a supported security standard, such as CIS Amazon Web Services Foundations. Contains security standard-related finding details.
        VerificationState:
          allOf:
            - $ref: "#/components/schemas/VerificationState"
            - description: "Indicates the veracity of a finding. "
        WorkflowState:
          allOf:
            - $ref: "#/components/schemas/WorkflowState"
            - description: "The workflow state of a finding. "
        Workflow:
          allOf:
            - $ref: "#/components/schemas/Workflow"
            - description: Provides information about the status of the investigation into a finding.
        RecordState:
          allOf:
            - $ref: "#/components/schemas/RecordState"
            - description: The record state of a finding.
        RelatedFindings:
          allOf:
            - $ref: "#/components/schemas/RelatedFindingList"
            - description: A list of related findings.
        Note:
          allOf:
            - $ref: "#/components/schemas/Note"
            - description: A user-defined note added to a finding.
        Vulnerabilities:
          allOf:
            - $ref: "#/components/schemas/VulnerabilityList"
            - description: Provides a list of vulnerabilities associated with the findings.
        PatchSummary:
          allOf:
            - $ref: "#/components/schemas/PatchSummary"
            - description: Provides an overview of the patch compliance status for an instance against a selected compliance standard.
        Action:
          allOf:
            - $ref: "#/components/schemas/Action"
            - description: Provides details about an action that affects or that was taken on a resource.
        FindingProviderFields:
          allOf:
            - $ref: "#/components/schemas/FindingProviderFields"
            - description: In a <code>BatchImportFindings</code> request, finding providers use <code>FindingProviderFields</code> to provide and update their own values for confidence, criticality, related findings, severity, and types.
        Sample:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the finding is a sample finding.
      description: <p>Provides a consistent format for Security Hub findings. <code>AwsSecurityFinding</code> format allows you to share findings between Amazon Web Services security services and third-party solutions.</p> <note> <p>A finding is a potential security issue generated either by Amazon Web Services services or by the integrated third-party solutions and standards checks.</p> </note>
    BatchUpdateFindingsResponse:
      type: object
      required:
        - ProcessedFindings
        - UnprocessedFindings
      example:
        ProcessedFindings:
          - Id: arn:aws:securityhub:us-west-1:123456789012:subscription/pci-dss/v/3.2.1/PCI.Lambda.2/finding/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
            ProductArn: arn:aws:securityhub:us-west-1::product/aws/securityhub
          - Id: arn:aws:securityhub:us-west-1:123456789012:subscription/pci-dss/v/3.2.1/PCI.Lambda.2/finding/a1b2c3d4-5678-90ab-cdef-EXAMPLE22222
            ProductArn: arn:aws:securityhub:us-west-1::product/aws/securityhub
        UnprocessedFindings: []
      properties:
        ProcessedFindings:
          allOf:
            - $ref: "#/components/schemas/AwsSecurityFindingIdentifierList"
            - description: The list of findings that were updated successfully.
        UnprocessedFindings:
          allOf:
            - $ref: "#/components/schemas/BatchUpdateFindingsUnprocessedFindingsList"
            - description: The list of findings that were not updated.
    AwsSecurityFindingIdentifier:
      type: object
      required:
        - Id
        - ProductArn
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the finding that was specified by the finding provider.
        ProductArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN generated by Security Hub that uniquely identifies a product that generates findings. This can be the ARN for a third-party product that is integrated with Security Hub, or the ARN for a custom integration.
      description: Identifies a finding to update using <code>BatchUpdateFindings</code>.
    RatioScale:
      type: integer
      minimum: 0
      maximum: 100
    Double:
      type: number
      format: double
    SeverityLabel:
      type: string
      enum:
        - INFORMATIONAL
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
    WorkflowStatus:
      type: string
      enum:
        - NEW
        - NOTIFIED
        - RESOLVED
        - SUPPRESSED
    RelatedFinding:
      type: object
      required:
        - ProductArn
        - Id
      properties:
        ProductArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the product that generated a related finding.
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The product-generated identifier for a related finding.
      description: Details about a related finding.
    BatchUpdateStandardsControlAssociationsResponse:
      type: object
      properties:
        UnprocessedAssociationUpdates:
          allOf:
            - $ref: "#/components/schemas/UnprocessedStandardsControlAssociationUpdates"
            - description: " A security control (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters) whose enablement status in a specified standard couldn't be updated. "
    StandardsControlAssociationUpdate:
      type: object
      required:
        - StandardsArn
        - SecurityControlId
        - AssociationStatus
      properties:
        StandardsArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Resource Name (ARN) of the standard in which you want to update the control's enablement status.
        SecurityControlId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The unique identifier for the security control whose enablement status you want to update.
        AssociationStatus:
          allOf:
            - $ref: "#/components/schemas/AssociationStatus"
            - description: The desired enablement status of the control in the standard.
        UpdatedReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The reason for updating the control's enablement status in the standard.
      description: An array of requested updates to the enablement status of controls in specified standards. The objects in the array include a security control ID, the Amazon Resource Name (ARN) of the standard, the requested enablement status, and the reason for updating the enablement status.
    CreateActionTargetResponse:
      type: object
      required:
        - ActionTargetArn
      example:
        ActionTargetArn: arn:aws:securityhub:us-west-1:123456789012:action/custom/Remediation
      properties:
        ActionTargetArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Resource Name (ARN) for the custom action target.
    ResourceConflictException: {}
    CreateFindingAggregatorResponse:
      type: object
      example:
        FindingAggregationRegion: us-east-1
        FindingAggregatorArn: arn:aws:securityhub:us-east-1:222222222222:finding-aggregator/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
        RegionLinkingMode: SPECIFIED_REGIONS
        Regions:
          - us-west-1
          - us-west-2
      properties:
        FindingAggregatorArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the finding aggregator. You use the finding aggregator ARN to retrieve details for, update, and stop finding aggregation.
        FindingAggregationRegion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The aggregation Region.
        RegionLinkingMode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Indicates whether to link all Regions, all Regions except for a list of excluded Regions, or a list of included Regions.
        Regions:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The list of excluded Regions or included Regions.
    AccessDeniedException: {}
    CreateInsightResponse:
      type: object
      required:
        - InsightArn
      example:
        InsightArn: arn:aws:securityhub:us-west-1:123456789012:insight/123456789012/custom/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
      properties:
        InsightArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the insight created.
    StringFilterList:
      type: array
      items:
        $ref: "#/components/schemas/StringFilter"
    DateFilterList:
      type: array
      items:
        $ref: "#/components/schemas/DateFilter"
    NumberFilterList:
      type: array
      items:
        $ref: "#/components/schemas/NumberFilter"
    MapFilterList:
      type: array
      items:
        $ref: "#/components/schemas/MapFilter"
    IpFilterList:
      type: array
      items:
        $ref: "#/components/schemas/IpFilter"
    KeywordFilterList:
      type: array
      items:
        $ref: "#/components/schemas/KeywordFilter"
    BooleanFilterList:
      type: array
      items:
        $ref: "#/components/schemas/BooleanFilter"
    CreateMembersResponse:
      type: object
      example:
        UnprocessedAccounts: []
      properties:
        UnprocessedAccounts:
          allOf:
            - $ref: "#/components/schemas/ResultList"
            - description: The list of Amazon Web Services accounts that were not processed. For each account, the list includes the account ID and the email address.
    AccountDetails:
      type: object
      required:
        - AccountId
      properties:
        AccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: The ID of an Amazon Web Services account.
        Email:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The email of an Amazon Web Services account.
      description: The details of an Amazon Web Services account.
    DeclineInvitationsResponse:
      type: object
      example:
        UnprocessedAccounts: []
      properties:
        UnprocessedAccounts:
          allOf:
            - $ref: "#/components/schemas/ResultList"
            - description: The list of Amazon Web Services accounts that were not processed. For each account, the list includes the account ID and the email address.
    DeleteActionTargetResponse:
      type: object
      required:
        - ActionTargetArn
      example:
        ActionTargetArn: arn:aws:securityhub:us-west-1:123456789012:action/custom/Remediation
      properties:
        ActionTargetArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the custom action target that was deleted.
    DeleteFindingAggregatorResponse:
      type: object
      properties: {}
    DeleteInsightResponse:
      type: object
      required:
        - InsightArn
      example:
        InsightArn: arn:aws:securityhub:eu-central-1:123456789012:insight/123456789012/custom/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
      properties:
        InsightArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the insight that was deleted.
    DeleteInvitationsResponse:
      type: object
      example:
        UnprocessedAccounts: []
      properties:
        UnprocessedAccounts:
          allOf:
            - $ref: "#/components/schemas/ResultList"
            - description: The list of Amazon Web Services accounts for which the invitations were not deleted. For each account, the list includes the account ID and the email address.
    DeleteMembersResponse:
      type: object
      example:
        UnprocessedAccounts: []
      properties:
        UnprocessedAccounts:
          allOf:
            - $ref: "#/components/schemas/ResultList"
            - description: The list of Amazon Web Services accounts that were not deleted. For each account, the list includes the account ID and the email address.
    DescribeActionTargetsResponse:
      type: object
      required:
        - ActionTargets
      example:
        ActionTargets:
          - ActionTargetArn: arn:aws:securityhub:us-west-1:123456789012:action/custom/Remediation
            Description: Action to send the finding for remediation tracking
            Name: Send to remediation
      properties:
        ActionTargets:
          allOf:
            - $ref: "#/components/schemas/ActionTargetList"
            - description: A list of <code>ActionTarget</code> objects. Each object includes the <code>ActionTargetArn</code>, <code>Description</code>, and <code>Name</code> of a custom action target available in Security Hub.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The pagination token to use to request the next page of results.
    DescribeHubResponse:
      type: object
      example:
        AutoEnableControls: true
        ControlFindingGenerator: SECURITY_CONTROL
        HubArn: arn:aws:securityhub:us-west-1:123456789012:hub/default
        SubscribedAt: 2019-11-19T23:15:10.046Z
      properties:
        HubArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the Hub resource that was retrieved.
        SubscribedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The date and time when Security Hub was enabled in the account.
        AutoEnableControls:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Whether to automatically enable new controls when they are added to standards that are enabled.</p> <p>If set to <code>true</code>, then new controls for enabled standards are enabled automatically. If set to <code>false</code>, then new controls are not enabled.</p>
        ControlFindingGenerator:
          allOf:
            - $ref: "#/components/schemas/ControlFindingGenerator"
            - description: <p>Specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to <code>SECURITY_CONTROL</code>, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.</p> <p>If the value for this field is set to <code>STANDARD_CONTROL</code>, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.</p> <p>The value for this field in a member account matches the value in the administrator account. For accounts that aren't part of an organization, the default value of this field is <code>SECURITY_CONTROL</code> if you enabled Security Hub on or after February 23, 2023.</p>
    DescribeOrganizationConfigurationResponse:
      type: object
      example:
        AutoEnable: true
        AutoEnableStandards: DEFAULT
        MemberAccountLimitReached: true
      properties:
        AutoEnable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Whether to automatically enable Security Hub for new accounts in the organization.</p> <p>If set to <code>true</code>, then Security Hub is enabled for new accounts. If set to false, then new accounts are not added automatically.</p>
        MemberAccountLimitReached:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the maximum number of allowed member accounts are already associated with the Security Hub administrator account.
        AutoEnableStandards:
          allOf:
            - $ref: "#/components/schemas/AutoEnableStandards"
            - description: <p>Whether to automatically enable Security Hub <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-enable-disable.html">default standards</a> for new member accounts in the organization.</p> <p>The default value of this parameter is equal to <code>DEFAULT</code>.</p> <p>If equal to <code>DEFAULT</code>, then Security Hub default standards are automatically enabled for new member accounts. If equal to <code>NONE</code>, then default standards are not automatically enabled for new member accounts.</p>
    DescribeProductsResponse:
      type: object
      required:
        - Products
      example:
        NextToken: U2FsdGVkX18vvPlOqb7RDrWRWVFBJI46MOIAb+nZmRJmR15NoRi2gm13sdQEn3O/pq/78dGs+bKpgA+7HMPHO0qX33/zoRI+uIG/F9yLNhcOrOWzFUdy36JcXLQji3Rpnn/cD1SVkGA98qI3zPOSDg==
        Products:
          - ActivationUrl: https://falcon.crowdstrike.com/support/documentation
            Categories:
              - Endpoint Detection and Response (EDR)
              - AV Scanning and Sandboxing
              - Threat Intelligence Feeds and Reports
              - Endpoint Forensics
              - Network Forensics
            CompanyName: CrowdStrike
            Description: CrowdStrike Falcon's single lightweight sensor unifies next-gen antivirus, endpoint detection and response, and 24/7 managed hunting, via the cloud.
            IntegrationTypes:
              - SEND_FINDINGS_TO_SECURITY_HUB
            MarketplaceUrl: https://aws.amazon.com/marketplace/seller-profile?id=a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
            ProductArn: arn:aws:securityhub:us-east-1:517716713836:product/crowdstrike/crowdstrike-falcon
            ProductName: CrowdStrike Falcon
            ProductSubscriptionResourcePolicy: '{"Version":"2012-10-17","Statement":[{"Effect":"Allow","Principal":{"AWS":"123456789333"},"Action":["securityhub:BatchImportFindings"],"Resource":"arn:aws:securityhub:us-west-1:123456789012:product-subscription/crowdstrike/crowdstrike-falcon","Condition":{"StringEquals":{"securityhub:TargetAccount":"123456789012"}}},{"Effect":"Allow","Principal":{"AWS":"123456789012"},"Action":["securityhub:BatchImportFindings"],"Resource":"arn:aws:securityhub:us-west-1:123456789333:product/crowdstrike/crowdstrike-falcon","Condition":{"StringEquals":{"securityhub:TargetAccount":"123456789012"}}}]}'
      properties:
        Products:
          allOf:
            - $ref: "#/components/schemas/ProductsList"
            - description: A list of products, including details for each product.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The pagination token to use to request the next page of results.
    DescribeStandardsResponse:
      type: object
      example:
        Standards:
          - Description: The AWS Foundational Security Best Practices standard is a set of automated security checks that detect when AWS accounts and deployed resources do not align to security best practices. The standard is defined by AWS security experts. This curated set of controls helps improve your security posture in AWS, and cover AWS's most popular and foundational services.
            EnabledByDefault: true
            Name: AWS Foundational Security Best Practices v1.0.0
            StandardsArn: arn:aws:securityhub:us-west-1::standards/aws-foundational-security-best-practices/v/1.0.0
          - Description: The Center for Internet Security (CIS) AWS Foundations Benchmark v1.2.0 is a set of security configuration best practices for AWS. This Security Hub standard automatically checks for your compliance readiness against a subset of CIS requirements.
            EnabledByDefault: true
            Name: CIS AWS Foundations Benchmark v1.2.0
            StandardsArn: arn:aws:securityhub:us-west-1::ruleset/cis-aws-foundations-benchmark/v/1.2.0
          - Description: The Center for Internet Security (CIS) AWS Foundations Benchmark v1.4.0 is a set of security configuration best practices for AWS. This Security Hub standard automatically checks for your compliance readiness against a subset of CIS requirements.
            EnabledByDefault: false
            Name: CIS AWS Foundations Benchmark v1.4.0
            StandardsArn: arn:aws::securityhub:us-west-1::standards/cis-aws-foundations-benchmark/v/1.4.0
          - Description: The Payment Card Industry Data Security Standard (PCI DSS) v3.2.1 is an information security standard for entities that store, process, and/or transmit cardholder data. This Security Hub standard automatically checks for your compliance readiness against a subset of PCI DSS requirements.
            EnabledByDefault: false
            Name: PCI DSS v3.2.1
            StandardsArn: arn:aws:securityhub:us-west-1::standards/pci-dss/v/3.2.1
      properties:
        Standards:
          allOf:
            - $ref: "#/components/schemas/Standards"
            - description: A list of available standards.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The pagination token to use to request the next page of results.
    DescribeStandardsControlsResponse:
      type: object
      example:
        Controls:
          - ControlId: PCI.AutoScaling.1
            ControlStatus: ENABLED
            ControlStatusUpdatedAt: 2020-05-15T18:49:04.473000+00:00
            Description: This AWS control checks whether your Auto Scaling groups that are associated with a load balancer are using Elastic Load Balancing health checks.
            RelatedRequirements:
              - PCI DSS 2.2
            RemediationUrl: https://docs.aws.amazon.com/console/securityhub/PCI.AutoScaling.1/remediation
            SeverityRating: LOW
            StandardsControlArn: arn:aws:securityhub:us-west-1:123456789012:control/pci-dss/v/3.2.1/PCI.AutoScaling.1
            Title: Auto scaling groups associated with a load balancer should use health checks
          - ControlId: PCI.CW.1
            ControlStatus: ENABLED
            ControlStatusUpdatedAt: 2020-05-15T18:49:04.498000+00:00
            Description: This control checks for the CloudWatch metric filters using the following pattern { $.userIdentity.type = "Root" && $.userIdentity.invokedBy NOT EXISTS && $.eventType != "AwsServiceEvent" } It checks that the log group name is configured for use with active multi-region CloudTrail, that there is at least one Event Selector for a Trail with IncludeManagementEvents set to true and ReadWriteType set to All, and that there is at least one active subscriber to an SNS topic associated with the alarm.
            RelatedRequirements:
              - PCI DSS 7.2.1
            RemediationUrl: https://docs.aws.amazon.com/console/securityhub/PCI.CW.1/remediation
            SeverityRating: MEDIUM
            StandardsControlArn: arn:aws:securityhub:us-west-1:123456789012:control/pci-dss/v/3.2.1/PCI.CW.1
            Title: A log metric filter and alarm should exist for usage of the "root" user
        NextToken: U2FsdGVkX1+eNkPoZHVl11ip5HUYQPWSWZGmftcmJiHL8JoKEsCDuaKayiPDyLK+LiTkShveoOdvfxXCkOBaGhohIXhsIedN+LSjQV/l7kfCfJcq4PziNC1N9xe9aq2pjlLVZnznTfSImrodT5bRNHe4fELCQq/z+5ka+5Lzmc11axcwTd5lKgQyQqmUVoeriHZhyIiBgWKf7oNYdBVG8OEortVWvSkoUTt+B2ThcnC7l43kI0UNxlkZ6sc64AsW
      properties:
        Controls:
          allOf:
            - $ref: "#/components/schemas/StandardsControls"
            - description: A list of security standards controls.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The pagination token to use to request the next page of results.
    DisableImportFindingsForProductResponse:
      type: object
      properties: {}
    DisableOrganizationAdminAccountResponse:
      type: object
      properties: {}
    DisableSecurityHubResponse:
      type: object
      properties: {}
    DisassociateFromAdministratorAccountResponse:
      type: object
      properties: {}
    DisassociateFromMasterAccountResponse:
      type: object
      properties: {}
    DisassociateMembersResponse:
      type: object
      properties: {}
    EnableImportFindingsForProductResponse:
      type: object
      example:
        ProductSubscriptionArn: arn:aws:securityhub:us-east-1:517716713836:product-subscription/crowdstrike/crowdstrike-falcon
      properties:
        ProductSubscriptionArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of your subscription to the product to enable integrations for.
    EnableOrganizationAdminAccountResponse:
      type: object
      properties: {}
    EnableSecurityHubResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      maxLength: 256
    GetAdministratorAccountResponse:
      type: object
      example:
        Administrator:
          AccountId: "123456789012"
          InvitationId: 7ab938c5d52d7904ad09f9e7c20cc4eb
          InvitedAt: 2020-06-01T20:21:18.042000+00:00
          MemberStatus: ASSOCIATED
      properties:
        Administrator:
          $ref: "#/components/schemas/Invitation"
    GetEnabledStandardsResponse:
      type: object
      example:
        StandardsSubscriptions:
          - StandardsArn: arn:aws:securityhub:us-west-1::standards/pci-dss/v/3.2.1
            StandardsInput: {}
            StandardsStatus: READY
            StandardsSubscriptionArn: arn:aws:securityhub:us-west-1:123456789012:subscription/pci-dss/v/3.2.1
      properties:
        StandardsSubscriptions:
          allOf:
            - $ref: "#/components/schemas/StandardsSubscriptions"
            - description: The list of <code>StandardsSubscriptions</code> objects that include information about the enabled standards.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The pagination token to use to request the next page of results.
    GetFindingAggregatorResponse:
      type: object
      example:
        FindingAggregationRegion: us-east-1
        FindingAggregatorArn: arn:aws:securityhub:us-east-1:123456789012:finding-aggregator/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
        RegionLinkingMode: SPECIFIED_REGIONS
        Regions:
          - us-west-1
          - us-west-2
      properties:
        FindingAggregatorArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the finding aggregator.
        FindingAggregationRegion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The aggregation Region.
        RegionLinkingMode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Indicates whether to link all Regions, all Regions except for a list of excluded Regions, or a list of included Regions.
        Regions:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The list of excluded Regions or included Regions.
    GetFindingsResponse:
      type: object
      required:
        - Findings
      example:
        Findings:
          - AwsAccountId: "123456789012"
            CompanyName: AWS
            Compliance:
              AssociatedStandards:
                - StandardsId: standards/aws-foundational-security-best-practices/v/1.0.0
                - StandardsId: standards/pci-dss/v/3.2.1
                - StandardsId: ruleset/cis-aws-foundations-benchmark/v/1.2.0
                - StandardsId: standards/cis-aws-foundations-benchmark/v/1.4.0
                - StandardsId: standards/service-managed-aws-control-tower/v/1.0.0
              RelatedRequirements:
                - PCI DSS v3.2.1/3.4
                - CIS AWS Foundations Benchmark v1.2.0/2.7
                - CIS AWS Foundations Benchmark v1.4.0/3.7
              SecurityControlId: CloudTrail.2
              Status: FAILED
            CreatedAt: 2022-10-06T02:18:23.076Z
            Description: This AWS control checks whether AWS CloudTrail is configured to use the server side encryption (SSE) AWS Key Management Service (AWS KMS) customer master key (CMK) encryption. The check will pass if the KmsKeyId is defined.
            FindingProviderFields:
              Severity:
                Label: MEDIUM
                Original: MEDIUM
              Types:
                - Software and Configuration Checks/Industry and Regulatory Standards
            FirstObservedAt: 2022-10-06T02:18:23.076Z
            GeneratorId: security-control/CloudTrail.2
            Id: arn:aws:securityhub:us-east-2:123456789012:security-control/CloudTrail.2/finding/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
            LastObservedAt: 2022-10-28T16:10:06.956Z
            ProductArn: arn:aws:securityhub:us-east-2::product/aws/securityhub
            ProductFields:
              RelatedAWSResources:0/name: securityhub-cloud-trail-encryption-enabled-fe95bf3f
              RelatedAWSResources:0/type: AWS::Config::ConfigRule
              Resources:0/Id: arn:aws:cloudtrail:us-east-2:123456789012:trail/AWSMacieTrail-DO-NOT-EDIT
              aws/securityhub/CompanyName: AWS
              aws/securityhub/FindingId: arn:aws:securityhub:us-east-2::product/aws/securityhub/arn:aws:securityhub:us-east-2:123456789012:security-control/CloudTrail.2/finding/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
              aws/securityhub/ProductName: Security Hub
            ProductName: Security Hub
            RecordState: ACTIVE
            Region: us-east-2
            Remediation:
              Recommendation:
                Text: For directions on how to correct this issue, consult the AWS Security Hub controls documentation.
                Url: https://docs.aws.amazon.com/console/securityhub/CloudTrail.2/remediation
            Resources:
              - Id: arn:aws:cloudtrail:us-east-2:123456789012:trail/AWSMacieTrail-DO-NOT-EDIT
                Partition: aws
                Region: us-east-2
                Type: AwsCloudTrailTrail
            SchemaVersion: 2018-10-08
            Severity:
              Label: MEDIUM
              Normalized: 40
              Original: MEDIUM
            Title: CloudTrail should have encryption at-rest enabled
            Types:
              - Software and Configuration Checks/Industry and Regulatory Standards
            UpdatedAt: 2022-10-28T16:10:00.093Z
            Workflow:
              Status: NEW
            WorkflowState: NEW
      properties:
        Findings:
          allOf:
            - $ref: "#/components/schemas/AwsSecurityFindingList"
            - description: The findings that matched the filters specified in the request.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The pagination token to use to request the next page of results.
    SortCriterion:
      type: object
      properties:
        Field:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The finding attribute used to sort findings.
        SortOrder:
          allOf:
            - $ref: "#/components/schemas/SortOrder"
            - description: The order used to sort findings.
      description: A collection of finding attributes used to sort findings.
    GetInsightResultsResponse:
      type: object
      required:
        - InsightResults
      example:
        InsightResults:
          GroupByAttribute: ResourceId
          InsightArn: arn:aws:securityhub:us-west-1:123456789012:insight/123456789012/custom/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
          ResultValues:
            - Count: 10
              GroupByAttributeValue: AWS::::Account:111122223333
            - Count: 3
              GroupByAttributeValue: AWS::::Account:444455556666
      properties:
        InsightResults:
          allOf:
            - $ref: "#/components/schemas/InsightResults"
            - description: The insight results returned by the operation.
    GetInsightsResponse:
      type: object
      required:
        - Insights
      example:
        Insights:
          - Filters:
              ResourceType:
                - Comparison: EQUALS
                  Value: AwsIamRole
              SeverityLabel:
                - Comparison: EQUALS
                  Value: CRITICAL
            GroupByAttribute: ResourceId
            InsightArn: arn:aws:securityhub:us-west-1:123456789012:insight/123456789012/custom/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
            Name: Critical role findings
      properties:
        Insights:
          allOf:
            - $ref: "#/components/schemas/InsightList"
            - description: The insights returned by the operation.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The pagination token to use to request the next page of results.
    GetInvitationsCountResponse:
      type: object
      example:
        InvitationsCount: 3
      properties:
        InvitationsCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of all membership invitations sent to this Security Hub member account, not including the currently accepted invitation.
    GetMasterAccountResponse:
      type: object
      properties:
        Master:
          allOf:
            - $ref: "#/components/schemas/Invitation"
            - description: "A list of details about the Security Hub administrator account for the current member account. "
    GetMembersResponse:
      type: object
      example:
        Members:
          - AccountId: "444455556666"
            AdministratorId: "123456789012"
            InvitedAt: 2020-06-01T20:15:15.289000+00:00
            MasterId: "123456789012"
            MemberStatus: ASSOCIATED
            UpdatedAt: 2020-06-01T20:15:15.289000+00:00
          - AccountId: "777788889999"
            AdministratorId: "123456789012"
            InvitedAt: 2020-06-01T20:15:15.289000+00:00
            MasterId: "123456789012"
            MemberStatus: ASSOCIATED
            UpdatedAt: 2020-06-01T20:15:15.289000+00:00
        UnprocessedAccounts: []
      properties:
        Members:
          allOf:
            - $ref: "#/components/schemas/MemberList"
            - description: The list of details about the Security Hub member accounts.
        UnprocessedAccounts:
          allOf:
            - $ref: "#/components/schemas/ResultList"
            - description: The list of Amazon Web Services accounts that could not be processed. For each account, the list includes the account ID and the email address.
    InviteMembersResponse:
      type: object
      example:
        UnprocessedAccounts: []
      properties:
        UnprocessedAccounts:
          allOf:
            - $ref: "#/components/schemas/ResultList"
            - description: The list of Amazon Web Services accounts that could not be processed. For each account, the list includes the account ID and the email address.
    ListEnabledProductsForImportResponse:
      type: object
      example:
        ProductSubscriptions:
          - arn:aws:securityhub:us-east-1:517716713836:product-subscription/crowdstrike/crowdstrike-falcon
          - arn:aws:securityhub:us-east-1::product/3coresec/3coresec
      properties:
        ProductSubscriptions:
          allOf:
            - $ref: "#/components/schemas/ProductSubscriptionArnList"
            - description: "The list of ARNs for the resources that represent your subscriptions to products. "
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The pagination token to use to request the next page of results.
    ListFindingAggregatorsResponse:
      type: object
      example:
        FindingAggregators:
          - FindingAggregatorArn: arn:aws:securityhub:us-east-1:222222222222:finding-aggregator/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
      properties:
        FindingAggregators:
          allOf:
            - $ref: "#/components/schemas/FindingAggregatorList"
            - description: The list of finding aggregators. This operation currently only returns a single result.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: <p>If there are more results, this is the token to provide in the next call to <code>ListFindingAggregators</code>.</p> <p>This operation currently only returns a single result. </p>
    ListInvitationsResponse:
      type: object
      example:
        Invitations:
          - AccountId: "123456789012"
            InvitationId: 7ab938c5d52d7904ad09f9e7c20cc4eb
            InvitedAt: 2020-06-01T20:21:18.042000+00:00
            MemberStatus: ASSOCIATED
      properties:
        Invitations:
          allOf:
            - $ref: "#/components/schemas/InvitationList"
            - description: The details of the invitations returned by the operation.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The pagination token to use to request the next page of results.
    ListMembersResponse:
      type: object
      example:
        Members:
          - AccountId: "111122223333"
            AdministratorId: "123456789012"
            InvitedAt: 2020-06-01T20:15:15.289000+00:00
            MasterId: "123456789012"
            MemberStatus: ASSOCIATED
            UpdatedAt: 2020-06-01T20:15:15.289000+00:00
          - AccountId: "444455556666"
            AdministratorId: "123456789012"
            InvitedAt: 2020-06-01T20:15:15.289000+00:00
            MasterId: "123456789012"
            MemberStatus: ASSOCIATED
            UpdatedAt: 2020-06-01T20:15:15.289000+00:00
      properties:
        Members:
          allOf:
            - $ref: "#/components/schemas/MemberList"
            - description: Member details returned by the operation.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The pagination token to use to request the next page of results.
    ListOrganizationAdminAccountsResponse:
      type: object
      example:
        AdminAccounts:
          - AccountId: "777788889999"
          - Status: ENABLED
      properties:
        AdminAccounts:
          allOf:
            - $ref: "#/components/schemas/AdminAccounts"
            - description: The list of Security Hub administrator accounts.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The pagination token to use to request the next page of results.
    ListSecurityControlDefinitionsResponse:
      type: object
      required:
        - SecurityControlDefinitions
      example:
        NextToken: U2FsdGVkX1...
        SecurityControlDefinitions:
          - CurrentRegionAvailability: AVAILABLE
            Description: This AWS control checks whether ACM Certificates in your account are marked for expiration within a specified time period. Certificates provided by ACM are automatically renewed. ACM does not automatically renew certificates that you import.
            RemediationUrl: https://docs.aws.amazon.com/console/securityhub/ACM.1/remediation
            SecurityControlId: ACM.1
            SeverityRating: MEDIUM
            Title: Imported and ACM-issued certificates should be renewed after a specified time period
          - CurrentRegionAvailability: AVAILABLE
            Description: This control checks whether all stages of Amazon API Gateway REST and WebSocket APIs have logging enabled. The control fails if logging is not enabled for all methods of a stage or if loggingLevel is neither ERROR nor INFO.
            RemediationUrl: https://docs.aws.amazon.com/console/securityhub/APIGateway.1/remediation
            SecurityControlId: APIGateway.1
            SeverityRating: MEDIUM
            Title: API Gateway REST and WebSocket API execution logging should be enabled
          - CurrentRegionAvailability: AVAILABLE
            Description: This control checks whether Amazon API Gateway REST API stages have SSL certificates configured that backend systems can use to authenticate that incoming requests are from the API Gateway.
            RemediationUrl: https://docs.aws.amazon.com/console/securityhub/APIGateway.2/remediation
            SecurityControlId: APIGateway.2
            SeverityRating: MEDIUM
            Title: API Gateway REST API stages should be configured to use SSL certificates for backend authentication
      properties:
        SecurityControlDefinitions:
          allOf:
            - $ref: "#/components/schemas/SecurityControlDefinitions"
            - description: " An array of controls that apply to the specified standard. "
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " A pagination parameter that's included in the response only if it was included in the request. "
    ListStandardsControlAssociationsResponse:
      type: object
      required:
        - StandardsControlAssociationSummaries
      example:
        StandardsControlAssociationSummaries:
          - AssociationStatus: ENABLED
            RelatedRequirements:
              - PCI DSS 1.2.1
              - PCI DSS 1.3.1
              - PCI DSS 1.3.2
              - PCI DSS 1.3.4
              - PCI DSS 1.3.6
            SecurityControlArn: arn:aws:securityhub:us-west-2:110479873537:security-control/S3.1
            SecurityControlId: S3.1
            StandardsArn: arn:aws:securityhub:us-west-2::standards/pci-dss/v/3.2.1
            StandardsControlDescription: "This AWS control checks whether the following public access block settings are configured from account level: ignorePublicAcls: True, blockPublicPolicy: True, blockPublicAcls: True, restrictPublicBuckets: True."
            StandardsControlTitle: S3 Block Public Access setting should be enabled
            UpdatedAt: 2022-01-13T23:03:46.648000+00:00
          - AssociationStatus: DISABLED
            RelatedRequirements: []
            SecurityControlArn: arn:aws:securityhub:us-west-2:110479873537:security-control/S3.1
            SecurityControlId: S3.1
            StandardsArn: arn:aws:securityhub:us-west-2::standards/aws-foundational-security-best-practices/v/1.0.0
            StandardsControlDescription: "This AWS control checks whether the following public access block settings are configured from account level: ignorePublicAcls: True, blockPublicPolicy: True, blockPublicAcls: True, restrictPublicBuckets: True."
            StandardsControlTitle: S3 Block Public Access setting should be enabled
            UpdatedAt: 2022-08-12T22:59:04.924000+00:00
            UpdatedReason: Not relevant to environment
      properties:
        StandardsControlAssociationSummaries:
          allOf:
            - $ref: "#/components/schemas/StandardsControlAssociationSummaries"
            - description: " An array that provides the enablement status and other details for each security control that applies to each enabled standard. "
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " A pagination parameter that's included in the response only if it was included in the request. "
    ListTagsForResourceResponse:
      type: object
      example:
        Tags:
          Area: USMidwest
          Department: Operations
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags associated with a resource.
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    UpdateActionTargetResponse:
      type: object
      properties: {}
    UpdateFindingAggregatorResponse:
      type: object
      example:
        FindingAggregationRegion: us-east-1
        FindingAggregatorArn: arn:aws:securityhub:us-east-1:123456789012:finding-aggregator/a1b2c3d4-5678-90ab-cdef-EXAMPLE11111
        RegionLinkingMode: SPECIFIED_REGIONS
        Regions:
          - us-west-1
          - us-west-2
      properties:
        FindingAggregatorArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the finding aggregator.
        FindingAggregationRegion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The aggregation Region.
        RegionLinkingMode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Indicates whether to link all Regions, all Regions except for a list of excluded Regions, or a list of included Regions.
        Regions:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The list of excluded Regions or included Regions.
    UpdateFindingsResponse:
      type: object
      properties: {}
    UpdateInsightResponse:
      type: object
      properties: {}
    UpdateOrganizationConfigurationResponse:
      type: object
      properties: {}
    UpdateSecurityHubConfigurationResponse:
      type: object
      properties: {}
    UpdateStandardsControlResponse:
      type: object
      properties: {}
    AcceptAdministratorInvitationRequest:
      type: object
      required:
        - AdministratorId
        - InvitationId
      title: AcceptAdministratorInvitationRequest
      properties:
        AdministratorId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The account ID of the Security Hub administrator account that sent the invitation.
        InvitationId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the invitation sent from the Security Hub administrator account.
    AcceptInvitationRequest:
      type: object
      required:
        - MasterId
        - InvitationId
      title: AcceptInvitationRequest
      properties:
        MasterId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The account ID of the Security Hub administrator account that sent the invitation.
        InvitationId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the invitation sent from the Security Hub administrator account.
    AccountId:
      type: string
    AccountDetailsList:
      type: array
      items:
        $ref: "#/components/schemas/AccountDetails"
    AccountIdList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    NetworkConnectionAction:
      type: object
      properties:
        ConnectionDirection:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The direction of the network connection request (<code>IN</code> or <code>OUT</code>).
        RemoteIpDetails:
          allOf:
            - $ref: "#/components/schemas/ActionRemoteIpDetails"
            - description: Information about the remote IP address that issued the network connection request.
        RemotePortDetails:
          allOf:
            - $ref: "#/components/schemas/ActionRemotePortDetails"
            - description: Information about the port on the remote IP address.
        LocalPortDetails:
          allOf:
            - $ref: "#/components/schemas/ActionLocalPortDetails"
            - description: Information about the port on the EC2 instance.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The protocol used to make the network connection request.
        Blocked:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the network connection attempt was blocked.
      description: Provided if <code>ActionType</code> is <code>NETWORK_CONNECTION</code>. It provides details about the attempted network connection that was detected.
    AwsApiCallAction:
      type: object
      properties:
        Api:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the API method that was issued.
        ServiceName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the Amazon Web Services service that the API method belongs to.
        CallerType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Indicates whether the API call originated from a remote IP address (<code>remoteip</code>) or from a DNS domain (<code>domain</code>).
        RemoteIpDetails:
          allOf:
            - $ref: "#/components/schemas/ActionRemoteIpDetails"
            - description: Provided if <code>CallerType</code> is <code>remoteIp</code>. Provides information about the remote IP address that the API call originated from.
        DomainDetails:
          allOf:
            - $ref: "#/components/schemas/AwsApiCallActionDomainDetails"
            - description: Provided if <code>CallerType</code> is <code>domain</code>. Provides information about the DNS domain that the API call originated from.
        AffectedResources:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: Identifies the resources that were affected by the API call.
        FirstSeen:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>An ISO8601-formatted timestamp that indicates when the API call was first observed.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
        LastSeen:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>An ISO8601-formatted timestamp that indicates when the API call was most recently observed.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
      description: Provided if <code>ActionType</code> is <code>AWS_API_CALL</code>. It provides details about the API call that was detected.
    DnsRequestAction:
      type: object
      properties:
        Domain:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The DNS domain that is associated with the DNS request.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The protocol that was used for the DNS request.
        Blocked:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the DNS request was blocked.
      description: Provided if <code>ActionType</code> is <code>DNS_REQUEST</code>. It provides details about the DNS request that was detected.
    PortProbeAction:
      type: object
      properties:
        PortProbeDetails:
          allOf:
            - $ref: "#/components/schemas/PortProbeDetailList"
            - description: Information about the ports affected by the port probe.
        Blocked:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the port probe was blocked.
      description: Provided if <code>ActionType</code> is <code>PORT_PROBE</code>. It provides details about the attempted port probe that was detected.
    Action:
      type: object
      properties:
        ActionType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The type of action that was detected. The possible action types are:</p> <ul> <li> <p> <code>NETWORK_CONNECTION</code> </p> </li> <li> <p> <code>AWS_API_CALL</code> </p> </li> <li> <p> <code>DNS_REQUEST</code> </p> </li> <li> <p> <code>PORT_PROBE</code> </p> </li> </ul>
        NetworkConnectionAction:
          allOf:
            - $ref: "#/components/schemas/NetworkConnectionAction"
            - description: Included if <code>ActionType</code> is <code>NETWORK_CONNECTION</code>. Provides details about the network connection that was detected.
        AwsApiCallAction:
          allOf:
            - $ref: "#/components/schemas/AwsApiCallAction"
            - description: "Included if <code>ActionType</code> is <code>AWS_API_CALL</code>. Provides details about the API call that was detected. "
        DnsRequestAction:
          allOf:
            - $ref: "#/components/schemas/DnsRequestAction"
            - description: "Included if <code>ActionType</code> is <code>DNS_REQUEST</code>. Provides details about the DNS request that was detected. "
        PortProbeAction:
          allOf:
            - $ref: "#/components/schemas/PortProbeAction"
            - description: "Included if <code>ActionType</code> is <code>PORT_PROBE</code>. Provides details about the port probe that was detected. "
      description: <p>Provides details about one of the following actions that affects or that was taken on a resource:</p> <ul> <li> <p>A remote IP address issued an Amazon Web Services API call</p> </li> <li> <p>A DNS request was received</p> </li> <li> <p>A remote IP address attempted to connect to an EC2 instance</p> </li> <li> <p>A remote IP address attempted a port probe on an EC2 instance</p> </li> </ul>
    ActionLocalIpDetails:
      type: object
      properties:
        IpAddressV4:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IP address.
      description: Provides information about the IP address where the scanned port is located.
    Integer:
      type: integer
    ActionLocalPortDetails:
      type: object
      properties:
        Port:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of the port.
        PortName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The port name of the local connection.
      description: For <code>NetworkConnectionAction</code> and <code>PortProbeDetails</code>, <code>LocalPortDetails</code> provides information about the local port that was involved in the action.
    IpOrganizationDetails:
      type: object
      properties:
        Asn:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The Autonomous System Number (ASN) of the internet provider
        AsnOrg:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the organization that registered the ASN.
        Isp:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ISP information for the internet provider.
        Org:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the internet provider.
      description: Provides information about an internet provider.
    Country:
      type: object
      properties:
        CountryCode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The 2-letter ISO 3166 country code for the country.
        CountryName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the country.
      description: Information about a country.
    City:
      type: object
      properties:
        CityName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the city.
      description: Information about a city.
    GeoLocation:
      type: object
      properties:
        Lon:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The longitude of the location.
        Lat:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The latitude of the location.
      description: Provides the latitude and longitude coordinates of a location.
    ActionRemoteIpDetails:
      type: object
      properties:
        IpAddressV4:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IP address.
        Organization:
          allOf:
            - $ref: "#/components/schemas/IpOrganizationDetails"
            - description: The internet service provider (ISP) organization associated with the remote IP address.
        Country:
          allOf:
            - $ref: "#/components/schemas/Country"
            - description: The country where the remote IP address is located.
        City:
          allOf:
            - $ref: "#/components/schemas/City"
            - description: The city where the remote IP address is located.
        GeoLocation:
          allOf:
            - $ref: "#/components/schemas/GeoLocation"
            - description: The coordinates of the location of the remote IP address.
      description: For <code>AwsApiAction</code>, <code>NetworkConnectionAction</code>, and <code>PortProbeAction</code>, <code>RemoteIpDetails</code> provides information about the remote IP address that was involved in the action.
    ActionRemotePortDetails:
      type: object
      properties:
        Port:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of the port.
        PortName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The port name of the remote connection.
      description: Provides information about the remote port that was involved in an attempted network connection.
    ActionTarget:
      type: object
      required:
        - ActionTargetArn
        - Name
        - Description
      properties:
        ActionTargetArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN for the target action.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the action target.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The description of the target action.
      description: An <code>ActionTarget</code> object.
    ActionTargetList:
      type: array
      items:
        $ref: "#/components/schemas/ActionTarget"
    Adjustment:
      type: object
      properties:
        Metric:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The metric to adjust.
        Reason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The reason for the adjustment.
      description: An adjustment to the CVSS metric.
    AdjustmentList:
      type: array
      items:
        $ref: "#/components/schemas/Adjustment"
    AdminStatus:
      type: string
      enum:
        - ENABLED
        - DISABLE_IN_PROGRESS
    AdminAccount:
      type: object
      properties:
        AccountId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account identifier of the Security Hub administrator account.
        Status:
          allOf:
            - $ref: "#/components/schemas/AdminStatus"
            - description: The current status of the Security Hub administrator account. Indicates whether the account is currently enabled as a Security Hub administrator.
      description: Represents a Security Hub administrator account designated by an organization management account.
    AdminAccounts:
      type: array
      items:
        $ref: "#/components/schemas/AdminAccount"
    AdminsMaxResults:
      type: integer
      minimum: 1
      maximum: 10
    ArnList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    AssociatedStandard:
      type: object
      properties:
        StandardsId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: 'The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html">DescribeStandards</a> API response. '
      description: " Information about an enabled security standard in which a security control is enabled. "
    AssociatedStandardsList:
      type: array
      items:
        $ref: "#/components/schemas/AssociatedStandard"
    AssociationStateDetails:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The state of the association. "
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The status message, if applicable. "
      description: " Describes the state of an association between a route table and a subnet or gateway. "
    Boolean:
      type: boolean
    AssociationSetDetails:
      type: object
      properties:
        AssociationState:
          allOf:
            - $ref: "#/components/schemas/AssociationStateDetails"
            - description: " The state of the association between a route table and a subnet or gateway. "
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the internet gateway or virtual private gateway. "
        Main:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether this is the main route table. "
        RouteTableAssociationId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the association. "
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the route table. "
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the subnet. A subnet ID is not returned for an implicit association. "
      description: " The associations between a route table and one or more subnets or a gateway. "
    AssociationSetList:
      type: array
      items:
        $ref: "#/components/schemas/AssociationSetDetails"
    AssociationStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    AutoEnableStandards:
      type: string
      enum:
        - NONE
        - DEFAULT
    AvailabilityZone:
      type: object
      properties:
        ZoneName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the Availability Zone.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the subnet. You can specify one subnet per Availability Zone.
      description: Information about an Availability Zone.
    AvailabilityZones:
      type: array
      items:
        $ref: "#/components/schemas/AvailabilityZone"
    AwsApiCallActionDomainDetails:
      type: object
      properties:
        Domain:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the DNS domain that issued the API call.
      description: Provided if <code>CallerType</code> is <code>domain</code>. It provides information about the DNS domain that issued the API call.
    FieldMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/NonEmptyString"
    AwsApiGatewayAccessLogSettings:
      type: object
      properties:
        Format:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A single-line format of the access logs of data, as specified by selected <code>$context</code> variables. The format must include at least <code>$context.requestId</code>.
        DestinationArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the CloudWatch Logs log group that receives the access logs.
      description: Contains information about settings for logging access for the stage.
    AwsApiGatewayCanarySettings:
      type: object
      properties:
        PercentTraffic:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The percentage of traffic that is diverted to a canary deployment.
        DeploymentId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The deployment identifier for the canary deployment.
        StageVariableOverrides:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: <p>Stage variables that are overridden in the canary release deployment. The variables include new stage variables that are introduced in the canary.</p> <p>Each variable is represented as a string-to-string map between the stage variable name and the variable value.</p>
        UseStageCache:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the canary deployment uses the stage cache.
      description: Contains information about settings for canary deployment in the stage.
    NonEmptyStringList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    AwsApiGatewayEndpointConfiguration:
      type: object
      properties:
        Types:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: <p>A list of endpoint types for the REST API.</p> <p>For an edge-optimized API, the endpoint type is <code>EDGE</code>. For a Regional API, the endpoint type is <code>REGIONAL</code>. For a private API, the endpoint type is <code>PRIVATE</code>.</p>
      description: Contains information about the endpoints for the API.
    AwsApiGatewayMethodSettings:
      type: object
      properties:
        MetricsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Indicates whether CloudWatch metrics are enabled for the method. "
        LoggingLevel:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The logging level for this method. The logging level affects the log entries that are pushed to CloudWatch Logs.</p> <p>If the logging level is <code>ERROR</code>, then the logs only include error-level entries.</p> <p>If the logging level is <code>INFO</code>, then the logs include both <code>ERROR</code> events and extra informational events.</p> <p>Valid values: <code>OFF</code> | <code>ERROR</code> | <code>INFO</code> </p>"
        DataTraceEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether data trace logging is enabled for the method. Data trace logging affects the log entries that are pushed to CloudWatch Logs.
        ThrottlingBurstLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The throttling burst limit for the method.
        ThrottlingRateLimit:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The throttling rate limit for the method.
        CachingEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether responses are cached and returned for requests. For responses to be cached, a cache cluster must be enabled on the stage.
        CacheTtlInSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response is cached.
        CacheDataEncrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Indicates whether the cached responses are encrypted. "
        RequireAuthorizationForCacheControl:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether authorization is required for a cache invalidation request.
        UnauthorizedCacheControlHeaderStrategy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>Indicates how to handle unauthorized requests for cache invalidation.</p> <p>Valid values: <code>FAIL_WITH_403</code> | <code>SUCCEED_WITH_RESPONSE_HEADER</code> | <code>SUCCEED_WITHOUT_RESPONSE_HEADER</code> </p>"
        HttpMethod:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The HTTP method. You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.
        ResourcePath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The resource path for this method. Forward slashes (/) are encoded as ~1 . The initial slash must include a forward slash.</p> <p>For example, the path value <code>/resource/subresource</code> must be encoded as <code>/~1resource~1subresource</code>.</p> <p>To specify the root path, use only a slash (/). You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.</p>
      description: Defines settings for a method for the stage.
    AwsApiGatewayMethodSettingsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsApiGatewayMethodSettings"
    AwsApiGatewayRestApiDetails:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the REST API.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the REST API.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the REST API.
        CreatedDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the API was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Version:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version identifier for the REST API.
        BinaryMediaTypes:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The list of binary media types supported by the REST API.
        MinimumCompressionSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The minimum size in bytes of a payload before compression is enabled.</p> <p>If <code>null</code>, then compression is disabled.</p> <p>If 0, then all payloads are compressed.</p>
        ApiKeySource:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The source of the API key for metering requests according to a usage plan.</p> <p> <code>HEADER</code> indicates whether to read the API key from the X-API-Key header of a request.</p> <p> <code>AUTHORIZER</code> indicates whether to read the API key from the <code>UsageIdentifierKey</code> from a custom authorizer.</p>
        EndpointConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsApiGatewayEndpointConfiguration"
            - description: The endpoint configuration of the REST API.
      description: Contains information about a REST API in version 1 of Amazon API Gateway.
    AwsApiGatewayStageDetails:
      type: object
      properties:
        DeploymentId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the deployment that the stage points to.
        ClientCertificateId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the client certificate for the stage.
        StageName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the stage.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the stage.
        CacheClusterEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether a cache cluster is enabled for the stage.
        CacheClusterSize:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: If a cache cluster is enabled, the size of the cache cluster.
        CacheClusterStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: If a cache cluster is enabled, the status of the cache cluster.
        MethodSettings:
          allOf:
            - $ref: "#/components/schemas/AwsApiGatewayMethodSettingsList"
            - description: Defines the method settings for the stage.
        Variables:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: <p>A map that defines the stage variables for the stage.</p> <p>Variable names can have alphanumeric and underscore characters.</p> <p>Variable values can contain the following characters:</p> <ul> <li> <p>Uppercase and lowercase letters</p> </li> <li> <p>Numbers</p> </li> <li> <p>Special characters -._~:/?#&amp;=,</p> </li> </ul>
        DocumentationVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of the API documentation that is associated with the stage.
        AccessLogSettings:
          allOf:
            - $ref: "#/components/schemas/AwsApiGatewayAccessLogSettings"
            - description: Settings for logging access for the stage.
        CanarySettings:
          allOf:
            - $ref: "#/components/schemas/AwsApiGatewayCanarySettings"
            - description: Information about settings for canary deployment in the stage.
        TracingEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether active tracing with X-Ray is enabled for the stage.
        CreatedDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the stage was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        LastUpdatedDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the stage was most recently updated.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        WebAclArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the web ACL associated with the stage.
      description: Provides information about a version 1 Amazon API Gateway stage.
    AwsCorsConfiguration:
      type: object
      properties:
        AllowOrigins:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The allowed origins for CORS requests.
        AllowCredentials:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the CORS request includes credentials.
        ExposeHeaders:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The exposed headers for CORS requests.
        MaxAge:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of seconds for which the browser caches preflight request results.
        AllowMethods:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The allowed methods for CORS requests.
        AllowHeaders:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The allowed headers for CORS requests.
      description: Contains the cross-origin resource sharing (CORS) configuration for the API. CORS is only supported for HTTP APIs.
    AwsApiGatewayV2ApiDetails:
      type: object
      properties:
        ApiEndpoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The URI of the API. </p> <p>Uses the format <code> <i>&lt;api-id&gt;</i>.execute-api.<i>&lt;region&gt;</i>.amazonaws.com</code> </p> <p>The stage name is typically appended to the URI to form a complete path to a deployed API stage.</p>
        ApiId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the API.
        ApiKeySelectionExpression:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "An API key selection expression. Supported only for WebSocket APIs. "
        CreatedDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the API was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the API.
        Version:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version identifier for the API.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the API.
        ProtocolType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The API protocol for the API.</p> <p>Valid values: <code>WEBSOCKET</code> | <code>HTTP</code> </p>"
        RouteSelectionExpression:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The route selection expression for the API.</p> <p>For HTTP APIs, must be <code>${request.method} ${request.path}</code>. This is the default value for HTTP APIs.</p> <p>For WebSocket APIs, there is no default value.</p>
        CorsConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsCorsConfiguration"
            - description: A cross-origin resource sharing (CORS) configuration. Supported only for HTTP APIs.
      description: Contains information about a version 2 API in Amazon API Gateway.
    AwsApiGatewayV2RouteSettings:
      type: object
      properties:
        DetailedMetricsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether detailed metrics are enabled.
        LoggingLevel:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The logging level. The logging level affects the log entries that are pushed to CloudWatch Logs. Supported only for WebSocket APIs.</p> <p>If the logging level is <code>ERROR</code>, then the logs only include error-level entries.</p> <p>If the logging level is <code>INFO</code>, then the logs include both <code>ERROR</code> events and extra informational events.</p> <p>Valid values: <code>OFF</code> | <code>ERROR</code> | <code>INFO</code> </p>"
        DataTraceEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether data trace logging is enabled. Data trace logging affects the log entries that are pushed to CloudWatch Logs. Supported only for WebSocket APIs.
        ThrottlingBurstLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The throttling burst limit.
        ThrottlingRateLimit:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The throttling rate limit.
      description: Contains route settings for a stage.
    AwsApiGatewayV2StageDetails:
      type: object
      properties:
        ClientCertificateId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of a client certificate for a stage. Supported only for WebSocket API calls.
        CreatedDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the stage was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The description of the stage.
        DefaultRouteSettings:
          allOf:
            - $ref: "#/components/schemas/AwsApiGatewayV2RouteSettings"
            - description: Default route settings for the stage.
        DeploymentId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The identifier of the deployment that the stage is associated with. "
        LastUpdatedDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the stage was most recently updated.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        RouteSettings:
          allOf:
            - $ref: "#/components/schemas/AwsApiGatewayV2RouteSettings"
            - description: The route settings for the stage.
        StageName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the stage.
        StageVariables:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: <p>A map that defines the stage variables for the stage.</p> <p>Variable names can have alphanumeric and underscore characters.</p> <p>Variable values can contain the following characters:</p> <ul> <li> <p>Uppercase and lowercase letters</p> </li> <li> <p>Numbers</p> </li> <li> <p>Special characters -._~:/?#&amp;=,</p> </li> </ul>
        AccessLogSettings:
          allOf:
            - $ref: "#/components/schemas/AwsApiGatewayAccessLogSettings"
            - description: Information about settings for logging access for the stage.
        AutoDeploy:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether updates to an API automatically trigger a new deployment.
        LastDeploymentStatusMessage:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the last deployment of a stage. Supported only if the stage has automatic deployment enabled.
        ApiGatewayManaged:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the stage is managed by API Gateway.
      description: Contains information about a version 2 stage for Amazon API Gateway.
    AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the Availability Zone.
      description: An Availability Zone for the automatic scaling group.
    AwsAutoScalingAutoScalingGroupAvailabilityZonesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsAutoScalingAutoScalingGroupAvailabilityZonesListDetails"
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails:
      type: object
      properties:
        InstancesDistribution:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails"
            - description: The instances distribution. The instances distribution specifies the distribution of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances, and how the Auto Scaling group allocates instance types to fulfill On-Demand and Spot capacity.
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails"
            - description: The launch template to use and the instance types (overrides) to use to provision EC2 instances to fulfill On-Demand and Spot capacities.
      description: The mixed instances policy for the automatic scaling group.
    AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.
        Version:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Identifies the version of the launch template. You can specify a version identifier, or use the values <code>$Latest</code> or <code>$Default</code>.
      description: Details about the launch template to use.
    AwsAutoScalingAutoScalingGroupDetails:
      type: object
      properties:
        LaunchConfigurationName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the launch configuration.
        LoadBalancerNames:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The list of load balancers associated with the group.
        HealthCheckType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The service to use for the health checks. Valid values are <code>EC2</code> or <code>ELB</code>.
        HealthCheckGracePeriod:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before it checks the health status of an EC2 instance that has come into service.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the auto scaling group was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        MixedInstancesPolicy:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyDetails"
            - description: The mixed instances policy for the automatic scaling group.
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingAutoScalingGroupAvailabilityZonesList"
            - description: The list of Availability Zones for the automatic scaling group.
        LaunchTemplate:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingAutoScalingGroupLaunchTemplateLaunchTemplateSpecification"
            - description: The launch template to use.
        CapacityRebalance:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Indicates whether capacity rebalancing is enabled. "
      description: Provides details about an auto scaling group.
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyInstancesDistributionDetails:
      type: object
      properties:
        OnDemandAllocationStrategy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: How to allocate instance types to fulfill On-Demand capacity. The valid value is <code>prioritized</code>.
        OnDemandBaseCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The minimum amount of the Auto Scaling group's capacity that must be fulfilled by On-Demand Instances.
        OnDemandPercentageAboveBaseCapacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The percentage of On-Demand Instances and Spot Instances for additional capacity beyond <code>OnDemandBaseCapacity</code>.
        SpotAllocationStrategy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>How to allocate instances across Spot Instance pools. Valid values are as follows:</p> <ul> <li> <p> <code>lowest-price</code> </p> </li> <li> <p> <code>capacity-optimized</code> </p> </li> <li> <p> <code>capacity-optimized-prioritized</code> </p> </li> </ul>
        SpotInstancePools:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of Spot Instance pools across which to allocate your Spot Instances.
        SpotMaxPrice:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The maximum price per unit hour that you are willing to pay for a Spot Instance.
      description: Information about the instances distribution.
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateDetails:
      type: object
      properties:
        LaunchTemplateSpecification:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification"
            - description: The launch template to use for a mixed instances policy.
        Overrides:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesList"
            - description: Property values to use to override the values in the launch template.
      description: Describes a launch template and overrides for a mixed instances policy.
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification:
      type: object
      properties:
        LaunchTemplateId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the launch template. You must specify either <code>LaunchTemplateId</code> or <code>LaunchTemplateName</code>.
        Version:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Identifies the version of the launch template. You can specify a version identifier, or use the values <code>$Latest</code> or <code>$Default</code>.
      description: Details about the launch template to use for a mixed instances policy.
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails"
    AwsAutoScalingAutoScalingGroupMixedInstancesPolicyLaunchTemplateOverridesListDetails:
      type: object
      properties:
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The instance type. For example, <code>m3.xlarge</code>.
        WeightedCapacity:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The number of capacity units provided by the specified instance type in terms of virtual CPUs, memory, storage, throughput, or other relative performance characteristic.
      description: Property values to use to override the values in the launch template.
    AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails:
      type: object
      properties:
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to delete the volume when the instance is terminated.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to encrypt the volume.
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The number of input/output (I/O) operations per second (IOPS) to provision for the volume.</p> <p>Only supported for <code>gp3</code> or <code>io1</code> volumes. Required for <code>io1</code> volumes. Not used with <code>standard</code>, <code>gp2</code>, <code>st1</code>, or <code>sc1</code> volumes.</p>
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The snapshot ID of the volume to use.</p> <p>You must specify either <code>VolumeSize</code> or <code>SnapshotId</code>.</p>
        VolumeSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The volume size, in GiBs. The following are the supported volumes sizes for each volume type:</p> <ul> <li> <p>gp2 and gp3: 1-16,384</p> </li> <li> <p>io1: 4-16,384</p> </li> <li> <p>st1 and sc1: 125-16,384</p> </li> <li> <p>standard: 1-1,024</p> </li> </ul> <p>You must specify either <code>SnapshotId</code> or <code>VolumeSize</code>. If you specify both <code>SnapshotId</code> and <code>VolumeSize</code>, the volume size must be equal or greater than the size of the snapshot.</p>"
        VolumeType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The volume type. Valid values are as follows:</p> <ul> <li> <p> <code>gp2</code> </p> </li> <li> <p> <code>gp3</code> </p> </li> <li> <p> <code>io1</code> </p> </li> <li> <p> <code>sc1</code> </p> </li> <li> <p> <code>st1</code> </p> </li> <li> <p> <code>standard</code> </p> </li> </ul>
      description: Parameters that are used to automatically set up EBS volumes when an instance is launched.
    AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails:
      type: object
      properties:
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The device name that is exposed to the EC2 instance. For example, <code>/dev/sdh</code> or <code>xvdh</code>.
        Ebs:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingLaunchConfigurationBlockDeviceMappingsEbsDetails"
            - description: Parameters that are used to automatically set up Amazon EBS volumes when an instance is launched.
        NoDevice:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Whether to suppress the device that is included in the block device mapping of the Amazon Machine Image (AMI).</p> <p>If <code>NoDevice</code> is <code>true</code>, then you cannot specify <code>Ebs</code>.&gt;</p>
        VirtualName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The name of the virtual device (for example, <code>ephemeral0</code>).</p> <p>You can provide either <code>VirtualName</code> or <code>Ebs</code>, but not both.</p>
      description: A block device for the instance.
    AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsAutoScalingLaunchConfigurationBlockDeviceMappingsDetails"
    AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>If set to <code>true</code>, then instances in the group launch with detailed monitoring.</p> <p>If set to <code>false</code>, then instances in the group launch with basic monitoring.</p>
      description: Information about the type of monitoring for instances in the group.
    AwsAutoScalingLaunchConfigurationMetadataOptions:
      type: object
      properties:
        HttpEndpoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Enables or disables the HTTP metadata endpoint on your instances. By default, the metadata endpoint is enabled.
        HttpPutResponseHopLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The HTTP <code>PUT</code> response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel.
        HttpTokens:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Indicates whether token usage is <code>required</code> or <code>optional</code> for metadata requests. By default, token usage is <code>optional</code>.
      description: The metadata options for the instances.
    AwsAutoScalingLaunchConfigurationDetails:
      type: object
      properties:
        AssociatePublicIpAddress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: For Auto Scaling groups that run in a VPC, specifies whether to assign a public IP address to the group's instances.
        BlockDeviceMappings:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingLaunchConfigurationBlockDeviceMappingsList"
            - description: Specifies the block devices for the instance.
        ClassicLinkVpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of a ClassicLink-enabled VPC that EC2-Classic instances are linked to.
        ClassicLinkVpcSecurityGroups:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The identifiers of one or more security groups for the VPC that is specified in <code>ClassicLinkVPCId</code>.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The creation date and time for the launch configuration.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the launch configuration is optimized for Amazon EBS I/O.
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name or the ARN of the instance profile associated with the IAM role for the instance. The instance profile contains the IAM role.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the Amazon Machine Image (AMI) that is used to launch EC2 instances.
        InstanceMonitoring:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingLaunchConfigurationInstanceMonitoringDetails"
            - description: Indicates the type of monitoring for instances in the group.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The instance type for the instances.
        KernelId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the kernel associated with the AMI.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the key pair.
        LaunchConfigurationName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the launch configuration.
        PlacementTenancy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The tenancy of the instance. An instance with <code>dedicated</code> tenancy runs on isolated, single-tenant hardware and can only be launched into a VPC.
        RamdiskId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the RAM disk associated with the AMI.
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The security groups to assign to the instances in the Auto Scaling group.
        SpotPrice:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The maximum hourly price to be paid for any Spot Instance that is launched to fulfill the request.
        UserData:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The user data to make available to the launched EC2 instances. Must be base64-encoded text.
        MetadataOptions:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingLaunchConfigurationMetadataOptions"
            - description: The metadata options for the instances.
      description: Details about a launch configuration.
    AwsBackupBackupPlanAdvancedBackupSettingsDetails:
      type: object
      properties:
        BackupOptions:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: "<p>Specifies the backup option for a selected resource. This option is only available for Windows Volume Shadow Copy Service (VSS) backup jobs. Valid values are as follows:</p> <ul> <li> <p>Set to <code>WindowsVSS: enabled</code> to enable the WindowsVSS backup option and create a Windows VSS backup.</p> </li> <li> <p>Set to <code>WindowsVSS: disabled</code> to create a regular backup. The <code>WindowsVSS</code> option is not enabled by default.</p> </li> </ul>"
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The name of a resource type. The only supported resource type is Amazon EC2 instances with Windows VSS.</p> <p>The only valid value is <code>EC2</code>.</p>
      description: "Provides a list of backup options for each resource type. "
    AwsBackupBackupPlanAdvancedBackupSettingsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsBackupBackupPlanAdvancedBackupSettingsDetails"
    AwsBackupBackupPlanRuleList:
      type: array
      items:
        $ref: "#/components/schemas/AwsBackupBackupPlanRuleDetails"
    AwsBackupBackupPlanBackupPlanDetails:
      type: object
      properties:
        BackupPlanName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The display name of a backup plan. "
        AdvancedBackupSettings:
          allOf:
            - $ref: "#/components/schemas/AwsBackupBackupPlanAdvancedBackupSettingsList"
            - description: "A list of backup options for each resource type. "
        BackupPlanRule:
          allOf:
            - $ref: "#/components/schemas/AwsBackupBackupPlanRuleList"
            - description: "An array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources. "
      description: "Provides details about an Backup backup plan and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. "
    AwsBackupBackupPlanDetails:
      type: object
      properties:
        BackupPlan:
          allOf:
            - $ref: "#/components/schemas/AwsBackupBackupPlanBackupPlanDetails"
            - description: "Uniquely identifies the backup plan to be associated with the selection of resources. "
        BackupPlanArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "An Amazon Resource Name (ARN) that uniquely identifies the backup plan. "
        BackupPlanId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A unique ID for the backup plan. "
        VersionId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Unique, randomly generated, Unicode, UTF-8 encoded strings. Version IDs cannot be edited. "
      description: "Provides details about an Backup backup plan and an array of <code>BackupRule</code> objects, each of which specifies a backup rule. "
    Long:
      type: integer
    AwsBackupBackupPlanLifecycleDetails:
      type: object
      properties:
        DeleteAfterDays:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: "Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>. "
        MoveToColdStorageAfterDays:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: "Specifies the number of days after creation that a recovery point is moved to cold storage. "
      description: "Provides lifecycle details for the backup plan. A lifecycle defines when a backup is transitioned to cold storage and when it expires. "
    AwsBackupBackupPlanRuleCopyActionsDetails:
      type: object
      properties:
        DestinationBackupVaultArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "An Amazon Resource Name (ARN) that uniquely identifies the destination backup vault for the copied backup. "
        Lifecycle:
          allOf:
            - $ref: "#/components/schemas/AwsBackupBackupPlanLifecycleDetails"
            - description: <p>Defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define. If you do not specify a lifecycle, Backup applies the lifecycle policy of the source backup to the destination backup.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days.</p>
      description: "An array of <code>CopyAction</code> objects, each of which contains details of the copy operation. "
    AwsBackupBackupPlanRuleCopyActionsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsBackupBackupPlanRuleCopyActionsDetails"
    AwsBackupBackupPlanRuleDetails:
      type: object
      properties:
        TargetBackupVault:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the Amazon Web Services account used to create them and the Amazon Web Services Region where they are created. They consist of letters, numbers, and hyphens. "
        StartWindowMinutes:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: "A value in minutes after a backup is scheduled before a job will be canceled if it doesn't start successfully. "
        ScheduleExpression:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A cron expression in UTC specifying when Backup initiates a backup job. "
        RuleName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A display name for a backup rule. Must contain 1 to 50 alphanumeric or '-_.' characters. "
        RuleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Uniquely identifies a rule that is used to schedule the backup of a selection of resources. "
        EnableContinuousBackup:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Specifies whether Backup creates continuous backups capable of point-in-time restore (PITR). "
        CompletionWindowMinutes:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: "A value in minutes after a backup job is successfully started before it must be completed, or it is canceled by Backup. "
        CopyActions:
          allOf:
            - $ref: "#/components/schemas/AwsBackupBackupPlanRuleCopyActionsList"
            - description: "An array of <code>CopyAction</code> objects, each of which contains details of the copy operation. "
        Lifecycle:
          allOf:
            - $ref: "#/components/schemas/AwsBackupBackupPlanLifecycleDetails"
            - description: <p>Defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define. If you do not specify a lifecycle, Backup applies the lifecycle policy of the source backup to the destination backup.</p> <p>Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days.</p>
      description: "Provides details about an array of <code>BackupRule</code> objects, each of which specifies a scheduled task that is used to back up a selection of resources. "
    AwsBackupBackupVaultNotificationsDetails:
      type: object
      properties:
        BackupVaultEvents:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: <p>An array of events that indicate the status of jobs to back up resources to the backup vault. The following events are supported:</p> <ul> <li> <p> <code>BACKUP_JOB_STARTED | BACKUP_JOB_COMPLETED</code> </p> </li> <li> <p> <code>COPY_JOB_STARTED | COPY_JOB_SUCCESSFUL | COPY_JOB_FAILED</code> </p> </li> <li> <p> <code>RESTORE_JOB_STARTED | RESTORE_JOB_COMPLETED | RECOVERY_POINT_MODIFIED</code> </p> </li> <li> <p> <code>S3_BACKUP_OBJECT_FAILED | S3_RESTORE_OBJECT_FAILED</code> </p> </li> </ul>
        SnsTopicArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Amazon Resource Name (ARN) that uniquely identifies the Amazon SNS topic for a backup vault's events. "
      description: "Provides details about the Amazon SNS event notifications for the specified backup vault. "
    AwsBackupBackupVaultDetails:
      type: object
      properties:
        BackupVaultArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "An Amazon Resource Name (ARN) that uniquely identifies a backup vault. "
        BackupVaultName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the Amazon Web Services account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens. "
        EncryptionKeyArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The unique ARN associated with the server-side encryption key. You can specify a key to encrypt your backups from services that support full Backup management. If you do not specify a key, Backup creates an KMS key for you by default. "
        Notifications:
          allOf:
            - $ref: "#/components/schemas/AwsBackupBackupVaultNotificationsDetails"
            - description: "The Amazon SNS event notifications for the specified backup vault. "
        AccessPolicy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A resource-based policy that is used to manage access permissions on the target backup vault. "
      description: "Provides details about an Backup backup vault. In Backup, a backup vault is a container that stores and organizes your backups. "
    AwsBackupRecoveryPointCalculatedLifecycleDetails:
      type: object
      properties:
        DeleteAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>. "
        MoveToColdStorageAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Specifies the number of days after creation that a recovery point is moved to cold storage. "
      description: "Specifies how long in days before a recovery point transitions to cold storage or is deleted. "
    AwsBackupRecoveryPointCreatedByDetails:
      type: object
      properties:
        BackupPlanArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "An Amazon Resource Name (ARN) that uniquely identifies a backup plan. "
        BackupPlanId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Uniquely identifies a backup plan. "
        BackupPlanVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Unique, randomly generated, Unicode, UTF-8 encoded strings that are at most 1,024 bytes long. Version IDs cannot be edited. "
        BackupRuleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Uniquely identifies a rule used to schedule the backup of a selection of resources. "
      description: "Contains information about the backup plan and rule that Backup used to initiate the recovery point backup. "
    AwsBackupRecoveryPointLifecycleDetails:
      type: object
      properties:
        DeleteAfterDays:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: "Specifies the number of days after creation that a recovery point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>. "
        MoveToColdStorageAfterDays:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: "Specifies the number of days after creation that a recovery point is moved to cold storage. "
      description: "Contains an array of Transition objects specifying how long in days before a recovery point transitions to cold storage or is deleted. "
    AwsBackupRecoveryPointDetails:
      type: object
      properties:
        BackupSizeInBytes:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: "The size, in bytes, of a backup. "
        BackupVaultArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "An Amazon Resource Name (ARN) that uniquely identifies a backup vault. "
        BackupVaultName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of a logical container where backups are stored. Backup vaults are identified by names that are unique to the Amazon Web Services account used to create them and the Amazon Web Services Region where they are created. They consist of lowercase letters, numbers, and hyphens. "
        CalculatedLifecycle:
          allOf:
            - $ref: "#/components/schemas/AwsBackupRecoveryPointCalculatedLifecycleDetails"
            - description: "A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code> and <code>MoveToColdStorageAt</code> timestamps. "
        CompletionDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The date and time that a job to create a recovery point is completed, in Unix format and UTC. The value of <code>CompletionDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM. "
        CreatedBy:
          allOf:
            - $ref: "#/components/schemas/AwsBackupRecoveryPointCreatedByDetails"
            - description: "Contains identifying information about the creation of a recovery point, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>, <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup plan that is used to create it. "
        CreationDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The date and time a recovery point is created, in Unix format and UTC. The value of <code>CreationDate</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM. "
        EncryptionKeyArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ARN for the server-side encryption key that is used to protect your backups. "
        IamRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Specifies the IAM role ARN used to create the target recovery point "
        IsEncrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "A Boolean value that is returned as <code>TRUE</code> if the specified recovery point is encrypted, or <code>FALSE</code> if the recovery point is not encrypted. "
        LastRestoreTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The date and time that a recovery point was last restored, in Unix format and UTC. The value of <code>LastRestoreTime</code> is accurate to milliseconds. For example, the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM. "
        Lifecycle:
          allOf:
            - $ref: "#/components/schemas/AwsBackupRecoveryPointLifecycleDetails"
            - description: "The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define "
        RecoveryPointArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "An ARN that uniquely identifies a recovery point. "
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "An ARN that uniquely identifies a resource. The format of the ARN depends on the resource type. "
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The type of Amazon Web Services resource saved as a recovery point, such as an Amazon EBS volume or an Amazon RDS database. "
        SourceBackupVaultArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ARN for the backup vault where the recovery point was originally copied from. If the recovery point is restored to the same account, this value will be null. "
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>A status code specifying the state of the recovery point. Valid values are as follows:</p> <ul> <li> <p> <code>COMPLETED</code> </p> </li> <li> <p> <code>DELETING</code> </p> </li> <li> <p> <code>EXPIRED</code> </p> </li> <li> <p> <code>PARTIAL</code> </p> </li> </ul>
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A message explaining the reason of the recovery point deletion failure. "
        StorageClass:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Specifies the storage class of the recovery point. Valid values are as follows:</p> <ul> <li> <p> <code>COLD</code> </p> </li> <li> <p> <code>DELETED</code> </p> </li> <li> <p> <code>WARM</code> </p> </li> </ul>
      description: "Contains detailed information about the recovery points stored in an Backup backup vault. A backup, or recovery point, represents the content of a resource at a specified time. "
    AwsCertificateManagerCertificateDomainValidationOptions:
      type: array
      items:
        $ref: "#/components/schemas/AwsCertificateManagerCertificateDomainValidationOption"
    AwsCertificateManagerCertificateExtendedKeyUsages:
      type: array
      items:
        $ref: "#/components/schemas/AwsCertificateManagerCertificateExtendedKeyUsage"
    AwsCertificateManagerCertificateKeyUsages:
      type: array
      items:
        $ref: "#/components/schemas/AwsCertificateManagerCertificateKeyUsage"
    AwsCertificateManagerCertificateOptions:
      type: object
      properties:
        CertificateTransparencyLoggingPreference:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>Whether to add the certificate to a transparency log.</p> <p>Valid values: <code>DISABLED</code> | <code>ENABLED</code> </p>"
      description: Contains other options for the certificate.
    AwsCertificateManagerCertificateRenewalSummary:
      type: object
      properties:
        DomainValidationOptions:
          allOf:
            - $ref: "#/components/schemas/AwsCertificateManagerCertificateDomainValidationOptions"
            - description: Information about the validation of each domain name in the certificate, as it pertains to Certificate Manager managed renewal. Provided only when the certificate type is <code>AMAZON_ISSUED</code>.
        RenewalStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The status of the Certificate Manager managed renewal of the certificate.</p> <p>Valid values: <code>PENDING_AUTO_RENEWAL</code> | <code>PENDING_VALIDATION</code> | <code>SUCCESS</code> | <code>FAILED</code> </p>"
        RenewalStatusReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The reason that a renewal request was unsuccessful. This attribute is used only when <code>RenewalStatus</code> is <code>FAILED</code>.</p> <p>Valid values: <code>NO_AVAILABLE_CONTACTS</code> | <code>ADDITIONAL_VERIFICATION_REQUIRED</code> | <code>DOMAIN_NOT_ALLOWED</code> | <code>INVALID_PUBLIC_DOMAIN</code> | <code>DOMAIN_VALIDATION_DENIED</code> | <code>CAA_ERROR</code> | <code>PCA_LIMIT_EXCEEDED</code> | <code>PCA_INVALID_ARN</code> | <code>PCA_INVALID_STATE</code> | <code>PCA_REQUEST_FAILED</code> | <code>PCA_NAME_CONSTRAINTS_VALIDATION</code> | <code>PCA_RESOURCE_NOT_FOUND</code> | <code>PCA_INVALID_ARGS</code> | <code>PCA_INVALID_DURATION</code> | <code>PCA_ACCESS_DENIED</code> | <code>SLR_NOT_FOUND</code> | <code>OTHER</code> </p>"
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the renewal summary was last updated.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: Contains information about the Certificate Manager managed renewal for an <code>AMAZON_ISSUED</code> certificate.
    AwsCertificateManagerCertificateDetails:
      type: object
      properties:
        CertificateAuthorityArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the private certificate authority (CA) that will be used to issue the certificate.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the certificate was requested.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        DomainName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The fully qualified domain name (FQDN), such as www.example.com, that is secured by the certificate.
        DomainValidationOptions:
          allOf:
            - $ref: "#/components/schemas/AwsCertificateManagerCertificateDomainValidationOptions"
            - description: <p>Contains information about the initial validation of each domain name that occurs as a result of the <code>RequestCertificate</code> request.</p> <p>Only provided if the certificate type is <code>AMAZON_ISSUED</code>.</p>
        ExtendedKeyUsages:
          allOf:
            - $ref: "#/components/schemas/AwsCertificateManagerCertificateExtendedKeyUsages"
            - description: Contains a list of Extended Key Usage X.509 v3 extension objects. Each object specifies a purpose for which the certificate public key can be used and consists of a name and an object identifier (OID).
        FailureReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>For a failed certificate request, the reason for the failure.</p> <p>Valid values: <code>NO_AVAILABLE_CONTACTS</code> | <code>ADDITIONAL_VERIFICATION_REQUIRED</code> | <code>DOMAIN_NOT_ALLOWED</code> | <code>INVALID_PUBLIC_DOMAIN</code> | <code>DOMAIN_VALIDATION_DENIED</code> | <code>CAA_ERROR</code> | <code>PCA_LIMIT_EXCEEDED</code> | <code>PCA_INVALID_ARN</code> | <code>PCA_INVALID_STATE</code> | <code>PCA_REQUEST_FAILED</code> | <code>PCA_NAME_CONSTRAINTS_VALIDATION</code> | <code>PCA_RESOURCE_NOT_FOUND</code> | <code>PCA_INVALID_ARGS</code> | <code>PCA_INVALID_DURATION</code> | <code>PCA_ACCESS_DENIED</code> | <code>SLR_NOT_FOUND</code> | <code>OTHER</code> </p>"
        ImportedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the certificate was imported. Provided if the certificate type is <code>IMPORTED</code>.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        InUseBy:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The list of ARNs for the Amazon Web Services resources that use the certificate.
        IssuedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the certificate was issued. Provided if the certificate type is <code>AMAZON_ISSUED</code>.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Issuer:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the certificate authority that issued and signed the certificate.
        KeyAlgorithm:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The algorithm that was used to generate the public-private key pair.</p> <p>Valid values: <code>RSA_2048</code> | <code>RSA_1024</code> |<code> RSA_4096</code> | <code>EC_prime256v1</code> | <code>EC_secp384r1</code> | <code>EC_secp521r1</code> </p>"
        KeyUsages:
          allOf:
            - $ref: "#/components/schemas/AwsCertificateManagerCertificateKeyUsages"
            - description: A list of key usage X.509 v3 extension objects.
        NotAfter:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The time after which the certificate becomes invalid.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        NotBefore:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The time before which the certificate is not valid.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Options:
          allOf:
            - $ref: "#/components/schemas/AwsCertificateManagerCertificateOptions"
            - description: Provides a value that specifies whether to add the certificate to a transparency log.
        RenewalEligibility:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>Whether the certificate is eligible for renewal.</p> <p>Valid values: <code>ELIGIBLE</code> | <code>INELIGIBLE</code> </p>"
        RenewalSummary:
          allOf:
            - $ref: "#/components/schemas/AwsCertificateManagerCertificateRenewalSummary"
            - description: Information about the status of the Certificate Manager managed renewal for the certificate. Provided only when the certificate type is <code>AMAZON_ISSUED</code>.
        Serial:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The serial number of the certificate.
        SignatureAlgorithm:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The algorithm that was used to sign the certificate.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The status of the certificate.</p> <p>Valid values: <code>PENDING_VALIDATION</code> | <code>ISSUED</code> | <code>INACTIVE</code> | <code>EXPIRED</code> | <code>VALIDATION_TIMED_OUT</code> | <code>REVOKED</code> | <code>FAILED</code> </p>"
        Subject:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the entity that is associated with the public key contained in the certificate.
        SubjectAlternativeNames:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: <p>One or more domain names (subject alternative names) included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate.</p> <p>The subject alternative names include the canonical domain name (CN) of the certificate and additional domain names that can be used to connect to the website.</p>
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The source of the certificate. For certificates that Certificate Manager provides, <code>Type</code> is <code>AMAZON_ISSUED</code>. For certificates that are imported with <code>ImportCertificate</code>, <code>Type</code> is <code>IMPORTED</code>.</p> <p>Valid values: <code>IMPORTED</code> | <code>AMAZON_ISSUED</code> | <code>PRIVATE</code> </p>"
      description: Provides details about an Certificate Manager certificate.
    AwsCertificateManagerCertificateResourceRecord:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the resource.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of resource.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of the resource.
      description: Provides details about the CNAME record that is added to the DNS database for domain validation.
    AwsCertificateManagerCertificateDomainValidationOption:
      type: object
      properties:
        DomainName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A fully qualified domain name (FQDN) in the certificate.
        ResourceRecord:
          allOf:
            - $ref: "#/components/schemas/AwsCertificateManagerCertificateResourceRecord"
            - description: The CNAME record that is added to the DNS database for domain validation.
        ValidationDomain:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The domain name that Certificate Manager uses to send domain validation emails.
        ValidationEmails:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of email addresses that Certificate Manager uses to send domain validation emails.
        ValidationMethod:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The method used to validate the domain name.
        ValidationStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The validation status of the domain name.
      description: <p>Contains information about one of the following:</p> <ul> <li> <p>The initial validation of each domain name that occurs as a result of the <code>RequestCertificate</code> request</p> </li> <li> <p>The validation of each domain name in the certificate, as it pertains to Certificate Manager managed renewal</p> </li> </ul>
    AwsCertificateManagerCertificateExtendedKeyUsage:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of an extension value. Indicates the purpose for which the certificate public key can be used.
        OId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>An object identifier (OID) for the extension value.</p> <p>The format is numbers separated by periods.</p>
      description: Contains information about an extended key usage X.509 v3 extension object.
    AwsCertificateManagerCertificateKeyUsage:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The key usage extension name.
      description: Contains information about a key usage X.509 v3 extension object.
    AwsCloudFormationStackDriftInformationDetails:
      type: object
      properties:
        StackDriftStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Status of the stack's actual configuration compared to its expected template configuration. "
      description: "Provides information about the stack's conformity to its expected template configuration. "
    AwsCloudFormationStackOutputsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsCloudFormationStackOutputsDetails"
    AwsCloudFormationStackDetails:
      type: object
      properties:
        Capabilities:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: "The capabilities allowed in the stack. "
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The time at which the stack was created. "
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A user-defined description associated with the stack. "
        DisableRollback:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Boolean to enable or disable rollback on stack creation failures. "
        DriftInformation:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFormationStackDriftInformationDetails"
            - description: "Information about whether a stack's actual configuration differs, or has drifted, from its expected configuration, as defined in the stack template and any values specified as template parameters. "
        EnableTerminationProtection:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Whether termination protection is enabled for the stack. "
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The time the nested stack was last updated. This field will only be returned if the stack has been updated at least once.
        NotificationArns:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: "The Amazon Resource Names (ARNs) of the Amazon SNS topic to which stack-related events are published. "
        Outputs:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFormationStackOutputsList"
            - description: "A list of output structures. "
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ARN of an IAM role that's associated with the stack. "
        StackId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Unique identifier of the stack. "
        StackName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name associated with the stack. "
        StackStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Current status of the stack. "
        StackStatusReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Success or failure message associated with the stack status. "
        TimeoutInMinutes:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The length of time, in minutes, that CloudFormation waits for the nested stack to reach the <code>CREATE_COMPLETE</code> state. "
      description: Nests a stack as a resource in a top-level template. Nested stacks are stacks created as resources for another stack.
    AwsCloudFormationStackOutputsDetails:
      type: object
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A user-defined description associated with the output. "
        OutputKey:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The key associated with the output. "
        OutputValue:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The value associated with the output. "
      description: "Provides information about the CloudFormation stack output. "
    AwsCloudFrontDistributionCacheBehavior:
      type: object
      properties:
        ViewerProtocolPolicy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The protocol that viewers can use to access the files in an origin. You can specify the following options:</p> <ul> <li> <p> <code>allow-all</code> - Viewers can use HTTP or HTTPS.</p> </li> <li> <p> <code>redirect-to-https</code> - CloudFront responds to HTTP requests with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL. The viewer then uses the new URL to resubmit.</p> </li> <li> <p> <code>https-only</code> - CloudFront responds to HTTP request with an HTTP status code of 403 (Forbidden).</p> </li> </ul>
      description: Information about a cache behavior for the distribution.
    AwsCloudFrontDistributionCacheBehaviorsItemList:
      type: array
      items:
        $ref: "#/components/schemas/AwsCloudFrontDistributionCacheBehavior"
    AwsCloudFrontDistributionCacheBehaviors:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionCacheBehaviorsItemList"
            - description: The cache behaviors for the distribution.
      description: Provides information about caching for the CloudFront distribution.
    AwsCloudFrontDistributionDefaultCacheBehavior:
      type: object
      properties:
        ViewerProtocolPolicy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The protocol that viewers can use to access the files in an origin. You can specify the following options:</p> <ul> <li> <p> <code>allow-all</code> - Viewers can use HTTP or HTTPS.</p> </li> <li> <p> <code>redirect-to-https</code> - CloudFront responds to HTTP requests with an HTTP status code of 301 (Moved Permanently) and the HTTPS URL. The viewer then uses the new URL to resubmit.</p> </li> <li> <p> <code>https-only</code> - CloudFront responds to HTTP request with an HTTP status code of 403 (Forbidden).</p> </li> </ul>
      description: Contains information about the default cache configuration for the CloudFront distribution.
    AwsCloudFrontDistributionLogging:
      type: object
      properties:
        Bucket:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The S3 bucket to store the access logs in.
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: With this field, you can enable or disable the selected distribution.
        IncludeCookies:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether you want CloudFront to include cookies in access logs.
        Prefix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: An optional string that you want CloudFront to use as a prefix to the access log filenames for this distribution.
      description: A complex type that controls whether access logs are written for the CloudFront distribution.
    AwsCloudFrontDistributionOrigins:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionOriginItemList"
            - description: A complex type that contains origins or origin groups for this distribution.
      description: A complex type that contains information about origins and origin groups for this CloudFront distribution.
    AwsCloudFrontDistributionOriginGroups:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionOriginGroupsItemList"
            - description: The list of origin groups.
      description: Provides information about origin groups that are associated with the CloudFront distribution.
    AwsCloudFrontDistributionViewerCertificate:
      type: object
      properties:
        AcmCertificateArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the ACM certificate. Used if the certificate is stored in ACM. If you provide an ACM certificate ARN, you must also provide <code>MinimumCertificateVersion</code> and <code>SslSupportMethod</code>.
        Certificate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the certificate. Note that in CloudFront, this attribute is deprecated.
        CertificateSource:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The source of the certificate identified by <code>Certificate</code>. Note that in CloudFront, this attribute is deprecated.
        CloudFrontDefaultCertificate:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the distribution uses the CloudFront domain name. If set to <code>false</code>, then you provide either <code>AcmCertificateArn</code> or <code>IamCertificateId</code>.
        IamCertificateId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the IAM certificate. Used if the certificate is stored in IAM. If you provide <code>IamCertificateId</code>, then you also must provide <code>MinimumProtocolVersion</code> and <code>SslSupportMethod</code>.
        MinimumProtocolVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The security policy that CloudFront uses for HTTPS connections with viewers. If <code>SslSupportMethod</code> is <code>sni-only</code>, then <code>MinimumProtocolVersion</code> must be <code>TLSv1</code> or higher.
        SslSupportMethod:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The viewers that the distribution accepts HTTPS connections from.
      description: Provides information about the TLS/SSL configuration that the CloudFront distribution uses to communicate with viewers.
    AwsCloudFrontDistributionDetails:
      type: object
      properties:
        CacheBehaviors:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionCacheBehaviors"
            - description: Provides information about the cache configuration for the distribution.
        DefaultCacheBehavior:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionDefaultCacheBehavior"
            - description: The default cache behavior for the configuration.
        DefaultRootObject:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The object that CloudFront sends in response to requests from the origin (for example, index.html) when a viewer requests the root URL for the distribution (http://www.example.com) instead of an object in your distribution (http://www.example.com/product-description.html). "
        DomainName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The domain name corresponding to the distribution.
        ETag:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The entity tag is a hash of the object.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when that the distribution was last modified.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Logging:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionLogging"
            - description: A complex type that controls whether access logs are written for the distribution.
        Origins:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionOrigins"
            - description: A complex type that contains information about origins for this distribution.
        OriginGroups:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionOriginGroups"
            - description: Provides information about the origin groups in the distribution.
        ViewerCertificate:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionViewerCertificate"
            - description: Provides information about the TLS/SSL configuration that the distribution uses to communicate with viewers.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Indicates the current status of the distribution.
        WebAclId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A unique identifier that specifies the WAF web ACL, if any, to associate with this distribution.
      description: A CloudFront distribution configuration.
    AwsCloudFrontDistributionOriginSslProtocols:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: "A list that contains allowed SSL/TLS protocols for this distribution. "
        Quantity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The number of SSL/TLS protocols that you want to allow CloudFront to use when establishing an HTTPS connection with this origin. "
      description: "A complex type that contains information about the SSL/TLS protocols that CloudFront can use when establishing an HTTPS connection with your origin. "
    AwsCloudFrontDistributionOriginCustomOriginConfig:
      type: object
      properties:
        HttpPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The HTTP port that CloudFront uses to connect to the origin. "
        HttpsPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The HTTPS port that CloudFront uses to connect to the origin. "
        OriginKeepaliveTimeout:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "Specifies how long, in seconds, CloudFront persists its connection to the origin. "
        OriginProtocolPolicy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Specifies the protocol (HTTP or HTTPS) that CloudFront uses to connect to the origin. "
        OriginReadTimeout:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "Specifies how long, in seconds, CloudFront waits for a response from the origin. "
        OriginSslProtocols:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionOriginSslProtocols"
            - description: "Specifies the minimum SSL/TLS protocol that CloudFront uses when connecting to your origin over HTTPS. "
      description: 'A custom origin. A custom origin is any origin that is not an Amazon S3 bucket, with one exception. An Amazon S3 bucket that is <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html">configured with static website hosting</a> is a custom origin. '
    AwsCloudFrontDistributionOriginGroupFailover:
      type: object
      properties:
        StatusCodes:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionOriginGroupFailoverStatusCodes"
            - description: Information about the status codes that cause an origin group to fail over.
      description: Provides information about when an origin group fails over.
    AwsCloudFrontDistributionOriginGroup:
      type: object
      properties:
        FailoverCriteria:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionOriginGroupFailover"
            - description: Provides the criteria for an origin group to fail over.
      description: Information about an origin group for the CloudFront distribution.
    AwsCloudFrontDistributionOriginGroupFailoverStatusCodes:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList"
            - description: The list of status code values that can cause a failover to the next origin.
        Quantity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of status codes that can cause a failover.
      description: The status codes that cause an origin group to fail over.
    AwsCloudFrontDistributionOriginGroupFailoverStatusCodesItemList:
      type: array
      items:
        $ref: "#/components/schemas/Integer"
    AwsCloudFrontDistributionOriginGroupsItemList:
      type: array
      items:
        $ref: "#/components/schemas/AwsCloudFrontDistributionOriginGroup"
    AwsCloudFrontDistributionOriginS3OriginConfig:
      type: object
      properties:
        OriginAccessIdentity:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The CloudFront origin access identity to associate with the origin.
      description: Information about an origin that is an Amazon S3 bucket that is not configured with static website hosting.
    AwsCloudFrontDistributionOriginItem:
      type: object
      properties:
        DomainName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Amazon S3 origins: The DNS name of the S3 bucket from which you want CloudFront to get objects for this origin."
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A unique identifier for the origin or origin group.
        OriginPath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: An optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin.
        S3OriginConfig:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionOriginS3OriginConfig"
            - description: An origin that is an S3 bucket that is not configured with static website hosting.
        CustomOriginConfig:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionOriginCustomOriginConfig"
            - description: "An origin that is not an Amazon S3 bucket, with one exception. If the Amazon S3 bucket is configured with static website hosting, use this attribute. If the Amazon S3 bucket is not configured with static website hosting, use the <code>S3OriginConfig</code> type instead. "
      description: A complex type that describes the Amazon S3 bucket, HTTP server (for example, a web server), AWS Elemental MediaStore, or other server from which CloudFront gets your files.
    AwsCloudFrontDistributionOriginItemList:
      type: array
      items:
        $ref: "#/components/schemas/AwsCloudFrontDistributionOriginItem"
    AwsCloudTrailTrailDetails:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the log group that CloudTrail logs are delivered to.
        CloudWatchLogsRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the role that the CloudWatch Events endpoint assumes when it writes to the log group.
        HasCustomEventSelectors:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the trail has custom event selectors.
        HomeRegion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Region where the trail was created.
        IncludeGlobalServiceEvents:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the trail publishes events from global services such as IAM to the log files.
        IsMultiRegionTrail:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the trail applies only to the current Region or to all Regions.
        IsOrganizationTrail:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the trail is created for all accounts in an organization in Organizations, or only for the current Amazon Web Services account.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The KMS key ID to use to encrypt the logs.
        LogFileValidationEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether CloudTrail log file validation is enabled.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the trail.
        S3BucketName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the S3 bucket where the log files are published.
        S3KeyPrefix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The S3 key prefix. The key prefix is added after the name of the S3 bucket where the log files are published.
        SnsTopicArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the SNS topic that is used for notifications of log file delivery.
        SnsTopicName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the SNS topic that is used for notifications of log file delivery.
        TrailArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the trail.
      description: Provides details about a CloudTrail trail.
    AwsCloudWatchAlarmDimensionsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsCloudWatchAlarmDimensionsDetails"
    AwsCloudWatchAlarmDetails:
      type: object
      properties:
        ActionsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Indicates whether actions should be executed during any changes to the alarm state. "
        AlarmActions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: "The list of actions, specified as Amazon Resource Names (ARNs) to execute when this alarm transitions into an <code>ALARM</code> state from any other state. "
        AlarmArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ARN of the alarm. "
        AlarmConfigurationUpdatedTimestamp:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The time stamp of the last update to the alarm configuration. "
        AlarmDescription:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The description of the alarm. "
        AlarmName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the alarm. If you don't specify a name, CloudFront generates a unique physical ID and uses that ID for the alarm name. "
        ComparisonOperator:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The arithmetic operation to use when comparing the specified statistic and threshold. The specified statistic value is used as the first operand. "
        DatapointsToAlarm:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The number of datapoints that must be breaching to trigger the alarm. "
        Dimensions:
          allOf:
            - $ref: "#/components/schemas/AwsCloudWatchAlarmDimensionsList"
            - description: "The dimensions for the metric associated with the alarm. "
        EvaluateLowSampleCountPercentile:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Used only for alarms based on percentiles. If <code>ignore</code>, the alarm state does not change during periods with too few data points to be statistically significant. If <code>evaluate</code> or this parameter is not used, the alarm is always evaluated and possibly changes state no matter how many data points are available. "
        EvaluationPeriods:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The number of periods over which data is compared to the specified threshold. "
        ExtendedStatistic:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The percentile statistic for the metric associated with the alarm. "
        InsufficientDataActions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: "The actions to execute when this alarm transitions to the <code>INSUFFICIENT_DATA</code> state from any other state. Each action is specified as an ARN. "
        MetricName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you use <code>Metrics</code> instead and you can't specify <code>MetricName</code>. "
        Namespace:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The namespace of the metric associated with the alarm. This is required for an alarm based on a metric. For an alarm based on a math expression, you can't specify <code>Namespace</code> and you use <code>Metrics</code> instead. "
        OkActions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: "The actions to execute when this alarm transitions to the <code>OK</code> state from any other state. Each action is specified as an ARN. "
        Period:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The period, in seconds, over which the statistic is applied. This is required for an alarm based on a metric. "
        Statistic:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The statistic for the metric associated with the alarm, other than percentile. For percentile statistics, use <code>ExtendedStatistic</code>.</p> <p>For an alarm based on a metric, you must specify either <code>Statistic</code> or <code>ExtendedStatistic</code> but not both.</p> <p>For an alarm based on a math expression, you can't specify <code>Statistic</code>. Instead, you use <code>Metrics</code>.</p>
        Threshold:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: "The value to compare with the specified statistic. "
        ThresholdMetricId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "n an alarm based on an anomaly detection model, this is the ID of the <code>ANOMALY_DETECTION_BAND</code> function used as the threshold for the alarm. "
        TreatMissingData:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Sets how this alarm is to handle missing data points. "
        Unit:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The unit of the metric associated with the alarm. "
      description: "Specifies an alarm and associates it with the specified metric or metric math expression. "
    AwsCloudWatchAlarmDimensionsDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of a dimension. "
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The value of a dimension. "
      description: "Details about the dimensions for the metric associated with the alarm. "
    AwsCodeBuildProjectArtifactsDetails:
      type: object
      properties:
        ArtifactIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: An identifier for the artifact definition.
        EncryptionDisabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to disable encryption on the artifact. Only valid when <code>Type</code> is <code>S3</code>.
        Location:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Only used when <code>Type</code> is <code>S3</code>. The name of the S3 bucket where the artifact is located.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Only used when Type is S3. The name of the artifact. Used with <code>NamepaceType</code> and <code>Path</code> to determine the pattern for storing the artifact.
        NamespaceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Only used when <code>Type</code> is <code>S3</code>. The value to use for the namespace. Used with <code>Name</code> and <code>Path</code> to determine the pattern for storing the artifact.
        OverrideArtifactName:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the name specified in the buildspec file overrides the artifact name.
        Packaging:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Only used when <code>Type</code> is <code>S3</code>. The type of output artifact to create.
        Path:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Only used when <code>Type</code> is <code>S3</code>. The path to the artifact. Used with <code>Name</code> and <code>NamespaceType</code> to determine the pattern for storing the artifact.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of build artifact.
      description: Information about the build artifacts for the CodeBuild project.
    AwsCodeBuildProjectArtifactsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsCodeBuildProjectArtifactsDetails"
    AwsCodeBuildProjectEnvironment:
      type: object
      properties:
        Certificate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The certificate to use with this build project.
        EnvironmentVariables:
          allOf:
            - $ref: "#/components/schemas/AwsCodeBuildProjectEnvironmentEnvironmentVariablesList"
            - description: A set of environment variables to make available to builds for the build project.
        PrivilegedMode:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to allow the Docker daemon to run inside a Docker container. Set to <code>true</code> if the build project is used to build Docker images.
        ImagePullCredentialsType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The type of credentials CodeBuild uses to pull images in your build.</p> <p>Valid values:</p> <ul> <li> <p> <code>CODEBUILD</code> specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust the CodeBuild service principal.</p> </li> <li> <p> <code>SERVICE_ROLE</code> specifies that CodeBuild uses your build project's service role.</p> </li> </ul> <p>When you use a cross-account or private registry image, you must use <code>SERVICE_ROLE</code> credentials. When you use an CodeBuild curated image, you must use <code>CODEBUILD</code> credentials.</p>
        RegistryCredential:
          allOf:
            - $ref: "#/components/schemas/AwsCodeBuildProjectEnvironmentRegistryCredential"
            - description: The credentials for access to a private registry.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The type of build environment to use for related builds.</p> <p>The environment type <code>ARM_CONTAINER</code> is available only in Regions US East (N. Virginia), US East (Ohio), US West (Oregon), Europe (Ireland), Asia Pacific (Mumbai), Asia Pacific (Tokyo), Asia Pacific (Sydney), and Europe (Frankfurt).</p> <p>The environment type <code>LINUX_CONTAINER</code> with compute type build.general1.2xlarge is available only in Regions US East (N. Virginia), US East (N. Virginia), US West (Oregon), Canada (Central), Europe (Ireland), Europe (London), Europe (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).</p> <p>The environment type <code>LINUX_GPU_CONTAINER</code> is available only in Regions US East (N. Virginia), US East (N. Virginia), US West (Oregon), Canada (Central), Europe (Ireland), Europe (London), Europe (Frankfurt), Asia Pacific (Tokyo), Asia Pacific (Seoul), Asia Pacific (Singapore), Asia Pacific (Sydney), China (Beijing), and China (Ningxia).</p> <p>Valid values: <code>WINDOWS_CONTAINER</code> | <code>LINUX_CONTAINER</code> | <code>LINUX_GPU_CONTAINER</code> | <code>ARM_CONTAINER</code> </p>"
      description: Information about the build environment for this build project.
    AwsCodeBuildProjectSource:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The type of repository that contains the source code to be built. Valid values are:</p> <ul> <li> <p> <code>BITBUCKET</code> - The source code is in a Bitbucket repository.</p> </li> <li> <p> <code>CODECOMMIT</code> - The source code is in an CodeCommit repository.</p> </li> <li> <p> <code>CODEPIPELINE</code> - The source code settings are specified in the source action of a pipeline in CodePipeline.</p> </li> <li> <p> <code>GITHUB</code> - The source code is in a GitHub repository.</p> </li> <li> <p> <code>GITHUB_ENTERPRISE</code> - The source code is in a GitHub Enterprise repository.</p> </li> <li> <p> <code>NO_SOURCE</code> - The project does not have input source code.</p> </li> <li> <p> <code>S3</code> - The source code is in an S3 input bucket. </p> </li> </ul>
        Location:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Information about the location of the source code to be built.</p> <p>Valid values include:</p> <ul> <li> <p>For source code settings that are specified in the source action of a pipeline in CodePipeline, location should not be specified. If it is specified, CodePipeline ignores it. This is because CodePipeline uses the settings in a pipeline's source action instead of this value.</p> </li> <li> <p>For source code in an CodeCommit repository, the HTTPS clone URL to the repository that contains the source code and the build spec file (for example, <code>https://git-codecommit.region-ID.amazonaws.com/v1/repos/repo-name</code> ).</p> </li> <li> <p>For source code in an S3 input bucket, one of the following.</p> <ul> <li> <p>The path to the ZIP file that contains the source code (for example, <code>bucket-name/path/to/object-name.zip</code>).</p> </li> <li> <p> The path to the folder that contains the source code (for example, <code>bucket-name/path/to/source-code/folder/</code>).</p> </li> </ul> </li> <li> <p>For source code in a GitHub repository, the HTTPS clone URL to the repository that contains the source and the build spec file.</p> </li> <li> <p>For source code in a Bitbucket repository, the HTTPS clone URL to the repository that contains the source and the build spec file. </p> </li> </ul>
        GitCloneDepth:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Information about the Git clone depth for the build project.
        InsecureSsl:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to ignore SSL warnings while connecting to the project source code.
      description: Information about the build input source code for this build project.
    AwsCodeBuildProjectLogsConfigDetails:
      type: object
      properties:
        CloudWatchLogs:
          allOf:
            - $ref: "#/components/schemas/AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails"
            - description: Information about CloudWatch Logs for the build project.
        S3Logs:
          allOf:
            - $ref: "#/components/schemas/AwsCodeBuildProjectLogsConfigS3LogsDetails"
            - description: Information about logs built to an S3 bucket for a build project.
      description: Information about logs for the build project.
    AwsCodeBuildProjectVpcConfig:
      type: object
      properties:
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the VPC.
        Subnets:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: A list of one or more subnet IDs in your VPC.
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: A list of one or more security group IDs in your VPC.
      description: Information about the VPC configuration that CodeBuild accesses.
    AwsCodeBuildProjectDetails:
      type: object
      properties:
        EncryptionKey:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The KMS key used to encrypt the build output artifacts.</p> <p>You can specify either the ARN of the KMS key or, if available, the KMS key alias (using the format alias/alias-name). </p>
        Artifacts:
          allOf:
            - $ref: "#/components/schemas/AwsCodeBuildProjectArtifactsList"
            - description: Information about the build artifacts for the CodeBuild project.
        Environment:
          allOf:
            - $ref: "#/components/schemas/AwsCodeBuildProjectEnvironment"
            - description: Information about the build environment for this build project.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the build project.
        Source:
          allOf:
            - $ref: "#/components/schemas/AwsCodeBuildProjectSource"
            - description: Information about the build input source code for this build project.
        ServiceRole:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the IAM role that enables CodeBuild to interact with dependent Amazon Web Services services on behalf of the Amazon Web Services account.
        LogsConfig:
          allOf:
            - $ref: "#/components/schemas/AwsCodeBuildProjectLogsConfigDetails"
            - description: Information about logs for the build project.
        VpcConfig:
          allOf:
            - $ref: "#/components/schemas/AwsCodeBuildProjectVpcConfig"
            - description: Information about the VPC configuration that CodeBuild accesses.
        SecondaryArtifacts:
          allOf:
            - $ref: "#/components/schemas/AwsCodeBuildProjectArtifactsList"
            - description: Information about the secondary artifacts for the CodeBuild project.
      description: Information about an CodeBuild project.
    AwsCodeBuildProjectEnvironmentEnvironmentVariablesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails"
    AwsCodeBuildProjectEnvironmentRegistryCredential:
      type: object
      properties:
        Credential:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The ARN or name of credentials created using Secrets Manager.</p> <note> <p>The credential can use the name of the credentials only if they exist in your current Amazon Web Services Region. </p> </note>
        CredentialProvider:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The service that created the credentials to access a private Docker registry.</p> <p>The valid value,<code> SECRETS_MANAGER</code>, is for Secrets Manager.</p>
      description: The credentials for access to a private registry.
    AwsCodeBuildProjectEnvironmentEnvironmentVariablesDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the environment variable.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of environment variable.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of the environment variable.
      description: Information about an environment variable that is available to builds for the build project.
    AwsCodeBuildProjectLogsConfigCloudWatchLogsDetails:
      type: object
      properties:
        GroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The group name of the logs in CloudWatch Logs.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The current status of the logs in CloudWatch Logs for a build project.
        StreamName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The prefix of the stream name of the CloudWatch Logs.
      description: Information about CloudWatch Logs for the build project.
    AwsCodeBuildProjectLogsConfigS3LogsDetails:
      type: object
      properties:
        EncryptionDisabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to disable encryption of the S3 build log output.
        Location:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the S3 bucket and the path prefix for S3 logs.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The current status of the S3 build logs.
      description: Information about logs built to an S3 bucket for a build project.
    AwsDynamoDbTableAttributeDefinition:
      type: object
      properties:
        AttributeName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the attribute.
        AttributeType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of the attribute.
      description: Contains a definition of an attribute for the table.
    AwsDynamoDbTableAttributeDefinitionList:
      type: array
      items:
        $ref: "#/components/schemas/AwsDynamoDbTableAttributeDefinition"
    AwsDynamoDbTableBillingModeSummary:
      type: object
      properties:
        BillingMode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The method used to charge for read and write throughput and to manage capacity.
        LastUpdateToPayPerRequestDateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>If the billing mode is <code>PAY_PER_REQUEST</code>, indicates when the billing mode was set to that value.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: Provides information about the billing for read/write capacity on the table.
    AwsDynamoDbTableGlobalSecondaryIndexList:
      type: array
      items:
        $ref: "#/components/schemas/AwsDynamoDbTableGlobalSecondaryIndex"
    AwsDynamoDbTableKeySchemaList:
      type: array
      items:
        $ref: "#/components/schemas/AwsDynamoDbTableKeySchema"
    AwsDynamoDbTableLocalSecondaryIndexList:
      type: array
      items:
        $ref: "#/components/schemas/AwsDynamoDbTableLocalSecondaryIndex"
    AwsDynamoDbTableProvisionedThroughput:
      type: object
      properties:
        LastDecreaseDateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the provisioned throughput was last decreased.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        LastIncreaseDateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the provisioned throughput was last increased.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        NumberOfDecreasesToday:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of times during the current UTC calendar day that the provisioned throughput was decreased.
        ReadCapacityUnits:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of strongly consistent reads consumed per second before DynamoDB returns a <code>ThrottlingException</code>.
        WriteCapacityUnits:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of writes consumed per second before DynamoDB returns a <code>ThrottlingException</code>.
      description: Information about the provisioned throughput for the table or for a global secondary index.
    AwsDynamoDbTableReplicaList:
      type: array
      items:
        $ref: "#/components/schemas/AwsDynamoDbTableReplica"
    AwsDynamoDbTableRestoreSummary:
      type: object
      properties:
        SourceBackupArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the source backup from which the table was restored.
        SourceTableArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the source table for the backup.
        RestoreDateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates the point in time that the table was restored to.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        RestoreInProgress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether a restore is currently in progress.
      description: Information about the restore for the table.
    AwsDynamoDbTableSseDescription:
      type: object
      properties:
        InaccessibleEncryptionDateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>If the key is inaccessible, the date and time when DynamoDB detected that the key was inaccessible.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the server-side encryption.
        SseType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of server-side encryption.
        KmsMasterKeyArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the KMS key that is used for the KMS encryption.
      description: Information about the server-side encryption for the table.
    AwsDynamoDbTableStreamSpecification:
      type: object
      properties:
        StreamEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether DynamoDB Streams is enabled on the table.
        StreamViewType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Determines the information that is written to the table.
      description: The current DynamoDB Streams configuration for the table.
    SizeBytes:
      type: integer
    AwsDynamoDbTableDetails:
      type: object
      properties:
        AttributeDefinitions:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableAttributeDefinitionList"
            - description: A list of attribute definitions for the table.
        BillingModeSummary:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableBillingModeSummary"
            - description: Information about the billing for read/write capacity on the table.
        CreationDateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the table was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        GlobalSecondaryIndexes:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableGlobalSecondaryIndexList"
            - description: List of global secondary indexes for the table.
        GlobalTableVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of global tables being used.
        ItemCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of items in the table.
        KeySchema:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableKeySchemaList"
            - description: The primary key structure for the table.
        LatestStreamArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the latest stream for the table.
        LatestStreamLabel:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The label of the latest stream. The label is not a unique identifier.
        LocalSecondaryIndexes:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableLocalSecondaryIndexList"
            - description: The list of local secondary indexes for the table.
        ProvisionedThroughput:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableProvisionedThroughput"
            - description: Information about the provisioned throughput for the table.
        Replicas:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableReplicaList"
            - description: The list of replicas of this table.
        RestoreSummary:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableRestoreSummary"
            - description: Information about the restore for the table.
        SseDescription:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableSseDescription"
            - description: Information about the server-side encryption for the table.
        StreamSpecification:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableStreamSpecification"
            - description: The current DynamoDB Streams configuration for the table.
        TableId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the table.
        TableName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the table.
        TableSizeBytes:
          allOf:
            - $ref: "#/components/schemas/SizeBytes"
            - description: The total size of the table in bytes.
        TableStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The current status of the table. Valid values are as follows:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>ARCHIVED</code> </p> </li> <li> <p> <code>ARCHIVING</code> </p> </li> <li> <p> <code>CREATING</code> </p> </li> <li> <p> <code>DELETING</code> </p> </li> <li> <p> <code>INACCESSIBLE_ENCRYPTION_CREDENTIALS</code> </p> </li> <li> <p> <code>UPDATING</code> </p> </li> </ul>
      description: Provides details about a DynamoDB table.
    AwsDynamoDbTableProjection:
      type: object
      properties:
        NonKeyAttributes:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The nonkey attributes that are projected into the index. For each attribute, provide the attribute name.
        ProjectionType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The types of attributes that are projected into the index. Valid values are as follows:</p> <ul> <li> <p> <code>ALL</code> </p> </li> <li> <p> <code>INCLUDE</code> </p> </li> <li> <p> <code>KEYS_ONLY</code> </p> </li> </ul>
      description: For global and local secondary indexes, identifies the attributes that are copied from the table into the index.
    AwsDynamoDbTableGlobalSecondaryIndex:
      type: object
      properties:
        Backfilling:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the index is currently backfilling.
        IndexArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the index.
        IndexName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the index.
        IndexSizeBytes:
          allOf:
            - $ref: "#/components/schemas/SizeBytes"
            - description: The total size in bytes of the index.
        IndexStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The current status of the index.</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATING</code> </p> </li> <li> <p> <code>DELETING</code> </p> </li> <li> <p> <code>UPDATING</code> </p> </li> </ul>
        ItemCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of items in the index.
        KeySchema:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableKeySchemaList"
            - description: The key schema for the index.
        Projection:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableProjection"
            - description: Attributes that are copied from the table into an index.
        ProvisionedThroughput:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableProvisionedThroughput"
            - description: Information about the provisioned throughput settings for the indexes.
      description: Information abut a global secondary index for the table.
    AwsDynamoDbTableKeySchema:
      type: object
      properties:
        AttributeName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the key schema attribute.
        KeyType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of key used for the key schema attribute. Valid values are <code>HASH</code> or <code>RANGE</code>.
      description: A component of the key schema for the DynamoDB table, a global secondary index, or a local secondary index.
    AwsDynamoDbTableLocalSecondaryIndex:
      type: object
      properties:
        IndexArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the index.
        IndexName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the index.
        KeySchema:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableKeySchemaList"
            - description: The complete key schema for the index.
        Projection:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableProjection"
            - description: Attributes that are copied from the table into the index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.
      description: Information about a local secondary index for a DynamoDB table.
    AwsDynamoDbTableProvisionedThroughputOverride:
      type: object
      properties:
        ReadCapacityUnits:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The read capacity units for the replica.
      description: Replica-specific configuration for the provisioned throughput.
    AwsDynamoDbTableReplicaGlobalSecondaryIndexList:
      type: array
      items:
        $ref: "#/components/schemas/AwsDynamoDbTableReplicaGlobalSecondaryIndex"
    AwsDynamoDbTableReplica:
      type: object
      properties:
        GlobalSecondaryIndexes:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableReplicaGlobalSecondaryIndexList"
            - description: List of global secondary indexes for the replica.
        KmsMasterKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the KMS key that will be used for KMS encryption for the replica.
        ProvisionedThroughputOverride:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableProvisionedThroughputOverride"
            - description: Replica-specific configuration for the provisioned throughput.
        RegionName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the Region where the replica is located.
        ReplicaStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The current status of the replica. Valid values are as follows:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATING</code> </p> </li> <li> <p> <code>CREATION_FAILED</code> </p> </li> <li> <p> <code>DELETING</code> </p> </li> <li> <p> <code>UPDATING</code> </p> </li> </ul>
        ReplicaStatusDescription:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Detailed information about the replica status.
      description: Information about a replica of a DynamoDB table.
    AwsDynamoDbTableReplicaGlobalSecondaryIndex:
      type: object
      properties:
        IndexName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the index.
        ProvisionedThroughputOverride:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableProvisionedThroughputOverride"
            - description: Replica-specific configuration for the provisioned throughput for the index.
      description: Information about a global secondary index for a DynamoDB table replica.
    AwsEc2EipDetails:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the EC2 instance.
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A public IP address that is associated with the EC2 instance.
        AllocationId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier that Amazon Web Services assigns to represent the allocation of the Elastic IP address for use with Amazon VPC.
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier that represents the association of the Elastic IP address with an EC2 instance.
        Domain:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The domain in which to allocate the address.</p> <p>If the address is for use with EC2 instances in a VPC, then <code>Domain</code> is <code>vpc</code>. Otherwise, <code>Domain</code> is <code>standard</code>. </p>
        PublicIpv4Pool:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of an IP address pool. This parameter allows Amazon EC2 to select an IP address from the address pool.
        NetworkBorderGroup:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the location from which the Elastic IP address is advertised.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the network interface.
        NetworkInterfaceOwnerId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account ID of the owner of the network interface.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The private IP address that is associated with the Elastic IP address.
      description: Information about an Elastic IP address.
    AwsEc2InstanceNetworkInterfacesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2InstanceNetworkInterfacesDetails"
    AwsEc2InstanceMetadataOptions:
      type: object
      properties:
        HttpEndpoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Enables or disables the HTTP metadata endpoint on the instance. "
        HttpProtocolIpv6:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Enables or disables the IPv6 endpoint for the instance metadata service. "
        HttpPutResponseHopLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. "
        HttpTokens:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The state of token usage for your instance metadata requests. "
        InstanceMetadataTags:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Specifies whether to allow access to instance tags from the instance metadata. "
      description: Metadata options that allow you to configure and secure the Amazon EC2 instance.
    AwsEc2InstanceMonitoringDetails:
      type: object
      properties:
        State:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Indicates whether detailed monitoring is turned on. Otherwise, basic monitoring is turned on. "
      description: " The type of monitoring that’s turned on for an Amazon EC2 instance. "
    AwsEc2InstanceDetails:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The instance type of the instance. "
        ImageId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Machine Image (AMI) ID of the instance.
        IpV4Addresses:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The IPv4 addresses associated with the instance.
        IpV6Addresses:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The IPv6 addresses associated with the instance.
        KeyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The key name associated with the instance.
        IamInstanceProfileArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IAM profile ARN of the instance.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the VPC that the instance was launched in.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the subnet that the instance was launched in.
        LaunchedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the instance was launched.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        NetworkInterfaces:
          allOf:
            - $ref: "#/components/schemas/AwsEc2InstanceNetworkInterfacesList"
            - description: The identifiers of the network interfaces for the EC2 instance. The details for each network interface are in a corresponding <code>AwsEc2NetworkInterfacesDetails</code> object.
        VirtualizationType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The virtualization type of the Amazon Machine Image (AMI) required to launch the instance. "
        MetadataOptions:
          allOf:
            - $ref: "#/components/schemas/AwsEc2InstanceMetadataOptions"
            - description: "Details about the metadata options for the Amazon EC2 instance. "
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/AwsEc2InstanceMonitoringDetails"
            - description: " Describes the type of monitoring that’s turned on for an instance. "
      description: The details of an Amazon EC2 instance.
    AwsEc2InstanceNetworkInterfacesDetails:
      type: object
      properties:
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the network interface. The details are in a corresponding <code>AwsEc2NetworkInterfacesDetails</code> object.
      description: Identifies a network interface for the Amazon EC2 instance.
    AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails:
      type: object
      properties:
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether the EBS volume is deleted on instance termination. "
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether the EBS volume is encrypted. Encrypted volumes can only be attached to instances that support Amazon EBS encryption. If you're creating a volume from a snapshot, you can't specify an encryption value. "
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of I/O operations per second (IOPS). "
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of the symmetric Key Management Service (KMS) customer managed key used for encryption. "
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the EBS snapshot. "
        Throughput:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The throughput to provision for a gp3 volume, with a maximum of 1,000 MiB/s. "
        VolumeSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The size of the volume, in GiBs. You must specify either a snapshot ID or a volume size. "
        VolumeType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The volume type. "
      description: " Parameters for a block device for an Amazon Elastic Block Store (Amazon EBS) volume in an Amazon EC2 launch template. "
    AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails:
      type: object
      properties:
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The device name. "
        Ebs:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataBlockDeviceMappingSetEbsDetails"
            - description: " Parameters used to automatically set up Amazon EBS volumes when the instance is launched. "
        NoDevice:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Omits the device from the block device mapping when an empty string is specified. "
        VirtualName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The virtual device name (ephemeralN). Instance store volumes are numbered starting from 0. An instance type with 2 available instance store volumes can specify mappings for <code>ephemeral0</code> and <code>ephemeral1</code>. The number of available instance store volumes depends on the instance type. "
      description: " Information about a block device mapping for an Amazon Elastic Compute Cloud (Amazon EC2) launch template. "
    AwsEc2LaunchTemplateDataBlockDeviceMappingSetList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2LaunchTemplateDataBlockDeviceMappingSetDetails"
    AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails:
      type: object
      properties:
        CapacityReservationId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the Capacity Reservation in which to run the instance. "
        CapacityReservationResourceGroupArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of the Capacity Reservation resource group in which to run the instance. "
      description: " Information about the target Capacity Reservation or Capacity Reservation group in which to run an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails:
      type: object
      properties:
        CapacityReservationPreference:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Indicates the instance's Capacity Reservation preferences. If equal to <code>open</code>, the instance can run in any open Capacity Reservation that has matching attributes (instance type, platform, Availability Zone). If equal to <code>none</code>, the instance avoids running in a Capacity Reservation even if one is available. The instance runs in On-Demand capacity. "
        CapacityReservationTarget:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataCapacityReservationSpecificationCapacityReservationTargetDetails"
            - description: " Specifies a target Capacity Reservation. "
      description: " Specifies the Capacity Reservation targeting option of an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataCpuOptionsDetails:
      type: object
      properties:
        CoreCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of CPU cores for the instance. "
        ThreadsPerCore:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of threads per CPU core. A value of <code>1</code> disables multithreading for the instance, The default value is <code>2</code>. "
      description: ' Specifies the CPU options for an Amazon EC2 instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimize CPU options</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. '
    AwsEc2LaunchTemplateDataCreditSpecificationDetails:
      type: object
      properties:
        CpuCredits:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The credit option for CPU usage of a T instance. "
      description: " Specifies the credit option for CPU usage of a T2, T3, or T3a Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataElasticGpuSpecificationSetList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails"
    AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails"
    AwsEc2LaunchTemplateDataEnclaveOptionsDetails:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " If this parameter is set to <code>true</code>, the instance is enabled for Amazon Web Services Nitro Enclaves. "
      description: " Indicates whether the instance is enabled for Amazon Web Services Nitro Enclaves. "
    AwsEc2LaunchTemplateDataHibernationOptionsDetails:
      type: object
      properties:
        Configured:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " If you set this parameter to <code>true</code>, the instance is enabled for hibernation. "
      description: " Specifies whether your Amazon EC2 instance is configured for hibernation. "
    AwsEc2LaunchTemplateDataIamInstanceProfileDetails:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of the instance profile. "
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The name of the instance profile. "
      description: " Provides details for an Identity and Access Management (IAM) instance profile, which is a container for an IAM role for your instance. "
    AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails:
      type: object
      properties:
        MarketType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The market type. "
        SpotOptions:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails"
            - description: " The options for Spot Instances. "
      description: " Provides details about the market (purchasing) option for an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataInstanceRequirementsDetails:
      type: object
      properties:
        AcceleratorCount:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails"
            - description: " The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an instance. "
        AcceleratorManufacturers:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: "Indicates whether instance types must have accelerators by specific manufacturers. "
        AcceleratorNames:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: " The accelerators that must be on the instance type. "
        AcceleratorTotalMemoryMiB:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails"
            - description: " The minimum and maximum amount of total accelerator memory, in MiB. "
        AcceleratorTypes:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: "The accelerator types that must be on the instance type. "
        BareMetal:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Indicates whether bare metal instance types must be included, excluded, or required. "
        BaselineEbsBandwidthMbps:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails"
            - description: ' The minimum and maximum baseline bandwidth to Amazon EBS, in Mbps. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html">Amazon EBS optimized instances</a> in the <i>Amazon EC2 User Guide</i>. '
        BurstablePerformance:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: ' Indicates whether burstable performance T instance types are included, excluded, or required. For more information, <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/burstable-performance-instances.html">Burstable performance instances</a> in the <i>Amazon EC2 User Guide</i>. '
        CpuManufacturers:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: " The CPU manufacturers to include. "
        ExcludedInstanceTypes:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: " The instance types to exclude. "
        InstanceGenerations:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: " Indicates whether current or previous generation instance types are included. "
        LocalStorage:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: ' Indicates whether instance types with instance store volumes are included, excluded, or required. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html">Amazon EC2 instance store</a> in the <i>Amazon EC2 User Guide</i>. '
        LocalStorageTypes:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: " The type of local storage that is required. "
        MemoryGiBPerVCpu:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails"
            - description: " The minimum and maximum amount of memory per vCPU, in GiB. "
        MemoryMiB:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails"
            - description: " The minimum and maximum amount of memory, in MiB. "
        NetworkInterfaceCount:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails"
            - description: " The minimum and maximum number of network interfaces. "
        OnDemandMaxPricePercentageOverLowestPrice:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p> The price protection threshold for On-Demand Instances. This is the maximum you'll pay for an On-Demand Instance, expressed as a percentage above the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold.</p> <p>The parameter accepts an integer, which Amazon EC2 interprets as a percentage.</p> <p>A high value, such as <code>999999</code>, turns off price protection.</p>
        RequireHibernateSupport:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether instance types must support hibernation for On-Demand Instances. "
        SpotMaxPricePercentageOverLowestPrice:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p> The price protection threshold for Spot Instances. This is the maximum you'll pay for a Spot Instance, expressed as a percentage above the least expensive current generation M, C, or R instance type with your specified attributes. When Amazon EC2 selects instance types with your attributes, it excludes instance types priced above your threshold. </p> <p>The parameter accepts an integer, which Amazon EC2 interprets as a percentage.</p> <p>A high value, such as <code>999999</code>, turns off price protection.</p>
        TotalLocalStorageGB:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails"
            - description: " The minimum and maximum amount of total local storage, in GB. "
        VCpuCount:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails"
            - description: " The minimum and maximum number of vCPUs. "
      description: " The attributes for the Amazon EC2 instance types. "
    AwsEc2LaunchTemplateDataLicenseSetList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2LaunchTemplateDataLicenseSetDetails"
    AwsEc2LaunchTemplateDataMaintenanceOptionsDetails:
      type: object
      properties:
        AutoRecovery:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Disables the automatic recovery behavior of your instance or sets it to default. "
      description: " The maintenance options of an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataMetadataOptionsDetails:
      type: object
      properties:
        HttpEndpoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Enables or disables the HTTP metadata endpoint on your instances. If the parameter is not specified, the default state is enabled, and you won't be able to access your instance metadata. "
        HttpProtocolIpv6:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Enables or disables the IPv6 endpoint for the instance metadata service. "
        HttpTokens:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The state of token usage for your instance metadata requests. "
        HttpPutResponseHopLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The desired HTTP PUT response hop limit for instance metadata requests. The larger the number, the further instance metadata requests can travel. "
        InstanceMetadataTags:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: ' When set to <code>enabled</code>, this parameter allows access to instance tags from the instance metadata. When set to <code>disabled</code>, it turns off access to instance tags from the instance metadata. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS">Work with instance tags in instance metadata</a> in the <i>Amazon EC2 User Guide</i>. '
      description: " Specifies the metadata options for an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataMonitoringDetails:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: ' Enables detailed monitoring when <code>true</code> is specified. Otherwise, basic monitoring is enabled. For more information about detailed monitoring, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html">Enable or turn off detailed monitoring for your instances</a> in the <i>Amazon EC2 User Guide</i>. '
      description: " The monitoring for an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataNetworkInterfaceSetList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails"
    AwsEc2LaunchTemplateDataPlacementDetails:
      type: object
      properties:
        Affinity:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The affinity setting for an instance on an EC2 Dedicated Host. "
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Availability Zone for the instance. "
        GroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The name of the placement group for the instance. "
        HostId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the Dedicated Host for the instance. "
        HostResourceGroupArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of the host resource group in which to launch the instances. "
        PartitionNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of the partition the instance should launch in. "
        SpreadDomain:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Reserved for future use. "
        Tenancy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The tenancy of the instance (if the instance is running in a VPC). An instance with a tenancy of dedicated runs on single-tenant hardware. "
      description: " Provides details about the placement of an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails:
      type: object
      properties:
        EnableResourceNameDnsAAAARecord:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether to respond to DNS queries for instance hostnames with DNS AAAA records. "
        EnableResourceNameDnsARecord:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether to respond to DNS queries for instance hostnames with DNS A records. "
        HostnameType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The type of hostname for EC2 instances. "
      description: " Describes the options for Amazon EC2 instance hostnames. "
    AwsEc2LaunchTemplateDataDetails:
      type: object
      properties:
        BlockDeviceMappingSet:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataBlockDeviceMappingSetList"
            - description: " Information about a block device mapping for an Amazon EC2 launch template. "
        CapacityReservationSpecification:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataCapacityReservationSpecificationDetails"
            - description: " Specifies an instance's Capacity Reservation targeting option. You can specify only one option at a time. "
        CpuOptions:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataCpuOptionsDetails"
            - description: ' Specifies the CPU options for an instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-optimize-cpu.html">Optimize CPU options</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. '
        CreditSpecification:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataCreditSpecificationDetails"
            - description: " Specifies the credit option for CPU usage of a T2, T3, or T3a instance. "
        DisableApiStop:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: ' Indicates whether to enable the instance for stop protection. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Stop_Start.html#Using_StopProtection">Enable stop protection</a> in the <i>Amazon EC2 User Guide</i>. '
        DisableApiTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " If you set this parameter to <code>true</code>, you can't terminate the instance using the Amazon EC2 console, CLI, or API. If set to <code>true</code>, you can. "
        EbsOptimized:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether the instance is optimized for Amazon EBS I/O. "
        ElasticGpuSpecificationSet:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataElasticGpuSpecificationSetList"
            - description: " Provides details about Elastic Graphics accelerators to associate with the instance. "
        ElasticInferenceAcceleratorSet:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetList"
            - description: " The Amazon Elastic Inference accelerator for the instance. "
        EnclaveOptions:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataEnclaveOptionsDetails"
            - description: " Indicates whether the Amazon EC2 instance is enabled for Amazon Web Services Nitro Enclaves. "
        HibernationOptions:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataHibernationOptionsDetails"
            - description: " Specifies whether your Amazon EC2 instance is configured for hibernation. "
        IamInstanceProfile:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataIamInstanceProfileDetails"
            - description: " The name or Amazon Resource Name (ARN) of an IAM instance profile. "
        ImageId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the Amazon Machine Image (AMI). "
        InstanceInitiatedShutdownBehavior:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Provides the options for specifying the instance initiated shutdown behavior. "
        InstanceMarketOptions:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataInstanceMarketOptionsDetails"
            - description: " Specifies the market (purchasing) option for an instance. "
        InstanceRequirements:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataInstanceRequirementsDetails"
            - description: " The attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with these attributes. If you specify <code>InstanceRequirements</code>, you can't specify <code>InstanceType</code>. "
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The instance type. For more information, see <a href=\"https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html\">Instance types</a> in the <i>Amazon EC2 User Guide</i>. If you specify <code>InstanceType</code>, you can't specify <code>InstanceRequirements</code>. "
        KernelId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the kernel. "
        KeyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The name of the key pair that allows users to connect to the instance. "
        LicenseSet:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataLicenseSetList"
            - description: " Specifies a license configuration for an instance. "
        MaintenanceOptions:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataMaintenanceOptionsDetails"
            - description: " The maintenance options of your instance. "
        MetadataOptions:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataMetadataOptionsDetails"
            - description: ' The metadata options for the instance. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance metadata and user data</a> in the <i>Amazon EC2 User Guide</i>. '
        Monitoring:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataMonitoringDetails"
            - description: " The monitoring for the instance. "
        NetworkInterfaceSet:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetList"
            - description: " Specifies the parameters for a network interface that is attached to the instance. "
        Placement:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataPlacementDetails"
            - description: " Specifies the placement of an instance. "
        PrivateDnsNameOptions:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataPrivateDnsNameOptionsDetails"
            - description: " The options for the instance hostname. "
        RamDiskId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the RAM disk. "
        SecurityGroupIdSet:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: " One or more security group IDs. "
        SecurityGroupSet:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: " One or more security group names. For a nondefault VPC, you must use security group IDs instead. You cannot specify both a security group ID and security name in the same request. "
        UserData:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The user data to make available to the instance. "
      description: " The information to include in an Amazon Elastic Compute Cloud (Amazon EC2) launch template. "
    AwsEc2LaunchTemplateDataElasticGpuSpecificationSetDetails:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The type of Elastic Graphics accelerator. "
      description: " Provides details about an Elastic Graphics specification for an Amazon EC2 launch template. "
    AwsEc2LaunchTemplateDataElasticInferenceAcceleratorSetDetails:
      type: object
      properties:
        Count:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of Elastic Inference accelerators to attach to the instance. "
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The type of Elastic Inference accelerator. "
      description: " Provides details for an Amazon Elastic Inference accelerator. "
    AwsEc2LaunchTemplateDataInstanceMarketOptionsSpotOptionsDetails:
      type: object
      properties:
        BlockDurationMinutes:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " Deprecated. "
        InstanceInterruptionBehavior:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The behavior when a Spot Instance is interrupted. "
        MaxPrice:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The maximum hourly price you're willing to pay for the Spot Instances. "
        SpotInstanceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Spot Instance request type. "
        ValidUntil:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The end date of the request, in UTC format (YYYY-MM-DDTHH:MM:SSZ), for persistent requests. "
      description: " Provides details about the market (purchasing) options for Spot Instances. "
    AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorCountDetails:
      type: object
      properties:
        Max:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The maximum number of accelerators. If this parameter isn't specified, there's no maximum limit. To exclude accelerator-enabled instance types, set <code>Max</code> to <code>0</code>. "
        Min:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The minimum number of accelerators. If this parameter isn't specified, there's no minimum limit. "
      description: " The minimum and maximum number of accelerators (GPUs, FPGAs, or Amazon Web Services Inferentia chips) on an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataInstanceRequirementsAcceleratorTotalMemoryMiBDetails:
      type: object
      properties:
        Max:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The maximum amount of memory, in MiB. If this parameter isn't specified, there's no maximum limit. "
        Min:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The minimum amount of memory, in MiB. If <code>0</code> is specified, there's no maximum limit. "
      description: " The minimum and maximum amount of memory, in MiB, for the accelerators on an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataInstanceRequirementsBaselineEbsBandwidthMbpsDetails:
      type: object
      properties:
        Max:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The maximum baseline bandwidth, in Mbps. If this parameter is omitted, there's no maximum limit. "
        Min:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The minimum baseline bandwidth, in Mbps. If this parameter is omitted, there's no minimum limit. "
      description: ' The minimum and maximum baseline bandwidth to Amazon Elastic Block Store (Amazon EBS), in Mbps. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-optimized.html">Amazon EBS–optimized instances </a> in the <i>Amazon EC2 User Guide</i>. '
    AwsEc2LaunchTemplateDataInstanceRequirementsMemoryGiBPerVCpuDetails:
      type: object
      properties:
        Max:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: " The maximum amount of memory per vCPU, in GiB. If this parameter is omitted, there's no maximum limit. "
        Min:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: " The minimum amount of memory per vCPU, in GiB. If this parameter is omitted, there's no maximum limit. "
      description: " The minimum and maximum amount of memory per vCPU, in GiB. "
    AwsEc2LaunchTemplateDataInstanceRequirementsMemoryMiBDetails:
      type: object
      properties:
        Max:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The maximum amount of memory, in MiB. "
        Min:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The minimum amount of memory, in MiB. "
      description: " The minimum and maximum amount of memory, in MiB, for an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataInstanceRequirementsNetworkInterfaceCountDetails:
      type: object
      properties:
        Max:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The maximum number of network interfaces. "
        Min:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The minimum number of network interfaces. "
      description: " The minimum and maximum number of network interfaces to be attached to an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataInstanceRequirementsTotalLocalStorageGBDetails:
      type: object
      properties:
        Max:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: " The maximum amount of total local storage, in GB. "
        Min:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: " The minimum amount of total local storage, in GB. "
      description: " The minimum and maximum amount of total local storage, in GB, that an Amazon EC2 instance uses. "
    AwsEc2LaunchTemplateDataInstanceRequirementsVCpuCountDetails:
      type: object
      properties:
        Max:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The maximum number of vCPUs. "
        Min:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The minimum number of vCPUs. "
      description: " The minimum and maximum number of vCPUs for an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataLicenseSetDetails:
      type: object
      properties:
        LicenseConfigurationArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of the license configuration. "
      description: " Provides details about the license configuration for an Amazon EC2 instance. "
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails"
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails"
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails"
    AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails"
    AwsEc2LaunchTemplateDataNetworkInterfaceSetDetails:
      type: object
      properties:
        AssociateCarrierIpAddress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: ' Indicates whether to associate a Carrier IP address with eth0 for a new network interface. You use this option when you launch an instance in a Wavelength Zone and want to associate a Carrier IP address with the network interface. For more information, see <a href="https://docs.aws.amazon.com/wavelength/latest/developerguide/how-wavelengths-work.html#provider-owned-ip">Carrier IP address</a> in the <i>Wavelength Developer Guide</i>. '
        AssociatePublicIpAddress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Associates a public IPv4 address with eth0 for a new network interface. "
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether the network interface is deleted when the instance is terminated. "
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " A description for the network interface. "
        DeviceIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The device index for the network interface attachment. "
        Groups:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: " The IDs of one or more security groups. "
        InterfaceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The type of network interface. "
        Ipv4PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of IPv4 prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv4Prefixes</code> option. "
        Ipv4Prefixes:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesList"
            - description: " One or more IPv4 prefixes to be assigned to the network interface. You cannot use this option if you use the <code>Ipv4PrefixCount</code> option. "
        Ipv6AddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of IPv6 addresses to assign to a network interface. Amazon EC2 automatically selects the IPv6 addresses from the subnet range. You can't use this option if you use <code>Ipv6Addresses</code>. "
        Ipv6Addresses:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesList"
            - description: " One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. You can't use this option if you use <code>Ipv6AddressCount</code>. "
        Ipv6PrefixCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of IPv6 prefixes to be automatically assigned to the network interface. You cannot use this option if you use the <code>Ipv6Prefix</code> option. "
        Ipv6Prefixes:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesList"
            - description: " One or more IPv6 prefixes to be assigned to the network interface. You cannot use this option if you use the <code>Ipv6PrefixCount</code> option. "
        NetworkCardIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The index of the network card. Some instance types support multiple network cards. The primary network interface must be assigned to network card index <code>0</code>. The default is network card index <code>0</code>. "
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the network interface. "
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The primary private IPv4 address of the network interface. "
        PrivateIpAddresses:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesList"
            - description: " One or more private IPv4 addresses. "
        SecondaryPrivateIpAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of secondary private IPv4 addresses to assign to a network interface. "
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the subnet for the network interface. "
      description: " One or more network interfaces to attach to an Amazon EC2 instance. If you specify a network interface, you must specify security groups and subnets as part of the network interface. "
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv4PrefixesDetails:
      type: object
      properties:
        Ipv4Prefix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: ' The IPv4 prefix. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-prefix-eni.html">Assigning prefixes to Amazon EC2 network interfaces</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>. '
      description: " Provides details on one or more IPv4 prefixes for a network interface. "
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6AddressesDetails:
      type: object
      properties:
        Ipv6Address:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " One or more specific IPv6 addresses from the IPv6 CIDR block range of your subnet. "
      description: " Specifies an IPv6 address in an Amazon EC2 launch template. "
    AwsEc2LaunchTemplateDataNetworkInterfaceSetIpv6PrefixesDetails:
      type: object
      properties:
        Ipv6Prefix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The IPv6 prefix. "
      description: " Provides details on one or more IPv6 prefixes to be assigned to the network interface. "
    AwsEc2LaunchTemplateDataNetworkInterfaceSetPrivateIpAddressesDetails:
      type: object
      properties:
        Primary:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether the private IPv4 address is the primary private IPv4 address. Only one IPv4 address can be designated as primary. "
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The private IPv4 address. "
      description: " One or more private IPv4 addresses. "
    AwsEc2LaunchTemplateDetails:
      type: object
      properties:
        LaunchTemplateName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " A name for the launch template. "
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " An ID for the launch template. "
        LaunchTemplateData:
          allOf:
            - $ref: "#/components/schemas/AwsEc2LaunchTemplateDataDetails"
            - description: " The information to include in the launch template. "
        DefaultVersionNumber:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: " The default version of the launch template. "
        LatestVersionNumber:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: " The latest version of the launch template. "
      description: " Specifies the properties for creating an Amazon Elastic Compute Cloud (Amazon EC2) launch template. "
    AwsEc2NetworkAclAssociation:
      type: object
      properties:
        NetworkAclAssociationId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the association between the network ACL and the subnet.
        NetworkAclId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the network ACL.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the subnet that is associated with the network ACL.
      description: An association between the network ACL and a subnet.
    AwsEc2NetworkAclAssociationList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2NetworkAclAssociation"
    AwsEc2NetworkAclEntryList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2NetworkAclEntry"
    AwsEc2NetworkAclDetails:
      type: object
      properties:
        IsDefault:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether this is the default network ACL for the VPC.
        NetworkAclId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the network ACL.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the Amazon Web Services account that owns the network ACL.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the VPC for the network ACL.
        Associations:
          allOf:
            - $ref: "#/components/schemas/AwsEc2NetworkAclAssociationList"
            - description: Associations between the network ACL and subnets.
        Entries:
          allOf:
            - $ref: "#/components/schemas/AwsEc2NetworkAclEntryList"
            - description: The set of rules in the network ACL.
      description: Contains details about an Amazon EC2 network access control list (ACL).
    IcmpTypeCode:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The ICMP code for which to deny or allow access. To deny or allow all codes, use the value <code>-1</code>.
        Type:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The ICMP type for which to deny or allow access. To deny or allow all types, use the value <code>-1</code>.
      description: An Internet Control Message Protocol (ICMP) type and code.
    PortRangeFromTo:
      type: object
      properties:
        From:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The first port in the port range.
        To:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The last port in the port range.
      description: A range of ports.
    AwsEc2NetworkAclEntry:
      type: object
      properties:
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IPV4 network range for which to deny or allow access.
        Egress:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the rule is an egress rule. An egress rule is a rule that applies to traffic that leaves the subnet.
        IcmpTypeCode:
          allOf:
            - $ref: "#/components/schemas/IcmpTypeCode"
            - description: The Internet Control Message Protocol (ICMP) type and code for which to deny or allow access.
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IPV6 network range for which to deny or allow access.
        PortRange:
          allOf:
            - $ref: "#/components/schemas/PortRangeFromTo"
            - description: For TCP or UDP protocols, the range of ports that the rule applies to.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The protocol that the rule applies to. To deny or allow access to all protocols, use the value <code>-1</code>.
        RuleAction:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Whether the rule is used to allow access or deny access.
        RuleNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The rule number. The rules are processed in order by their number.
      description: A rule for the network ACL. Each rule allows or denies access based on the IP address, traffic direction, port, and protocol.
    AwsEc2NetworkInterfaceAttachment:
      type: object
      properties:
        AttachTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the attachment initiated.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        AttachmentId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the network interface attachment
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the network interface is deleted when the instance is terminated.
        DeviceIndex:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The device index of the network interface attachment on the instance.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the instance.
        InstanceOwnerId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account ID of the owner of the instance.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The attachment state.</p> <p>Valid values: <code>attaching</code> | <code>attached</code> | <code>detaching</code> | <code>detached</code> </p>"
      description: Information about the network interface attachment.
    AwsEc2NetworkInterfaceSecurityGroupList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2NetworkInterfaceSecurityGroup"
    AwsEc2NetworkInterfaceIpV6AddressList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2NetworkInterfaceIpV6AddressDetail"
    AwsEc2NetworkInterfacePrivateIpAddressList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2NetworkInterfacePrivateIpAddressDetail"
    AwsEc2NetworkInterfaceDetails:
      type: object
      properties:
        Attachment:
          allOf:
            - $ref: "#/components/schemas/AwsEc2NetworkInterfaceAttachment"
            - description: The network interface attachment.
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the network interface.
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/AwsEc2NetworkInterfaceSecurityGroupList"
            - description: Security groups for the network interface.
        SourceDestCheck:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether traffic to or from the instance is validated.
        IpV6Addresses:
          allOf:
            - $ref: "#/components/schemas/AwsEc2NetworkInterfaceIpV6AddressList"
            - description: The IPv6 addresses associated with the network interface.
        PrivateIpAddresses:
          allOf:
            - $ref: "#/components/schemas/AwsEc2NetworkInterfacePrivateIpAddressList"
            - description: The private IPv4 addresses associated with the network interface.
        PublicDnsName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The public DNS name of the network interface.
        PublicIp:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The address of the Elastic IP address bound to the network interface.
      description: Details about the network interface
    AwsEc2NetworkInterfaceIpV6AddressDetail:
      type: object
      properties:
        IpV6Address:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IPV6 address.
      description: Provides information about an IPV6 address that is associated with the network interface.
    AwsEc2NetworkInterfacePrivateIpAddressDetail:
      type: object
      properties:
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IP address.
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The private DNS name for the IP address.
      description: Provides information about a private IPv4 address that is with the network interface.
    AwsEc2NetworkInterfaceSecurityGroup:
      type: object
      properties:
        GroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the security group.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the security group.
      description: A security group associated with the network interface.
    PropagatingVgwSetList:
      type: array
      items:
        $ref: "#/components/schemas/PropagatingVgwSetDetails"
    RouteSetList:
      type: array
      items:
        $ref: "#/components/schemas/RouteSetDetails"
    AwsEc2RouteTableDetails:
      type: object
      properties:
        AssociationSet:
          allOf:
            - $ref: "#/components/schemas/AssociationSetList"
            - description: " The associations between a route table and one or more subnets or a gateway. "
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the Amazon Web Services account that owns the route table. "
        PropagatingVgwSet:
          allOf:
            - $ref: "#/components/schemas/PropagatingVgwSetList"
            - description: " Describes a virtual private gateway propagating route. "
        RouteTableId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the route table. "
        RouteSet:
          allOf:
            - $ref: "#/components/schemas/RouteSetList"
            - description: " The routes in the route table. "
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the virtual private cloud (VPC). "
      description: " Provides details about a route table for the specified VPC. "
    AwsEc2SecurityGroupIpPermissionList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2SecurityGroupIpPermission"
    AwsEc2SecurityGroupDetails:
      type: object
      properties:
        GroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the security group.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the security group.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account ID of the owner of the security group.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "[VPC only] The ID of the VPC for the security group."
        IpPermissions:
          allOf:
            - $ref: "#/components/schemas/AwsEc2SecurityGroupIpPermissionList"
            - description: The inbound rules associated with the security group.
        IpPermissionsEgress:
          allOf:
            - $ref: "#/components/schemas/AwsEc2SecurityGroupIpPermissionList"
            - description: "[VPC only] The outbound rules associated with the security group."
      description: Details about an Amazon EC2 security group.
    AwsEc2SecurityGroupUserIdGroupPairList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2SecurityGroupUserIdGroupPair"
    AwsEc2SecurityGroupIpRangeList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2SecurityGroupIpRange"
    AwsEc2SecurityGroupIpv6RangeList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2SecurityGroupIpv6Range"
    AwsEc2SecurityGroupPrefixListIdList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2SecurityGroupPrefixListId"
    AwsEc2SecurityGroupIpPermission:
      type: object
      properties:
        IpProtocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The IP protocol name (<code>tcp</code>, <code>udp</code>, <code>icmp</code>, <code>icmpv6</code>) or number.</p> <p>[VPC only] Use <code>-1</code> to specify all protocols.</p> <p>When authorizing security group rules, specifying <code>-1</code> or a protocol number other than <code>tcp</code>, <code>udp</code>, <code>icmp</code>, or <code>icmpv6</code> allows traffic on all ports, regardless of any port range you specify.</p> <p>For <code>tcp</code>, <code>udp</code>, and <code>icmp</code>, you must specify a port range.</p> <p>For <code>icmpv6</code>, the port range is optional. If you omit the port range, traffic for all types and codes is allowed. </p>
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The start of the port range for the TCP and UDP protocols, or an ICMP/ICMPv6 type number.</p> <p>A value of -1 indicates all ICMP/ICMPv6 types. If you specify all ICMP/ICMPv6 types, you must specify all codes. </p>
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The end of the port range for the TCP and UDP protocols, or an ICMP/ICMPv6 code.</p> <p>A value of <code>-1</code> indicates all ICMP/ICMPv6 codes. If you specify all ICMP/ICMPv6 types, you must specify all codes.</p>
        UserIdGroupPairs:
          allOf:
            - $ref: "#/components/schemas/AwsEc2SecurityGroupUserIdGroupPairList"
            - description: The security group and Amazon Web Services account ID pairs.
        IpRanges:
          allOf:
            - $ref: "#/components/schemas/AwsEc2SecurityGroupIpRangeList"
            - description: The IPv4 ranges.
        Ipv6Ranges:
          allOf:
            - $ref: "#/components/schemas/AwsEc2SecurityGroupIpv6RangeList"
            - description: The IPv6 ranges.
        PrefixListIds:
          allOf:
            - $ref: "#/components/schemas/AwsEc2SecurityGroupPrefixListIdList"
            - description: "[VPC only] The prefix list IDs for an Amazon Web Services service. With outbound rules, this is the Amazon Web Services service to access through a VPC endpoint from instances associated with the security group."
      description: An IP permission for an EC2 security group.
    AwsEc2SecurityGroupIpRange:
      type: object
      properties:
        CidrIp:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IPv4 CIDR range. You can specify either a CIDR range or a source security group, but not both. To specify a single IPv4 address, use the /32 prefix length.
      description: A range of IPv4 addresses.
    AwsEc2SecurityGroupIpv6Range:
      type: object
      properties:
        CidrIpv6:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IPv6 CIDR range. You can specify either a CIDR range or a source security group, but not both. To specify a single IPv6 address, use the /128 prefix length.
      description: A range of IPv6 addresses.
    AwsEc2SecurityGroupPrefixListId:
      type: object
      properties:
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the prefix.
      description: A prefix list ID.
    AwsEc2SecurityGroupUserIdGroupPair:
      type: object
      properties:
        GroupId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the security group.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the security group.
        PeeringStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of a VPC peering connection, if applicable.
        UserId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The ID of an Amazon Web Services account.</p> <p>For a referenced security group in another VPC, the account ID of the referenced security group is returned in the response. If the referenced security group is deleted, this value is not returned.</p> <p>[EC2-Classic] Required when adding or removing rules that reference a security group in another VPC. </p>
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the VPC for the referenced security group, if applicable.
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the VPC peering connection, if applicable.
      description: A relationship between a security group and a user.
    Ipv6CidrBlockAssociationList:
      type: array
      items:
        $ref: "#/components/schemas/Ipv6CidrBlockAssociation"
    AwsEc2SubnetDetails:
      type: object
      properties:
        AssignIpv6AddressOnCreation:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to assign an IPV6 address to a network interface that is created in this subnet.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Availability Zone for the subnet.
        AvailabilityZoneId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the Availability Zone for the subnet.
        AvailableIpAddressCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of available IPV4 addresses in the subnet. Does not include addresses for stopped instances.
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IPV4 CIDR block that is assigned to the subnet.
        DefaultForAz:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether this subnet is the default subnet for the Availability Zone.
        MapPublicIpOnLaunch:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether instances in this subnet receive a public IP address.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the Amazon Web Services account that owns the subnet.
        State:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The current state of the subnet. Valid values are <code>available</code> or <code>pending</code>.
        SubnetArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the subnet.
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the subnet.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the VPC that contains the subnet.
        Ipv6CidrBlockAssociationSet:
          allOf:
            - $ref: "#/components/schemas/Ipv6CidrBlockAssociationList"
            - description: The IPV6 CIDR blocks that are associated with the subnet.
      description: Contains information about a subnet in Amazon EC2.
    AwsEc2TransitGatewayDetails:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the transit gateway. "
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The description of the transit gateway. "
        DefaultRouteTablePropagation:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Turn on or turn off automatic propagation of routes to the default propagation route table. "
        AutoAcceptSharedAttachments:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Turn on or turn off automatic acceptance of attachment requests. "
        DefaultRouteTableAssociation:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Turn on or turn off automatic association with the default association route table. "
        TransitGatewayCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: "The transit gateway Classless Inter-Domain Routing (CIDR) blocks. "
        AssociationDefaultRouteTableId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the default association route table. "
        PropagationDefaultRouteTableId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the default propagation route table. "
        VpnEcmpSupport:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Turn on or turn off Equal Cost Multipath Protocol (ECMP) support. "
        DnsSupport:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Turn on or turn off DNS support. "
        MulticastSupport:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Indicates whether multicast is supported on the transit gateway. "
        AmazonSideAsn:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "A private Autonomous System Number (ASN) for the Amazon side of a BGP session. "
      description: "Information about an Amazon Web Services Amazon EC2 Transit Gateway that interconnects virtual private clouds (VPCs) and on-premises networks. "
    AwsEc2VolumeAttachment:
      type: object
      properties:
        AttachTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The datetime when the attachment initiated.
        DeleteOnTermination:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the EBS volume is deleted when the EC2 instance is terminated.
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the EC2 instance.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The attachment state of the volume. Valid values are as follows:</p> <ul> <li> <p> <code>attaching</code> </p> </li> <li> <p> <code>attached</code> </p> </li> <li> <p> <code>busy</code> </p> </li> <li> <p> <code>detaching</code> </p> </li> <li> <p> <code>detached</code> </p> </li> </ul>
      description: An attachment to an Amazon EC2 volume.
    AwsEc2VolumeAttachmentList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2VolumeAttachment"
    AwsEc2VolumeDetails:
      type: object
      properties:
        CreateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the volume was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The device name for the volume that is attached to the instance. "
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether the volume is encrypted.
        Size:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The size of the volume, in GiBs.
        SnapshotId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The snapshot from which the volume was created.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The volume state. Valid values are as follows:</p> <ul> <li> <p> <code>available</code> </p> </li> <li> <p> <code>creating</code> </p> </li> <li> <p> <code>deleted</code> </p> </li> <li> <p> <code>deleting</code> </p> </li> <li> <p> <code>error</code> </p> </li> <li> <p> <code>in-use</code> </p> </li> </ul>
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the KMS key that was used to protect the volume encryption key for the volume.
        Attachments:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VolumeAttachmentList"
            - description: The volume attachments.
        VolumeId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the volume. "
        VolumeType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The volume type. "
        VolumeScanStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Indicates whether the volume was scanned or skipped. "
      description: Details about an EC2 volume.
    CidrBlockAssociationList:
      type: array
      items:
        $ref: "#/components/schemas/CidrBlockAssociation"
    AwsEc2VpcDetails:
      type: object
      properties:
        CidrBlockAssociationSet:
          allOf:
            - $ref: "#/components/schemas/CidrBlockAssociationList"
            - description: Information about the IPv4 CIDR blocks associated with the VPC.
        Ipv6CidrBlockAssociationSet:
          allOf:
            - $ref: "#/components/schemas/Ipv6CidrBlockAssociationList"
            - description: Information about the IPv6 CIDR blocks associated with the VPC.
        DhcpOptionsId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the set of Dynamic Host Configuration Protocol (DHCP) options that are associated with the VPC. If the default options are associated with the VPC, then this is default.
        State:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The current state of the VPC. Valid values are <code>available</code> or <code>pending</code>.
      description: Details about an EC2 VPC.
    AwsEc2VpcEndpointServiceServiceTypeList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2VpcEndpointServiceServiceTypeDetails"
    AwsEc2VpcEndpointServiceDetails:
      type: object
      properties:
        AcceptanceRequired:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether requests from other Amazon Web Services accounts to create an endpoint to the service must first be accepted.
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The Availability Zones where the service is available.
        BaseEndpointDnsNames:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The DNS names for the service.
        ManagesVpcEndpoints:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the service manages its VPC endpoints.
        GatewayLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The ARNs of the Gateway Load Balancers for the service.
        NetworkLoadBalancerArns:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The ARNs of the Network Load Balancers for the service.
        PrivateDnsName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The private DNS name for the service.
        ServiceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the service.
        ServiceName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the service.
        ServiceState:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The current state of the service. Valid values are as follows:</p> <ul> <li> <p> <code>Available</code> </p> </li> <li> <p> <code>Deleted</code> </p> </li> <li> <p> <code>Deleting</code> </p> </li> <li> <p> <code>Failed</code> </p> </li> <li> <p> <code>Pending</code> </p> </li> </ul>
        ServiceType:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpcEndpointServiceServiceTypeList"
            - description: The types for the service.
      description: Contains details about the service configuration for a VPC endpoint service.
    AwsEc2VpcEndpointServiceServiceTypeDetails:
      type: object
      properties:
        ServiceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of service.
      description: The service type information for a VPC endpoint service.
    AwsEc2VpcPeeringConnectionVpcInfoDetails:
      type: object
      properties:
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The IPv4 CIDR block for the VPC. "
        CidrBlockSet:
          allOf:
            - $ref: "#/components/schemas/VpcInfoCidrBlockSetList"
            - description: "Information about the IPv4 CIDR blocks for the VPC. "
        Ipv6CidrBlockSet:
          allOf:
            - $ref: "#/components/schemas/VpcInfoIpv6CidrBlockSetList"
            - description: "The IPv6 CIDR block for the VPC. "
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the Amazon Web Services account that owns the VPC. "
        PeeringOptions:
          allOf:
            - $ref: "#/components/schemas/VpcInfoPeeringOptionsDetails"
            - description: "Information about the VPC peering connection options for the accepter or requester VPC. "
        Region:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Amazon Web Services Region in which the VPC is located. "
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the VPC. "
      description: "Describes a VPC in a VPC peering connection. "
    AwsEc2VpcPeeringConnectionStatusDetails:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The status of the VPC peering connection. "
        Message:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A message that provides more information about the status, if applicable. "
      description: "Details about the status of the VPC peering connection. "
    AwsEc2VpcPeeringConnectionDetails:
      type: object
      properties:
        AccepterVpcInfo:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpcPeeringConnectionVpcInfoDetails"
            - description: "Information about the accepter VPC. "
        ExpirationTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The time at which an unaccepted VPC peering connection will expire. "
        RequesterVpcInfo:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpcPeeringConnectionVpcInfoDetails"
            - description: "Information about the requester VPC. "
        Status:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpcPeeringConnectionStatusDetails"
            - description: "The status of the VPC peering connection. "
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the VPC peering connection. "
      description: "Provides information about a VPC peering connection between two VPCs: a requester VPC that you own and an accepter VPC with which to create the connection. "
    VpcInfoCidrBlockSetList:
      type: array
      items:
        $ref: "#/components/schemas/VpcInfoCidrBlockSetDetails"
    VpcInfoIpv6CidrBlockSetList:
      type: array
      items:
        $ref: "#/components/schemas/VpcInfoIpv6CidrBlockSetDetails"
    VpcInfoPeeringOptionsDetails:
      type: object
      properties:
        AllowDnsResolutionFromRemoteVpc:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Indicates whether a local VPC can resolve public DNS hostnames to private IP addresses when queried from instances in a peer VPC. "
        AllowEgressFromLocalClassicLinkToRemoteVpc:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Indicates whether a local ClassicLink connection can communicate with the peer VPC over the VPC peering connection. "
        AllowEgressFromLocalVpcToRemoteClassicLink:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Indicates whether a local VPC can communicate with a ClassicLink connection in the peer VPC over the VPC peering connection. "
      description: "Provides information about the VPC peering connection options for the accepter or requester VPC. "
    AwsEc2VpnConnectionVgwTelemetryList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2VpnConnectionVgwTelemetryDetails"
    AwsEc2VpnConnectionOptionsDetails:
      type: object
      properties:
        StaticRoutesOnly:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the VPN connection uses static routes only.
        TunnelOptions:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpnConnectionOptionsTunnelOptionsList"
            - description: The VPN tunnel options.
      description: VPN connection options.
    AwsEc2VpnConnectionRoutesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2VpnConnectionRoutesDetails"
    AwsEc2VpnConnectionDetails:
      type: object
      properties:
        VpnConnectionId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the VPN connection.
        State:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The current state of the VPN connection. Valid values are as follows:</p> <ul> <li> <p> <code>available</code> </p> </li> <li> <p> <code>deleted</code> </p> </li> <li> <p> <code>deleting</code> </p> </li> <li> <p> <code>pending</code> </p> </li> </ul>
        CustomerGatewayId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the customer gateway that is at your end of the VPN connection.
        CustomerGatewayConfiguration:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The configuration information for the VPN connection's customer gateway, in the native XML format.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of VPN connection.
        VpnGatewayId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the virtual private gateway that is at the Amazon Web Services side of the VPN connection.
        Category:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The category of the VPN connection. <code>VPN</code> indicates an Amazon Web Services VPN connection. <code>VPN-Classic</code> indicates an Amazon Web Services Classic VPN connection.
        VgwTelemetry:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpnConnectionVgwTelemetryList"
            - description: Information about the VPN tunnel.
        Options:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpnConnectionOptionsDetails"
            - description: The VPN connection options.
        Routes:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpnConnectionRoutesList"
            - description: The static routes that are associated with the VPN connection.
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the transit gateway that is associated with the VPN connection.
      description: Details about an Amazon EC2 VPN connection.
    AwsEc2VpnConnectionOptionsTunnelOptionsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEc2VpnConnectionOptionsTunnelOptionsDetails"
    IntegerList:
      type: array
      items:
        $ref: "#/components/schemas/Integer"
    AwsEc2VpnConnectionOptionsTunnelOptionsDetails:
      type: object
      properties:
        DpdTimeoutSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of seconds after which a Dead Peer Detection (DPD) timeout occurs.
        IkeVersions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The Internet Key Exchange (IKE) versions that are permitted for the VPN tunnel.
        OutsideIpAddress:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The external IP address of the VPN tunnel.
        Phase1DhGroupNumbers:
          allOf:
            - $ref: "#/components/schemas/IntegerList"
            - description: The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 1 IKE negotiations.
        Phase1EncryptionAlgorithms:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The permitted encryption algorithms for the VPN tunnel for phase 1 IKE negotiations.
        Phase1IntegrityAlgorithms:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The permitted integrity algorithms for the VPN tunnel for phase 1 IKE negotiations.
        Phase1LifetimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The lifetime for phase 1 of the IKE negotiation, in seconds.
        Phase2DhGroupNumbers:
          allOf:
            - $ref: "#/components/schemas/IntegerList"
            - description: The permitted Diffie-Hellman group numbers for the VPN tunnel for phase 2 IKE negotiations.
        Phase2EncryptionAlgorithms:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The permitted encryption algorithms for the VPN tunnel for phase 2 IKE negotiations.
        Phase2IntegrityAlgorithms:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The permitted integrity algorithms for the VPN tunnel for phase 2 IKE negotiations.
        Phase2LifetimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The lifetime for phase 2 of the IKE negotiation, in seconds.
        PreSharedKey:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The preshared key to establish initial authentication between the virtual private gateway and the customer gateway.
        RekeyFuzzPercentage:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The percentage of the rekey window, which is determined by <code>RekeyMarginTimeSeconds</code> during which the rekey time is randomly selected.
        RekeyMarginTimeSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The margin time, in seconds, before the phase 2 lifetime expires, during which the Amazon Web Services side of the VPN connection performs an IKE rekey.
        ReplayWindowSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of packets in an IKE replay window.
        TunnelInsideCidr:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The range of inside IPv4 addresses for the tunnel.
      description: The VPN tunnel options.
    AwsEc2VpnConnectionRoutesDetails:
      type: object
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The CIDR block associated with the local subnet of the customer data center.
        State:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The current state of the static route.
      description: A static routes associated with the VPN connection.
    AwsEc2VpnConnectionVgwTelemetryDetails:
      type: object
      properties:
        AcceptedRouteCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of accepted routes.
        CertificateArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the VPN tunnel endpoint certificate.
        LastStatusChange:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The date and time of the last change in status.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        OutsideIpAddress:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Internet-routable IP address of the virtual private gateway's outside interface.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the VPN tunnel. Valid values are <code>DOWN</code> or <code>UP</code>.
        StatusMessage:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: If an error occurs, a description of the error.
      description: Information about the VPN tunnel.
    AwsEcrContainerImageDetails:
      type: object
      properties:
        RegistryId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account identifier that is associated with the registry that the image belongs to.
        RepositoryName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the repository that the image belongs to.
        Architecture:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The architecture of the image. Valid values are as follows:</p> <ul> <li> <p> <code>arm64</code> </p> </li> <li> <p> <code>i386</code> </p> </li> <li> <p> <code>x86_64</code> </p> </li> </ul>
        ImageDigest:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The sha256 digest of the image manifest.
        ImageTags:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The list of tags that are associated with the image.
        ImagePublishedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The date and time when the image was pushed to the repository.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: Information about an Amazon ECR image.
    AwsEcrRepositoryImageScanningConfigurationDetails:
      type: object
      properties:
        ScanOnPush:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to scan images after they are pushed to a repository.
      description: The image scanning configuration for a repository.
    AwsEcrRepositoryLifecyclePolicyDetails:
      type: object
      properties:
        LifecyclePolicyText:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The text of the lifecycle policy.
        RegistryId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account identifier that is associated with the registry that contains the repository.
      description: Information about the lifecycle policy for the repository.
    AwsEcrRepositoryDetails:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the repository.
        ImageScanningConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsEcrRepositoryImageScanningConfigurationDetails"
            - description: The image scanning configuration for a repository.
        ImageTagMutability:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The tag mutability setting for the repository. Valid values are <code>IMMUTABLE</code> or <code>MUTABLE</code>.
        LifecyclePolicy:
          allOf:
            - $ref: "#/components/schemas/AwsEcrRepositoryLifecyclePolicyDetails"
            - description: Information about the lifecycle policy for the repository.
        RepositoryName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the repository.
        RepositoryPolicyText:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The text of the repository policy.
      description: Provides information about an Amazon Elastic Container Registry repository.
    AwsEcsClusterClusterSettingsDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the setting. The valid value is <code>containerInsights</code>.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of the setting. Valid values are <code>disabled</code> or <code>enabled</code>.
      description: Indicates whether to enable CloudWatch Container Insights for the ECS cluster.
    AwsEcsClusterClusterSettingsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsClusterClusterSettingsDetails"
    AwsEcsClusterConfigurationExecuteCommandConfigurationDetails:
      type: object
      properties:
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the KMS key that is used to encrypt the data between the local client and the container.
        LogConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails"
            - description: The log configuration for the results of the run command actions. Required if <code>Logging</code> is <code>NONE</code>.
        Logging:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The log setting to use for redirecting logs for run command results.
      description: Contains the run command configuration for the cluster.
    AwsEcsClusterConfigurationDetails:
      type: object
      properties:
        ExecuteCommandConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsEcsClusterConfigurationExecuteCommandConfigurationDetails"
            - description: Contains the run command configuration for the cluster.
      description: The run command configuration for the cluster.
    AwsEcsClusterConfigurationExecuteCommandConfigurationLogConfigurationDetails:
      type: object
      properties:
        CloudWatchEncryptionEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to enable encryption on the CloudWatch logs.
        CloudWatchLogGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the CloudWatch log group to send the logs to.
        S3BucketName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the S3 bucket to send logs to.
        S3EncryptionEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to encrypt the logs that are sent to the S3 bucket.
        S3KeyPrefix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Identifies the folder in the S3 bucket to send the logs to.
      description: The log configuration for the results of the run command actions.
    AwsEcsClusterDefaultCapacityProviderStrategyDetails:
      type: object
      properties:
        Base:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The minimum number of tasks to run on the specified capacity provider.
        CapacityProvider:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the capacity provider.
        Weight:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The relative percentage of the total number of tasks launched that should use the capacity provider.
      description: The default capacity provider strategy for the cluster. The default capacity provider strategy is used when services or tasks are run without a specified launch type or capacity provider strategy.
    AwsEcsClusterDefaultCapacityProviderStrategyList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsClusterDefaultCapacityProviderStrategyDetails"
    AwsEcsClusterDetails:
      type: object
      properties:
        ClusterArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Amazon Resource Name (ARN) that identifies the cluster. "
        ActiveServicesCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: 'The number of services that are running on the cluster in an <code>ACTIVE</code> state. You can view these services with the Amazon ECS <a href="https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_ListServices.html"> <code>ListServices</code> </a> API operation. '
        CapacityProviders:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The short name of one or more capacity providers to associate with the cluster.
        ClusterSettings:
          allOf:
            - $ref: "#/components/schemas/AwsEcsClusterClusterSettingsList"
            - description: The setting to use to create the cluster. Specifically used to configure whether to enable CloudWatch Container Insights for the cluster.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/AwsEcsClusterConfigurationDetails"
            - description: The run command configuration for the cluster.
        DefaultCapacityProviderStrategy:
          allOf:
            - $ref: "#/components/schemas/AwsEcsClusterDefaultCapacityProviderStrategyList"
            - description: The default capacity provider strategy for the cluster. The default capacity provider strategy is used when services or tasks are run without a specified launch type or capacity provider strategy.
        ClusterName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A name that you use to identify your cluster. "
        RegisteredContainerInstancesCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The number of container instances registered into the cluster. This includes container instances in both <code>ACTIVE</code> and <code>DRAINING</code> status. "
        RunningTasksCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The number of tasks in the cluster that are in the <code>RUNNING</code> state. "
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The status of the cluster. "
      description: Provides details about an Amazon ECS cluster.
    AwsMountPointList:
      type: array
      items:
        $ref: "#/components/schemas/AwsMountPoint"
    AwsEcsContainerDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the container. "
        Image:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The image used for the container. "
        MountPoints:
          allOf:
            - $ref: "#/components/schemas/AwsMountPointList"
            - description: "The mount points for data volumes in your container. "
        Privileged:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "When this parameter is true, the container is given elevated privileges on the host container instance (similar to the root user). "
      description: "Provides information about an Amazon ECS container. "
    AwsEcsContainerDetailsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsContainerDetails"
    AwsEcsServiceCapacityProviderStrategyDetails:
      type: object
      properties:
        Base:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The minimum number of tasks to run on the capacity provider. Only one strategy item can specify a value for <code>Base</code>.</p> <p>The value must be between 0 and 100000.</p>
        CapacityProvider:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The short name of the capacity provider.
        Weight:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The relative percentage of the total number of tasks that should use the capacity provider.</p> <p>If no weight is specified, the default value is 0. At least one capacity provider must have a weight greater than 0.</p> <p>The value can be between 0 and 1000.</p>
      description: Strategy item for the capacity provider strategy that the service uses.
    AwsEcsServiceCapacityProviderStrategyList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsServiceCapacityProviderStrategyDetails"
    AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails:
      type: object
      properties:
        Enable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to enable the deployment circuit breaker logic for the service.
        Rollback:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to roll back the service if a service deployment fails. If rollback is enabled, when a service deployment fails, the service is rolled back to the last deployment that completed successfully.
      description: Determines whether a service deployment fails if a service cannot reach a steady state.
    AwsEcsServiceDeploymentConfigurationDetails:
      type: object
      properties:
        DeploymentCircuitBreaker:
          allOf:
            - $ref: "#/components/schemas/AwsEcsServiceDeploymentConfigurationDeploymentCircuitBreakerDetails"
            - description: Determines whether a service deployment fails if a service cannot reach a steady state.
        MaximumPercent:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>For a service that uses the rolling update (<code>ECS</code>) deployment type, the maximum number of tasks in a service that are allowed in the <code>RUNNING</code> or <code>PENDING</code> state during a deployment, and for tasks that use the EC2 launch type, when any container instances are in the <code>DRAINING</code> state. Provided as a percentage of the desired number of tasks. The default value is 200%.</p> <p>For a service that uses the blue/green (<code>CODE_DEPLOY</code>) or <code>EXTERNAL</code> deployment types, and tasks that use the EC2 launch type, the maximum number of tasks in the service that remain in the <code>RUNNING</code> state while the container instances are in the <code>DRAINING</code> state.</p> <p>For the Fargate launch type, the maximum percent value is not used.</p>
        MinimumHealthyPercent:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>For a service that uses the rolling update (<code>ECS</code>) deployment type, the minimum number of tasks in a service that must remain in the <code>RUNNING</code> state during a deployment, and while any container instances are in the <code>DRAINING</code> state if the service contains tasks using the EC2 launch type. Expressed as a percentage of the desired number of tasks. The default value is 100%.</p> <p>For a service that uses the blue/green (<code>CODE_DEPLOY</code>) or <code>EXTERNAL</code> deployment types and tasks that use the EC2 launch type, the minimum number of the tasks in the service that remain in the <code>RUNNING</code> state while the container instances are in the <code>DRAINING</code> state.</p> <p>For the Fargate launch type, the minimum healthy percent value is not used.</p>
      description: Optional deployment parameters for the service.
    AwsEcsServiceDeploymentControllerDetails:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The rolling update (<code>ECS</code>) deployment type replaces the current running version of the container with the latest version.</p> <p>The blue/green (<code>CODE_DEPLOY</code>) deployment type uses the blue/green deployment model that is powered by CodeDeploy. This deployment model a new deployment of a service can be verified before production traffic is sent to it.</p> <p>The external (<code>EXTERNAL</code>) deployment type allows the use of any third-party deployment controller for full control over the deployment process for an Amazon ECS service.</p> <p>Valid values: <code>ECS</code> | <code>CODE_DEPLOY</code> | <code>EXTERNAL</code> </p>"
      description: Information about the deployment controller type that the service uses.
    AwsEcsServiceLoadBalancersList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsServiceLoadBalancersDetails"
    AwsEcsServiceNetworkConfigurationDetails:
      type: object
      properties:
        AwsVpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails"
            - description: The VPC subnet and security group configuration.
      description: For tasks that use the <code>awsvpc</code> networking mode, the VPC subnet and security group configuration.
    AwsEcsServicePlacementConstraintsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsServicePlacementConstraintsDetails"
    AwsEcsServicePlacementStrategiesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsServicePlacementStrategiesDetails"
    AwsEcsServiceServiceRegistriesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsServiceServiceRegistriesDetails"
    AwsEcsServiceDetails:
      type: object
      properties:
        CapacityProviderStrategy:
          allOf:
            - $ref: "#/components/schemas/AwsEcsServiceCapacityProviderStrategyList"
            - description: The capacity provider strategy that the service uses.
        Cluster:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the cluster that hosts the service.
        DeploymentConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsEcsServiceDeploymentConfigurationDetails"
            - description: Deployment parameters for the service. Includes the number of tasks that run and the order in which to start and stop tasks.
        DeploymentController:
          allOf:
            - $ref: "#/components/schemas/AwsEcsServiceDeploymentControllerDetails"
            - description: Contains the deployment controller type that the service uses.
        DesiredCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of instantiations of the task definition to run on the service.
        EnableEcsManagedTags:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to enable Amazon ECS managed tags for the tasks in the service.
        EnableExecuteCommand:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the execute command functionality is enabled for the service.
        HealthCheckGracePeriodSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: After a task starts, the amount of time in seconds that the Amazon ECS service scheduler ignores unhealthy Elastic Load Balancing target health checks.
        LaunchType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The launch type that the service uses.</p> <p>Valid values: <code>EC2</code> | <code>FARGATE</code> | <code>EXTERNAL</code> </p>"
        LoadBalancers:
          allOf:
            - $ref: "#/components/schemas/AwsEcsServiceLoadBalancersList"
            - description: Information about the load balancers that the service uses.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the service.
        NetworkConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsEcsServiceNetworkConfigurationDetails"
            - description: For tasks that use the <code>awsvpc</code> networking mode, the VPC subnet and security group configuration.
        PlacementConstraints:
          allOf:
            - $ref: "#/components/schemas/AwsEcsServicePlacementConstraintsList"
            - description: The placement constraints for the tasks in the service.
        PlacementStrategies:
          allOf:
            - $ref: "#/components/schemas/AwsEcsServicePlacementStrategiesList"
            - description: Information about how tasks for the service are placed.
        PlatformVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The platform version on which to run the service. Only specified for tasks that are hosted on Fargate. If a platform version is not specified, the <code>LATEST</code> platform version is used by default.
        PropagateTags:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>Indicates whether to propagate the tags from the task definition to the task or from the service to the task. If no value is provided, then tags are not propagated.</p> <p>Valid values: <code>TASK_DEFINITION</code> | <code>SERVICE</code> </p>"
        Role:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the IAM role that is associated with the service. The role allows the Amazon ECS container agent to register container instances with an Elastic Load Balancing load balancer.
        SchedulingStrategy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The scheduling strategy to use for the service.</p> <p>The <code>REPLICA</code> scheduling strategy places and maintains the desired number of tasks across the cluster. By default, the service scheduler spreads tasks across Availability Zones. Task placement strategies and constraints are used to customize task placement decisions.</p> <p>The <code>DAEMON</code> scheduling strategy deploys exactly one task on each active container instance that meets all of the task placement constraints that are specified in the cluster. The service scheduler also evaluates the task placement constraints for running tasks and stops tasks that do not meet the placement constraints.</p> <p>Valid values: <code>REPLICA</code> | <code>DAEMON</code> </p>"
        ServiceArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the service.
        ServiceName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The name of the service.</p> <p>The name can contain up to 255 characters. It can use letters, numbers, underscores, and hyphens.</p>
        ServiceRegistries:
          allOf:
            - $ref: "#/components/schemas/AwsEcsServiceServiceRegistriesList"
            - description: Information about the service discovery registries to assign to the service.
        TaskDefinition:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The task definition to use for tasks in the service.
      description: Provides details about a service within an ECS cluster.
    AwsEcsServiceLoadBalancersDetails:
      type: object
      properties:
        ContainerName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the container to associate with the load balancer.
        ContainerPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The port on the container to associate with the load balancer. This port must correspond to a <code>containerPort</code> in the task definition the tasks in the service are using. For tasks that use the EC2 launch type, the container instance they are launched on must allow ingress traffic on the <code>hostPort</code> of the port mapping.
        LoadBalancerName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The name of the load balancer to associate with the Amazon ECS service or task set.</p> <p>Only specified when using a Classic Load Balancer. For an Application Load Balancer or a Network Load Balancer, the load balancer name is omitted.</p>
        TargetGroupArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The ARN of the Elastic Load Balancing target group or groups associated with a service or task set.</p> <p>Only specified when using an Application Load Balancer or a Network Load Balancer. For a Classic Load Balancer, the target group ARN is omitted.</p>
      description: Information about a load balancer that the service uses.
    AwsEcsServiceNetworkConfigurationAwsVpcConfigurationDetails:
      type: object
      properties:
        AssignPublicIp:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>Whether the task's elastic network interface receives a public IP address. The default value is <code>DISABLED</code>.</p> <p>Valid values: <code>ENABLED</code> | <code>DISABLED</code> </p>"
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: <p>The IDs of the security groups associated with the task or service.</p> <p>You can provide up to five security groups.</p>
        Subnets:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: <p>The IDs of the subnets associated with the task or service.</p> <p>You can provide up to 16 subnets.</p>
      description: For tasks that use the <code>awsvpc</code> networking mode, the VPC subnet and security group configuration.
    AwsEcsServicePlacementConstraintsDetails:
      type: object
      properties:
        Expression:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A cluster query language expression to apply to the constraint. You cannot specify an expression if the constraint type is <code>distinctInstance</code>.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The type of constraint. Use <code>distinctInstance</code> to run each task in a particular group on a different container instance. Use <code>memberOf</code> to restrict the selection to a group of valid candidates.</p> <p>Valid values: <code>distinctInstance</code> | <code>memberOf</code> </p>"
      description: A placement constraint for the tasks in the service.
    AwsEcsServicePlacementStrategiesDetails:
      type: object
      properties:
        Field:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The field to apply the placement strategy against.</p> <p>For the <code>spread</code> placement strategy, valid values are <code>instanceId</code> (or <code>host</code>, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as <code>attribute:ecs.availability-zone</code>.</p> <p>For the <code>binpack</code> placement strategy, valid values are <code>cpu</code> and <code>memory</code>.</p> <p>For the <code>random</code> placement strategy, this attribute is not used.</p>
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The type of placement strategy.</p> <p>The <code>random</code> placement strategy randomly places tasks on available candidates.</p> <p>The <code>spread</code> placement strategy spreads placement across available candidates evenly based on the value of <code>Field</code>.</p> <p>The <code>binpack</code> strategy places tasks on available candidates that have the least available amount of the resource that is specified in <code>Field</code>.</p> <p>Valid values: <code>random</code> | <code>spread</code> | <code>binpack</code> </p>"
      description: A placement strategy that determines how to place the tasks for the service.
    AwsEcsServiceServiceRegistriesDetails:
      type: object
      properties:
        ContainerName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The container name value to use for the service discovery service.</p> <p>If the task definition uses the <code>bridge</code> or <code>host</code> network mode, you must specify <code>ContainerName</code> and <code>ContainerPort</code>.</p> <p>If the task definition uses the <code>awsvpc</code> network mode and a type SRV DNS record, you must specify either <code>ContainerName</code> and <code>ContainerPort</code>, or <code>Port</code> , but not both.</p>
        ContainerPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The port value to use for the service discovery service.</p> <p>If the task definition uses the <code>bridge</code> or <code>host</code> network mode, you must specify <code>ContainerName</code> and <code>ContainerPort</code>.</p> <p>If the task definition uses the <code>awsvpc</code> network mode and a type SRV DNS record, you must specify either <code>ContainerName</code> and <code>ContainerPort</code>, or <code>Port</code> , but not both.</p>
        Port:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The port value to use for a service discovery service that specifies an SRV record. This field can be used if both the <code>awsvpc</code>awsvpc network mode and SRV records are used.
        RegistryArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the service registry.
      description: Information about a service discovery registry to assign to the service.
    AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails:
      type: object
      properties:
        Condition:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The dependency condition of the dependent container. Indicates the required status of the dependent container before the current container can start. Valid values are as follows:</p> <ul> <li> <p> <code>COMPLETE</code> </p> </li> <li> <p> <code>HEALTHY</code> </p> </li> <li> <p> <code>SUCCESS</code> </p> </li> <li> <p> <code>START</code> </p> </li> </ul>
        ContainerName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the dependent container.
      description: A dependency that is defined for container startup and shutdown.
    AwsEcsTaskDefinitionContainerDefinitionsDependsOnList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsDependsOnDetails"
    AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails"
    AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails"
    AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails"
    AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails:
      type: object
      properties:
        Options:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: <p>The options to use to configure the log router.</p> <p>The valid option keys are as follows:</p> <ul> <li> <p> <code>enable-ecs-log-metadata</code>. The value can be <code>true</code> or <code>false</code>.</p> </li> <li> <p> <code>config-file-type</code>. The value can be <code>s3</code> or <code>file</code>.</p> </li> <li> <p> <code>config-file-value</code>. The value is either an S3 ARN or a file path.</p> </li> </ul>
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The log router to use. Valid values are <code>fluentbit</code> or <code>fluentd</code>.
      description: The FireLens configuration for the container. The configuration specifies and configures a log router for container logs.
    AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails:
      type: object
      properties:
        Command:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The command that the container runs to determine whether it is healthy.
        Interval:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The time period in seconds between each health check execution. The default value is 30 seconds.
        Retries:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of times to retry a failed health check before the container is considered unhealthy. The default value is 3.
        StartPeriod:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The optional grace period in seconds that allows containers time to bootstrap before failed health checks count towards the maximum number of retries.
        Timeout:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The time period in seconds to wait for a health check to succeed before it is considered a failure. The default value is 5.
      description: The container health check command and associated configuration parameters for the container.
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails:
      type: object
      properties:
        Capabilities:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails"
            - description: The Linux capabilities for the container that are added to or dropped from the default configuration provided by Docker.
        Devices:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList"
            - description: The host devices to expose to the container.
        InitProcessEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Whether to run an <code>init</code> process inside the container that forwards signals and reaps processes. "
        MaxSwap:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The total amount of swap memory (in MiB) that a container can use.
        SharedMemorySize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The value for the size (in MiB) of the <b>/dev/shm</b> volume.
        Swappiness:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Configures the container's memory swappiness behavior. Determines how aggressively pages are swapped. The higher the value, the more aggressive the swappiness. The default is 60.
        Tmpfs:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList"
            - description: The container path, mount options, and size (in MiB) of the tmpfs mount.
      description: "&gt;Linux-specific modifications that are applied to the container, such as Linux kernel capabilities."
    AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails:
      type: object
      properties:
        LogDriver:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The log driver to use for the container.</p> <p>Valid values on Fargate are as follows:</p> <ul> <li> <p> <code>awsfirelens</code> </p> </li> <li> <p> <code>awslogs</code> </p> </li> <li> <p> <code>splunk</code> </p> </li> </ul> <p>Valid values on Amazon EC2 are as follows:</p> <ul> <li> <p> <code>awsfirelens</code> </p> </li> <li> <p> <code>awslogs</code> </p> </li> <li> <p> <code>fluentd</code> </p> </li> <li> <p> <code>gelf</code> </p> </li> <li> <p> <code>journald</code> </p> </li> <li> <p> <code>json-file</code> </p> </li> <li> <p> <code>logentries</code> </p> </li> <li> <p> <code>splunk</code> </p> </li> <li> <p> <code>syslog</code> </p> </li> </ul>
        Options:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: The configuration options to send to the log driver. Requires version 1.19 of the Docker Remote API or greater on your container instance.
        SecretOptions:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList"
            - description: The secrets to pass to the log configuration.
      description: The log configuration specification for the container.
    AwsEcsTaskDefinitionContainerDefinitionsMountPointsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails"
    AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails"
    AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails:
      type: object
      properties:
        CredentialsParameter:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the secret that contains the private repository credentials.
      description: The private repository authentication credentials to use.
    AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails"
    AwsEcsTaskDefinitionContainerDefinitionsSecretsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails"
    AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails"
    AwsEcsTaskDefinitionContainerDefinitionsUlimitsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails"
    AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails"
    AwsEcsTaskDefinitionContainerDefinitionsDetails:
      type: object
      properties:
        Command:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The command that is passed to the container.
        Cpu:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of CPU units reserved for the container.
        DependsOn:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsDependsOnList"
            - description: The dependencies that are defined for container startup and shutdown.
        DisableNetworking:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to disable networking within the container.
        DnsSearchDomains:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: A list of DNS search domains that are presented to the container.
        DnsServers:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: A list of DNS servers that are presented to the container.
        DockerLabels:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: A key-value map of labels to add to the container.
        DockerSecurityOptions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: A list of strings to provide custom labels for SELinux and AppArmor multi-level security systems.
        EntryPoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The entry point that is passed to the container.
        Environment:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentList"
            - description: The environment variables to pass to a container.
        EnvironmentFiles:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesList"
            - description: A list of files containing the environment variables to pass to a container.
        Essential:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the container is essential. All tasks must have at least one essential container.
        ExtraHosts:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsExtraHostsList"
            - description: A list of hostnames and IP address mappings to append to the <b>/etc/hosts</b> file on the container.
        FirelensConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsFirelensConfigurationDetails"
            - description: The FireLens configuration for the container. Specifies and configures a log router for container logs.
        HealthCheck:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsHealthCheckDetails"
            - description: The container health check command and associated configuration parameters for the container.
        Hostname:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The hostname to use for the container.
        Image:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The image used to start the container.
        Interactive:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: If set to true, then containerized applications can be deployed that require <code>stdin</code> or a <code>tty</code> to be allocated.
        Links:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: A list of links for the container in the form <code> <i>container_name</i>:<i>alias</i> </code>. Allows containers to communicate with each other without the need for port mappings.
        LinuxParameters:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDetails"
            - description: Linux-specific modifications that are applied to the container, such as Linux kernel capabilities.
        LogConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationDetails"
            - description: The log configuration specification for the container.
        Memory:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The amount (in MiB) of memory to present to the container. If the container attempts to exceed the memory specified here, the container is shut down. The total amount of memory reserved for all containers within a task must be lower than the task memory value, if one is specified.
        MemoryReservation:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The soft limit (in MiB) of memory to reserve for the container.
        MountPoints:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsMountPointsList"
            - description: The mount points for the data volumes in the container.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the container.
        PortMappings:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsPortMappingsList"
            - description: The list of port mappings for the container.
        Privileged:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the container is given elevated privileges on the host container instance. The elevated privileges are similar to the root user.
        PseudoTerminal:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to allocate a TTY to the container.
        ReadonlyRootFilesystem:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the container is given read-only access to its root file system.
        RepositoryCredentials:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsRepositoryCredentialsDetails"
            - description: The private repository authentication credentials to use.
        ResourceRequirements:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsList"
            - description: The type and amount of a resource to assign to a container. The only supported resource is a GPU.
        Secrets:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsSecretsList"
            - description: The secrets to pass to the container.
        StartTimeout:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The number of seconds to wait before giving up on resolving dependencies for a container. "
        StopTimeout:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of seconds to wait before the container is stopped if it doesn't shut down normally on its own.
        SystemControls:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsSystemControlsList"
            - description: A list of namespaced kernel parameters to set in the container.
        Ulimits:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsUlimitsList"
            - description: "A list of ulimits to set in the container. "
        User:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The user to use inside the container.</p> <p>The value can use one of the following formats.</p> <ul> <li> <p> <code> <i>user</i> </code> </p> </li> <li> <p> <code> <i>user</i> </code>:<code> <i>group</i> </code> </p> </li> <li> <p> <code> <i>uid</i> </code> </p> </li> <li> <p> <code> <i>uid</i> </code>:<code> <i>gid</i> </code> </p> </li> <li> <p> <code> <i>user</i> </code>:<code> <i>gid</i> </code> </p> </li> <li> <p> <code> <i>uid</i> </code>:<code> <i>group</i> </code> </p> </li> </ul>
        VolumesFrom:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsVolumesFromList"
            - description: Data volumes to mount from another container.
        WorkingDirectory:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The working directory in which to run commands inside the container.
      description: A container definition that describes a container in the task.
    AwsEcsTaskDefinitionContainerDefinitionsEnvironmentDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the environment variable.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of the environment variable.
      description: An environment variable to pass to the container.
    AwsEcsTaskDefinitionContainerDefinitionsEnvironmentFilesDetails:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of environment file. The valid value is <code>s3</code>.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the S3 object that contains the environment variable file.
      description: A file that contain environment variables to pass to a container.
    AwsEcsTaskDefinitionContainerDefinitionsExtraHostsDetails:
      type: object
      properties:
        Hostname:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The hostname to use in the <b>/etc/hosts</b> entry.
        IpAddress:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IP address to use in the <b>/etc/hosts</b> entry.
      description: A hostname and IP address mapping to append to the <b>/etc/hosts</b> file on the container.
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersCapabilitiesDetails:
      type: object
      properties:
        Add:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: '<p>The Linux capabilities for the container that are added to the default configuration provided by Docker. Valid values are as follows:</p> <p>Valid values: <code>"ALL"</code> | <code>"AUDIT_CONTROL"</code> |<code> "AUDIT_WRITE"</code> | <code>"BLOCK_SUSPEND"</code> | <code>"CHOWN"</code> | <code>"DAC_OVERRIDE"</code> | <code>"DAC_READ_SEARCH"</code> | <code>"FOWNER"</code> | <code>"FSETID"</code> | <code>"IPC_LOCK"</code> | <code>"IPC_OWNER"</code> | <code>"KILL"</code> | <code>"LEASE"</code> | <code>"LINUX_IMMUTABLE"</code> | <code>"MAC_ADMIN"</code> |<code> "MAC_OVERRIDE"</code> | <code>"MKNOD"</code> | <code>"NET_ADMIN"</code> | <code>"NET_BIND_SERVICE"</code> | <code>"NET_BROADCAST"</code> | <code>"NET_RAW"</code> | <code>"SETFCAP"</code> | <code>"SETGID"</code> | <code>"SETPCAP"</code> | <code>"SETUID"</code> | <code>"SYS_ADMIN"</code> | <code>"SYS_BOOT"</code> | <code>"SYS_CHROOT"</code> | <code>"SYS_MODULE"</code> | <code>"SYS_NICE"</code> | <code>"SYS_PACCT"</code> | <code>"SYS_PTRACE"</code> | <code>"SYS_RAWIO"</code> | <code>"SYS_RESOURCE"</code> | <code>"SYS_TIME"</code> | <code>"SYS_TTY_CONFIG"</code> | <code>"SYSLOG"</code> | <code>"WAKE_ALARM"</code> </p>'
        Drop:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: '<p>The Linux capabilities for the container that are dropped from the default configuration provided by Docker.</p> <p>Valid values: <code>"ALL"</code> | <code>"AUDIT_CONTROL"</code> |<code> "AUDIT_WRITE"</code> | <code>"BLOCK_SUSPEND"</code> | <code>"CHOWN"</code> | <code>"DAC_OVERRIDE"</code> | <code>"DAC_READ_SEARCH"</code> | <code>"FOWNER"</code> | <code>"FSETID"</code> | <code>"IPC_LOCK"</code> | <code>"IPC_OWNER"</code> | <code>"KILL"</code> | <code>"LEASE"</code> | <code>"LINUX_IMMUTABLE"</code> | <code>"MAC_ADMIN"</code> |<code> "MAC_OVERRIDE"</code> | <code>"MKNOD"</code> | <code>"NET_ADMIN"</code> | <code>"NET_BIND_SERVICE"</code> | <code>"NET_BROADCAST"</code> | <code>"NET_RAW"</code> | <code>"SETFCAP"</code> | <code>"SETGID"</code> | <code>"SETPCAP"</code> | <code>"SETUID"</code> | <code>"SYS_ADMIN"</code> | <code>"SYS_BOOT"</code> | <code>"SYS_CHROOT"</code> | <code>"SYS_MODULE"</code> | <code>"SYS_NICE"</code> | <code>"SYS_PACCT"</code> | <code>"SYS_PTRACE"</code> | <code>"SYS_RAWIO"</code> | <code>"SYS_RESOURCE"</code> | <code>"SYS_TIME"</code> | <code>"SYS_TTY_CONFIG"</code> | <code>"SYSLOG"</code> | <code>"WAKE_ALARM"</code> </p>'
      description: The Linux capabilities for the container that are added to or dropped from the default configuration provided by Docker.
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails"
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails"
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersDevicesDetails:
      type: object
      properties:
        ContainerPath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path inside the container at which to expose the host device.
        HostPath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path for the device on the host container instance.
        Permissions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The explicit permissions to provide to the container for the device. By default, the container has permissions for read, write, and <code>mknod</code> for the device.
      description: A host device to expose to the container.
    AwsEcsTaskDefinitionContainerDefinitionsLinuxParametersTmpfsDetails:
      type: object
      properties:
        ContainerPath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The absolute file path where the tmpfs volume is to be mounted.
        MountOptions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: '<p>The list of tmpfs volume mount options.</p> <p>Valid values: <code>"defaults"</code> | <code>"ro"</code> | <code>"rw"</code> | <code>"suid"</code> | <code>"nosuid"</code> | <code>"dev"</code> | <code>"nodev"</code> |<code> "exec"</code> | <code>"noexec"</code> | <code>"sync"</code> | <code>"async"</code> | <code>"dirsync"</code> | <code>"remount"</code> | <code>"mand"</code> | <code>"nomand"</code> | <code>"atime"</code> | <code>"noatime"</code> | <code>"diratime"</code> | <code>"nodiratime"</code> | <code>"bind"</code> | <code>"rbind"</code> | <code>"unbindable"</code> | <code>"runbindable"</code> | <code>"private"</code> | <code>"rprivate"</code> | <code>"shared"</code> | <code>"rshared"</code> | <code>"slave"</code> | <code>"rslave"</code> | <code>"relatime"</code> | <code>"norelatime"</code> | <code>"strictatime"</code> | <code>"nostrictatime"</code> |<code> "mode"</code> | <code>"uid"</code> | <code>"gid"</code> | <code>"nr_inodes"</code> |<code> "nr_blocks"</code> | <code>"mpol"</code> </p>'
        Size:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum size (in MiB) of the tmpfs volume.
      description: The container path, mount options, and size (in MiB) of a tmpfs mount.
    AwsEcsTaskDefinitionContainerDefinitionsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsDetails"
    AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails"
    AwsEcsTaskDefinitionContainerDefinitionsLogConfigurationSecretOptionsDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the secret.
        ValueFrom:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The secret to expose to the container.</p> <p>The value is either the full ARN of the Secrets Manager secret or the full ARN of the parameter in the Systems Manager Parameter Store.</p>
      description: A secret to pass to the log configuration.
    AwsEcsTaskDefinitionContainerDefinitionsMountPointsDetails:
      type: object
      properties:
        ContainerPath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path on the container to mount the host volume at.
        ReadOnly:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the container has read-only access to the volume.
        SourceVolume:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the volume to mount. Must match the name of a volume listed in <code>VolumeDetails</code> for the task definition.
      description: A mount point for the data volumes in the container.
    AwsEcsTaskDefinitionContainerDefinitionsPortMappingsDetails:
      type: object
      properties:
        ContainerPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The port number on the container that is bound to the user-specified or automatically assigned host port.
        HostPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The port number on the container instance to reserve for the container.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The protocol used for the port mapping. The default is <code>tcp</code>.
      description: A port mapping for the container.
    AwsEcsTaskDefinitionContainerDefinitionsResourceRequirementsDetails:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of resource to assign to a container. Valid values are <code>GPU</code> or <code>InferenceAccelerator</code>.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The value for the specified resource type.</p> <p>For <code>GPU</code>, the value is the number of physical GPUs the Amazon ECS container agent reserves for the container.</p> <p>For <code>InferenceAccelerator</code>, the value should match the <code>DeviceName</code> attribute of an entry in <code>InferenceAccelerators</code>.</p>
      description: A resource to assign to a container.
    AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the secret.
        ValueFrom:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The secret to expose to the container. The value is either the full ARN of the Secrets Manager secret or the full ARN of the parameter in the Systems Manager Parameter Store.
      description: A secret to pass to the container.
    AwsEcsTaskDefinitionContainerDefinitionsSystemControlsDetails:
      type: object
      properties:
        Namespace:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The namespaced kernel parameter for which to set a value.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of the parameter.
      description: A namespaced kernel parameter to set in the container.
    AwsEcsTaskDefinitionContainerDefinitionsUlimitsDetails:
      type: object
      properties:
        HardLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The hard limit for the ulimit type.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The type of the ulimit. Valid values are as follows:</p> <ul> <li> <p> <code>core</code> </p> </li> <li> <p> <code>cpu</code> </p> </li> <li> <p> <code>data</code> </p> </li> <li> <p> <code>fsize</code> </p> </li> <li> <p> <code>locks</code> </p> </li> <li> <p> <code>memlock</code> </p> </li> <li> <p> <code>msgqueue</code> </p> </li> <li> <p> <code>nice</code> </p> </li> <li> <p> <code>nofile</code> </p> </li> <li> <p> <code>nproc</code> </p> </li> <li> <p> <code>rss</code> </p> </li> <li> <p> <code>rtprio</code> </p> </li> <li> <p> <code>rttime</code> </p> </li> <li> <p> <code>sigpending</code> </p> </li> <li> <p> <code>stack</code> </p> </li> </ul>
        SoftLimit:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The soft limit for the ulimit type.
      description: A ulimit to set in the container.
    AwsEcsTaskDefinitionContainerDefinitionsVolumesFromDetails:
      type: object
      properties:
        ReadOnly:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the container has read-only access to the volume.
        SourceContainer:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of another container within the same task definition from which to mount volumes.
      description: A data volume to mount from another container.
    AwsEcsTaskDefinitionInferenceAcceleratorsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionInferenceAcceleratorsDetails"
    AwsEcsTaskDefinitionPlacementConstraintsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionPlacementConstraintsDetails"
    AwsEcsTaskDefinitionProxyConfigurationDetails:
      type: object
      properties:
        ContainerName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the container that will serve as the App Mesh proxy.
        ProxyConfigurationProperties:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList"
            - description: The set of network configuration parameters to provide to the Container Network Interface (CNI) plugin, specified as key-value pairs.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The proxy type.
      description: The configuration details for the App Mesh proxy.
    AwsEcsTaskDefinitionVolumesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionVolumesDetails"
    AwsEcsTaskDefinitionDetails:
      type: object
      properties:
        ContainerDefinitions:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionContainerDefinitionsList"
            - description: The container definitions that describe the containers that make up the task.
        Cpu:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The number of CPU units used by the task.Valid values are as follows:</p> <ul> <li> <p> <code>256 (.25 vCPU)</code> </p> </li> <li> <p> <code>512 (.5 vCPU)</code> </p> </li> <li> <p> <code>1024 (1 vCPU)</code> </p> </li> <li> <p> <code>2048 (2 vCPU)</code> </p> </li> <li> <p> <code>4096 (4 vCPU)</code> </p> </li> </ul>
        ExecutionRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the task execution role that grants the container agent permission to make API calls on behalf of the container user.
        Family:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of a family that this task definition is registered to.
        InferenceAccelerators:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionInferenceAcceleratorsList"
            - description: The Elastic Inference accelerators to use for the containers in the task.
        IpcMode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The inter-process communication (IPC) resource namespace to use for the containers in the task. Valid values are as follows:</p> <ul> <li> <p> <code>host</code> </p> </li> <li> <p> <code>none</code> </p> </li> <li> <p> <code>task</code> </p> </li> </ul>
        Memory:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The amount (in MiB) of memory used by the task. </p> <p>For tasks that are hosted on Amazon EC2, you can provide a task-level memory value or a container-level memory value. For tasks that are hosted on Fargate, you must use one of the <a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size">specified values</a> in the <i> <i>Amazon Elastic Container Service Developer Guide</i> </i>, which determines your range of supported values for the <code>Cpu</code> and <code>Memory</code> parameters.</p>
        NetworkMode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The Docker networking mode to use for the containers in the task. Valid values are as follows:</p> <ul> <li> <p> <code>awsvpc</code> </p> </li> <li> <p> <code>bridge</code> </p> </li> <li> <p> <code>host</code> </p> </li> <li> <p> <code>none</code> </p> </li> </ul>
        PidMode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The process namespace to use for the containers in the task. Valid values are <code>host</code> or <code>task</code>.
        PlacementConstraints:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionPlacementConstraintsList"
            - description: The placement constraint objects to use for tasks.
        ProxyConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionProxyConfigurationDetails"
            - description: The configuration details for the App Mesh proxy.
        RequiresCompatibilities:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The task launch types that the task definition was validated against.
        TaskRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The short name or ARN of the IAM role that grants containers in the task permission to call Amazon Web Services API operations on your behalf.
        Volumes:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionVolumesList"
            - description: The data volume definitions for the task.
      description: Details about a task definition. A task definition describes the container and volume definitions of an Amazon Elastic Container Service task.
    AwsEcsTaskDefinitionInferenceAcceleratorsDetails:
      type: object
      properties:
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Elastic Inference accelerator device name.
        DeviceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Elastic Inference accelerator type to use.
      description: An Elastic Inference accelerator to use for the containers in the task.
    AwsEcsTaskDefinitionPlacementConstraintsDetails:
      type: object
      properties:
        Expression:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A cluster query language expression to apply to the constraint.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of constraint.
      description: A placement constraint object to use for tasks.
    AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails"
    AwsEcsTaskDefinitionProxyConfigurationProxyConfigurationPropertiesDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the property.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of the property.
      description: A network configuration parameter to provide to the Container Network Interface (CNI) plugin.
    AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails:
      type: object
      properties:
        Autoprovision:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to create the Docker volume automatically if it does not already exist.
        Driver:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Docker volume driver to use.
        DriverOpts:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: A map of Docker driver-specific options that are passed through.
        Labels:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: Custom metadata to add to the Docker volume.
        Scope:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The scope for the Docker volume that determines its lifecycle. Docker volumes that are scoped to a task are provisioned automatically when the task starts and destroyed when the task stops. Docker volumes that are shared persist after the task stops. Valid values are <code>shared</code> or <code>task</code>.
      description: Information about a Docker volume.
    AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails:
      type: object
      properties:
        AuthorizationConfig:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails"
            - description: The authorization configuration details for the Amazon EFS file system.
        FilesystemId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon EFS file system identifier to use.
        RootDirectory:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The directory within the Amazon EFS file system to mount as the root directory inside the host.
        TransitEncryption:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Whether to enable encryption for Amazon EFS data in transit between the Amazon ECS host and the Amazon EFS server. "
        TransitEncryptionPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The port to use when sending encrypted data between the Amazon ECS host and the Amazon EFS server.
      description: Information about the Amazon Elastic File System file system that is used for task storage.
    AwsEcsTaskDefinitionVolumesHostDetails:
      type: object
      properties:
        SourcePath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path on the host container instance that is presented to the container.
      description: Information about a bind mount host volume.
    AwsEcsTaskDefinitionVolumesDetails:
      type: object
      properties:
        DockerVolumeConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionVolumesDockerVolumeConfigurationDetails"
            - description: Information about a Docker volume.
        EfsVolumeConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationDetails"
            - description: Information about the Amazon Elastic File System file system that is used for task storage.
        Host:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionVolumesHostDetails"
            - description: Information about a bind mount host volume.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the data volume.
      description: A data volume to mount from another container.
    AwsEcsTaskDefinitionVolumesEfsVolumeConfigurationAuthorizationConfigDetails:
      type: object
      properties:
        AccessPointId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon EFS access point identifier to use.
        Iam:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Whether to use the Amazon ECS task IAM role defined in a task definition when mounting the Amazon EFS file system.
      description: <p/>
    AwsEcsTaskVolumeDetailsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEcsTaskVolumeDetails"
    AwsEcsTaskDetails:
      type: object
      properties:
        ClusterArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Amazon Resource Name (ARN) of the cluster that hosts the task. "
        TaskDefinitionArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ARN of the task definition that creates the task. "
        Version:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The version counter for the task. "
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Unix timestamp for the time when the task was created. More specifically, it's for the time when the task entered the <code>PENDING</code> state. "
        StartedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Unix timestamp for the time when the task started. More specifically, it's for the time when the task transitioned from the <code>PENDING</code> state to the <code>RUNNING</code> state. "
        StartedBy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The tag specified when a task is started. If an Amazon ECS service started the task, the <code>startedBy</code> parameter contains the deployment ID of that service. "
        Group:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the task group that's associated with the task. "
        Volumes:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskVolumeDetailsList"
            - description: "Details about the data volume that is used in a task definition. "
        Containers:
          allOf:
            - $ref: "#/components/schemas/AwsEcsContainerDetailsList"
            - description: "The containers that are associated with the task. "
      description: "Provides details about a task in a cluster. "
    AwsEcsTaskVolumeHostDetails:
      type: object
      properties:
        SourcePath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "When the <code>host</code> parameter is used, specify a <code>sourcePath</code> to declare the path on the host container instance that's presented to the container. "
      description: "Provides details on a container instance bind mount host volume. "
    AwsEcsTaskVolumeDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the volume. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed. This name is referenced in the <code>sourceVolume</code> parameter of container definition <code>mountPoints</code>. "
        Host:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskVolumeHostDetails"
            - description: "This parameter is specified when you use bind mount host volumes. The contents of the <code>host</code> parameter determine whether your bind mount host volume persists on the host container instance and where it's stored. "
      description: "Provides information about a data volume that's used in a task definition. "
    AwsEfsAccessPointPosixUserDetails:
      type: object
      properties:
        Gid:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The POSIX group ID used for all file system operations using this access point. "
        SecondaryGids:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: "Secondary POSIX group IDs used for all file system operations using this access point. "
        Uid:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The POSIX user ID used for all file system operations using this access point. "
      description: "Provides details for all file system operations using this Amazon EFS access point. "
    AwsEfsAccessPointRootDirectoryDetails:
      type: object
      properties:
        CreationInfo:
          allOf:
            - $ref: "#/components/schemas/AwsEfsAccessPointRootDirectoryCreationInfoDetails"
            - description: "Specifies the POSIX IDs and permissions to apply to the access point's root directory. "
        Path:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Specifies the path on the Amazon EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide <code>CreationInfo</code>. "
      description: "Provides information about the directory on the Amazon EFS file system that the access point exposes as the root directory to NFS clients using the access point. "
    AwsEfsAccessPointDetails:
      type: object
      properties:
        AccessPointId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the Amazon EFS access point. "
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Amazon Resource Name (ARN) of the Amazon EFS access point. "
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The opaque string specified in the request to ensure idempotent creation. "
        FileSystemId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the Amazon EFS file system that the access point applies to. "
        PosixUser:
          allOf:
            - $ref: "#/components/schemas/AwsEfsAccessPointPosixUserDetails"
            - description: "The full POSIX identity, including the user ID, group ID, and secondary group IDs on the access point, that is used for all file operations by NFS clients using the access point. "
        RootDirectory:
          allOf:
            - $ref: "#/components/schemas/AwsEfsAccessPointRootDirectoryDetails"
            - description: "The directory on the Amazon EFS file system that the access point exposes as the root directory to NFS clients using the access point. "
      description: "Provides information about an Amazon EFS access point. "
    AwsEfsAccessPointRootDirectoryCreationInfoDetails:
      type: object
      properties:
        OwnerGid:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Specifies the POSIX group ID to apply to the root directory. "
        OwnerUid:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Specifies the POSIX user ID to apply to the root directory. "
        Permissions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Specifies the POSIX permissions to apply to the root directory, in the format of an octal number representing the file's mode bits. "
      description: "Provides information about the settings that Amazon EFS uses to create the root directory when a client connects to an access point. "
    AwsEksClusterResourcesVpcConfigDetails:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The security groups that are associated with the cross-account elastic network interfaces that are used to allow communication between your nodes and the Amazon EKS control plane.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The subnets that are associated with the cluster.
        EndpointPublicAccess:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether the Amazon EKS public API server endpoint is turned on. If the Amazon EKS public API server endpoint is turned off, your cluster's Kubernetes API server can only receive requests that originate from within the cluster VPC. "
      description: Information about the VPC configuration used by the cluster control plane.
    AwsEksClusterLoggingDetails:
      type: object
      properties:
        ClusterLogging:
          allOf:
            - $ref: "#/components/schemas/AwsEksClusterLoggingClusterLoggingList"
            - description: Cluster logging configurations.
      description: The logging configuration for an Amazon EKS cluster.
    AwsEksClusterDetails:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the cluster.
        CertificateAuthorityData:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The certificate authority data for the cluster.
        ClusterStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The status of the cluster. Valid values are as follows:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>CREATING</code> </p> </li> <li> <p> <code>DELETING</code> </p> </li> <li> <p> <code>FAILED</code> </p> </li> <li> <p> <code>PENDING</code> </p> </li> <li> <p> <code>UPDATING</code> </p> </li> </ul>
        Endpoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The endpoint for the Amazon EKS API server.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the cluster.
        ResourcesVpcConfig:
          allOf:
            - $ref: "#/components/schemas/AwsEksClusterResourcesVpcConfigDetails"
            - description: The VPC configuration used by the cluster control plane.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the IAM role that provides permissions for the Amazon EKS control plane to make calls to Amazon Web Services API operations on your behalf.
        Version:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon EKS server version for the cluster.
        Logging:
          allOf:
            - $ref: "#/components/schemas/AwsEksClusterLoggingDetails"
            - description: The logging configuration for the cluster.
      description: Provides details about an Amazon EKS cluster.
    AwsEksClusterLoggingClusterLoggingDetails:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the logging types that are listed in <code>Types</code> are enabled.
        Types:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: <p>A list of logging types. Valid values are as follows:</p> <ul> <li> <p> <code>api</code> </p> </li> <li> <p> <code>audit</code> </p> </li> <li> <p> <code>authenticator</code> </p> </li> <li> <p> <code>controllerManager</code> </p> </li> <li> <p> <code>scheduler</code> </p> </li> </ul>
      description: Details for a cluster logging configuration.
    AwsEksClusterLoggingClusterLoggingList:
      type: array
      items:
        $ref: "#/components/schemas/AwsEksClusterLoggingClusterLoggingDetails"
    AwsElasticBeanstalkEnvironmentEnvironmentLinks:
      type: array
      items:
        $ref: "#/components/schemas/AwsElasticBeanstalkEnvironmentEnvironmentLink"
    AwsElasticBeanstalkEnvironmentOptionSettings:
      type: array
      items:
        $ref: "#/components/schemas/AwsElasticBeanstalkEnvironmentOptionSetting"
    AwsElasticBeanstalkEnvironmentTier:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the environment tier. Valid values are <code>WebServer</code> or <code>Worker</code>.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of environment tier. Valid values are <code>Standard</code> or <code>SQS/HTTP</code>.
        Version:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of the environment tier.
      description: Contains information about the tier of the environment.
    AwsElasticBeanstalkEnvironmentDetails:
      type: object
      properties:
        ApplicationName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the application that is associated with the environment.
        Cname:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The URL to the CNAME for this environment.
        DateCreated:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The creation date for this environment.
        DateUpdated:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The date when this environment was last modified.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the environment.
        EndpointUrl:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: For load-balanced, autoscaling environments, the URL to the load balancer. For single-instance environments, the IP address of the instance.
        EnvironmentArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the environment.
        EnvironmentId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the environment.
        EnvironmentLinks:
          allOf:
            - $ref: "#/components/schemas/AwsElasticBeanstalkEnvironmentEnvironmentLinks"
            - description: Links to other environments in the same group.
        EnvironmentName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the environment.
        OptionSettings:
          allOf:
            - $ref: "#/components/schemas/AwsElasticBeanstalkEnvironmentOptionSettings"
            - description: The configuration setting for the environment.
        PlatformArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the platform version for the environment.
        SolutionStackName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the solution stack that is deployed with the environment.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The current operational status of the environment. Valid values are as follows:</p> <ul> <li> <p> <code>Aborting</code> </p> </li> <li> <p> <code>Launching</code> </p> </li> <li> <p> <code>LinkingFrom</code> </p> </li> <li> <p> <code>LinkingTo</code> </p> </li> <li> <p> <code>Ready</code> </p> </li> <li> <p> <code>Terminated</code> </p> </li> <li> <p> <code>Terminating</code> </p> </li> <li> <p> <code>Updating</code> </p> </li> </ul>
        Tier:
          allOf:
            - $ref: "#/components/schemas/AwsElasticBeanstalkEnvironmentTier"
            - description: The tier of the environment.
        VersionLabel:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The application version of the environment.
      description: Contains details about an Elastic Beanstalk environment.
    AwsElasticBeanstalkEnvironmentEnvironmentLink:
      type: object
      properties:
        EnvironmentName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the linked environment.
        LinkName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the environment link.
      description: Contains information about a link to another environment that is in the same group.
    AwsElasticBeanstalkEnvironmentOptionSetting:
      type: object
      properties:
        Namespace:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of resource that the configuration option is associated with.
        OptionName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the option.
        ResourceName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the resource.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of the configuration setting.
      description: A configuration option setting for the environment.
    AwsElasticsearchDomainDomainEndpointOptions:
      type: object
      properties:
        EnforceHTTPS:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to require that all traffic to the domain arrive over HTTPS.
        TLSSecurityPolicy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The TLS security policy to apply to the HTTPS endpoint of the OpenSearch domain.</p> <p>Valid values:</p> <ul> <li> <p> <code>Policy-Min-TLS-1-0-2019-07</code>, which supports TLSv1.0 and higher</p> </li> <li> <p> <code>Policy-Min-TLS-1-2-2019-07</code>, which only supports TLSv1.2</p> </li> </ul>
      description: Additional options for the domain endpoint, such as whether to require HTTPS for all traffic.
    AwsElasticsearchDomainElasticsearchClusterConfigDetails:
      type: object
      properties:
        DedicatedMasterCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of instances to use for the master node. If this attribute is specified, then <code>DedicatedMasterEnabled</code> must be <code>true</code>.
        DedicatedMasterEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to use a dedicated master node for the Elasticsearch domain. A dedicated master node performs cluster management tasks, but doesn't hold data or respond to data upload requests.
        DedicatedMasterType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The hardware configuration of the computer that hosts the dedicated master node. A sample value is <code>m3.medium.elasticsearch</code>. If this attribute is specified, then <code>DedicatedMasterEnabled</code> must be <code>true</code>.</p> <p>For a list of valid values, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html">Supported instance types in Amazon OpenSearch Service</a> in the <i>Amazon OpenSearch Service Developer Guide</i>.</p>
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of data nodes to use in the Elasticsearch domain.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The instance type for your data nodes. For example, <code>m3.medium.elasticsearch</code>.</p> <p>For a list of valid values, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html">Supported instance types in Amazon OpenSearch Service</a> in the <i>Amazon OpenSearch Service Developer Guide</i>.</p>
        ZoneAwarenessConfig:
          allOf:
            - $ref: "#/components/schemas/AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails"
            - description: Configuration options for zone awareness. Provided if <code>ZoneAwarenessEnabled</code> is <code>true</code>.
        ZoneAwarenessEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to enable zone awareness for the Elasticsearch domain. When zone awareness is enabled, OpenSearch allocates the cluster's nodes and replica index shards across Availability Zones in the same Region. This prevents data loss and minimizes downtime if a node or data center fails.
      description: details about the configuration of an OpenSearch cluster.
    AwsElasticsearchDomainEncryptionAtRestOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether encryption at rest is enabled.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The KMS key ID. Takes the form <code>1a2a3a4-1a2a-3a4a-5a6a-1a2a3a4a5a6a</code>.
      description: Details about the configuration for encryption at rest.
    AwsElasticsearchDomainLogPublishingOptions:
      type: object
      properties:
        IndexSlowLogs:
          allOf:
            - $ref: "#/components/schemas/AwsElasticsearchDomainLogPublishingOptionsLogConfig"
            - description: Configures the OpenSearch index logs publishing.
        SearchSlowLogs:
          allOf:
            - $ref: "#/components/schemas/AwsElasticsearchDomainLogPublishingOptionsLogConfig"
            - description: Configures the OpenSearch search slow log publishing.
        AuditLogs:
          $ref: "#/components/schemas/AwsElasticsearchDomainLogPublishingOptionsLogConfig"
      description: configures the CloudWatch Logs to publish for the Elasticsearch domain.
    AwsElasticsearchDomainNodeToNodeEncryptionOptions:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether node-to-node encryption is enabled.
      description: Details about the configuration for node-to-node encryption.
    AwsElasticsearchDomainServiceSoftwareOptions:
      type: object
      properties:
        AutomatedUpdateDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The epoch time when the deployment window closes for required updates. After this time, Amazon OpenSearch Service schedules the software upgrade automatically.
        Cancellable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether a request to update the domain can be canceled.
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of the service software that is currently installed on the domain.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A more detailed description of the service software status.
        NewVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The most recent version of the service software.
        UpdateAvailable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether a service software update is available for the domain.
        UpdateStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The status of the service software update. Valid values are as follows:</p> <ul> <li> <p> <code>COMPLETED</code> </p> </li> <li> <p> <code>ELIGIBLE</code> </p> </li> <li> <p> <code>IN_PROGRESS</code> </p> </li> <li> <p> <code>NOT_ELIGIBLE</code> </p> </li> <li> <p> <code>PENDING_UPDATE</code> </p> </li> </ul>
      description: Information about the state of the domain relative to the latest service software.
    AwsElasticsearchDomainVPCOptions:
      type: object
      properties:
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The list of Availability Zones associated with the VPC subnets.
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The list of security group IDs associated with the VPC endpoints for the domain.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: A list of subnet IDs associated with the VPC endpoints for the domain.
        VPCId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: ID for the VPC.
      description: Information that OpenSearch derives based on <code>VPCOptions</code> for the domain.
    AwsElasticsearchDomainDetails:
      type: object
      properties:
        AccessPolicies:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: IAM policy document specifying the access policies for the new Elasticsearch domain.
        DomainEndpointOptions:
          allOf:
            - $ref: "#/components/schemas/AwsElasticsearchDomainDomainEndpointOptions"
            - description: Additional options for the domain endpoint.
        DomainId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Unique identifier for an Elasticsearch domain.
        DomainName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Name of an Elasticsearch domain.</p> <p>Domain names are unique across all domains owned by the same account within an Amazon Web Services Region.</p> <p>Domain names must start with a lowercase letter and must be between 3 and 28 characters.</p> <p>Valid characters are a-z (lowercase only), 0-9, and – (hyphen). </p>
        Endpoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Domain-specific endpoint used to submit index, search, and data upload requests to an Elasticsearch domain.</p> <p>The endpoint is a service URL. </p>
        Endpoints:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: The key-value pair that exists if the Elasticsearch domain uses VPC endpoints.
        ElasticsearchVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: OpenSearch version.
        ElasticsearchClusterConfig:
          allOf:
            - $ref: "#/components/schemas/AwsElasticsearchDomainElasticsearchClusterConfigDetails"
            - description: Information about an OpenSearch cluster configuration.
        EncryptionAtRestOptions:
          allOf:
            - $ref: "#/components/schemas/AwsElasticsearchDomainEncryptionAtRestOptions"
            - description: Details about the configuration for encryption at rest.
        LogPublishingOptions:
          allOf:
            - $ref: "#/components/schemas/AwsElasticsearchDomainLogPublishingOptions"
            - description: Configures the CloudWatch Logs to publish for the Elasticsearch domain.
        NodeToNodeEncryptionOptions:
          allOf:
            - $ref: "#/components/schemas/AwsElasticsearchDomainNodeToNodeEncryptionOptions"
            - description: Details about the configuration for node-to-node encryption.
        ServiceSoftwareOptions:
          allOf:
            - $ref: "#/components/schemas/AwsElasticsearchDomainServiceSoftwareOptions"
            - description: Information about the status of a domain relative to the latest service software.
        VPCOptions:
          allOf:
            - $ref: "#/components/schemas/AwsElasticsearchDomainVPCOptions"
            - description: Information that OpenSearch derives based on <code>VPCOptions</code> for the domain.
      description: Information about an Elasticsearch domain.
    AwsElasticsearchDomainElasticsearchClusterConfigZoneAwarenessConfigDetails:
      type: object
      properties:
        AvailabilityZoneCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: he number of Availability Zones that the domain uses. Valid values are 2 and 3. The default is 2.
      description: Configuration options for zone awareness.
    AwsElasticsearchDomainLogPublishingOptionsLogConfig:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the CloudWatch Logs group to publish the logs to.
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the log publishing is enabled.
      description: The log configuration.
    AwsElbAppCookieStickinessPolicy:
      type: object
      properties:
        CookieName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the application cookie used for stickiness.
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The mnemonic name for the policy being created. The name must be unique within the set of policies for the load balancer.
      description: Contains information about a stickiness policy that was created using <code>CreateAppCookieStickinessPolicy</code>.
    AwsElbAppCookieStickinessPolicies:
      type: array
      items:
        $ref: "#/components/schemas/AwsElbAppCookieStickinessPolicy"
    AwsElbLbCookieStickinessPolicy:
      type: object
      properties:
        CookieExpirationPeriod:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The amount of time, in seconds, after which the cookie is considered stale. If an expiration period is not specified, the stickiness session lasts for the duration of the browser session.
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the policy. The name must be unique within the set of policies for the load balancer.
      description: Contains information about a stickiness policy that was created using <code>CreateLBCookieStickinessPolicy</code>.
    AwsElbLbCookieStickinessPolicies:
      type: array
      items:
        $ref: "#/components/schemas/AwsElbLbCookieStickinessPolicy"
    AwsElbLoadBalancerAccessLog:
      type: object
      properties:
        EmitInterval:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The interval in minutes for publishing the access logs.</p> <p>You can publish access logs either every 5 minutes or every 60 minutes.</p>
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether access logs are enabled for the load balancer.
        S3BucketName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the S3 bucket where the access logs are stored.
        S3BucketPrefix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The logical hierarchy that was created for the S3 bucket.</p> <p>If a prefix is not provided, the log is placed at the root level of the bucket.</p>
      description: Contains information about the access log configuration for the load balancer.
    AwsElbLoadBalancerAdditionalAttribute:
      type: object
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the attribute.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of the attribute.
      description: Provides information about additional attributes for the load balancer.
    AwsElbLoadBalancerAdditionalAttributeList:
      type: array
      items:
        $ref: "#/components/schemas/AwsElbLoadBalancerAdditionalAttribute"
    AwsElbLoadBalancerConnectionDraining:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether connection draining is enabled for the load balancer.
        Timeout:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum time, in seconds, to keep the existing connections open before deregistering the instances.
      description: Contains information about the connection draining configuration for the load balancer.
    AwsElbLoadBalancerConnectionSettings:
      type: object
      properties:
        IdleTimeout:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The time, in seconds, that the connection can be idle (no data is sent over the connection) before it is closed by the load balancer.
      description: Contains connection settings for the load balancer.
    AwsElbLoadBalancerCrossZoneLoadBalancing:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether cross-zone load balancing is enabled for the load balancer.
      description: Contains cross-zone load balancing settings for the load balancer.
    AwsElbLoadBalancerAttributes:
      type: object
      properties:
        AccessLog:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerAccessLog"
            - description: <p>Information about the access log configuration for the load balancer.</p> <p>If the access log is enabled, the load balancer captures detailed information about all requests. It delivers the information to a specified S3 bucket.</p>
        ConnectionDraining:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerConnectionDraining"
            - description: <p>Information about the connection draining configuration for the load balancer.</p> <p>If connection draining is enabled, the load balancer allows existing requests to complete before it shifts traffic away from a deregistered or unhealthy instance.</p>
        ConnectionSettings:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerConnectionSettings"
            - description: <p>Connection settings for the load balancer.</p> <p>If an idle timeout is configured, the load balancer allows connections to remain idle for the specified duration. When a connection is idle, no data is sent over the connection.</p>
        CrossZoneLoadBalancing:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerCrossZoneLoadBalancing"
            - description: <p>Cross-zone load balancing settings for the load balancer.</p> <p>If cross-zone load balancing is enabled, the load balancer routes the request traffic evenly across all instances regardless of the Availability Zones.</p>
        AdditionalAttributes:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerAdditionalAttributeList"
            - description: Any additional attributes for a load balancer.
      description: Contains attributes for the load balancer.
    AwsElbLoadBalancerBackendServerDescription:
      type: object
      properties:
        InstancePort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The port on which the EC2 instance is listening.
        PolicyNames:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The names of the policies that are enabled for the EC2 instance.
      description: Provides information about the configuration of an EC2 instance for the load balancer.
    AwsElbLoadBalancerBackendServerDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/AwsElbLoadBalancerBackendServerDescription"
    AwsElbLoadBalancerHealthCheck:
      type: object
      properties:
        HealthyThreshold:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of consecutive health check successes required before the instance is moved to the Healthy state.
        Interval:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The approximate interval, in seconds, between health checks of an individual instance.
        Target:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The instance that is being checked. The target specifies the protocol and port. The available protocols are TCP, SSL, HTTP, and HTTPS. The range of valid ports is 1 through 65535.</p> <p>For the HTTP and HTTPS protocols, the target also specifies the ping path.</p> <p>For the TCP protocol, the target is specified as <code>TCP: <i>&lt;port&gt;</i> </code>.</p> <p>For the SSL protocol, the target is specified as <code>SSL.<i>&lt;port&gt;</i> </code>.</p> <p>For the HTTP and HTTPS protocols, the target is specified as <code> <i>&lt;protocol&gt;</i>:<i>&lt;port&gt;</i>/<i>&lt;path to ping&gt;</i> </code>.</p>"
        Timeout:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The amount of time, in seconds, during which no response means a failed health check.
        UnhealthyThreshold:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of consecutive health check failures that must occur before the instance is moved to the Unhealthy state.
      description: Contains information about the health checks that are conducted on the load balancer.
    AwsElbLoadBalancerInstances:
      type: array
      items:
        $ref: "#/components/schemas/AwsElbLoadBalancerInstance"
    AwsElbLoadBalancerListenerDescriptions:
      type: array
      items:
        $ref: "#/components/schemas/AwsElbLoadBalancerListenerDescription"
    AwsElbLoadBalancerPolicies:
      type: object
      properties:
        AppCookieStickinessPolicies:
          allOf:
            - $ref: "#/components/schemas/AwsElbAppCookieStickinessPolicies"
            - description: The stickiness policies that are created using <code>CreateAppCookieStickinessPolicy</code>.
        LbCookieStickinessPolicies:
          allOf:
            - $ref: "#/components/schemas/AwsElbLbCookieStickinessPolicies"
            - description: The stickiness policies that are created using <code>CreateLBCookieStickinessPolicy</code>.
        OtherPolicies:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The policies other than the stickiness policies.
      description: Contains information about the policies for a load balancer.
    AwsElbLoadBalancerSourceSecurityGroup:
      type: object
      properties:
        GroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the security group.
        OwnerAlias:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The owner of the security group.
      description: Contains information about the security group for the load balancer.
    AwsElbLoadBalancerDetails:
      type: object
      properties:
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The list of Availability Zones for the load balancer.
        BackendServerDescriptions:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerBackendServerDescriptions"
            - description: Information about the configuration of the EC2 instances.
        CanonicalHostedZoneName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the Amazon Route 53 hosted zone for the load balancer.
        CanonicalHostedZoneNameID:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the Amazon Route 53 hosted zone for the load balancer.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the load balancer was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        DnsName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The DNS name of the load balancer.
        HealthCheck:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerHealthCheck"
            - description: Information about the health checks that are conducted on the load balancer.
        Instances:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerInstances"
            - description: List of EC2 instances for the load balancer.
        ListenerDescriptions:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerListenerDescriptions"
            - description: The policies that are enabled for the load balancer listeners.
        LoadBalancerAttributes:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerAttributes"
            - description: The attributes for a load balancer.
        LoadBalancerName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the load balancer.
        Policies:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerPolicies"
            - description: The policies for a load balancer.
        Scheme:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The type of load balancer. Only provided if the load balancer is in a VPC.</p> <p>If <code>Scheme</code> is <code>internet-facing</code>, the load balancer has a public DNS name that resolves to a public IP address.</p> <p>If <code>Scheme</code> is <code>internal</code>, the load balancer has a public DNS name that resolves to a private IP address.</p>
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The security groups for the load balancer. Only provided if the load balancer is in a VPC.
        SourceSecurityGroup:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerSourceSecurityGroup"
            - description: Information about the security group for the load balancer. This is the security group that is used for inbound rules.
        Subnets:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The list of subnet identifiers for the load balancer.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the VPC for the load balancer.
      description: Contains details about a Classic Load Balancer.
    AwsElbLoadBalancerInstance:
      type: object
      properties:
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The instance identifier.
      description: Provides information about an EC2 instance for a load balancer.
    AwsElbLoadBalancerListener:
      type: object
      properties:
        InstancePort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The port on which the instance is listening.
        InstanceProtocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The protocol to use to route traffic to instances.</p> <p>Valid values: <code>HTTP</code> | <code>HTTPS</code> | <code>TCP</code> | <code>SSL</code> </p>"
        LoadBalancerPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The port on which the load balancer is listening.</p> <p>On EC2-VPC, you can specify any port from the range 1-65535.</p> <p>On EC2-Classic, you can specify any port from the following list: 25, 80, 443, 465, 587, 1024-65535.</p>"
        Protocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The load balancer transport protocol to use for routing.</p> <p>Valid values: <code>HTTP</code> | <code>HTTPS</code> | <code>TCP</code> | <code>SSL</code> </p>"
        SslCertificateId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the server certificate.
      description: Information about a load balancer listener.
    AwsElbLoadBalancerListenerDescription:
      type: object
      properties:
        Listener:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerListener"
            - description: Information about the listener.
        PolicyNames:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The policies enabled for the listener.
      description: Lists the policies that are enabled for a load balancer listener.
    AwsElbv2LoadBalancerAttribute:
      type: object
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the load balancer attribute.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of the load balancer attribute.
      description: A load balancer attribute.
    AwsElbv2LoadBalancerAttributes:
      type: array
      items:
        $ref: "#/components/schemas/AwsElbv2LoadBalancerAttribute"
    SecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    LoadBalancerState:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The state code. The initial state of the load balancer is provisioning.</p> <p>After the load balancer is fully set up and ready to route traffic, its state is active.</p> <p>If the load balancer could not be set up, its state is failed. </p>
        Reason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the state.
      description: Information about the state of the load balancer.
    AwsElbv2LoadBalancerDetails:
      type: object
      properties:
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/AvailabilityZones"
            - description: The Availability Zones for the load balancer.
        CanonicalHostedZoneId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the Amazon Route 53 hosted zone associated with the load balancer.
        CreatedTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the load balancer was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        DNSName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The public DNS name of the load balancer.
        IpAddressType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of IP addresses used by the subnets for your load balancer. The possible values are <code>ipv4</code> (for IPv4 addresses) and <code>dualstack</code> (for IPv4 and IPv6 addresses).
        Scheme:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The nodes of an Internet-facing load balancer have public IP addresses.
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/SecurityGroups"
            - description: The IDs of the security groups for the load balancer.
        State:
          allOf:
            - $ref: "#/components/schemas/LoadBalancerState"
            - description: The state of the load balancer.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of load balancer.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the VPC for the load balancer.
        LoadBalancerAttributes:
          allOf:
            - $ref: "#/components/schemas/AwsElbv2LoadBalancerAttributes"
            - description: Attributes of the load balancer.
      description: Information about a load balancer.
    AwsIamAccessKeyStatus:
      type: string
      enum:
        - Active
        - Inactive
    AwsIamAccessKeySessionContext:
      type: object
      properties:
        Attributes:
          allOf:
            - $ref: "#/components/schemas/AwsIamAccessKeySessionContextAttributes"
            - description: Attributes of the session that the key was used for.
        SessionIssuer:
          allOf:
            - $ref: "#/components/schemas/AwsIamAccessKeySessionContextSessionIssuer"
            - description: Information about the entity that created the session.
      description: Provides information about the session that the key was used for.
    AwsIamAccessKeyDetails:
      type: object
      properties:
        UserName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - deprecated: true
              description: <p>The user associated with the IAM access key related to a finding.</p> <p>The <code>UserName</code> parameter has been replaced with the <code>PrincipalName</code> parameter because access keys can also be assigned to principals that are not IAM users.</p>This filter is deprecated. Instead, use PrincipalName.
        Status:
          allOf:
            - $ref: "#/components/schemas/AwsIamAccessKeyStatus"
            - description: The status of the IAM access key related to a finding.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the IAM access key was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        PrincipalId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the principal associated with an access key.
        PrincipalType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of principal associated with an access key.
        PrincipalName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the principal.
        AccountId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account ID of the account for the key.
        AccessKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the access key.
        SessionContext:
          allOf:
            - $ref: "#/components/schemas/AwsIamAccessKeySessionContext"
            - description: Information about the session that the key was used for.
      description: IAM access key details related to a finding.
    AwsIamAccessKeySessionContextAttributes:
      type: object
      properties:
        MfaAuthenticated:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the session used multi-factor authentication (MFA).
        CreationDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the session was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: Attributes of the session that the key was used for.
    AwsIamAccessKeySessionContextSessionIssuer:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of principal (user, role, or group) that created the session.
        PrincipalId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The principal ID of the principal (user, role, or group) that created the session.
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the session.
        AccountId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the Amazon Web Services account that created the session.
        UserName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the principal that created the session.
      description: Information about the entity that created the session.
    AwsIamAttachedManagedPolicy:
      type: object
      properties:
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the policy.
        PolicyArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the policy.
      description: A managed policy that is attached to an IAM principal.
    AwsIamAttachedManagedPolicyList:
      type: array
      items:
        $ref: "#/components/schemas/AwsIamAttachedManagedPolicy"
    AwsIamGroupPolicyList:
      type: array
      items:
        $ref: "#/components/schemas/AwsIamGroupPolicy"
    AwsIamGroupDetails:
      type: object
      properties:
        AttachedManagedPolicies:
          allOf:
            - $ref: "#/components/schemas/AwsIamAttachedManagedPolicyList"
            - description: A list of the managed policies that are attached to the IAM group.
        CreateDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the IAM group was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        GroupId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the IAM group.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the IAM group.
        GroupPolicyList:
          allOf:
            - $ref: "#/components/schemas/AwsIamGroupPolicyList"
            - description: The list of inline policies that are embedded in the group.
        Path:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path to the group.
      description: Contains details about an IAM group.
    AwsIamGroupPolicy:
      type: object
      properties:
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the policy.
      description: A managed policy that is attached to the IAM group.
    AwsIamInstanceProfileRoles:
      type: array
      items:
        $ref: "#/components/schemas/AwsIamInstanceProfileRole"
    AwsIamInstanceProfile:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the instance profile.
        CreateDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the instance profile was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        InstanceProfileId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the instance profile.
        InstanceProfileName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the instance profile.
        Path:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path to the instance profile.
        Roles:
          allOf:
            - $ref: "#/components/schemas/AwsIamInstanceProfileRoles"
            - description: The roles associated with the instance profile.
      description: Information about an instance profile.
    AwsIamInstanceProfileList:
      type: array
      items:
        $ref: "#/components/schemas/AwsIamInstanceProfile"
    AwsIamRoleAssumeRolePolicyDocument:
      type: string
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u00A1-\\u00FF]+"
      minLength: 1
      maxLength: 131072
    AwsIamInstanceProfileRole:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the role.
        AssumeRolePolicyDocument:
          allOf:
            - $ref: "#/components/schemas/AwsIamRoleAssumeRolePolicyDocument"
            - description: The policy that grants an entity permission to assume the role.
        CreateDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the role was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Path:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path to the role.
        RoleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the role.
        RoleName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the role.
      description: Information about a role associated with an instance profile.
    AwsIamPermissionsBoundary:
      type: object
      properties:
        PermissionsBoundaryArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the policy used to set the permissions boundary.
        PermissionsBoundaryType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The usage type for the permissions boundary.
      description: Information about the policy used to set the permissions boundary for an IAM principal.
    AwsIamPolicyVersionList:
      type: array
      items:
        $ref: "#/components/schemas/AwsIamPolicyVersion"
    AwsIamPolicyDetails:
      type: object
      properties:
        AttachmentCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of users, groups, and roles that the policy is attached to.
        CreateDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>When the policy was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        DefaultVersionId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the default version of the policy.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the policy.
        IsAttachable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the policy can be attached to a user, group, or role.
        Path:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path to the policy.
        PermissionsBoundaryUsageCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of users and roles that use the policy to set the permissions boundary.
        PolicyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The unique identifier of the policy.
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the policy.
        PolicyVersionList:
          allOf:
            - $ref: "#/components/schemas/AwsIamPolicyVersionList"
            - description: List of versions of the policy.
        UpdateDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>When the policy was most recently updated.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: Represents an IAM permissions policy.
    AwsIamPolicyVersion:
      type: object
      properties:
        VersionId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the policy version.
        IsDefaultVersion:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the version is the default version.
        CreateDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the version was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: A version of an IAM policy.
    AwsIamRolePolicyList:
      type: array
      items:
        $ref: "#/components/schemas/AwsIamRolePolicy"
    AwsIamRoleDetails:
      type: object
      properties:
        AssumeRolePolicyDocument:
          allOf:
            - $ref: "#/components/schemas/AwsIamRoleAssumeRolePolicyDocument"
            - description: The trust policy that grants permission to assume the role.
        AttachedManagedPolicies:
          allOf:
            - $ref: "#/components/schemas/AwsIamAttachedManagedPolicyList"
            - description: The list of the managed policies that are attached to the role.
        CreateDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the role was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        InstanceProfileList:
          allOf:
            - $ref: "#/components/schemas/AwsIamInstanceProfileList"
            - description: The list of instance profiles that contain this role.
        PermissionsBoundary:
          $ref: "#/components/schemas/AwsIamPermissionsBoundary"
        RoleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The stable and unique string identifying the role.
        RoleName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The friendly name that identifies the role.
        RolePolicyList:
          allOf:
            - $ref: "#/components/schemas/AwsIamRolePolicyList"
            - description: The list of inline policies that are embedded in the role.
        MaxSessionDuration:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum session duration (in seconds) that you want to set for the specified role.
        Path:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path to the role.
      description: Contains information about an IAM role, including all of the role's policies.
    AwsIamRolePolicy:
      type: object
      properties:
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the policy.
      description: An inline policy that is embedded in the role.
    AwsIamUserPolicyList:
      type: array
      items:
        $ref: "#/components/schemas/AwsIamUserPolicy"
    AwsIamUserDetails:
      type: object
      properties:
        AttachedManagedPolicies:
          allOf:
            - $ref: "#/components/schemas/AwsIamAttachedManagedPolicyList"
            - description: A list of the managed policies that are attached to the user.
        CreateDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the user was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        GroupList:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of IAM groups that the user belongs to.
        Path:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path to the user.
        PermissionsBoundary:
          allOf:
            - $ref: "#/components/schemas/AwsIamPermissionsBoundary"
            - description: The permissions boundary for the user.
        UserId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The unique identifier for the user.
        UserName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the user.
        UserPolicyList:
          allOf:
            - $ref: "#/components/schemas/AwsIamUserPolicyList"
            - description: The list of inline policies that are embedded in the user.
      description: Information about an IAM user.
    AwsIamUserPolicy:
      type: object
      properties:
        PolicyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the policy.
      description: Information about an inline policy that is embedded in the user.
    AwsKinesisStreamStreamEncryptionDetails:
      type: object
      properties:
        EncryptionType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The encryption type to use. "
        KeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The globally unique identifier for the customer-managed KMS key to use for encryption. "
      description: "Provides information about stream encryption. "
    AwsKinesisStreamDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the Kinesis stream. If you don't specify a name, CloudFront generates a unique physical ID and uses that ID for the stream name. "
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Amazon Resource Name (ARN) of the Kinesis data stream. "
        StreamEncryption:
          allOf:
            - $ref: "#/components/schemas/AwsKinesisStreamStreamEncryptionDetails"
            - description: "When specified, enables or updates server-side encryption using an KMS key for a specified stream. Removing this property from your stack template and updating your stack disables encryption. "
        ShardCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The number of shards that the stream uses. "
        RetentionPeriodHours:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The number of hours for the data records that are stored in shards to remain accessible. "
      description: "Provides information about an Amazon Kinesis data stream. "
    AwsKmsKeyDetails:
      type: object
      properties:
        AWSAccountId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The twelve-digit account ID of the Amazon Web Services account that owns the KMS key.
        CreationDate:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: <p>Indicates when the KMS key was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        KeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The globally unique identifier for the KMS key.
        KeyManager:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The manager of the KMS key. KMS keys in your Amazon Web Services account are either customer managed or Amazon Web Services managed.
        KeyState:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The state of the KMS key. Valid values are as follows:</p> <ul> <li> <p> <code>Disabled</code> </p> </li> <li> <p> <code>Enabled</code> </p> </li> <li> <p> <code>PendingDeletion</code> </p> </li> <li> <p> <code>PendingImport</code> </p> </li> <li> <p> <code>Unavailable</code> </p> </li> </ul>
        Origin:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The source of the KMS key material.</p> <p>When this value is <code>AWS_KMS</code>, KMS created the key material.</p> <p>When this value is <code>EXTERNAL</code>, the key material was imported from your existing key management infrastructure or the KMS key lacks key material.</p> <p>When this value is <code>AWS_CLOUDHSM</code>, the key material was created in the CloudHSM cluster associated with a custom key store.</p>
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the KMS key.
        KeyRotationStatus:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the key has key rotation enabled.
      description: Contains metadata about an KMS key.
    AwsLambdaFunctionCode:
      type: object
      properties:
        S3Bucket:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: An Amazon S3 bucket in the same Amazon Web Services Region as your function. The bucket can be in a different Amazon Web Services account.
        S3Key:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon S3 key of the deployment package.
        S3ObjectVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: For versioned objects, the version of the deployment package object to use.
        ZipFile:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The base64-encoded contents of the deployment package. Amazon Web Services SDK and Amazon Web Services CLI clients handle the encoding for you.
      description: The code for the Lambda function. You can specify either an object in Amazon S3, or upload a deployment package directly.
    AwsLambdaFunctionDeadLetterConfig:
      type: object
      properties:
        TargetArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of an SQS queue or SNS topic.
      description: The dead-letter queue for failed asynchronous invocations.
    AwsLambdaFunctionEnvironment:
      type: object
      properties:
        Variables:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: Environment variable key-value pairs.
        Error:
          allOf:
            - $ref: "#/components/schemas/AwsLambdaFunctionEnvironmentError"
            - description: An <code>AwsLambdaFunctionEnvironmentError</code> object.
      description: A function's environment variable settings.
    AwsLambdaFunctionLayerList:
      type: array
      items:
        $ref: "#/components/schemas/AwsLambdaFunctionLayer"
    AwsLambdaFunctionTracingConfig:
      type: object
      properties:
        Mode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The tracing mode.
      description: The function's X-Ray tracing configuration.
    AwsLambdaFunctionVpcConfig:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: A list of VPC security groups IDs.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: A list of VPC subnet IDs.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the VPC.
      description: The VPC security groups and subnets that are attached to a Lambda function.
    AwsLambdaFunctionDetails:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/AwsLambdaFunctionCode"
            - description: An <code>AwsLambdaFunctionCode</code> object.
        CodeSha256:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The SHA256 hash of the function's deployment package.
        DeadLetterConfig:
          allOf:
            - $ref: "#/components/schemas/AwsLambdaFunctionDeadLetterConfig"
            - description: The function's dead letter queue.
        Environment:
          allOf:
            - $ref: "#/components/schemas/AwsLambdaFunctionEnvironment"
            - description: The function's environment variables.
        FunctionName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the function.
        Handler:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The function that Lambda calls to begin executing your function.
        KmsKeyArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The KMS key that is used to encrypt the function's environment variables. This key is only returned if you've configured a customer managed customer managed key.
        LastModified:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the function was last updated.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Layers:
          allOf:
            - $ref: "#/components/schemas/AwsLambdaFunctionLayerList"
            - description: The function's layers.
        MasterArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: For Lambda@Edge functions, the ARN of the master function.
        MemorySize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The memory that is allocated to the function.
        RevisionId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The latest updated revision of the function or alias.
        Role:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The function's execution role.
        Runtime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The runtime environment for the Lambda function.
        Timeout:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The amount of time that Lambda allows a function to run before stopping it.
        TracingConfig:
          allOf:
            - $ref: "#/components/schemas/AwsLambdaFunctionTracingConfig"
            - description: The function's X-Ray tracing configuration.
        VpcConfig:
          allOf:
            - $ref: "#/components/schemas/AwsLambdaFunctionVpcConfig"
            - description: The function's networking configuration.
        Version:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of the Lambda function.
        Architectures:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The instruction set architecture that the function uses. Valid values are <code>x86_64</code> or <code>arm64</code>.
        PackageType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The type of deployment package that's used to deploy the function code to Lambda. Set to <code>Image</code> for a container image and <code>Zip</code> for a .zip file archive. "
      description: Details about an Lambda function's configuration.
    AwsLambdaFunctionEnvironmentError:
      type: object
      properties:
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The error code.
        Message:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The error message.
      description: Error messages for environment variables that could not be applied.
    AwsLambdaFunctionLayer:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the function layer.
        CodeSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The size of the layer archive in bytes.
      description: An Lambda layer.
    AwsLambdaLayerVersionNumber:
      type: integer
    AwsLambdaLayerVersionDetails:
      type: object
      properties:
        Version:
          allOf:
            - $ref: "#/components/schemas/AwsLambdaLayerVersionNumber"
            - description: The version number.
        CompatibleRuntimes:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: "<p>The layer's compatible runtimes. Maximum number of five items.</p> <p>Valid values: <code>nodejs10.x</code> | <code>nodejs12.x</code> | <code>java8</code> | <code>java11</code> | <code>python2.7</code> | <code>python3.6</code> | <code>python3.7</code> | <code>python3.8</code> | <code>dotnetcore1.0</code> | <code>dotnetcore2.1</code> | <code>go1.x</code> | <code>ruby2.5</code> | <code>provided</code> </p>"
        CreatedDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the version was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: Details about a Lambda layer version.
    AwsMountPoint:
      type: object
      properties:
        SourceVolume:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the volume to mount. Must be a volume name referenced in the <code>name</code> parameter of task definition <code>volume</code>. "
        ContainerPath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The path on the container to mount the host volume at. "
      description: "Details for a volume mount point that's used in a container definition. "
    AwsNetworkFirewallFirewallSubnetMappingsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsNetworkFirewallFirewallSubnetMappingsDetails"
    AwsNetworkFirewallFirewallDetails:
      type: object
      properties:
        DeleteProtection:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the firewall is protected from deletion. If set to <code>true</code>, then the firewall cannot be deleted.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the firewall.
        FirewallArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the firewall.
        FirewallId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the firewall.
        FirewallName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A descriptive name of the firewall.
        FirewallPolicyArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the firewall policy.
        FirewallPolicyChangeProtection:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the firewall is protected from a change to the firewall policy. If set to <code>true</code>, you cannot associate a different policy with the firewall.
        SubnetChangeProtection:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the firewall is protected from a change to the subnet associations. If set to <code>true</code>, you cannot map different subnets to the firewall.
        SubnetMappings:
          allOf:
            - $ref: "#/components/schemas/AwsNetworkFirewallFirewallSubnetMappingsList"
            - description: The public subnets that Network Firewall uses for the firewall. Each subnet must belong to a different Availability Zone.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the VPC where the firewall is used.
      description: Details about an Network Firewall firewall.
    FirewallPolicyDetails:
      type: object
      properties:
        StatefulRuleGroupReferences:
          allOf:
            - $ref: "#/components/schemas/FirewallPolicyStatefulRuleGroupReferencesList"
            - description: The stateful rule groups that are used in the firewall policy.
        StatelessCustomActions:
          allOf:
            - $ref: "#/components/schemas/FirewallPolicyStatelessCustomActionsList"
            - description: The custom action definitions that are available to use in the firewall policy's <code>StatelessDefaultActions</code> setting.
        StatelessDefaultActions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: <p>The actions to take on a packet if it doesn't match any of the stateless rules in the policy.</p> <p>You must specify a standard action (<code>aws:pass</code>, <code>aws:drop</code>, <code>aws:forward_to_sfe</code>), and can optionally include a custom action from <code>StatelessCustomActions</code>. </p>
        StatelessFragmentDefaultActions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: <p>The actions to take on a fragmented UDP packet if it doesn't match any of the stateless rules in the policy.</p> <p>You must specify a standard action (<code>aws:pass</code>, <code>aws:drop</code>, <code>aws:forward_to_sfe</code>), and can optionally include a custom action from <code>StatelessCustomActions</code>. </p>
        StatelessRuleGroupReferences:
          allOf:
            - $ref: "#/components/schemas/FirewallPolicyStatelessRuleGroupReferencesList"
            - description: The stateless rule groups that are used in the firewall policy.
      description: Defines the behavior of the firewall.
    AwsNetworkFirewallFirewallPolicyDetails:
      type: object
      properties:
        FirewallPolicy:
          allOf:
            - $ref: "#/components/schemas/FirewallPolicyDetails"
            - description: The firewall policy configuration.
        FirewallPolicyArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the firewall policy.
        FirewallPolicyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the firewall policy.
        FirewallPolicyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the firewall policy.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the firewall policy.
      description: Details about a firewall policy. A firewall policy defines the behavior of a network firewall.
    AwsNetworkFirewallFirewallSubnetMappingsDetails:
      type: object
      properties:
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the subnet
      description: A public subnet that Network Firewall uses for the firewall.
    RuleGroupDetails:
      type: object
      properties:
        RuleVariables:
          allOf:
            - $ref: "#/components/schemas/RuleGroupVariables"
            - description: Additional settings to use in the specified rules.
        RulesSource:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSource"
            - description: <p>The rules and actions for the rule group.</p> <p>For stateful rule groups, can contain <code>RulesString</code>, <code>RulesSourceList</code>, or <code>StatefulRules</code>.</p> <p>For stateless rule groups, contains <code>StatelessRulesAndCustomActions</code>.</p>
      description: Details about the rule group.
    AwsNetworkFirewallRuleGroupDetails:
      type: object
      properties:
        Capacity:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of operating resources that this rule group can use.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the rule group.
        RuleGroup:
          allOf:
            - $ref: "#/components/schemas/RuleGroupDetails"
            - description: Details about the rule group.
        RuleGroupArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the rule group.
        RuleGroupId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the rule group.
        RuleGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The descriptive name of the rule group.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of rule group. A rule group can be stateful or stateless.
      description: <p>Details about an Network Firewall rule group. Rule groups are used to inspect and control network traffic. Stateless rule groups apply to individual packets. Stateful rule groups apply to packets in the context of their traffic flow.</p> <p>Rule groups are referenced in firewall policies. </p>
    AwsOpenSearchServiceDomainMasterUserOptionsDetails:
      type: object
      properties:
        MasterUserArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Amazon Resource Name (ARN) for the master user. "
        MasterUserName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The username for the master user. "
        MasterUserPassword:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The password for the master user. "
      description: "Specifies information about the master user of the domain. "
    AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Enables fine-grained access control. "
        InternalUserDatabaseEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Enables the internal user database. "
        MasterUserOptions:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainMasterUserOptionsDetails"
            - description: "Specifies information about the master user of the domain. "
      description: "Provides information about domain access control options. "
    AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails:
      type: object
      properties:
        AvailabilityZoneCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of Availability Zones that the domain uses. Valid values are <code>2</code> or <code>3</code>. The default is <code>2</code>.
      description: Configuration options for zone awareness.
    AwsOpenSearchServiceDomainClusterConfigDetails:
      type: object
      properties:
        InstanceCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of data nodes to use in the OpenSearch domain.
        WarmEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether UltraWarm is enabled.
        WarmCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of UltraWarm instances.
        DedicatedMasterEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to use a dedicated master node for the OpenSearch domain. A dedicated master node performs cluster management tasks, but does not hold data or respond to data upload requests.
        ZoneAwarenessConfig:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainClusterConfigZoneAwarenessConfigDetails"
            - description: Configuration options for zone awareness. Provided if <code>ZoneAwarenessEnabled</code> is <code>true</code>.
        DedicatedMasterCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of instances to use for the master node. If this attribute is specified, then <code>DedicatedMasterEnabled</code> must be <code>true</code>.
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The instance type for your data nodes.</p> <p>For a list of valid values, see <a href="https://docs.aws.amazon.com/opensearch-service/latest/developerguide/supported-instance-types.html">Supported instance types in Amazon OpenSearch Service</a> in the <i>Amazon OpenSearch Service Developer Guide</i>.</p>
        WarmType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of UltraWarm instance.
        ZoneAwarenessEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to enable zone awareness for the OpenSearch domain. When zone awareness is enabled, OpenSearch Service allocates the cluster's nodes and replica index shards across Availability Zones (AZs) in the same Region. This prevents data loss and minimizes downtime if a node or data center fails.
        DedicatedMasterType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The hardware configuration of the computer that hosts the dedicated master node.</p> <p>If this attribute is specified, then <code>DedicatedMasterEnabled</code> must be <code>true</code>. </p>
      description: Details about the configuration of an OpenSearch cluster.
    AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether encryption at rest is enabled.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The KMS key ID.
      description: Details about the configuration for encryption at rest for the OpenSearch domain.
    AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether node-to-node encryption is enabled.
      description: Provides details about the configuration for node-to-node encryption.
    AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails:
      type: object
      properties:
        AutomatedUpdateDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The epoch time when the deployment window closes for required updates. After this time, OpenSearch Service schedules the software upgrade automatically.
        Cancellable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether a request to update the domain can be canceled.
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of the service software that is currently installed on the domain.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A more detailed description of the service software status.
        NewVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The most recent version of the service software.
        UpdateAvailable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether a service software update is available for the domain.
        UpdateStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The status of the service software update. Valid values are as follows:</p> <ul> <li> <p> <code>COMPLETED</code> </p> </li> <li> <p> <code>ELIGIBLE</code> </p> </li> <li> <p> <code>IN_PROGRESS</code> </p> </li> <li> <p> <code>NOT_ELIGIBLE</code> </p> </li> <li> <p> <code>PENDING_UPDATE</code> </p> </li> </ul>
        OptionalDeployment:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the service software update is optional.
      description: Provides information about the state of the domain relative to the latest service software.
    AwsOpenSearchServiceDomainDomainEndpointOptionsDetails:
      type: object
      properties:
        CustomEndpointCertificateArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN for the security certificate. The certificate is managed in ACM.
        CustomEndpointEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to enable a custom endpoint for the domain.
        EnforceHTTPS:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to require that all traffic to the domain arrive over HTTPS.
        CustomEndpoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The fully qualified URL for the custom endpoint.
        TLSSecurityPolicy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The TLS security policy to apply to the HTTPS endpoint of the OpenSearch domain.
      description: Information about additional options for the domain endpoint.
    AwsOpenSearchServiceDomainVpcOptionsDetails:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The list of security group IDs that are associated with the VPC endpoints for the domain.
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: A list of subnet IDs that are associated with the VPC endpoints for the domain.
      description: Contains information that OpenSearch Service derives based on the <code>VPCOptions</code> for the domain.
    AwsOpenSearchServiceDomainLogPublishingOptionsDetails:
      type: object
      properties:
        IndexSlowLogs:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainLogPublishingOption"
            - description: Configures the OpenSearch index logs publishing.
        SearchSlowLogs:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainLogPublishingOption"
            - description: Configures the OpenSearch search slow log publishing.
        AuditLogs:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainLogPublishingOption"
            - description: Configures the OpenSearch audit logs publishing.
      description: Configures the CloudWatch Logs to publish for the OpenSearch domain.
    AwsOpenSearchServiceDomainDetails:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the OpenSearch Service domain.
        AccessPolicies:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: IAM policy document that specifies the access policies for the OpenSearch Service domain.
        DomainName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the endpoint.
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the domain.
        DomainEndpoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The domain endpoint.
        EngineVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of the domain engine.
        EncryptionAtRestOptions:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainEncryptionAtRestOptionsDetails"
            - description: Details about the configuration for encryption at rest.
        NodeToNodeEncryptionOptions:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainNodeToNodeEncryptionOptionsDetails"
            - description: Details about the configuration for node-to-node encryption.
        ServiceSoftwareOptions:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainServiceSoftwareOptionsDetails"
            - description: Information about the status of a domain relative to the latest service software.
        ClusterConfig:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainClusterConfigDetails"
            - description: Details about the configuration of an OpenSearch cluster.
        DomainEndpointOptions:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainDomainEndpointOptionsDetails"
            - description: Additional options for the domain endpoint.
        VpcOptions:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainVpcOptionsDetails"
            - description: Information that OpenSearch Service derives based on <code>VPCOptions</code> for the domain.
        LogPublishingOptions:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainLogPublishingOptionsDetails"
            - description: Configures the CloudWatch Logs to publish for the OpenSearch domain.
        DomainEndpoints:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: <p>The domain endpoints. Used if the OpenSearch domain resides in a VPC.</p> <p>This is a map of key-value pairs. The key is always <code>vpc</code>. The value is the endpoint.</p>
        AdvancedSecurityOptions:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainAdvancedSecurityOptionsDetails"
            - description: "Specifies options for fine-grained access control. "
      description: Information about an Amazon OpenSearch Service domain.
    AwsOpenSearchServiceDomainLogPublishingOption:
      type: object
      properties:
        CloudWatchLogsLogGroupArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the CloudWatch Logs group to publish the logs to.
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the log publishing is enabled.
      description: Configuration details for a log publishing option.
    AwsRdsDbClusterAssociatedRole:
      type: object
      properties:
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the IAM role.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The status of the association between the IAM role and the DB cluster. Valid values are as follows:</p> <ul> <li> <p> <code>ACTIVE</code> </p> </li> <li> <p> <code>INVALID</code> </p> </li> <li> <p> <code>PENDING</code> </p> </li> </ul>
      description: An IAM role that is associated with the Amazon RDS DB cluster.
    AwsRdsDbClusterAssociatedRoles:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbClusterAssociatedRole"
    AwsRdsDbInstanceVpcSecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbInstanceVpcSecurityGroup"
    AwsRdsDbDomainMemberships:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbDomainMembership"
    AwsRdsDbClusterOptionGroupMemberships:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbClusterOptionGroupMembership"
    AwsRdsDbClusterMembers:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbClusterMember"
    AwsRdsDbClusterDetails:
      type: object
      properties:
        AllocatedStorage:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For all database engines except Aurora, specifies the allocated storage size in gibibytes (GiB).
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of Availability Zones (AZs) where instances in the DB cluster can be created.
        BackupRetentionPeriod:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of days for which automated backups are retained.
        DatabaseName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the database.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The current status of this DB cluster.
        Endpoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The connection endpoint for the primary instance of the DB cluster.
        ReaderEndpoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The reader endpoint for the DB cluster.
        CustomEndpoints:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of custom endpoints for the DB cluster.
        MultiAz:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the DB cluster has instances in multiple Availability Zones.
        Engine:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The name of the database engine to use for this DB cluster. Valid values are as follows:</p> <ul> <li> <p> <code>aurora</code> </p> </li> <li> <p> <code>aurora-mysql</code> </p> </li> <li> <p> <code>aurora-postgresql</code> </p> </li> </ul>
        EngineVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version number of the database engine to use.
        Port:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The port number on which the DB instances in the DB cluster accept connections.
        MasterUsername:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the master user for the DB cluster.
        PreferredBackupWindow:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The range of time each day when automated backups are created, if automated backups are enabled.</p> <p>Uses the format <code>HH:MM-HH:MM</code>. For example, <code>04:52-05:22</code>.</p>
        PreferredMaintenanceWindow:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Uses the format <code>&lt;day&gt;:HH:MM-&lt;day&gt;:HH:MM</code>.</p> <p>For the day values, use <code>mon</code>|<code>tue</code>|<code>wed</code>|<code>thu</code>|<code>fri</code>|<code>sat</code>|<code>sun</code>.</p> <p>For example, <code>sun:09:32-sun:10:02</code>.</p>
        ReadReplicaIdentifiers:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The identifiers of the read replicas that are associated with this DB cluster.
        VpcSecurityGroups:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbInstanceVpcSecurityGroups"
            - description: A list of VPC security groups that the DB cluster belongs to.
        HostedZoneId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Specifies the identifier that Amazon Route 53 assigns when you create a hosted zone.
        StorageEncrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the DB cluster is encrypted.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the KMS master key that is used to encrypt the database instances in the DB cluster.
        DbClusterResourceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the DB cluster. The identifier must be unique within each Amazon Web Services Region and is immutable.
        AssociatedRoles:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbClusterAssociatedRoles"
            - description: A list of the IAM roles that are associated with the DB cluster.
        ClusterCreateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the DB cluster was created, in Universal Coordinated Time (UTC).</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        EnabledCloudWatchLogsExports:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of log types that this DB cluster is configured to export to CloudWatch Logs.
        EngineMode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The database engine mode of the DB cluster.Valid values are as follows:</p> <ul> <li> <p> <code>global</code> </p> </li> <li> <p> <code>multimaster</code> </p> </li> <li> <p> <code>parallelquery</code> </p> </li> <li> <p> <code>provisioned</code> </p> </li> <li> <p> <code>serverless</code> </p> </li> </ul>
        DeletionProtection:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the DB cluster has deletion protection enabled.
        HttpEndpointEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the HTTP endpoint for an Aurora Serverless DB cluster is enabled.
        ActivityStreamStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The status of the database activity stream. Valid values are as follows:</p> <ul> <li> <p> <code>started</code> </p> </li> <li> <p> <code>starting</code> </p> </li> <li> <p> <code>stopped</code> </p> </li> <li> <p> <code>stopping</code> </p> </li> </ul>
        CopyTagsToSnapshot:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether tags are copied from the DB cluster to snapshots of the DB cluster.
        CrossAccountClone:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the DB cluster is a clone of a DB cluster owned by a different Amazon Web Services account.
        DomainMemberships:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbDomainMemberships"
            - description: The Active Directory domain membership records that are associated with the DB cluster.
        DbClusterParameterGroup:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the DB cluster parameter group for the DB cluster.
        DbSubnetGroup:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The subnet group that is associated with the DB cluster, including the name, description, and subnets in the subnet group.
        DbClusterOptionGroupMemberships:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbClusterOptionGroupMemberships"
            - description: The list of option group memberships for this DB cluster.
        DbClusterIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The DB cluster identifier that the user assigned to the cluster. This identifier is the unique key that identifies a DB cluster.
        DbClusterMembers:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbClusterMembers"
            - description: The list of instances that make up the DB cluster.
        IamDatabaseAuthenticationEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the mapping of IAM accounts to database accounts is enabled.
      description: Information about an Amazon RDS DB cluster.
    AwsRdsDbClusterMember:
      type: object
      properties:
        IsClusterWriter:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the cluster member is the primary instance for the DB cluster.
        PromotionTier:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Specifies the order in which an Aurora replica is promoted to the primary instance when the existing primary instance fails.
        DbInstanceIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The instance identifier for this member of the DB cluster.
        DbClusterParameterGroupStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the DB cluster parameter group for this member of the DB cluster.
      description: Information about an instance in the DB cluster.
    AwsRdsDbClusterOptionGroupMembership:
      type: object
      properties:
        DbClusterOptionGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the DB cluster option group.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the DB cluster option group.
      description: Information about an option group membership for a DB cluster.
    AwsRdsDbClusterSnapshotDetails:
      type: object
      properties:
        AvailabilityZones:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of Availability Zones where instances in the DB cluster can be created.
        SnapshotCreateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the snapshot was taken.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Engine:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the database engine that you want to use for this DB instance.
        AllocatedStorage:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Specifies the allocated storage size in gibibytes (GiB).
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of this DB cluster snapshot.
        Port:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The port number on which the DB instances in the DB cluster accept connections.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The VPC ID that is associated with the DB cluster snapshot.
        ClusterCreateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the DB cluster was created, in Universal Coordinated Time (UTC).</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        MasterUsername:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the master user for the DB cluster.
        EngineVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of the database engine to use.
        LicenseModel:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The license model information for this DB cluster snapshot.
        SnapshotType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of DB cluster snapshot.
        PercentProgress:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Specifies the percentage of the estimated data that has been transferred.
        StorageEncrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the DB cluster is encrypted.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the KMS master key that is used to encrypt the database instances in the DB cluster.
        DbClusterIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The DB cluster identifier.
        DbClusterSnapshotIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the DB cluster snapshot.
        IamDatabaseAuthenticationEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether mapping of IAM accounts to database accounts is enabled.
      description: Information about an Amazon RDS DB cluster snapshot.
    AwsRdsDbDomainMembership:
      type: object
      properties:
        Domain:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the Active Directory domain.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the Active Directory Domain membership for the DB instance.
        Fqdn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The fully qualified domain name of the Active Directory domain.
        IamRoleName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the IAM role to use when making API calls to the Directory Service.
      description: Information about an Active Directory domain membership record associated with the DB instance.
    AwsRdsDbInstanceAssociatedRole:
      type: object
      properties:
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the IAM role that is associated with the DB instance.
        FeatureName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the feature associated with the IAM role.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Describes the state of the association between the IAM role and the DB instance. The <code>Status</code> property returns one of the following values:</p> <ul> <li> <p> <code>ACTIVE</code> - The IAM role ARN is associated with the DB instance and can be used to access other Amazon Web Services services on your behalf.</p> </li> <li> <p> <code>PENDING</code> - The IAM role ARN is being associated with the DB instance.</p> </li> <li> <p> <code>INVALID</code> - The IAM role ARN is associated with the DB instance. But the DB instance is unable to assume the IAM role in order to access other Amazon Web Services services on your behalf. </p> </li> </ul>
      description: An IAM role associated with the DB instance.
    AwsRdsDbInstanceAssociatedRoles:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbInstanceAssociatedRole"
    AwsRdsDbInstanceEndpoint:
      type: object
      properties:
        Address:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Specifies the DNS address of the DB instance.
        Port:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Specifies the port that the database engine is listening on.
        HostedZoneId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
      description: Specifies the connection endpoint.
    AwsRdsDbParameterGroups:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbParameterGroup"
    AwsRdsDbSubnetGroup:
      type: object
      properties:
        DbSubnetGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the subnet group.
        DbSubnetGroupDescription:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The description of the subnet group.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The VPC ID of the subnet group.
        SubnetGroupStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the subnet group.
        Subnets:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbSubnetGroupSubnets"
            - description: A list of subnets in the subnet group.
        DbSubnetGroupArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the subnet group.
      description: Information about the subnet group for the database instance.
    AwsRdsDbPendingModifiedValues:
      type: object
      properties:
        DbInstanceClass:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The new DB instance class for the DB instance.
        AllocatedStorage:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The new value of the allocated storage for the DB instance.
        MasterUserPassword:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The new master user password for the DB instance.
        Port:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The new port for the DB instance.
        BackupRetentionPeriod:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The new backup retention period for the DB instance.
        MultiAZ:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates that a single Availability Zone DB instance is changing to a multiple Availability Zone deployment.
        EngineVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The new engine version for the DB instance.
        LicenseModel:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The new license model value for the DB instance.
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The new provisioned IOPS value for the DB instance.
        DbInstanceIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The new DB instance identifier for the DB instance.
        StorageType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The new storage type for the DB instance.
        CaCertificateIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The new CA certificate identifier for the DB instance.
        DbSubnetGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the new subnet group for the DB instance.
        PendingCloudWatchLogsExports:
          allOf:
            - $ref: "#/components/schemas/AwsRdsPendingCloudWatchLogsExports"
            - description: A list of log types that are being enabled or disabled.
        ProcessorFeatures:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbProcessorFeatures"
            - description: Processor features that are being updated.
      description: Changes to a DB instance that are currently pending.
    AwsRdsDbOptionGroupMemberships:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbOptionGroupMembership"
    AwsRdsDbStatusInfos:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbStatusInfo"
    AwsRdsDbProcessorFeatures:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbProcessorFeature"
    AwsRdsDbInstanceDetails:
      type: object
      properties:
        AssociatedRoles:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbInstanceAssociatedRoles"
            - description: The IAM roles associated with the DB instance.
        CACertificateIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the CA certificate for this DB instance.
        DBClusterIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: If the DB instance is a member of a DB cluster, contains the name of the DB cluster that the DB instance is a member of.
        DBInstanceIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Contains a user-supplied database identifier. This identifier is the unique key that identifies a DB instance.
        DBInstanceClass:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Contains the name of the compute and memory capacity class of the DB instance.
        DbInstancePort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Specifies the port that the DB instance listens on. If the DB instance is part of a DB cluster, this can be a different port than the DB cluster port.
        DbiResourceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Amazon Web Services Region-unique, immutable identifier for the DB instance. This identifier is found in CloudTrail log entries whenever the KMS key for the DB instance is accessed. "
        DBName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The meaning of this parameter differs according to the database engine you use.</p> <p> <b>MySQL, MariaDB, SQL Server, PostgreSQL</b> </p> <p>Contains the name of the initial database of this instance that was provided at create time, if one was specified when the DB instance was created. This same name is returned for the life of the DB instance.</p> <p> <b>Oracle</b> </p> <p>Contains the Oracle System ID (SID) of the created DB instance. Not shown when the returned parameters do not apply to an Oracle DB instance. </p>
        DeletionProtection:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Indicates whether the DB instance has deletion protection enabled.</p> <p>When deletion protection is enabled, the database cannot be deleted.</p>
        Endpoint:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbInstanceEndpoint"
            - description: Specifies the connection endpoint.
        Engine:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Provides the name of the database engine to use for this DB instance.
        EngineVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Indicates the database engine version.
        IAMDatabaseAuthenticationEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>True if mapping of IAM accounts to database accounts is enabled, and otherwise false.</p> <p>IAM database authentication can be enabled for the following database engines.</p> <ul> <li> <p>For MySQL 5.6, minor version 5.6.34 or higher</p> </li> <li> <p>For MySQL 5.7, minor version 5.7.16 or higher</p> </li> <li> <p>Aurora 5.6 or higher</p> </li> </ul>
        InstanceCreateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the DB instance was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: If <code>StorageEncrypted</code> is true, the KMS key identifier for the encrypted DB instance.
        PubliclyAccessible:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Specifies the accessibility options for the DB instance.</p> <p>A value of true specifies an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address.</p> <p>A value of false specifies an internal instance with a DNS name that resolves to a private IP address. </p>
        StorageEncrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether the DB instance is encrypted.
        TdeCredentialArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN from the key store with which the instance is associated for TDE encryption.
        VpcSecurityGroups:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbInstanceVpcSecurityGroups"
            - description: A list of VPC security groups that the DB instance belongs to.
        MultiAz:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the DB instance is a multiple Availability Zone deployment.
        EnhancedMonitoringResourceArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the CloudWatch Logs log stream that receives the enhanced monitoring metrics data for the DB instance.
        DbInstanceStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The current status of the DB instance.
        MasterUsername:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The master user name of the DB instance.
        AllocatedStorage:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The amount of storage (in gigabytes) to initially allocate for the DB instance.
        PreferredBackupWindow:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The range of time each day when automated backups are created, if automated backups are enabled.</p> <p>Uses the format <code>HH:MM-HH:MM</code>. For example, <code>04:52-05:22</code>.</p>
        BackupRetentionPeriod:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of days for which to retain automated backups.
        DbSecurityGroups:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of the DB security groups to assign to the DB instance.
        DbParameterGroups:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbParameterGroups"
            - description: A list of the DB parameter groups to assign to the DB instance.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Availability Zone where the DB instance will be created.
        DbSubnetGroup:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbSubnetGroup"
            - description: Information about the subnet group that is associated with the DB instance.
        PreferredMaintenanceWindow:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).</p> <p>Uses the format <code>&lt;day&gt;:HH:MM-&lt;day&gt;:HH:MM</code>.</p> <p>For the day values, use <code>mon</code>|<code>tue</code>|<code>wed</code>|<code>thu</code>|<code>fri</code>|<code>sat</code>|<code>sun</code>.</p> <p>For example, <code>sun:09:32-sun:10:02</code>.</p>
        PendingModifiedValues:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbPendingModifiedValues"
            - description: Changes to the DB instance that are currently pending.
        LatestRestorableTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Specifies the latest time to which a database can be restored with point-in-time restore.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        AutoMinorVersionUpgrade:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether minor version patches are applied automatically.
        ReadReplicaSourceDBInstanceIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: If this DB instance is a read replica, contains the identifier of the source DB instance.
        ReadReplicaDBInstanceIdentifiers:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: List of identifiers of the read replicas associated with this DB instance.
        ReadReplicaDBClusterIdentifiers:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: List of identifiers of Aurora DB clusters to which the RDS DB instance is replicated as a read replica.
        LicenseModel:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: License model information for this DB instance.
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Specifies the provisioned IOPS (I/O operations per second) for this DB instance.
        OptionGroupMemberships:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbOptionGroupMemberships"
            - description: The list of option group memberships for this DB instance.
        CharacterSetName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the character set that this DB instance is associated with.
        SecondaryAvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: For a DB instance with multi-Availability Zone support, the name of the secondary Availability Zone.
        StatusInfos:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbStatusInfos"
            - description: The status of a read replica. If the instance isn't a read replica, this is empty.
        StorageType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The storage type for the DB instance.
        DomainMemberships:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbDomainMemberships"
            - description: The Active Directory domain membership records associated with the DB instance.
        CopyTagsToSnapshot:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to copy resource tags to snapshots of the DB instance.
        MonitoringInterval:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The interval, in seconds, between points when enhanced monitoring metrics are collected for the DB instance.
        MonitoringRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN for the IAM role that permits Amazon RDS to send enhanced monitoring metrics to CloudWatch Logs.
        PromotionTier:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The order in which to promote an Aurora replica to the primary instance after a failure of the existing primary instance.
        Timezone:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The time zone of the DB instance.
        PerformanceInsightsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether Performance Insights is enabled for the DB instance.
        PerformanceInsightsKmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the KMS key used to encrypt the Performance Insights data.
        PerformanceInsightsRetentionPeriod:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of days to retain Performance Insights data.
        EnabledCloudWatchLogsExports:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of log types that this DB instance is configured to export to CloudWatch Logs.
        ProcessorFeatures:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbProcessorFeatures"
            - description: The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.
        ListenerEndpoint:
          $ref: "#/components/schemas/AwsRdsDbInstanceEndpoint"
        MaxAllocatedStorage:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The upper limit to which Amazon RDS can automatically scale the storage of the DB instance.
      description: Contains the details of an Amazon RDS DB instance.
    AwsRdsDbInstanceVpcSecurityGroup:
      type: object
      properties:
        VpcSecurityGroupId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the VPC security group.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the VPC security group.
      description: A VPC security groups that the DB instance belongs to.
    AwsRdsDbOptionGroupMembership:
      type: object
      properties:
        OptionGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the option group.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the option group membership.
      description: An option group membership.
    AwsRdsDbParameterGroup:
      type: object
      properties:
        DbParameterGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the parameter group.
        ParameterApplyStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of parameter updates.
      description: Provides information about a parameter group for a DB instance.
    AwsRdsPendingCloudWatchLogsExports:
      type: object
      properties:
        LogTypesToEnable:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of log types that are being enabled.
        LogTypesToDisable:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of log types that are being disabled.
      description: Identifies the log types to enable and disable.
    AwsRdsDbProcessorFeature:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the processor feature. Valid values are <code>coreCount</code> or <code>threadsPerCore</code>.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of the processor feature.
      description: A processor feature.
    AwsRdsDbSecurityGroupEc2SecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbSecurityGroupEc2SecurityGroup"
    AwsRdsDbSecurityGroupIpRanges:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbSecurityGroupIpRange"
    AwsRdsDbSecurityGroupDetails:
      type: object
      properties:
        DbSecurityGroupArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN for the DB security group.
        DbSecurityGroupDescription:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Provides the description of the DB security group.
        DbSecurityGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Specifies the name of the DB security group.
        Ec2SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbSecurityGroupEc2SecurityGroups"
            - description: Contains a list of EC2 security groups.
        IpRanges:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbSecurityGroupIpRanges"
            - description: Contains a list of IP ranges.
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Provides the Amazon Web Services ID of the owner of a specific DB security group.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Provides VPC ID associated with the DB security group. "
      description: Provides information about an Amazon RDS DB security group.
    AwsRdsDbSecurityGroupEc2SecurityGroup:
      type: object
      properties:
        Ec2SecurityGroupId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Specifies the ID for the EC2 security group.
        Ec2SecurityGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Specifies the name of the EC2 security group.
        Ec2SecurityGroupOwnerId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Provides the Amazon Web Services ID of the owner of the EC2 security group.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Provides the status of the EC2 security group.
      description: EC2 security group information for an RDS DB security group.
    AwsRdsDbSecurityGroupIpRange:
      type: object
      properties:
        CidrIp:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Specifies the IP range.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Specifies the status of the IP range.
      description: IP range information for an RDS DB security group.
    AwsRdsDbSnapshotDetails:
      type: object
      properties:
        DbSnapshotIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name or ARN of the DB snapshot that is used to restore the DB instance.
        DbInstanceIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A name for the DB instance.
        SnapshotCreateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: When the snapshot was taken in Coordinated Universal Time (UTC).
        Engine:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The name of the database engine to use for this DB instance. Valid values are as follows:</p> <ul> <li> <p> <code>aurora</code> </p> </li> <li> <p> <code>aurora-mysql</code> </p> </li> <li> <p> <code>aurora-postgresql</code> </p> </li> <li> <p> <code>c</code> </p> </li> <li> <p> <code>mariadb</code> </p> </li> <li> <p> <code>mysql</code> </p> </li> <li> <p> <code>oracle-ee</code> </p> </li> <li> <p> <code>oracle-se</code> </p> </li> <li> <p> <code>oracle-se1</code> </p> </li> <li> <p> <code>oracle-se2</code> </p> </li> <li> <p> <code>sqlserver-ee</code> </p> </li> <li> <p> <code>sqlserver-ex</code> </p> </li> <li> <p> <code>sqlserver-se</code> </p> </li> <li> <p> <code>sqlserver-web</code> </p> </li> </ul>
        AllocatedStorage:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The amount of storage (in gigabytes) to be initially allocated for the database instance.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of this DB snapshot.
        Port:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The port that the database engine was listening on at the time of the snapshot.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Specifies the name of the Availability Zone in which the DB instance was located at the time of the DB snapshot.
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The VPC ID associated with the DB snapshot.
        InstanceCreateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Specifies the time in Coordinated Universal Time (UTC) when the DB instance, from which the snapshot was taken, was created.
        MasterUsername:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The master user name for the DB snapshot.
        EngineVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of the database engine.
        LicenseModel:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: License model information for the restored DB instance.
        SnapshotType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of the DB snapshot.
        Iops:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The provisioned IOPS (I/O operations per second) value of the DB instance at the time of the snapshot.
        OptionGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The option group name for the DB snapshot.
        PercentProgress:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The percentage of the estimated data that has been transferred.
        SourceRegion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services Region that the DB snapshot was created in or copied from.
        SourceDbSnapshotIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The DB snapshot ARN that the DB snapshot was copied from.
        StorageType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The storage type associated with the DB snapshot. Valid values are as follows:</p> <ul> <li> <p> <code>gp2</code> </p> </li> <li> <p> <code>io1</code> </p> </li> <li> <p> <code>standard</code> </p> </li> </ul>
        TdeCredentialArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN from the key store with which to associate the instance for TDE encryption.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the DB snapshot is encrypted.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: If <code>Encrypted</code> is <code>true</code>, the KMS key identifier for the encrypted DB snapshot.
        Timezone:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The time zone of the DB snapshot.
        IamDatabaseAuthenticationEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether mapping of IAM accounts to database accounts is enabled.
        ProcessorFeatures:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbProcessorFeatures"
            - description: The number of CPU cores and the number of threads per core for the DB instance class of the DB instance.
        DbiResourceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier for the source DB instance.
      description: Provides details about an Amazon RDS DB cluster snapshot.
    AwsRdsDbStatusInfo:
      type: object
      properties:
        StatusType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of status. For a read replica, the status type is read replication.
        Normal:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the read replica instance is operating normally.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the read replica instance.
        Message:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: If the read replica is currently in an error state, provides the error details.
      description: Information about the status of a read replica.
    AwsRdsDbSubnetGroupSubnets:
      type: array
      items:
        $ref: "#/components/schemas/AwsRdsDbSubnetGroupSubnet"
    AwsRdsDbSubnetGroupSubnetAvailabilityZone:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the Availability Zone for a subnet in the subnet group.
      description: An Availability Zone for a subnet in a subnet group.
    AwsRdsDbSubnetGroupSubnet:
      type: object
      properties:
        SubnetIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of a subnet in the subnet group.
        SubnetAvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbSubnetGroupSubnetAvailabilityZone"
            - description: Information about the Availability Zone for a subnet in the subnet group.
        SubnetStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of a subnet in the subnet group.
      description: Information about a subnet in a subnet group.
    AwsRdsEventSubscriptionDetails:
      type: object
      properties:
        CustSubscriptionId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the account that is associated with the event notification subscription.
        CustomerAwsId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the event notification subscription.
        Enabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the event notification subscription is enabled.
        EventCategoriesList:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The list of event categories for the event notification subscription.
        EventSubscriptionArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the event notification subscription.
        SnsTopicArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the SNS topic to post the event notifications to.
        SourceIdsList:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: A list of source identifiers for the event notification subscription.
        SourceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The source type for the event notification subscription.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The status of the event notification subscription.</p> <p>Valid values: <code>creating</code> | <code>modifying</code> | <code>deleting</code> | <code>active</code> | <code>no-permission</code> | <code>topic-not-exist</code> </p>"
        SubscriptionCreationTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The datetime when the event notification subscription was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: Details about an Amazon RDS event notification subscription. The subscription allows Amazon RDS to post events to an SNS topic.
    AwsRedshiftClusterClusterNode:
      type: object
      properties:
        NodeRole:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The role of the node. A node might be a leader node or a compute node.
        PrivateIpAddress:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The private IP address of the node.
        PublicIpAddress:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The public IP address of the node.
      description: A node in an Amazon Redshift cluster.
    AwsRedshiftClusterClusterNodes:
      type: array
      items:
        $ref: "#/components/schemas/AwsRedshiftClusterClusterNode"
    AwsRedshiftClusterClusterParameterStatusList:
      type: array
      items:
        $ref: "#/components/schemas/AwsRedshiftClusterClusterParameterStatus"
    AwsRedshiftClusterClusterParameterGroup:
      type: object
      properties:
        ClusterParameterStatusList:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterClusterParameterStatusList"
            - description: The list of parameter statuses.
        ParameterApplyStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of updates to the parameters.
        ParameterGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the parameter group.
      description: A cluster parameter group that is associated with an Amazon Redshift cluster.
    AwsRedshiftClusterClusterParameterGroups:
      type: array
      items:
        $ref: "#/components/schemas/AwsRedshiftClusterClusterParameterGroup"
    AwsRedshiftClusterClusterParameterStatus:
      type: object
      properties:
        ParameterName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the parameter.
        ParameterApplyStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The status of the parameter. Indicates whether the parameter is in sync with the database, waiting for a cluster reboot, or encountered an error when it was applied.</p> <p>Valid values: <code>in-sync</code> | <code>pending-reboot</code> | <code>applying</code> | <code>invalid-parameter</code> | <code>apply-deferred</code> | <code>apply-error</code> | <code>unknown-error</code> </p>"
        ParameterApplyErrorDescription:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The error that prevented the parameter from being applied to the database.
      description: The status of a parameter in a cluster parameter group for an Amazon Redshift cluster.
    AwsRedshiftClusterClusterSecurityGroup:
      type: object
      properties:
        ClusterSecurityGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the cluster security group.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the cluster security group.
      description: A security group that is associated with the cluster.
    AwsRedshiftClusterClusterSecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/AwsRedshiftClusterClusterSecurityGroup"
    AwsRedshiftClusterClusterSnapshotCopyStatus:
      type: object
      properties:
        DestinationRegion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The destination Region that snapshots are automatically copied to when cross-Region snapshot copy is enabled.
        ManualSnapshotRetentionPeriod:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The number of days that manual snapshots are retained in the destination Region after they are copied from a source Region.</p> <p>If the value is <code>-1</code>, then the manual snapshot is retained indefinitely.</p> <p>Valid values: Either <code>-1</code> or an integer between 1 and 3,653</p>"
        RetentionPeriod:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of days to retain automated snapshots in the destination Region after they are copied from a source Region.
        SnapshotCopyGrantName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the snapshot copy grant.
      description: You can configure Amazon Redshift to copy snapshots for a cluster to another Amazon Web Services Region. This parameter provides information about a cross-Region snapshot copy.
    AwsRedshiftClusterDeferredMaintenanceWindow:
      type: object
      properties:
        DeferMaintenanceEndTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The end of the time window for which maintenance was deferred.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        DeferMaintenanceIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the maintenance window.
        DeferMaintenanceStartTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The start of the time window for which maintenance was deferred.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: A time windows during which maintenance was deferred for an Amazon Redshift cluster.
    AwsRedshiftClusterDeferredMaintenanceWindows:
      type: array
      items:
        $ref: "#/components/schemas/AwsRedshiftClusterDeferredMaintenanceWindow"
    AwsRedshiftClusterElasticIpStatus:
      type: object
      properties:
        ElasticIp:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The elastic IP address for the cluster.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the elastic IP address.
      description: The status of the elastic IP (EIP) address for an Amazon Redshift cluster.
    AwsRedshiftClusterEndpoint:
      type: object
      properties:
        Address:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The DNS address of the cluster.
        Port:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The port that the database engine listens on.
      description: The connection endpoint for an Amazon Redshift cluster.
    AwsRedshiftClusterHsmStatus:
      type: object
      properties:
        HsmClientCertificateIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the HSM client certificate that the Amazon Redshift cluster uses to retrieve the data encryption keys that are stored in an HSM.
        HsmConfigurationIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the HSM configuration that contains the information that the Amazon Redshift cluster can use to retrieve and store keys in an HSM.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>Indicates whether the Amazon Redshift cluster has finished applying any HSM settings changes specified in a modify cluster command.</p> <p>Type: String</p> <p>Valid values: <code>active</code> | <code>applying</code> </p>"
      description: Information about whether an Amazon Redshift cluster finished applying any hardware changes to security module (HSM) settings that were specified in a modify cluster command.
    AwsRedshiftClusterIamRoles:
      type: array
      items:
        $ref: "#/components/schemas/AwsRedshiftClusterIamRole"
    AwsRedshiftClusterPendingModifiedValues:
      type: object
      properties:
        AutomatedSnapshotRetentionPeriod:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The pending or in-progress change to the automated snapshot retention period.
        ClusterIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The pending or in-progress change to the identifier for the cluster.
        ClusterType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The pending or in-progress change to the cluster type.
        ClusterVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The pending or in-progress change to the service version.
        EncryptionType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The encryption type for a cluster.
        EnhancedVpcRouting:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to create the cluster with enhanced VPC routing enabled.
        MaintenanceTrackName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the maintenance track that the cluster changes to during the next maintenance window.
        MasterUserPassword:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The pending or in-progress change to the master user password for the cluster.
        NodeType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The pending or in-progress change to the cluster's node type.
        NumberOfNodes:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The pending or in-progress change to the number of nodes in the cluster.
        PubliclyAccessible:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: The pending or in-progress change to whether the cluster can be connected to from the public network.
      description: Changes to the Amazon Redshift cluster that are currently pending.
    AwsRedshiftClusterResizeInfo:
      type: object
      properties:
        AllowCancelResize:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the resize operation can be canceled.
        ResizeType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The type of resize operation.</p> <p>Valid values: <code>ClassicResize</code> </p>"
      description: Information about the resize operation for the cluster.
    AwsRedshiftClusterRestoreStatus:
      type: object
      properties:
        CurrentRestoreRateInMegaBytesPerSecond:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: <p>The number of megabytes per second being transferred from the backup storage. Returns the average rate for a completed backup.</p> <p>This field is only updated when you restore to DC2 and DS2 node types.</p>
        ElapsedTimeInSeconds:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: <p>The amount of time an in-progress restore has been running, or the amount of time it took a completed restore to finish.</p> <p>This field is only updated when you restore to DC2 and DS2 node types.</p>
        EstimatedTimeToCompletionInSeconds:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: <p>The estimate of the time remaining before the restore is complete. Returns 0 for a completed restore.</p> <p>This field is only updated when you restore to DC2 and DS2 node types.</p>
        ProgressInMegaBytes:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: <p>The number of megabytes that were transferred from snapshot storage.</p> <p>This field is only updated when you restore to DC2 and DS2 node types.</p>
        SnapshotSizeInMegaBytes:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: <p>The size of the set of snapshot data that was used to restore the cluster.</p> <p>This field is only updated when you restore to DC2 and DS2 node types.</p>
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The status of the restore action.</p> <p>Valid values: <code>starting</code> | <code>restoring</code> | <code>completed</code> | <code>failed</code> </p>"
      description: Information about the status of a cluster restore action. It only applies if the cluster was created by restoring a snapshot.
    AwsRedshiftClusterVpcSecurityGroups:
      type: array
      items:
        $ref: "#/components/schemas/AwsRedshiftClusterVpcSecurityGroup"
    AwsRedshiftClusterLoggingStatus:
      type: object
      properties:
        BucketName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the S3 bucket where the log files are stored.
        LastFailureMessage:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The message indicating that the logs failed to be delivered.
        LastFailureTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The last time when logs failed to be delivered.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        LastSuccessfulDeliveryTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The last time that logs were delivered successfully.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        LoggingEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether logging is enabled.
        S3KeyPrefix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Provides the prefix applied to the log file names.
      description: Provides information about the logging status of the cluster.
    AwsRedshiftClusterDetails:
      type: object
      properties:
        AllowVersionUpgrade:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether major version upgrades are applied automatically to the cluster during the maintenance window.
        AutomatedSnapshotRetentionPeriod:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of days that automatic cluster snapshots are retained.
        AvailabilityZone:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the Availability Zone in which the cluster is located.
        ClusterAvailabilityStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The availability status of the cluster for queries. Possible values are the following:</p> <ul> <li> <p> <code>Available</code> - The cluster is available for queries.</p> </li> <li> <p> <code>Unavailable</code> - The cluster is not available for queries.</p> </li> <li> <p> <code>Maintenance</code> - The cluster is intermittently available for queries due to maintenance activities.</p> </li> <li> <p> <code>Modifying</code> -The cluster is intermittently available for queries due to changes that modify the cluster.</p> </li> <li> <p> <code>Failed</code> - The cluster failed and is not available for queries.</p> </li> </ul>
        ClusterCreateTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the cluster was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        ClusterIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The unique identifier of the cluster.
        ClusterNodes:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterClusterNodes"
            - description: The nodes in the cluster.
        ClusterParameterGroups:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterClusterParameterGroups"
            - description: The list of cluster parameter groups that are associated with this cluster.
        ClusterPublicKey:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The public key for the cluster.
        ClusterRevisionNumber:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The specific revision number of the database in the cluster.
        ClusterSecurityGroups:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterClusterSecurityGroups"
            - description: A list of cluster security groups that are associated with the cluster.
        ClusterSnapshotCopyStatus:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterClusterSnapshotCopyStatus"
            - description: Information about the destination Region and retention period for the cross-Region snapshot copy.
        ClusterStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The current status of the cluster.</p> <p>Valid values: <code>available</code> | <code>available, prep-for-resize</code> | <code>available, resize-cleanup</code> |<code> cancelling-resize</code> | <code>creating</code> | <code>deleting</code> | <code>final-snapshot</code> | <code>hardware-failure</code> | <code>incompatible-hsm</code> |<code> incompatible-network</code> | <code>incompatible-parameters</code> | <code>incompatible-restore</code> | <code>modifying</code> | <code>paused</code> | <code>rebooting</code> | <code>renaming</code> | <code>resizing</code> | <code>rotating-keys</code> | <code>storage-full</code> | <code>updating-hsm</code> </p>"
        ClusterSubnetGroupName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the subnet group that is associated with the cluster. This parameter is valid only when the cluster is in a VPC.
        ClusterVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version ID of the Amazon Redshift engine that runs on the cluster.
        DBName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The name of the initial database that was created when the cluster was created.</p> <p>The same name is returned for the life of the cluster.</p> <p>If an initial database is not specified, a database named <code>devdev</code> is created by default.</p>
        DeferredMaintenanceWindows:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterDeferredMaintenanceWindows"
            - description: List of time windows during which maintenance was deferred.
        ElasticIpStatus:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterElasticIpStatus"
            - description: Information about the status of the Elastic IP (EIP) address.
        ElasticResizeNumberOfNodeOptions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The number of nodes that you can use the elastic resize method to resize the cluster to.
        Encrypted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the data in the cluster is encrypted at rest.
        Endpoint:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterEndpoint"
            - description: The connection endpoint.
        EnhancedVpcRouting:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to create the cluster with enhanced VPC routing enabled.
        ExpectedNextSnapshotScheduleTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the next snapshot is expected to be taken. The cluster must have a valid snapshot schedule and have backups enabled.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        ExpectedNextSnapshotScheduleTimeStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The status of the next expected snapshot.</p> <p>Valid values: <code>OnTrack</code> | <code>Pending</code> </p>"
        HsmStatus:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterHsmStatus"
            - description: Information about whether the Amazon Redshift cluster finished applying any changes to hardware security module (HSM) settings that were specified in a modify cluster command.
        IamRoles:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterIamRoles"
            - description: A list of IAM roles that the cluster can use to access other Amazon Web Services services.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the KMS encryption key that is used to encrypt data in the cluster.
        MaintenanceTrackName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the maintenance track for the cluster.
        ManualSnapshotRetentionPeriod:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "<p>The default number of days to retain a manual snapshot.</p> <p>If the value is <code>-1</code>, the snapshot is retained indefinitely.</p> <p>This setting doesn't change the retention period of existing snapshots.</p> <p>Valid values: Either <code>-1</code> or an integer between 1 and 3,653</p>"
        MasterUsername:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The master user name for the cluster. This name is used to connect to the database that is specified in as the value of <code>DBName</code>.
        NextMaintenanceWindowStartTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates the start of the next maintenance window.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        NodeType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The node type for the nodes in the cluster.
        NumberOfNodes:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of compute nodes in the cluster.
        PendingActions:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of cluster operations that are waiting to start.
        PendingModifiedValues:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterPendingModifiedValues"
            - description: A list of changes to the cluster that are currently pending.
        PreferredMaintenanceWindow:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The weekly time range, in Universal Coordinated Time (UTC), during which system maintenance can occur.</p> <p>Format: <code> <i>&lt;day&gt;</i>:HH:MM-<i>&lt;day&gt;</i>:HH:MM</code> </p> <p>For the day values, use <code>mon</code> | <code>tue</code> | <code>wed</code> | <code>thu</code> | <code>fri</code> | <code>sat</code> | <code>sun</code> </p> <p>For example, <code>sun:09:32-sun:10:02</code> </p>"
        PubliclyAccessible:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the cluster can be accessed from a public network.
        ResizeInfo:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterResizeInfo"
            - description: Information about the resize operation for the cluster.
        RestoreStatus:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterRestoreStatus"
            - description: Information about the status of a cluster restore action. Only applies to a cluster that was created by restoring a snapshot.
        SnapshotScheduleIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A unique identifier for the cluster snapshot schedule.
        SnapshotScheduleState:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The current state of the cluster snapshot schedule.</p> <p>Valid values: <code>MODIFYING</code> | <code>ACTIVE</code> | <code>FAILED</code> </p>"
        VpcId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the VPC that the cluster is in, if the cluster is in a VPC.
        VpcSecurityGroups:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterVpcSecurityGroups"
            - description: The list of VPC security groups that the cluster belongs to, if the cluster is in a VPC.
        LoggingStatus:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterLoggingStatus"
            - description: Information about the logging status of the cluster.
      description: Details about an Amazon Redshift cluster.
    AwsRedshiftClusterIamRole:
      type: object
      properties:
        ApplyStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The status of the IAM role's association with the cluster.</p> <p>Valid values: <code>in-sync</code> | <code>adding</code> | <code>removing</code> </p>"
        IamRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the IAM role.
      description: An IAM role that the cluster can use to access other Amazon Web Services services.
    AwsRedshiftClusterVpcSecurityGroup:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The status of the VPC security group.
        VpcSecurityGroupId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the VPC security group.
      description: A VPC security group that the cluster belongs to, if the cluster is in a VPC.
    AwsS3AccountPublicAccessBlockDetails:
      type: object
      properties:
        BlockPublicAcls:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to reject calls to update an S3 bucket if the calls include a public access control list (ACL).
        BlockPublicPolicy:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to reject calls to update the access policy for an S3 bucket or access point if the policy allows public access.
        IgnorePublicAcls:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether Amazon S3 ignores public ACLs that are associated with an S3 bucket.
        RestrictPublicBuckets:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to restrict access to an access point or S3 bucket that has a public policy to only Amazon Web Services service principals and authorized users within the S3 bucket owner's account.
      description: provides information about the Amazon S3 Public Access Block configuration for accounts.
    AwsS3BucketBucketLifecycleConfigurationRulesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesDetails"
    AwsS3BucketBucketLifecycleConfigurationDetails:
      type: object
      properties:
        Rules:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesList"
            - description: The lifecycle rules.
      description: The lifecycle configuration for the objects in the S3 bucket.
    AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails:
      type: object
      properties:
        DaysAfterInitiation:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of days after which Amazon S3 cancels an incomplete multipart upload.
      description: Information about what Amazon S3 does when a multipart upload is incomplete.
    AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails:
      type: object
      properties:
        Predicate:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails"
            - description: The configuration for the filter.
      description: Identifies the objects that a rule applies to.
    AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails"
    AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails"
    AwsS3BucketBucketLifecycleConfigurationRulesDetails:
      type: object
      properties:
        AbortIncompleteMultipartUpload:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesAbortIncompleteMultipartUploadDetails"
            - description: How Amazon S3 responds when a multipart upload is incomplete. Specifically, provides a number of days before Amazon S3 cancels the entire upload.
        ExpirationDate:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The date when objects are moved or deleted.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        ExpirationInDays:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The length in days of the lifetime for objects that are subject to the rule.
        ExpiredObjectDeleteMarker:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Whether Amazon S3 removes a delete marker that has no noncurrent versions. If set to <code>true</code>, the delete marker is expired. If set to <code>false</code>, the policy takes no action.</p> <p>If you provide <code>ExpiredObjectDeleteMarker</code>, you cannot provide <code>ExpirationInDays</code> or <code>ExpirationDate</code>.</p>
        Filter:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterDetails"
            - description: Identifies the objects that a rule applies to.
        ID:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The unique identifier of the rule.
        NoncurrentVersionExpirationInDays:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of days that an object is noncurrent before Amazon S3 can perform the associated action.
        NoncurrentVersionTransitions:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsList"
            - description: Transition rules that describe when noncurrent objects transition to a specified storage class.
        Prefix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A prefix that identifies one or more objects that the rule applies to.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The current status of the rule. Indicates whether the rule is currently being applied.
        Transitions:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesTransitionsList"
            - description: Transition rules that indicate when objects transition to a specified storage class.
      description: Configuration for a lifecycle rule.
    AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateDetails:
      type: object
      properties:
        Operands:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList"
            - description: The values to use for the filter.
        Prefix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A prefix filter.
        Tag:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails"
            - description: A tag filter.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Whether to use <code>AND</code> or <code>OR</code> to join the operands. Valid values are <code>LifecycleAndOperator</code> or <code>LifecycleOrOperator</code>.
      description: The configuration for the filter.
    AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsList:
      type: array
      items:
        $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails"
    AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateTagDetails:
      type: object
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The tag key.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The tag value
      description: A tag filter.
    AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails:
      type: object
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The tag key.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The tag value.
      description: A tag that is assigned to matching objects.
    AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsDetails:
      type: object
      properties:
        Prefix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Prefix text for matching objects.
        Tag:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationRulesFilterPredicateOperandsTagDetails"
            - description: A tag that is assigned to matching objects.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of filter value. Valid values are <code>LifecyclePrefixPredicate</code> or <code>LifecycleTagPredicate</code>.
      description: A value to use for the filter.
    AwsS3BucketBucketLifecycleConfigurationRulesNoncurrentVersionTransitionsDetails:
      type: object
      properties:
        Days:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of days that an object is noncurrent before Amazon S3 can perform the associated action.
        StorageClass:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The class of storage to change the object to after the object is noncurrent for the specified number of days.
      description: A transition rule that describes when noncurrent objects transition to a specified storage class.
    AwsS3BucketBucketLifecycleConfigurationRulesTransitionsDetails:
      type: object
      properties:
        Date:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>A date on which to transition objects to the specified storage class. If you provide <code>Date</code>, you cannot provide <code>Days</code>.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Days:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of days after which to transition the object to the specified storage class. If you provide <code>Days</code>, you cannot provide <code>Date</code>.
        StorageClass:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The storage class to transition the object to. Valid values are as follows:</p> <ul> <li> <p> <code>DEEP_ARCHIVE</code> </p> </li> <li> <p> <code>GLACIER</code> </p> </li> <li> <p> <code>INTELLIGENT_TIERING</code> </p> </li> <li> <p> <code>ONEZONE_IA</code> </p> </li> <li> <p> <code>STANDARD_IA</code> </p> </li> </ul>
      description: A rule for when objects transition to specific storage classes.
    AwsS3BucketBucketVersioningConfiguration:
      type: object
      properties:
        IsMfaDeleteEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Specifies whether MFA delete is currently enabled in the S3 bucket versioning configuration. If the S3 bucket was never configured with MFA delete, then this attribute is not included.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The versioning status of the S3 bucket. Valid values are <code>Enabled</code> or <code>Suspended</code>.
      description: Describes the versioning state of an S3 bucket.
    AwsS3BucketServerSideEncryptionConfiguration:
      type: object
      properties:
        Rules:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketServerSideEncryptionRules"
            - description: The encryption rules that are applied to the S3 bucket.
      description: The encryption configuration for the S3 bucket.
    AwsS3BucketLoggingConfiguration:
      type: object
      properties:
        DestinationBucketName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the S3 bucket where log files for the S3 bucket are stored.
        LogFilePrefix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The prefix added to log files for the S3 bucket.
      description: Information about logging for the S3 bucket
    AwsS3BucketWebsiteConfiguration:
      type: object
      properties:
        ErrorDocument:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the error document for the website.
        IndexDocumentSuffix:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the index document for the website.
        RedirectAllRequestsTo:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketWebsiteConfigurationRedirectTo"
            - description: The redirect behavior for requests to the website.
        RoutingRules:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketWebsiteConfigurationRoutingRules"
            - description: The rules for applying redirects for requests to the website.
      description: Website parameters for the S3 bucket.
    AwsS3BucketNotificationConfiguration:
      type: object
      properties:
        Configurations:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketNotificationConfigurationDetails"
            - description: Configurations for S3 bucket notifications.
      description: The notification configuration for the S3 bucket.
    AwsS3BucketObjectLockConfiguration:
      type: object
      properties:
        ObjectLockEnabled:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Indicates whether the bucket has an Object Lock configuration enabled. "
        Rule:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketObjectLockConfigurationRuleDetails"
            - description: " Specifies the Object Lock rule for the specified object. "
      description: " The container element for S3 Object Lock configuration parameters. In Amazon S3, Object Lock can help prevent objects from being deleted or overwritten for a fixed amount of time or indefinitely. "
    AwsS3BucketDetails:
      type: object
      properties:
        OwnerId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The canonical user ID of the owner of the S3 bucket.
        OwnerName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The display name of the owner of the S3 bucket.
        OwnerAccountId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account identifier of the account that owns the S3 bucket.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the S3 bucket was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        ServerSideEncryptionConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketServerSideEncryptionConfiguration"
            - description: The encryption rules that are applied to the S3 bucket.
        BucketLifecycleConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketBucketLifecycleConfigurationDetails"
            - description: The lifecycle configuration for objects in the S3 bucket.
        PublicAccessBlockConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsS3AccountPublicAccessBlockDetails"
            - description: Provides information about the Amazon S3 Public Access Block configuration for the S3 bucket.
        AccessControlList:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The access control list for the S3 bucket.
        BucketLoggingConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketLoggingConfiguration"
            - description: The logging configuration for the S3 bucket.
        BucketWebsiteConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketWebsiteConfiguration"
            - description: The website configuration parameters for the S3 bucket.
        BucketNotificationConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketNotificationConfiguration"
            - description: The notification configuration for the S3 bucket.
        BucketVersioningConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketBucketVersioningConfiguration"
            - description: The versioning state of an S3 bucket.
        ObjectLockConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketObjectLockConfiguration"
            - description: " Specifies which rule Amazon S3 applies by default to every new object placed in the specified bucket. "
      description: The details of an Amazon S3 bucket.
    AwsS3BucketNotificationConfigurationDetails:
      type: array
      items:
        $ref: "#/components/schemas/AwsS3BucketNotificationConfigurationDetail"
    AwsS3BucketNotificationConfigurationEvents:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    AwsS3BucketNotificationConfigurationFilter:
      type: object
      properties:
        S3KeyFilter:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketNotificationConfigurationS3KeyFilter"
            - description: Details for an Amazon S3 filter.
      description: Filtering information for the notifications. The filtering is based on Amazon S3 key names.
    AwsS3BucketNotificationConfigurationDetail:
      type: object
      properties:
        Events:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketNotificationConfigurationEvents"
            - description: The list of events that trigger a notification.
        Filter:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketNotificationConfigurationFilter"
            - description: The filters that determine which S3 buckets generate notifications.
        Destination:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the Lambda function, Amazon SQS queue, or Amazon SNS topic that generates the notification.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates the type of notification. Notifications can be generated using Lambda functions, Amazon SQS queues, or Amazon SNS topics, with corresponding valid values as follows:</p> <ul> <li> <p> <code>LambdaConfiguration</code> </p> </li> <li> <p> <code>QueueConfiguration</code> </p> </li> <li> <p> <code>TopicConfiguration</code> </p> </li> </ul>
      description: Details for an S3 bucket notification configuration.
    AwsS3BucketNotificationConfigurationS3KeyFilter:
      type: object
      properties:
        FilterRules:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketNotificationConfigurationS3KeyFilterRules"
            - description: The filter rules for the filter.
      description: Details for an Amazon S3 filter.
    AwsS3BucketNotificationConfigurationS3KeyFilterRules:
      type: array
      items:
        $ref: "#/components/schemas/AwsS3BucketNotificationConfigurationS3KeyFilterRule"
    AwsS3BucketNotificationConfigurationS3KeyFilterRuleName:
      type: string
      enum:
        - Prefix
        - Suffix
    AwsS3BucketNotificationConfigurationS3KeyFilterRule:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketNotificationConfigurationS3KeyFilterRuleName"
            - description: Indicates whether the filter is based on the prefix or suffix of the Amazon S3 key.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The filter value.
      description: Details for a filter rule.
    AwsS3BucketObjectLockConfigurationRuleDetails:
      type: object
      properties:
        DefaultRetention:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails"
            - description: " The default Object Lock retention mode and period that you want to apply to new objects placed in the specified bucket. "
      description: " Specifies the S3 Object Lock rule for the specified object. In Amazon S3, Object Lock can help prevent objects from being deleted or overwritten for a fixed amount of time or indefinitely. "
    AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails:
      type: object
      properties:
        Days:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of days that you want to specify for the default retention period. "
        Mode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. "
        Years:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The number of years that you want to specify for the default retention period. "
      description: " The default S3 Object Lock retention mode and period that you want to apply to new objects placed in the specified Amazon S3 bucket. "
    AwsS3BucketServerSideEncryptionByDefault:
      type: object
      properties:
        SSEAlgorithm:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Server-side encryption algorithm to use for the default encryption. Valid values are <code>aws: kms</code> or <code>AES256</code>."
        KMSMasterKeyID:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: KMS key ID to use for the default encryption.
      description: Specifies the default server-side encryption to apply to new objects in the bucket.
    AwsS3BucketServerSideEncryptionRules:
      type: array
      items:
        $ref: "#/components/schemas/AwsS3BucketServerSideEncryptionRule"
    AwsS3BucketServerSideEncryptionRule:
      type: object
      properties:
        ApplyServerSideEncryptionByDefault:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketServerSideEncryptionByDefault"
            - description: Specifies the default server-side encryption to apply to new objects in the bucket. If a <code>PUT</code> object request doesn't specify any server-side encryption, this default encryption is applied.
      description: An encryption rule to apply to the S3 bucket.
    AwsS3BucketWebsiteConfigurationRedirectTo:
      type: object
      properties:
        Hostname:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the host to redirect requests to.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The protocol to use when redirecting requests. By default, this field uses the same protocol as the original request. Valid values are <code>http</code> or <code>https</code>.
      description: The redirect behavior for requests to the website.
    AwsS3BucketWebsiteConfigurationRoutingRules:
      type: array
      items:
        $ref: "#/components/schemas/AwsS3BucketWebsiteConfigurationRoutingRule"
    AwsS3BucketWebsiteConfigurationRoutingRuleCondition:
      type: object
      properties:
        HttpErrorCodeReturnedEquals:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Indicates to redirect the request if the HTTP error code matches this value.
        KeyPrefixEquals:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Indicates to redirect the request if the key prefix matches this value.
      description: The condition that must be met in order to apply the routing rule.
    AwsS3BucketWebsiteConfigurationRoutingRuleRedirect:
      type: object
      properties:
        Hostname:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The host name to use in the redirect request.
        HttpRedirectCode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The HTTP redirect code to use in the response.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The protocol to use to redirect the request. By default, uses the protocol from the original request.
        ReplaceKeyPrefixWith:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The object key prefix to use in the redirect request.</p> <p>Cannot be provided if <code>ReplaceKeyWith</code> is present.</p>
        ReplaceKeyWith:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The specific object key to use in the redirect request.</p> <p>Cannot be provided if <code>ReplaceKeyPrefixWith</code> is present.</p>
      description: The rules to redirect the request if the condition in <code>Condition</code> is met.
    AwsS3BucketWebsiteConfigurationRoutingRule:
      type: object
      properties:
        Condition:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketWebsiteConfigurationRoutingRuleCondition"
            - description: Provides the condition that must be met in order to apply the routing rule.
        Redirect:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketWebsiteConfigurationRoutingRuleRedirect"
            - description: Provides the rules to redirect the request if the condition in <code>Condition</code> is met.
      description: A rule for redirecting requests to the website.
    AwsS3ObjectDetails:
      type: object
      properties:
        LastModified:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the object was last modified.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        ETag:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The opaque identifier assigned by a web server to a specific version of a resource found at a URL.
        VersionId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of the object.
        ContentType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A standard MIME type describing the format of the object data.
        ServerSideEncryption:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: If the object is stored using server-side encryption, the value of the server-side encryption algorithm used when storing this object in Amazon S3.
        SSEKMSKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the KMS symmetric customer managed key that was used for the object.
      description: Details about an Amazon S3 object.
    AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails:
      type: object
      properties:
        MinimumInstanceMetadataServiceVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Indicates the minimum IMDS version that the notebook instance supports. "
      description: " Information on the instance metadata service (IMDS) configuration of the notebook instance. "
    AwsSageMakerNotebookInstanceDetails:
      type: object
      properties:
        AcceleratorTypes:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: " A list of Amazon Elastic Inference instance types to associate with the notebook instance. Currently, only one instance type can be associated with a notebook instance. "
        AdditionalCodeRepositories:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: ' An array of up to three Git repositories associated with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">CodeCommit</a> or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git repositories with SageMaker notebook instances</a> in the <i>Amazon SageMaker Developer Guide</i>. '
        DefaultCodeRepository:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: ' The Git repository associated with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in <a href="https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html">CodeCommit</a> or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see <a href="https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html">Associating Git repositories with SageMaker notebook instances</a> in the <i>Amazon SageMaker Developer Guide</i>. '
        DirectInternetAccess:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Sets whether SageMaker provides internet access to the notebook instance. If you set this to <code>Disabled</code>, this notebook instance is able to access resources only in your VPC, and is not be able to connect to SageMaker training and endpoint services unless you configure a Network Address Translation (NAT) Gateway in your VPC. "
        FailureReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " If status of the instance is <code>Failed</code>, the reason it failed. "
        InstanceMetadataServiceConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsSageMakerNotebookInstanceMetadataServiceConfigurationDetails"
            - description: " Information on the IMDS configuration of the notebook instance. "
        InstanceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The type of machine learning (ML) compute instance to launch for the notebook instance. "
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: ' The Amazon Resource Name (ARN) of an Key Management Service (KMS) key that SageMaker uses to encrypt data on the storage volume attached to your notebook instance. The KMS key you provide must be enabled. For information, see <a href="https://docs.aws.amazon.com/kms/latest/developerguide/enabling-keys.html">Enabling and disabling keys</a> in the <i>Key Management Service Developer Guide</i>. '
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The network interface ID that SageMaker created when the instance was created. "
        NotebookInstanceArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of the notebook instance. "
        NotebookInstanceLifecycleConfigName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The name of a notebook instance lifecycle configuration. "
        NotebookInstanceName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The name of the new notebook instance. "
        NotebookInstanceStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The status of the notebook instance. "
        PlatformIdentifier:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The platform identifier of the notebook instance runtime environment. "
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of the IAM role associated with the instance. "
        RootAccess:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Whether root access is enabled or disabled for users of the notebook instance. "
        SecurityGroups:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: " The VPC security group IDs. "
        SubnetId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the VPC subnet to which you have a connectivity from your ML compute instance. "
        Url:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The URL that you use to connect to the Jupyter notebook that is running in your notebook instance. "
        VolumeSizeInGB:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " The size, in GB, of the ML storage volume to attach to the notebook instance. "
      description: " Provides details about an Amazon SageMaker notebook instance. "
    AwsSecretsManagerSecretRotationRules:
      type: object
      properties:
        AutomaticallyAfterDays:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of days after the previous rotation to rotate the secret.
      description: Defines the rotation schedule for the secret.
    AwsSecretsManagerSecretDetails:
      type: object
      properties:
        RotationRules:
          allOf:
            - $ref: "#/components/schemas/AwsSecretsManagerSecretRotationRules"
            - description: Defines the rotation schedule for the secret.
        RotationOccurredWithinFrequency:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the rotation occurred within the specified rotation frequency.
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN, Key ID, or alias of the KMS key used to encrypt the <code>SecretString</code> or <code>SecretBinary</code> values for versions of this secret.
        RotationEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether rotation is enabled.
        RotationLambdaArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the Lambda function that rotates the secret.
        Deleted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether the secret is deleted.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the secret.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The user-provided description of the secret.
      description: Details about an Secrets Manager secret.
    TypeList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    Severity:
      type: object
      properties:
        Product:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: <p>Deprecated. This attribute is being deprecated. Instead of providing <code>Product</code>, provide <code>Original</code>.</p> <p>The native severity as defined by the Amazon Web Services service or integrated partner product that generated the finding.</p>
        Label:
          allOf:
            - $ref: "#/components/schemas/SeverityLabel"
            - description: <p>The severity value of the finding. The allowed values are the following.</p> <ul> <li> <p> <code>INFORMATIONAL</code> - No issue was found.</p> </li> <li> <p> <code>LOW</code> - The issue does not require action on its own.</p> </li> <li> <p> <code>MEDIUM</code> - The issue must be addressed but not urgently.</p> </li> <li> <p> <code>HIGH</code> - The issue must be addressed as a priority.</p> </li> <li> <p> <code>CRITICAL</code> - The issue must be remediated immediately to avoid it escalating.</p> </li> </ul> <p>If you provide <code>Normalized</code> and do not provide <code>Label</code>, then <code>Label</code> is set automatically as follows. </p> <ul> <li> <p>0 - <code>INFORMATIONAL</code> </p> </li> <li> <p>1–39 - <code>LOW</code> </p> </li> <li> <p>40–69 - <code>MEDIUM</code> </p> </li> <li> <p>70–89 - <code>HIGH</code> </p> </li> <li> <p>90–100 - <code>CRITICAL</code> </p> </li> </ul>
        Normalized:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>Deprecated. The normalized severity of a finding. This attribute is being deprecated. Instead of providing <code>Normalized</code>, provide <code>Label</code>.</p> <p>If you provide <code>Label</code> and do not provide <code>Normalized</code>, then <code>Normalized</code> is set automatically as follows.</p> <ul> <li> <p> <code>INFORMATIONAL</code> - 0</p> </li> <li> <p> <code>LOW</code> - 1</p> </li> <li> <p> <code>MEDIUM</code> - 40</p> </li> <li> <p> <code>HIGH</code> - 70</p> </li> <li> <p> <code>CRITICAL</code> - 90</p> </li> </ul>
        Original:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The native severity from the finding product that generated the finding.
      description: <p>The severity of the finding.</p> <p>The finding provider can provide the initial severity. The finding provider can only update the severity if it hasn't been updated using <code>BatchUpdateFindings</code>.</p> <p>The finding must have either <code>Label</code> or <code>Normalized</code> populated. If only one of these attributes is populated, then Security Hub automatically populates the other one. If neither attribute is populated, then the finding is invalid. <code>Label</code> is the preferred attribute.</p>
    Remediation:
      type: object
      properties:
        Recommendation:
          allOf:
            - $ref: "#/components/schemas/Recommendation"
            - description: A recommendation on the steps to take to remediate the issue identified by a finding.
      description: Details about the remediation steps for a finding.
    MalwareList:
      type: array
      items:
        $ref: "#/components/schemas/Malware"
    Network:
      type: object
      properties:
        Direction:
          allOf:
            - $ref: "#/components/schemas/NetworkDirection"
            - description: The direction of network traffic associated with a finding.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The protocol of network-related information about a finding.
        OpenPortRange:
          allOf:
            - $ref: "#/components/schemas/PortRange"
            - description: The range of open ports that is present on the network.
        SourceIpV4:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The source IPv4 address of network-related information about a finding.
        SourceIpV6:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The source IPv6 address of network-related information about a finding.
        SourcePort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The source port of network-related information about a finding.
        SourceDomain:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The source domain of network-related information about a finding.
        SourceMac:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The source media access control (MAC) address of network-related information about a finding.
        DestinationIpV4:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The destination IPv4 address of network-related information about a finding.
        DestinationIpV6:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The destination IPv6 address of network-related information about a finding.
        DestinationPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The destination port of network-related information about a finding.
        DestinationDomain:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The destination domain of network-related information about a finding.
      description: The details of network-related information about a finding.
    NetworkPathList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkPathComponent"
    ProcessDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the process.
        Path:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path to the process executable.
        Pid:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The process ID.
        ParentPid:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The parent process ID. This field accepts positive integers between <code>O</code> and <code>2147483647</code>.
        LaunchedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the process was launched.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        TerminatedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the process was terminated.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: The details of process-related information about a finding.
    ThreatList:
      type: array
      items:
        $ref: "#/components/schemas/Threat"
    ThreatIntelIndicatorList:
      type: array
      items:
        $ref: "#/components/schemas/ThreatIntelIndicator"
    ResourceList:
      type: array
      items:
        $ref: "#/components/schemas/Resource"
    Compliance:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/ComplianceStatus"
            - description: <p>The result of a standards check.</p> <p>The valid values for <code>Status</code> are as follows.</p> <ul> <li> <ul> <li> <p> <code>PASSED</code> - Standards check passed for all evaluated resources.</p> </li> <li> <p> <code>WARNING</code> - Some information is missing or this check is not supported for your configuration.</p> </li> <li> <p> <code>FAILED</code> - Standards check failed for at least one evaluated resource.</p> </li> <li> <p> <code>NOT_AVAILABLE</code> - Check could not be performed due to a service outage, API error, or because the result of the Config evaluation was <code>NOT_APPLICABLE</code>. If the Config evaluation result was <code>NOT_APPLICABLE</code>, then after 3 days, Security Hub automatically archives the finding.</p> </li> </ul> </li> </ul>
        RelatedRequirements:
          allOf:
            - $ref: "#/components/schemas/RelatedRequirementsList"
            - description: For a control, the industry or regulatory framework requirements that are related to the control. The check for that control is aligned with these requirements.
        StatusReasons:
          allOf:
            - $ref: "#/components/schemas/StatusReasonsList"
            - description: 'For findings generated from controls, a list of reasons behind the value of <code>Status</code>. For the list of status reason codes and their meanings, see <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-results.html#securityhub-standards-results-asff">Standards-related information in the ASFF</a> in the <i>Security Hub User Guide</i>. '
        SecurityControlId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The unique identifier of a control across standards. Values for this field typically consist of an Amazon Web Service and a number, such as APIGateway.5. "
        AssociatedStandards:
          allOf:
            - $ref: "#/components/schemas/AssociatedStandardsList"
            - description: "The enabled security standards in which a security control is currently enabled. "
      description: Contains finding details that are specific to control-based findings. Only returned for findings generated from controls.
    VerificationState:
      type: string
      enum:
        - UNKNOWN
        - TRUE_POSITIVE
        - FALSE_POSITIVE
        - BENIGN_POSITIVE
    WorkflowState:
      type: string
      deprecated: true
      enum:
        - NEW
        - ASSIGNED
        - IN_PROGRESS
        - DEFERRED
        - RESOLVED
      description: This filter is deprecated. Instead, use SeverityLabel or FindingProviderFieldsSeverityLabel.
    Workflow:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/WorkflowStatus"
            - description: <p>The status of the investigation into the finding. The workflow status is specific to an individual finding. It does not affect the generation of new findings. For example, setting the workflow status to <code>SUPPRESSED</code> or <code>RESOLVED</code> does not prevent a new finding for the same issue.</p> <p>The allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> <p>Security Hub also resets the workflow status from <code>NOTIFIED</code> or <code>RESOLVED</code> to <code>NEW</code> in the following cases:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>ComplianceStatus</code> changes from <code>PASSED</code> to either <code>WARNING</code>, <code>FAILED</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>NOTIFIED</code> - Indicates that you notified the resource owner about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> </li> <li> <p> <code>SUPPRESSED</code> - Indicates that you reviewed the finding and do not believe that any action is needed. The finding is no longer updated.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> </li> </ul>
      description: Provides information about the status of the investigation into a finding.
    RecordState:
      type: string
      enum:
        - ACTIVE
        - ARCHIVED
    RelatedFindingList:
      type: array
      items:
        $ref: "#/components/schemas/RelatedFinding"
    Note:
      type: object
      required:
        - Text
        - UpdatedBy
        - UpdatedAt
      properties:
        Text:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The text of a note.
        UpdatedBy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The principal that created a note.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The timestamp of when the note was updated.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: A user-defined note added to a finding.
    VulnerabilityList:
      type: array
      items:
        $ref: "#/components/schemas/Vulnerability"
    PatchSummary:
      type: object
      required:
        - Id
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the compliance standard that was used to determine the patch compliance status.
        InstalledCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of patches from the compliance standard that were installed successfully.
        MissingCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of patches that are part of the compliance standard but are not installed. The count includes patches that failed to install.
        FailedCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of patches from the compliance standard that failed to install.
        InstalledOtherCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of installed patches that are not part of the compliance standard.
        InstalledRejectedCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of patches that are installed but are also on a list of patches that the customer rejected.
        InstalledPendingReboot:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of patches that were applied, but that require the instance to be rebooted in order to be marked as installed.
        OperationStartTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the operation started.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        OperationEndTime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the operation completed.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        RebootOption:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The reboot option specified for the instance.
        Operation:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The type of patch operation performed. For Patch Manager, the values are <code>SCAN</code> and <code>INSTALL</code>. "
      description: Provides an overview of the patch compliance status for an instance against a selected compliance standard.
    FindingProviderFields:
      type: object
      properties:
        Confidence:
          allOf:
            - $ref: "#/components/schemas/RatioScale"
            - description: <p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
        Criticality:
          allOf:
            - $ref: "#/components/schemas/RatioScale"
            - description: <p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>
        RelatedFindings:
          allOf:
            - $ref: "#/components/schemas/RelatedFindingList"
            - description: A list of findings that are related to the current finding.
        Severity:
          allOf:
            - $ref: "#/components/schemas/FindingProviderSeverity"
            - description: The severity of a finding.
        Types:
          allOf:
            - $ref: "#/components/schemas/TypeList"
            - description: "<p>One or more finding types in the format of <code>namespace/category/classifier</code> that classify a finding.</p> <p>Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications</p>"
      description: In a <code>BatchImportFindings</code> request, finding providers use <code>FindingProviderFields</code> to provide and update values for confidence, criticality, related findings, severity, and types.
    AwsSecurityFindingFilters:
      type: object
      properties:
        ProductArn:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The ARN generated by Security Hub that uniquely identifies a third-party company (security findings provider) after this provider's product (solution that generates findings) is registered with Security Hub.
        AwsAccountId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The Amazon Web Services account ID that a finding is generated in.
        Id:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The security findings provider-specific identifier for a finding.
        GeneratorId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc.
        Region:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The Region from which the finding was generated.
        Type:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: A finding type in the format of <code>namespace/category/classifier</code> that classifies a finding.
        FirstObservedAt:
          allOf:
            - $ref: "#/components/schemas/DateFilterList"
            - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
        LastObservedAt:
          allOf:
            - $ref: "#/components/schemas/DateFilterList"
            - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateFilterList"
            - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider captured the potential security issue that a finding captured.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/DateFilterList"
            - description: <p>An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. </p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
        SeverityProduct:
          allOf:
            - $ref: "#/components/schemas/NumberFilterList"
            - deprecated: true
              description: The native severity as defined by the security-findings provider's solution that generated the finding.This filter is deprecated. Instead, use FindingProviderSeverityOriginal.
        SeverityNormalized:
          allOf:
            - $ref: "#/components/schemas/NumberFilterList"
            - deprecated: true
              description: The normalized severity of a finding.This filter is deprecated. Instead, use SeverityLabel or FindingProviderFieldsSeverityLabel.
        SeverityLabel:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The label of a finding's severity.
        Confidence:
          allOf:
            - $ref: "#/components/schemas/NumberFilterList"
            - description: <p>A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
        Criticality:
          allOf:
            - $ref: "#/components/schemas/NumberFilterList"
            - description: <p>The level of importance assigned to the resources associated with the finding.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.</p>
        Title:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: A finding's title.
        Description:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: A finding's description.
        RecommendationText:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The recommendation of what to do about the issue described in a finding.
        SourceUrl:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: A URL that links to a page about the current finding in the security-findings provider's solution.
        ProductFields:
          allOf:
            - $ref: "#/components/schemas/MapFilterList"
            - description: A data type where security-findings providers can include additional solution-specific details that aren't part of the defined <code>AwsSecurityFinding</code> format.
        ProductName:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The name of the solution (product) that generates findings.
        CompanyName:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The name of the findings provider (company) that owns the solution (product) that generates findings.
        UserDefinedFields:
          allOf:
            - $ref: "#/components/schemas/MapFilterList"
            - description: "A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. "
        MalwareName:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The name of the malware that was observed.
        MalwareType:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The type of the malware that was observed.
        MalwarePath:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The filesystem path of the malware that was observed.
        MalwareState:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The state of the malware that was observed.
        NetworkDirection:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: Indicates the direction of network traffic associated with a finding.
        NetworkProtocol:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The protocol of network-related information about a finding.
        NetworkSourceIpV4:
          allOf:
            - $ref: "#/components/schemas/IpFilterList"
            - description: The source IPv4 address of network-related information about a finding.
        NetworkSourceIpV6:
          allOf:
            - $ref: "#/components/schemas/IpFilterList"
            - description: The source IPv6 address of network-related information about a finding.
        NetworkSourcePort:
          allOf:
            - $ref: "#/components/schemas/NumberFilterList"
            - description: The source port of network-related information about a finding.
        NetworkSourceDomain:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The source domain of network-related information about a finding.
        NetworkSourceMac:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The source media access control (MAC) address of network-related information about a finding.
        NetworkDestinationIpV4:
          allOf:
            - $ref: "#/components/schemas/IpFilterList"
            - description: The destination IPv4 address of network-related information about a finding.
        NetworkDestinationIpV6:
          allOf:
            - $ref: "#/components/schemas/IpFilterList"
            - description: The destination IPv6 address of network-related information about a finding.
        NetworkDestinationPort:
          allOf:
            - $ref: "#/components/schemas/NumberFilterList"
            - description: The destination port of network-related information about a finding.
        NetworkDestinationDomain:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The destination domain of network-related information about a finding.
        ProcessName:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The name of the process.
        ProcessPath:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The path to the process executable.
        ProcessPid:
          allOf:
            - $ref: "#/components/schemas/NumberFilterList"
            - description: The process ID.
        ProcessParentPid:
          allOf:
            - $ref: "#/components/schemas/NumberFilterList"
            - description: The parent process ID. This field accepts positive integers between <code>O</code> and <code>2147483647</code>.
        ProcessLaunchedAt:
          allOf:
            - $ref: "#/components/schemas/DateFilterList"
            - description: <p>A timestamp that identifies when the process was launched.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
        ProcessTerminatedAt:
          allOf:
            - $ref: "#/components/schemas/DateFilterList"
            - description: <p>A timestamp that identifies when the process was terminated.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
        ThreatIntelIndicatorType:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The type of a threat intelligence indicator.
        ThreatIntelIndicatorValue:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The value of a threat intelligence indicator.
        ThreatIntelIndicatorCategory:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The category of a threat intelligence indicator.
        ThreatIntelIndicatorLastObservedAt:
          allOf:
            - $ref: "#/components/schemas/DateFilterList"
            - description: A timestamp that identifies the last observation of a threat intelligence indicator.
        ThreatIntelIndicatorSource:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The source of the threat intelligence.
        ThreatIntelIndicatorSourceUrl:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The URL for more details from the source of the threat intelligence.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: Specifies the type of the resource that details are provided for.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The canonical identifier for the given resource type.
        ResourcePartition:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The canonical Amazon Web Services partition name that the Region is assigned to.
        ResourceRegion:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The canonical Amazon Web Services external Region name where this resource is located.
        ResourceTags:
          allOf:
            - $ref: "#/components/schemas/MapFilterList"
            - description: A list of Amazon Web Services tags associated with a resource at the time the finding was processed.
        ResourceAwsEc2InstanceType:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The instance type of the instance.
        ResourceAwsEc2InstanceImageId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The Amazon Machine Image (AMI) ID of the instance.
        ResourceAwsEc2InstanceIpV4Addresses:
          allOf:
            - $ref: "#/components/schemas/IpFilterList"
            - description: The IPv4 addresses associated with the instance.
        ResourceAwsEc2InstanceIpV6Addresses:
          allOf:
            - $ref: "#/components/schemas/IpFilterList"
            - description: The IPv6 addresses associated with the instance.
        ResourceAwsEc2InstanceKeyName:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The key name associated with the instance.
        ResourceAwsEc2InstanceIamInstanceProfileArn:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The IAM profile ARN of the instance.
        ResourceAwsEc2InstanceVpcId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The identifier of the VPC that the instance was launched in.
        ResourceAwsEc2InstanceSubnetId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The identifier of the subnet that the instance was launched in.
        ResourceAwsEc2InstanceLaunchedAt:
          allOf:
            - $ref: "#/components/schemas/DateFilterList"
            - description: The date and time the instance was launched.
        ResourceAwsS3BucketOwnerId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The canonical user ID of the owner of the S3 bucket.
        ResourceAwsS3BucketOwnerName:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The display name of the owner of the S3 bucket.
        ResourceAwsIamAccessKeyUserName:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - deprecated: true
              description: The user associated with the IAM access key related to a finding.This filter is deprecated. Instead, use ResourceAwsIamAccessKeyPrincipalName.
        ResourceAwsIamAccessKeyPrincipalName:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The name of the principal that is associated with an IAM access key.
        ResourceAwsIamAccessKeyStatus:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The status of the IAM access key related to a finding.
        ResourceAwsIamAccessKeyCreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateFilterList"
            - description: The creation date/time of the IAM access key related to a finding.
        ResourceAwsIamUserUserName:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The name of an IAM user.
        ResourceContainerName:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The name of the container related to a finding.
        ResourceContainerImageId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The identifier of the image related to a finding.
        ResourceContainerImageName:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The name of the image related to a finding.
        ResourceContainerLaunchedAt:
          allOf:
            - $ref: "#/components/schemas/DateFilterList"
            - description: <p>A timestamp that identifies when the container was started.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
        ResourceDetailsOther:
          allOf:
            - $ref: "#/components/schemas/MapFilterList"
            - description: The details of a resource that doesn't have a specific subfield for the resource type defined.
        ComplianceStatus:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: Exclusive to findings that are generated as the result of a check run against a specific rule in a supported standard, such as CIS Amazon Web Services Foundations. Contains security standard-related finding details.
        VerificationState:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The veracity of a finding.
        WorkflowState:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: <p>The workflow state of a finding.</p> <p>Note that this field is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>
        WorkflowStatus:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: <p>The status of the investigation into a finding. Allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> <p>Security Hub also resets the workflow status from <code>NOTIFIED</code> or <code>RESOLVED</code> to <code>NEW</code> in the following cases:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to either <code>WARNING</code>, <code>FAILED</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>NOTIFIED</code> - Indicates that the resource owner has been notified about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> <p>If one of the following occurs, the workflow status is changed automatically from <code>NOTIFIED</code> to <code>NEW</code>:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>SUPPRESSED</code> - Indicates that you reviewed the finding and do not believe that any action is needed.</p> <p>The workflow status of a <code>SUPPRESSED</code> finding does not change if <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved. </p> <p>The finding remains <code>RESOLVED</code> unless one of the following occurs:</p> <ul> <li> <p> <code>RecordState</code> changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p> <code>Compliance.Status</code> changes from <code>PASSED</code> to <code>FAILED</code>, <code>WARNING</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> <p>In those cases, the workflow status is automatically reset to <code>NEW</code>.</p> <p>For findings from controls, if <code>Compliance.Status</code> is <code>PASSED</code>, then Security Hub automatically sets the workflow status to <code>RESOLVED</code>.</p> </li> </ul>
        RecordState:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The updated record state for the finding.
        RelatedFindingsProductArn:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The ARN of the solution that generated a related finding.
        RelatedFindingsId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The solution-generated identifier for a related finding.
        NoteText:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The text of a note.
        NoteUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/DateFilterList"
            - description: The timestamp of when the note was updated.
        NoteUpdatedBy:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The principal that created a note.
        Keyword:
          allOf:
            - $ref: "#/components/schemas/KeywordFilterList"
            - deprecated: true
              description: A keyword for a finding.The Keyword property is deprecated.
        FindingProviderFieldsConfidence:
          allOf:
            - $ref: "#/components/schemas/NumberFilterList"
            - description: <p>The finding provider value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
        FindingProviderFieldsCriticality:
          allOf:
            - $ref: "#/components/schemas/NumberFilterList"
            - description: <p>The finding provider value for the level of importance assigned to the resources associated with the findings.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. </p>
        FindingProviderFieldsRelatedFindingsId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The finding identifier of a related finding that is identified by the finding provider.
        FindingProviderFieldsRelatedFindingsProductArn:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The ARN of the solution that generated a related finding that is identified by the finding provider.
        FindingProviderFieldsSeverityLabel:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The finding provider value for the severity label.
        FindingProviderFieldsSeverityOriginal:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: The finding provider's original value for the severity.
        FindingProviderFieldsTypes:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: "<p>One or more finding types that the finding provider assigned to the finding. Uses the format of <code>namespace/category/classifier</code> that classify a finding.</p> <p>Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications</p>"
        Sample:
          allOf:
            - $ref: "#/components/schemas/BooleanFilterList"
            - description: Indicates whether or not sample findings are included in the filter results.
        ComplianceSecurityControlId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: " The unique identifier of a control across standards. Values for this field typically consist of an Amazon Web Service and a number, such as APIGateway.5. "
        ComplianceAssociatedStandardsId:
          allOf:
            - $ref: "#/components/schemas/StringFilterList"
            - description: ' The unique identifier of a standard in which a control is enabled. This field consists of the resource portion of the Amazon Resource Name (ARN) returned for a standard in the <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_DescribeStandards.html">DescribeStandards</a> API response. '
      description: <p>A collection of attributes that are applied to all active Security Hub-aggregated findings and that result in a subset of findings that are included in this insight.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p>
    AwsSecurityFindingIdentifierList:
      type: array
      items:
        $ref: "#/components/schemas/AwsSecurityFindingIdentifier"
    AwsSecurityFindingList:
      type: array
      items:
        $ref: "#/components/schemas/AwsSecurityFinding"
    AwsSnsTopicSubscriptionList:
      type: array
      items:
        $ref: "#/components/schemas/AwsSnsTopicSubscription"
    AwsSnsTopicDetails:
      type: object
      properties:
        KmsMasterKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of an Amazon Web Services managed key for Amazon SNS or a customer managed key.
        Subscription:
          allOf:
            - $ref: "#/components/schemas/AwsSnsTopicSubscriptionList"
            - description: Subscription is an embedded property that describes the subscription endpoints of an Amazon SNS topic.
        TopicName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the Amazon SNS topic.
        Owner:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The subscription's owner.
        SqsSuccessFeedbackRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Indicates successful message delivery status for an Amazon SNS topic that is subscribed to an Amazon SQS endpoint. "
        SqsFailureFeedbackRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Indicates failed message delivery status for an Amazon SNS topic that is subscribed to an Amazon SQS endpoint. "
        ApplicationSuccessFeedbackRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Indicates failed message delivery status for an Amazon SNS topic that is subscribed to a platform application endpoint. "
        FirehoseSuccessFeedbackRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Indicates successful message delivery status for an Amazon SNS topic that is subscribed to an Amazon Kinesis Data Firehose endpoint. "
        FirehoseFailureFeedbackRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Indicates failed message delivery status for an Amazon SNS topic that is subscribed to an Amazon Kinesis Data Firehose endpoint. "
        HttpSuccessFeedbackRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Indicates successful message delivery status for an Amazon SNS topic that is subscribed to an HTTP endpoint. "
        HttpFailureFeedbackRoleArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Indicates failed message delivery status for an Amazon SNS topic that is subscribed to an HTTP endpoint. "
      description: Provides information about an Amazon SNS topic to which notifications can be published.
    AwsSnsTopicSubscription:
      type: object
      properties:
        Endpoint:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The subscription's endpoint (format depends on the protocol).
        Protocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The subscription's protocol.
      description: A wrapper type for the attributes of an Amazon SNS subscription.
    AwsSqsQueueDetails:
      type: object
      properties:
        KmsDataKeyReusePeriodSeconds:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling KMS again.
        KmsMasterKeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of an Amazon Web Services managed key for Amazon SQS or a custom KMS key.
        QueueName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the new queue.
        DeadLetterTargetArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ARN of the dead-letter queue to which Amazon SQS moves messages after the value of <code>maxReceiveCount</code> is exceeded. "
      description: Data about a queue.
    AwsSsmComplianceSummary:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The current patch compliance status. Valid values are as follows:</p> <ul> <li> <p> <code>COMPLIANT</code> </p> </li> <li> <p> <code>NON_COMPLIANT</code> </p> </li> <li> <p> <code>UNSPECIFIED_DATA</code> </p> </li> </ul>
        CompliantCriticalCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patches that are compliant, the number that have a severity of <code>CRITICAL</code>.
        CompliantHighCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patches that are compliant, the number that have a severity of <code>HIGH</code>.
        CompliantMediumCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patches that are compliant, the number that have a severity of <code>MEDIUM</code>.
        ExecutionType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of execution that was used determine compliance.
        NonCompliantCriticalCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patch items that are noncompliant, the number of items that have a severity of <code>CRITICAL</code>.
        CompliantInformationalCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patches that are compliant, the number that have a severity of <code>INFORMATIONAL</code>.
        NonCompliantInformationalCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patches that are noncompliant, the number that have a severity of <code>INFORMATIONAL</code>.
        CompliantUnspecifiedCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patches that are compliant, the number that have a severity of <code>UNSPECIFIED</code>.
        NonCompliantLowCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patches that are noncompliant, the number that have a severity of <code>LOW</code>.
        NonCompliantHighCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patches that are noncompliant, the number that have a severity of <code>HIGH</code>.
        CompliantLowCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patches that are compliant, the number that have a severity of <code>LOW</code>.
        ComplianceType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The type of resource for which the compliance was determined. For <code>AwsSsmPatchCompliance</code>, <code>ComplianceType</code> is <code>Patch</code>. "
        PatchBaselineId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the patch baseline. The patch baseline lists the patches that are approved for installation.
        OverallSeverity:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The highest severity for the patches. Valid values are as follows:</p> <ul> <li> <p> <code>CRITICAL</code> </p> </li> <li> <p> <code>HIGH</code> </p> </li> <li> <p> <code>MEDIUM</code> </p> </li> <li> <p> <code>LOW</code> </p> </li> <li> <p> <code>INFORMATIONAL</code> </p> </li> <li> <p> <code>UNSPECIFIED</code> </p> </li> </ul>
        NonCompliantMediumCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patches that are noncompliant, the number that have a severity of <code>MEDIUM</code>.
        NonCompliantUnspecifiedCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: For the patches that are noncompliant, the number that have a severity of <code>UNSPECIFIED</code>.
        PatchGroup:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the patch group for which compliance was determined. A patch group uses tags to group EC2 instances that should have the same patch compliance.
      description: Provides the details about the compliance status for a patch.
    AwsSsmPatch:
      type: object
      properties:
        ComplianceSummary:
          allOf:
            - $ref: "#/components/schemas/AwsSsmComplianceSummary"
            - description: The compliance status details for the patch.
      description: Provides details about the compliance for a patch.
    AwsSsmPatchComplianceDetails:
      type: object
      properties:
        Patch:
          allOf:
            - $ref: "#/components/schemas/AwsSsmPatch"
            - description: Information about the status of a patch.
      description: Provides information about the state of a patch on an instance based on the patch baseline that was used to patch the instance.
    AwsWafRateBasedRuleMatchPredicateList:
      type: array
      items:
        $ref: "#/components/schemas/AwsWafRateBasedRuleMatchPredicate"
    AwsWafRateBasedRuleDetails:
      type: object
      properties:
        MetricName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the metrics for the rate-based rule.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the rate-based rule.
        RateKey:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The field that WAF uses to determine whether requests are likely arriving from single source and are subject to rate monitoring.
        RateLimit:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The maximum number of requests that have an identical value for the field specified in <code>RateKey</code> that are allowed within a five-minute period. If the number of requests exceeds <code>RateLimit</code> and the other predicates specified in the rule are met, WAF triggers the action for the rule.
        RuleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The unique identifier for the rate-based rule.
        MatchPredicates:
          allOf:
            - $ref: "#/components/schemas/AwsWafRateBasedRuleMatchPredicateList"
            - description: The predicates to include in the rate-based rule.
      description: Details about a rate-based rule for global resources. A rate-based rule provides settings to indicate when to allow, block, or count a request. Rate-based rules include the number of requests that arrive over a specified period of time.
    AwsWafRateBasedRuleMatchPredicate:
      type: object
      properties:
        DataId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The unique identifier for the predicate.
        Negated:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>If set to <code>true</code>, then the rule actions are performed on requests that match the predicate settings.</p> <p>If set to <code>false</code>, then the rule actions are performed on all requests except those that match the predicate settings. </p>
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The type of predicate. Valid values are as follows:</p> <ul> <li> <p> <code>ByteMatch</code> </p> </li> <li> <p> <code>GeoMatch</code> </p> </li> <li> <p> <code>IPMatch</code> </p> </li> <li> <p> <code>RegexMatch</code> </p> </li> <li> <p> <code>SizeConstraint</code> </p> </li> <li> <p> <code>SqlInjectionMatch</code> </p> </li> <li> <p> <code>XssMatch</code> </p> </li> </ul>
      description: A match predicate. A predicate might look for characteristics such as specific IP addresses, geographic locations, or sizes.
    AwsWafRegionalRateBasedRuleMatchPredicateList:
      type: array
      items:
        $ref: "#/components/schemas/AwsWafRegionalRateBasedRuleMatchPredicate"
    AwsWafRegionalRateBasedRuleDetails:
      type: object
      properties:
        MetricName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the metrics for the rate-based rule.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the rate-based rule.
        RateKey:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The field that WAF uses to determine whether requests are likely arriving from single source and are subject to rate monitoring.
        RateLimit:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The maximum number of requests that have an identical value for the field specified in <code>RateKey</code> that are allowed within a five-minute period. If the number of requests exceeds <code>RateLimit</code> and the other predicates specified in the rule are met, WAF triggers the action for the rule.
        RuleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The unique identifier for the rate-based rule.
        MatchPredicates:
          allOf:
            - $ref: "#/components/schemas/AwsWafRegionalRateBasedRuleMatchPredicateList"
            - description: The predicates to include in the rate-based rule.
      description: contains details about a rate-based rule for Regional resources. A rate-based rule provides settings to indicate when to allow, block, or count a request. Rate-based rules include the number of requests that arrive over a specified period of time.
    AwsWafRegionalRateBasedRuleMatchPredicate:
      type: object
      properties:
        DataId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The unique identifier for the predicate.
        Negated:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>If set to <code>true</code>, then the rule actions are performed on requests that match the predicate settings.</p> <p>If set to <code>false</code>, then the rule actions are performed on all requests except those that match the predicate settings.</p>
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The type of predicate. Valid values are as follows:</p> <ul> <li> <p> <code>ByteMatch</code> </p> </li> <li> <p> <code>GeoMatch</code> </p> </li> <li> <p> <code>IPMatch</code> </p> </li> <li> <p> <code>RegexMatch</code> </p> </li> <li> <p> <code>SizeConstraint</code> </p> </li> <li> <p> <code>SqlInjectionMatch</code> </p> </li> <li> <p> <code>XssMatch</code> </p> </li> </ul>
      description: Details for a match predicate. A predicate might look for characteristics such as specific IP addresses, geographic locations, or sizes.
    AwsWafRegionalRulePredicateList:
      type: array
      items:
        $ref: "#/components/schemas/AwsWafRegionalRulePredicateListDetails"
    AwsWafRegionalRuleDetails:
      type: object
      properties:
        MetricName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A name for the metrics for the rule. "
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A descriptive name for the rule. "
        PredicateList:
          allOf:
            - $ref: "#/components/schemas/AwsWafRegionalRulePredicateList"
            - description: "Specifies the <code>ByteMatchSet</code>, <code>IPSet</code>, <code>SqlInjectionMatchSet</code>, <code>XssMatchSet</code>, <code>RegexMatchSet</code>, <code>GeoMatchSet</code>, and <code>SizeConstraintSet</code> objects that you want to add to a rule and, for each object, indicates whether you want to negate the settings. "
        RuleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the rule. "
      description: "Provides information about an WAF Regional rule. This rule identifies the web requests that you want to allow, block, or count. "
    AwsWafRegionalRuleGroupRulesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsWafRegionalRuleGroupRulesDetails"
    AwsWafRegionalRuleGroupDetails:
      type: object
      properties:
        MetricName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A name for the metrics for this rule group. "
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The descriptive name of the rule group. "
        RuleGroupId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the rule group. "
        Rules:
          allOf:
            - $ref: "#/components/schemas/AwsWafRegionalRuleGroupRulesList"
            - description: "Provides information about the rule statements used to identify the web requests that you want to allow, block, or count. "
      description: "Provides information about an WAF Regional rule group. The rule group is a collection of rules for inspecting and controlling web requests. "
    AwsWafRegionalRuleGroupRulesActionDetails:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Specifies the <code>ByteMatchSet</code>, <code>IPSet</code>, <code>SqlInjectionMatchSet</code>, <code>XssMatchSet</code>, <code>RegexMatchSet</code>, <code>GeoMatchSet</code>, and <code>SizeConstraintSet</code> objects that you want to add to a rule and, for each object, indicates whether you want to negate the settings.
      description: "Describes the action that WAF should take on a web request when it matches the criteria defined in the rule. "
    AwsWafRegionalRuleGroupRulesDetails:
      type: object
      properties:
        Action:
          allOf:
            - $ref: "#/components/schemas/AwsWafRegionalRuleGroupRulesActionDetails"
            - description: "The action that WAF should take on a web request when it matches the criteria defined in the rule. "
        Priority:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "If you define more than one rule in a web ACL, WAF evaluates each request against the rules in order based on the value of <code>Priority</code>. "
        RuleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID for a rule. "
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The type of rule in the rule group. "
      description: "Provides information about the rules attached to a rule group "
    AwsWafRegionalRulePredicateListDetails:
      type: object
      properties:
        DataId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A unique identifier for a predicate in a rule, such as <code>ByteMatchSetId</code> or <code>IPSetId</code>. "
        Negated:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Specifies if you want WAF to allow, block, or count requests based on the settings in the <code>ByteMatchSet</code>, <code>IPSet</code>, <code>SqlInjectionMatchSet</code>, <code>XssMatchSet</code>, <code>RegexMatchSet</code>, <code>GeoMatchSet</code>, or <code>SizeConstraintSet</code>. "
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The type of predicate in a rule, such as <code>ByteMatch</code> or <code>IPSet</code>. "
      description: "Provides details about the <code>ByteMatchSet</code>, <code>IPSet</code>, <code>SqlInjectionMatchSet</code>, <code>XssMatchSet</code>, <code>RegexMatchSet</code>, <code>GeoMatchSet</code>, and <code>SizeConstraintSet</code> objects that you want to add to a rule and, for each object, indicates whether you want to negate the settings. "
    AwsWafRegionalWebAclRulesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsWafRegionalWebAclRulesListDetails"
    AwsWafRegionalWebAclDetails:
      type: object
      properties:
        DefaultAction:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The action to perform if none of the rules contained in the web ACL match. "
        MetricName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A name for the metrics for this web ACL. "
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A descriptive name for the web ACL. "
        RulesList:
          allOf:
            - $ref: "#/components/schemas/AwsWafRegionalWebAclRulesList"
            - description: "An array that contains the action for each rule in a web ACL, the priority of the rule, and the ID of the rule. "
        WebAclId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the web ACL. "
      description: "Provides information about the web access control list (web ACL). The web ACL contains the rules that identify the requests that you want to allow, block, or count. "
    AwsWafRegionalWebAclRulesListDetails:
      type: object
      properties:
        Action:
          allOf:
            - $ref: "#/components/schemas/AwsWafRegionalWebAclRulesListActionDetails"
            - description: "The action that WAF takes when a web request matches all conditions in the rule, such as allow, block, or count the request. "
        OverrideAction:
          allOf:
            - $ref: "#/components/schemas/AwsWafRegionalWebAclRulesListOverrideActionDetails"
            - description: "Overrides the rule evaluation result in the rule group. "
        Priority:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The order in which WAF evaluates the rules in a web ACL. "
        RuleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of an WAF Regional rule to associate with a web ACL. "
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "For actions that are associated with a rule, the action that WAF takes when a web request matches all conditions in a rule. "
      description: "A combination of <code>ByteMatchSet</code>, <code>IPSet</code>, and/or <code>SqlInjectionMatchSet</code> objects that identify the web requests that you want to allow, block, or count. "
    AwsWafRegionalWebAclRulesListActionDetails:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "For actions that are associated with a rule, the action that WAF takes when a web request matches all conditions in a rule. "
      description: "The action that WAF takes when a web request matches all conditions in the rule, such as allow, block, or count the request. "
    AwsWafRegionalWebAclRulesListOverrideActionDetails:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Overrides the rule evaluation result in the rule group. "
      description: "Provides details about the action to use in the place of the action that results from the rule group evaluation. "
    AwsWafRulePredicateList:
      type: array
      items:
        $ref: "#/components/schemas/AwsWafRulePredicateListDetails"
    AwsWafRuleDetails:
      type: object
      properties:
        MetricName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the metrics for this rule. "
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A descriptive name for the rule. "
        PredicateList:
          allOf:
            - $ref: "#/components/schemas/AwsWafRulePredicateList"
            - description: "Specifies the <code>ByteMatchSet</code>, <code>IPSet</code>, <code>SqlInjectionMatchSet</code>, <code>XssMatchSet</code>, <code>RegexMatchSet</code>, <code>GeoMatchSet</code>, and <code>SizeConstraintSet</code> objects that you want to add to a rule and, for each object, indicates whether you want to negate the settings. "
        RuleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the WAF rule. "
      description: "Provides information about a WAF rule. This rule specifies the web requests that you want to allow, block, or count. "
    AwsWafRuleGroupRulesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsWafRuleGroupRulesDetails"
    AwsWafRuleGroupDetails:
      type: object
      properties:
        MetricName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the metrics for this rule group. "
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the rule group. "
        RuleGroupId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The ID of the rule group. "
        Rules:
          allOf:
            - $ref: "#/components/schemas/AwsWafRuleGroupRulesList"
            - description: "Provides information about the rules attached to the rule group. These rules identify the web requests that you want to allow, block, or count. "
      description: "Provides information about an WAF rule group. A rule group is a collection of rules for inspecting and controlling web requests. "
    AwsWafRuleGroupRulesActionDetails:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The action that WAF should take on a web request when it matches the rule's statement.
      description: "Provides information about what action WAF should take on a web request when it matches the criteria defined in the rule. "
    AwsWafRuleGroupRulesDetails:
      type: object
      properties:
        Action:
          allOf:
            - $ref: "#/components/schemas/AwsWafRuleGroupRulesActionDetails"
            - description: "Provides information about what action WAF should take on a web request when it matches the criteria defined in the rule. "
        Priority:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: If you define more than one rule in a web ACL, WAF evaluates each request against the rules in order based on the value of <code>Priority</code>.
        RuleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The rule ID for a rule. "
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The type of rule. "
      description: "Provides information about the rules attached to the rule group. These rules identify the web requests that you want to allow, block, or count. "
    AwsWafRulePredicateListDetails:
      type: object
      properties:
        DataId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "A unique identifier for a predicate in a rule, such as <code>ByteMatchSetId</code> or <code>IPSetId</code>. "
        Negated:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "Specifies if you want WAF to allow, block, or count requests based on the settings in the <code>ByteMatchSet</code>, <code>IPSet</code>, <code>SqlInjectionMatchSet</code>, <code>XssMatchSet</code>, <code>RegexMatchSet</code>, <code>GeoMatchSet</code>, or <code>SizeConstraintSet</code>. "
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The type of predicate in a rule, such as <code>ByteMatch</code> or <code>IPSet</code>. "
      description: "Provides details about the <code>ByteMatchSet</code>, <code>IPSet</code>, <code>SqlInjectionMatchSet</code>, <code>XssMatchSet</code>, <code>RegexMatchSet</code>, <code>GeoMatchSet</code>, and <code>SizeConstraintSet</code> objects that you want to add to a rule and, for each object, indicates whether you want to negate the settings. "
    AwsWafWebAclRuleList:
      type: array
      items:
        $ref: "#/components/schemas/AwsWafWebAclRule"
    AwsWafWebAclDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A friendly name or description of the web ACL. You can't change the name of a web ACL after you create it.
        DefaultAction:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The action to perform if none of the rules contained in the web ACL match.
        Rules:
          allOf:
            - $ref: "#/components/schemas/AwsWafWebAclRuleList"
            - description: An array that contains the action for each rule in a web ACL, the priority of the rule, and the ID of the rule.
        WebAclId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A unique identifier for a web ACL.
      description: Provides information about an WAF web access control list (web ACL).
    WafAction:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Specifies how you want WAF to respond to requests that match the settings in a rule.</p> <p>Valid settings include the following:</p> <ul> <li> <p> <code>ALLOW</code> - WAF allows requests</p> </li> <li> <p> <code>BLOCK</code> - WAF blocks requests</p> </li> <li> <p> <code>COUNT</code> - WAF increments a counter of the requests that match all of the conditions in the rule. WAF then continues to inspect the web request based on the remaining rules in the web ACL. You can't specify <code>COUNT</code> for the default action for a web ACL.</p> </li> </ul>
      description: "Details about the action that CloudFront or WAF takes when a web request matches the conditions in the rule. "
    WafExcludedRuleList:
      type: array
      items:
        $ref: "#/components/schemas/WafExcludedRule"
    WafOverrideAction:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p> <code>COUNT</code> overrides the action specified by the individual rule within a <code>RuleGroup</code> .</p> <p>If set to <code>NONE</code>, the rule's action takes place.</p>
      description: Details about an override action for a rule.
    AwsWafWebAclRule:
      type: object
      properties:
        Action:
          allOf:
            - $ref: "#/components/schemas/WafAction"
            - description: "Specifies the action that CloudFront or WAF takes when a web request matches the conditions in the rule. "
        ExcludedRules:
          allOf:
            - $ref: "#/components/schemas/WafExcludedRuleList"
            - description: Rules to exclude from a rule group.
        OverrideAction:
          allOf:
            - $ref: "#/components/schemas/WafOverrideAction"
            - description: <p>Use the <code>OverrideAction</code> to test your <code>RuleGroup</code>.</p> <p>Any rule in a <code>RuleGroup</code> can potentially block a request. If you set the <code>OverrideAction</code> to <code>None</code>, the <code>RuleGroup</code> blocks a request if any individual rule in the <code>RuleGroup</code> matches the request and is configured to block that request.</p> <p>However, if you first want to test the <code>RuleGroup</code>, set the <code>OverrideAction</code> to <code>Count</code>. The <code>RuleGroup</code> then overrides any block action specified by individual rules contained within the group. Instead of blocking matching requests, those requests are counted.</p> <p> <code>ActivatedRule</code>|<code>OverrideAction</code> applies only when updating or adding a <code>RuleGroup</code> to a web ACL. In this case you do not use <code>ActivatedRule</code> <code>Action</code>. For all other update requests, <code>ActivatedRule</code> <code>Action</code> is used instead of <code>ActivatedRule</code> <code>OverrideAction</code>.</p>
        Priority:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Specifies the order in which the rules in a web ACL are evaluated. Rules with a lower value for <code>Priority</code> are evaluated before rules with a higher value. The value must be a unique integer. If you add multiple rules to a web ACL, the values do not need to be consecutive.
        RuleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier for a rule.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "<p>The rule type.</p> <p>Valid values: <code>REGULAR</code> | <code>RATE_BASED</code> | <code>GROUP</code> </p> <p>The default is <code>REGULAR</code>.</p>"
      description: Details for a rule in an WAF web ACL.
    AwsWafv2CustomRequestHandlingDetails:
      type: object
      properties:
        InsertHeaders:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2InsertHeadersList"
            - description: " The HTTP headers to insert into the request. "
      description: " Custom request handling behavior that inserts custom headers into a web request. WAF uses custom request handling when the rule action doesn't block the request. "
    AwsWafv2ActionAllowDetails:
      type: object
      properties:
        CustomRequestHandling:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2CustomRequestHandlingDetails"
            - description: ' Defines custom handling for the web request. For information about customizing web requests and responses, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html">Customizing web requests and responses in WAF</a> in the <i>WAF Developer Guide.</i>. '
      description: " Specifies that WAF should allow the request and optionally defines additional custom handling for the request. "
    AwsWafv2CustomResponseDetails:
      type: object
      properties:
        CustomResponseBodyKey:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " References the response body that you want WAF to return to the web request client. You can define a custom response for a rule action or a default web ACL action that is set to block. "
        ResponseCode:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: ' The HTTP status code to return to the client. For a list of status codes that you can use in your custom responses, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/customizing-the-response-status-codes.html">Supported status codes for custom response</a> in the <i>WAF Developer Guide.</i> '
        ResponseHeaders:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2InsertHeadersList"
            - description: " The HTTP headers to use in the response. "
      description: " A custom response to send to the client. You can define a custom response for rule actions and default web ACL actions that are set to block. "
    AwsWafv2ActionBlockDetails:
      type: object
      properties:
        CustomResponse:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2CustomResponseDetails"
            - description: ' Defines a custom response for the web request. For information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html">Customizing web requests and responses in WAF</a> in the <i>WAF Developer Guide.</i>. '
      description: " Specifies that WAF should block the request and optionally defines additional custom handling for the response to the web request. "
    AwsWafv2CustomHttpHeader:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The name of the custom header. "
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The value of the custom header. "
      description: " A custom header for custom request and response handling. "
    AwsWafv2InsertHeadersList:
      type: array
      items:
        $ref: "#/components/schemas/AwsWafv2CustomHttpHeader"
    AwsWafv2RulesList:
      type: array
      items:
        $ref: "#/components/schemas/AwsWafv2RulesDetails"
    AwsWafv2VisibilityConfigDetails:
      type: object
      properties:
        CloudWatchMetricsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: ' A boolean indicating whether the associated resource sends metrics to Amazon CloudWatch. For the list of available metrics, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/monitoring-cloudwatch.html#waf-metrics">WAF metrics and dimensions</a> in the <i>WAF Developer Guide</i>. '
        MetricName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " A name of the Amazon CloudWatch metric. "
        SampledRequestsEnabled:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " A boolean indicating whether WAF should store a sampling of the web requests that match the rules. You can view the sampled requests through the WAF console. "
      description: " Defines and enables Amazon CloudWatch metrics and web request sample collection. "
    AwsWafv2RuleGroupDetails:
      type: object
      properties:
        Capacity:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: " The web ACL capacity units (WCUs) required for this rule group. "
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " A description of the rule group that helps with identification. "
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " A unique identifier for the rule group. "
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The name of the rule group. You cannot change the name of a rule group after you create it. "
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of the entity. "
        Rules:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2RulesList"
            - description: " The Rule statements used to identify the web requests that you want to allow, block, or count. Each rule includes one top-level statement that WAF uses to identify matching web requests, and parameters that govern how WAF handles them. "
        Scope:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Specifies whether the rule group is for an Amazon CloudFront distribution or for a regional application. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, an AppSync GraphQL API, or an Amazon Cognito user pool. "
        VisibilityConfig:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2VisibilityConfigDetails"
            - description: " Defines and enables Amazon CloudWatch metrics and web request sample collection. "
      description: " Details about an WAFv2 rule group. "
    AwsWafv2RulesActionCaptchaDetails:
      type: object
      properties:
        CustomRequestHandling:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2CustomRequestHandlingDetails"
            - description: " Defines custom handling for the web request, used when the CAPTCHA inspection determines that the request's token is valid and unexpired. For more information, see <a href=\"https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html\">Customizing web requests and responses in WAF</a> in the <i>WAF Developer Guide.</i>. "
      description: " Specifies that WAF should run a CAPTCHA check against the request. "
    AwsWafv2RulesActionCountDetails:
      type: object
      properties:
        CustomRequestHandling:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2CustomRequestHandlingDetails"
            - description: ' Defines custom handling for the web request. For more information, see <a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-custom-request-response.html">Customizing web requests and responses in WAF</a> in the <i>WAF Developer Guide.</i>. '
      description: " Specifies that WAF should count the request. "
    AwsWafv2RulesActionDetails:
      type: object
      properties:
        Allow:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2ActionAllowDetails"
            - description: " Instructs WAF to allow the web request. "
        Block:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2ActionBlockDetails"
            - description: " Instructs WAF to block the web request. "
        Captcha:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2RulesActionCaptchaDetails"
            - description: " Instructs WAF to run a CAPTCHA check against the web request. "
        Count:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2RulesActionCountDetails"
            - description: " Instructs WAF to count the web request and then continue evaluating the request using the remaining rules in the web ACL. "
      description: " The action that WAF should take on a web request when it matches a rule's statement. Settings at the web ACL level can override the rule action setting. "
    AwsWafv2RulesDetails:
      type: object
      properties:
        Action:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2RulesActionDetails"
            - description: " The action that WAF should take on a web request when it matches the rule statement. Settings at the web ACL level can override the rule action setting. "
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The name of the rule. "
        OverrideAction:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The action to use in the place of the action that results from the rule group evaluation. "
        Priority:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: " If you define more than one Rule in a WebACL, WAF evaluates each request against the Rules in order based on the value of <code>Priority</code>. WAF processes rules with lower priority first. The priorities don't need to be consecutive, but they must all be different. "
        VisibilityConfig:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2VisibilityConfigDetails"
            - description: " Defines and enables Amazon CloudWatch metrics and web request sample collection. "
      description: " Provides details about rules in a rule group. A rule identifies web requests that you want to allow, block, or count. Each rule includes one top-level Statement that WAF uses to identify matching web requests, and parameters that govern how WAF handles them. "
    AwsWafv2WebAclActionDetails:
      type: object
      properties:
        Allow:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2ActionAllowDetails"
            - description: " Specifies that WAF should allow requests by default. "
        Block:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2ActionBlockDetails"
            - description: " Specifies that WAF should block requests by default. "
      description: " Specifies the action that Amazon CloudFront or WAF takes when a web request matches the conditions in the rule. "
    AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails:
      type: object
      properties:
        ImmunityTime:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: " The amount of time, in seconds, that a CAPTCHA or challenge timestamp is considered valid by WAF. "
      description: " Used for CAPTCHA and challenge token settings. Determines how long a CAPTCHA or challenge timestamp remains valid after WAF updates it for a successful CAPTCHA or challenge response. "
    AwsWafv2WebAclCaptchaConfigDetails:
      type: object
      properties:
        ImmunityTimeProperty:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2WebAclCaptchaConfigImmunityTimePropertyDetails"
            - description: " Determines how long a CAPTCHA timestamp in the token remains valid after the client successfully solves a CAPTCHA puzzle. "
      description: " Specifies how WAF should handle CAPTCHA evaluations for rules that don't have their own <code>CaptchaConfig</code> settings. "
    AwsWafv2WebAclDetails:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The name of the web ACL. "
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of the web ACL that you want to associate with the resource. "
        ManagedbyFirewallManager:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " Indicates whether this web ACL is managed by Firewall Manager. "
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " A unique identifier for the web ACL. "
        Capacity:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: " The web ACL capacity units (WCUs) currently being used by this web ACL. "
        CaptchaConfig:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2WebAclCaptchaConfigDetails"
            - description: " Specifies how WAF should handle CAPTCHA evaluations for rules that don't have their own <code>CaptchaConfig</code> settings. "
        DefaultAction:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2WebAclActionDetails"
            - description: " The action to perform if none of the Rules contained in the web ACL match. "
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " A description of the web ACL that helps with identification. "
        Rules:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2RulesList"
            - description: " The Rule statements used to identify the web requests that you want to allow, block, or count. Each rule includes one top-level statement that WAF uses to identify matching web requests, and parameters that govern how WAF handles them. "
        VisibilityConfig:
          allOf:
            - $ref: "#/components/schemas/AwsWafv2VisibilityConfigDetails"
            - description: " Defines and enables Amazon CloudWatch metrics and web request sample collection. "
      description: " Details about an WAFv2 web Access Control List (ACL). "
    AwsXrayEncryptionConfigDetails:
      type: object
      properties:
        KeyId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the KMS key that is used for encryption. Provided if <code>Type</code> is <code>KMS</code>.
        Status:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The current status of the encryption configuration. Valid values are <code>ACTIVE</code> or <code>UPDATING</code>.</p> <p>When <code>Status</code> is equal to <code>UPDATING</code>, X-Ray might use both the old and new encryption.</p>
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of encryption. <code>KMS</code> indicates that the encryption uses KMS keys. <code>NONE</code> indicates the default encryption.
      description: Information about the encryption configuration for X-Ray.
    StandardsSubscriptionArns:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
      minItems: 1
      maxItems: 25
    BatchDisableStandardsRequest:
      type: object
      required:
        - StandardsSubscriptionArns
      title: BatchDisableStandardsRequest
      properties:
        StandardsSubscriptionArns:
          allOf:
            - $ref: "#/components/schemas/StandardsSubscriptionArns"
            - description: The ARNs of the standards subscriptions to disable.
    StandardsSubscriptions:
      type: array
      items:
        $ref: "#/components/schemas/StandardsSubscription"
    StandardsSubscriptionRequests:
      type: array
      items:
        $ref: "#/components/schemas/StandardsSubscriptionRequest"
      minItems: 1
      maxItems: 25
    BatchEnableStandardsRequest:
      type: object
      required:
        - StandardsSubscriptionRequests
      title: BatchEnableStandardsRequest
      properties:
        StandardsSubscriptionRequests:
          allOf:
            - $ref: "#/components/schemas/StandardsSubscriptionRequests"
            - description: The list of standards checks to enable.
    BatchGetSecurityControlsRequest:
      type: object
      required:
        - SecurityControlIds
      title: BatchGetSecurityControlsRequest
      properties:
        SecurityControlIds:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: " A list of security controls (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters). The security control ID or Amazon Resource Name (ARN) is the same across standards. "
    SecurityControls:
      type: array
      items:
        $ref: "#/components/schemas/SecurityControl"
    UnprocessedSecurityControls:
      type: array
      items:
        $ref: "#/components/schemas/UnprocessedSecurityControl"
    StandardsControlAssociationIds:
      type: array
      items:
        $ref: "#/components/schemas/StandardsControlAssociationId"
    BatchGetStandardsControlAssociationsRequest:
      type: object
      required:
        - StandardsControlAssociationIds
      title: BatchGetStandardsControlAssociationsRequest
      properties:
        StandardsControlAssociationIds:
          allOf:
            - $ref: "#/components/schemas/StandardsControlAssociationIds"
            - description: " An array with one or more objects that includes a security control (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters) and the Amazon Resource Name (ARN) of a standard. This field is used to query the enablement status of a control in a specified standard. The security control ID or ARN is the same across standards. "
    StandardsControlAssociationDetails:
      type: array
      items:
        $ref: "#/components/schemas/StandardsControlAssociationDetail"
    UnprocessedStandardsControlAssociations:
      type: array
      items:
        $ref: "#/components/schemas/UnprocessedStandardsControlAssociation"
    BatchImportFindingsRequestFindingList:
      type: array
      items:
        $ref: "#/components/schemas/AwsSecurityFinding"
      minItems: 1
      maxItems: 100
    BatchImportFindingsRequest:
      type: object
      required:
        - Findings
      title: BatchImportFindingsRequest
      properties:
        Findings:
          allOf:
            - $ref: "#/components/schemas/BatchImportFindingsRequestFindingList"
            - description: A list of findings to import. To successfully import a finding, it must follow the <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html">Amazon Web Services Security Finding Format</a>. Maximum of 100 findings per request.
    ImportFindingsErrorList:
      type: array
      items:
        $ref: "#/components/schemas/ImportFindingsError"
    NoteUpdate:
      type: object
      required:
        - Text
        - UpdatedBy
      properties:
        Text:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The updated note text.
        UpdatedBy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The principal that updated the note.
      description: The updated note.
    SeverityUpdate:
      type: object
      properties:
        Normalized:
          allOf:
            - $ref: "#/components/schemas/RatioScale"
            - description: <p>The normalized severity for the finding. This attribute is to be deprecated in favor of <code>Label</code>.</p> <p>If you provide <code>Normalized</code> and do not provide <code>Label</code>, <code>Label</code> is set automatically as follows.</p> <ul> <li> <p>0 - <code>INFORMATIONAL</code> </p> </li> <li> <p>1–39 - <code>LOW</code> </p> </li> <li> <p>40–69 - <code>MEDIUM</code> </p> </li> <li> <p>70–89 - <code>HIGH</code> </p> </li> <li> <p>90–100 - <code>CRITICAL</code> </p> </li> </ul>
        Product:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The native severity as defined by the Amazon Web Services service or integrated partner product that generated the finding.
        Label:
          allOf:
            - $ref: "#/components/schemas/SeverityLabel"
            - description: <p>The severity value of the finding. The allowed values are the following.</p> <ul> <li> <p> <code>INFORMATIONAL</code> - No issue was found.</p> </li> <li> <p> <code>LOW</code> - The issue does not require action on its own.</p> </li> <li> <p> <code>MEDIUM</code> - The issue must be addressed but not urgently.</p> </li> <li> <p> <code>HIGH</code> - The issue must be addressed as a priority.</p> </li> <li> <p> <code>CRITICAL</code> - The issue must be remediated immediately to avoid it escalating.</p> </li> </ul>
      description: Updates to the severity information for a finding.
    WorkflowUpdate:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/WorkflowStatus"
            - description: <p>The status of the investigation into the finding. The workflow status is specific to an individual finding. It does not affect the generation of new findings. For example, setting the workflow status to <code>SUPPRESSED</code> or <code>RESOLVED</code> does not prevent a new finding for the same issue.</p> <p>The allowed values are the following.</p> <ul> <li> <p> <code>NEW</code> - The initial state of a finding, before it is reviewed.</p> <p>Security Hub also resets <code>WorkFlowStatus</code> from <code>NOTIFIED</code> or <code>RESOLVED</code> to <code>NEW</code> in the following cases:</p> <ul> <li> <p>The record state changes from <code>ARCHIVED</code> to <code>ACTIVE</code>.</p> </li> <li> <p>The compliance status changes from <code>PASSED</code> to either <code>WARNING</code>, <code>FAILED</code>, or <code>NOT_AVAILABLE</code>.</p> </li> </ul> </li> <li> <p> <code>NOTIFIED</code> - Indicates that you notified the resource owner about the security issue. Used when the initial reviewer is not the resource owner, and needs intervention from the resource owner.</p> </li> <li> <p> <code>RESOLVED</code> - The finding was reviewed and remediated and is now considered resolved.</p> </li> <li> <p> <code>SUPPRESSED</code> - Indicates that you reviewed the finding and do not believe that any action is needed. The finding is no longer updated.</p> </li> </ul>
      description: Used to update information about the investigation into the finding.
    BatchUpdateFindingsRequest:
      type: object
      required:
        - FindingIdentifiers
      title: BatchUpdateFindingsRequest
      properties:
        FindingIdentifiers:
          allOf:
            - $ref: "#/components/schemas/AwsSecurityFindingIdentifierList"
            - description: <p>The list of findings to update. <code>BatchUpdateFindings</code> can be used to update up to 100 findings at a time.</p> <p>For each finding, the list provides the finding identifier and the ARN of the finding provider.</p>
        Note:
          $ref: "#/components/schemas/NoteUpdate"
        Severity:
          allOf:
            - $ref: "#/components/schemas/SeverityUpdate"
            - description: Used to update the finding severity.
        VerificationState:
          allOf:
            - $ref: "#/components/schemas/VerificationState"
            - description: <p>Indicates the veracity of a finding.</p> <p>The available values for <code>VerificationState</code> are as follows.</p> <ul> <li> <p> <code>UNKNOWN</code> – The default disposition of a security finding</p> </li> <li> <p> <code>TRUE_POSITIVE</code> – The security finding is confirmed</p> </li> <li> <p> <code>FALSE_POSITIVE</code> – The security finding was determined to be a false alarm</p> </li> <li> <p> <code>BENIGN_POSITIVE</code> – A special case of <code>TRUE_POSITIVE</code> where the finding doesn't pose any threat, is expected, or both</p> </li> </ul>
        Confidence:
          allOf:
            - $ref: "#/components/schemas/RatioScale"
            - description: <p>The updated value for the finding confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify.</p> <p>Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.</p>
        Criticality:
          allOf:
            - $ref: "#/components/schemas/RatioScale"
            - description: <p>The updated value for the level of importance assigned to the resources associated with the findings.</p> <p>A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources. </p>
        Types:
          allOf:
            - $ref: "#/components/schemas/TypeList"
            - description: <p>One or more finding types in the format of namespace/category/classifier that classify a finding.</p> <p>Valid namespace values are as follows.</p> <ul> <li> <p>Software and Configuration Checks</p> </li> <li> <p>TTPs</p> </li> <li> <p>Effects</p> </li> <li> <p>Unusual Behaviors</p> </li> <li> <p>Sensitive Data Identifications </p> </li> </ul>
        UserDefinedFields:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding.
        Workflow:
          allOf:
            - $ref: "#/components/schemas/WorkflowUpdate"
            - description: <p>Used to update the workflow status of a finding.</p> <p>The workflow status indicates the progress of the investigation into the finding. </p>
        RelatedFindings:
          allOf:
            - $ref: "#/components/schemas/RelatedFindingList"
            - description: A list of findings that are related to the updated findings.
    BatchUpdateFindingsUnprocessedFindingsList:
      type: array
      items:
        $ref: "#/components/schemas/BatchUpdateFindingsUnprocessedFinding"
    BatchUpdateFindingsUnprocessedFinding:
      type: object
      required:
        - FindingIdentifier
        - ErrorCode
        - ErrorMessage
      properties:
        FindingIdentifier:
          allOf:
            - $ref: "#/components/schemas/AwsSecurityFindingIdentifier"
            - description: The identifier of the finding that was not updated.
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The code associated with the error. Possible values are:</p> <ul> <li> <p> <code>ConcurrentUpdateError</code> - Another request attempted to update the finding while this request was being processed. This error may also occur if you call <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateFindings.html"> <code>BatchUpdateFindings</code> </a> and <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchImportFindings.html"> <code>BatchImportFindings</code> </a> at the same time.</p> </li> <li> <p> <code>DuplicatedFindingIdentifier</code> - The request included two or more findings with the same <code>FindingIdentifier</code>.</p> </li> <li> <p> <code>FindingNotFound</code> - The <code>FindingIdentifier</code> included in the request did not match an existing finding.</p> </li> <li> <p> <code>FindingSizeExceeded</code> - The finding size was greater than the permissible value of 240 KB.</p> </li> <li> <p> <code>InternalFailure</code> - An internal service failure occurred when updating the finding.</p> </li> <li> <p> <code>InvalidInput</code> - The finding update contained an invalid value that did not satisfy the <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html">Amazon Web Services Security Finding Format</a> syntax.</p> </li> </ul>
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The message associated with the error. Possible values are:</p> <ul> <li> <p> <code>Concurrent finding updates detected</code> </p> </li> <li> <p> <code>Finding Identifier is duplicated</code> </p> </li> <li> <p> <code>Finding Not Found</code> </p> </li> <li> <p> <code>Finding size exceeded 240 KB</code> </p> </li> <li> <p> <code>Internal service failure</code> </p> </li> <li> <p> <code>Invalid Input</code> </p> </li> </ul>
      description: A finding from a <code>BatchUpdateFindings</code> request that Security Hub was unable to update.
    StandardsControlAssociationUpdates:
      type: array
      items:
        $ref: "#/components/schemas/StandardsControlAssociationUpdate"
    BatchUpdateStandardsControlAssociationsRequest:
      type: object
      required:
        - StandardsControlAssociationUpdates
      title: BatchUpdateStandardsControlAssociationsRequest
      properties:
        StandardsControlAssociationUpdates:
          allOf:
            - $ref: "#/components/schemas/StandardsControlAssociationUpdates"
            - description: " Updates the enablement status of a security control in a specified standard. "
    UnprocessedStandardsControlAssociationUpdates:
      type: array
      items:
        $ref: "#/components/schemas/UnprocessedStandardsControlAssociationUpdate"
    BooleanFilter:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: The value of the boolean.
      description: Boolean filter for querying findings.
    CategoryList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    Cell:
      type: object
      properties:
        Column:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The column number of the column that contains the data. For a Microsoft Excel workbook, the column number corresponds to the alphabetical column identifiers. For example, a value of 1 for Column corresponds to the A column in the workbook.
        Row:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The row number of the row that contains the data.
        ColumnName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the column that contains the data.
        CellReference:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: For a Microsoft Excel workbook, provides the location of the cell, as an absolute cell reference, that contains the data. For example, Sheet2!C5 for cell C5 on Sheet2.
      description: An occurrence of sensitive data detected in a Microsoft Excel workbook, comma-separated value (CSV) file, or tab-separated value (TSV) file.
    Cells:
      type: array
      items:
        $ref: "#/components/schemas/Cell"
    CidrBlockAssociation:
      type: object
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The association ID for the IPv4 CIDR block.
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IPv4 CIDR block.
        CidrBlockState:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Information about the state of the IPv4 CIDR block.
      description: An IPv4 CIDR block association.
    ClassificationStatus:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The code that represents the status of the sensitive data detection.
        Reason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A longer description of the current status of the sensitive data detection.
      description: Provides details about the current status of the sensitive data detection.
    SensitiveDataResultList:
      type: array
      items:
        $ref: "#/components/schemas/SensitiveDataResult"
    CustomDataIdentifiersResult:
      type: object
      properties:
        Detections:
          allOf:
            - $ref: "#/components/schemas/CustomDataIdentifiersDetectionsList"
            - description: The list of detected instances of sensitive data.
        TotalCount:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The total number of occurrences of sensitive data.
      description: Contains an instance of sensitive data that was detected by a customer-defined identifier.
    ClassificationResult:
      type: object
      properties:
        MimeType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of content that the finding applies to.
        SizeClassified:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The total size in bytes of the affected data.
        AdditionalOccurrences:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether there are additional occurrences of sensitive data that are not included in the finding. This occurs when the number of occurrences exceeds the maximum that can be included.
        Status:
          allOf:
            - $ref: "#/components/schemas/ClassificationStatus"
            - description: The current status of the sensitive data detection.
        SensitiveData:
          allOf:
            - $ref: "#/components/schemas/SensitiveDataResultList"
            - description: Provides details about sensitive data that was identified based on built-in configuration.
        CustomDataIdentifiers:
          allOf:
            - $ref: "#/components/schemas/CustomDataIdentifiersResult"
            - description: Provides details about sensitive data that was identified based on customer-defined configuration.
      description: Details about the sensitive data that was detected on the resource.
    ComplianceStatus:
      type: string
      enum:
        - PASSED
        - WARNING
        - FAILED
        - NOT_AVAILABLE
    RelatedRequirementsList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    StatusReasonsList:
      type: array
      items:
        $ref: "#/components/schemas/StatusReason"
    VolumeMountList:
      type: array
      items:
        $ref: "#/components/schemas/VolumeMount"
    ContainerDetails:
      type: object
      properties:
        ContainerRuntime:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The runtime of the container. "
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the container related to a finding.
        ImageId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the container image related to a finding.
        ImageName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the container image related to a finding.
        LaunchedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the container started.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        VolumeMounts:
          allOf:
            - $ref: "#/components/schemas/VolumeMountList"
            - description: "Provides information about the mounting of a volume in a container. "
        Privileged:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: "When this parameter is <code>true</code>, the container is given elevated privileges on the host container instance (similar to the root user). "
      description: Container details related to a finding.
    ControlFindingGenerator:
      type: string
      enum:
        - STANDARD_CONTROL
        - SECURITY_CONTROL
    ControlStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    CreateActionTargetRequest:
      type: object
      required:
        - Name
        - Description
        - Id
      title: CreateActionTargetRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the custom action target. Can contain up to 20 characters.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The description for the custom action target.
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID for the custom action target. Can contain up to 20 alphanumeric characters.
    CreateFindingAggregatorRequest:
      type: object
      required:
        - RegionLinkingMode
      title: CreateFindingAggregatorRequest
      properties:
        RegionLinkingMode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.</p> <p>The selected option also determines how to use the Regions provided in the Regions list.</p> <p>The options are as follows:</p> <ul> <li> <p> <code>ALL_REGIONS</code> - Indicates to aggregate findings from all of the Regions where Security Hub is enabled. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. </p> </li> <li> <p> <code>ALL_REGIONS_EXCEPT_SPECIFIED</code> - Indicates to aggregate findings from all of the Regions where Security Hub is enabled, except for the Regions listed in the <code>Regions</code> parameter. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. </p> </li> <li> <p> <code>SPECIFIED_REGIONS</code> - Indicates to aggregate findings only from the Regions listed in the <code>Regions</code> parameter. Security Hub does not automatically aggregate findings from new Regions. </p> </li> </ul>
        Regions:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: <p>If <code>RegionLinkingMode</code> is <code>ALL_REGIONS_EXCEPT_SPECIFIED</code>, then this is a space-separated list of Regions that do not aggregate findings to the aggregation Region.</p> <p>If <code>RegionLinkingMode</code> is <code>SPECIFIED_REGIONS</code>, then this is a space-separated list of Regions that do aggregate findings to the aggregation Region. </p>
    CreateInsightRequest:
      type: object
      required:
        - Name
        - Filters
        - GroupByAttribute
      title: CreateInsightRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the custom insight to create.
        Filters:
          allOf:
            - $ref: "#/components/schemas/AwsSecurityFindingFilters"
            - description: One or more attributes used to filter the findings included in the insight. The insight only includes findings that match the criteria defined in the filters.
        GroupByAttribute:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The attribute used to group the findings for the insight. The grouping attribute identifies the type of item that the insight applies to. For example, if an insight is grouped by resource identifier, then the insight produces a list of resource identifiers.
    CreateMembersRequest:
      type: object
      required:
        - AccountDetails
      title: CreateMembersRequest
      properties:
        AccountDetails:
          allOf:
            - $ref: "#/components/schemas/AccountDetailsList"
            - description: The list of accounts to associate with the Security Hub administrator account. For each account, the list includes the account ID and optionally the email address.
    ResultList:
      type: array
      items:
        $ref: "#/components/schemas/Result"
    CrossAccountMaxResults:
      type: integer
      minimum: 1
      maximum: 50
    Occurrences:
      type: object
      properties:
        LineRanges:
          allOf:
            - $ref: "#/components/schemas/Ranges"
            - description: Occurrences of sensitive data detected in a non-binary text file or a Microsoft Word file. Non-binary text files include files such as HTML, XML, JSON, and TXT files.
        OffsetRanges:
          allOf:
            - $ref: "#/components/schemas/Ranges"
            - description: Occurrences of sensitive data detected in a binary text file.
        Pages:
          allOf:
            - $ref: "#/components/schemas/Pages"
            - description: Occurrences of sensitive data in an Adobe Portable Document Format (PDF) file.
        Records:
          allOf:
            - $ref: "#/components/schemas/Records"
            - description: Occurrences of sensitive data in an Apache Avro object container or an Apache Parquet file.
        Cells:
          allOf:
            - $ref: "#/components/schemas/Cells"
            - description: Occurrences of sensitive data detected in Microsoft Excel workbooks, comma-separated value (CSV) files, or tab-separated value (TSV) files.
      description: The detected occurrences of sensitive data.
    CustomDataIdentifiersDetections:
      type: object
      properties:
        Count:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The total number of occurrences of sensitive data that were detected.
        Arn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the custom identifier that was used to detect the sensitive data.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: he name of the custom identifier that detected the sensitive data.
        Occurrences:
          allOf:
            - $ref: "#/components/schemas/Occurrences"
            - description: Details about the sensitive data that was detected.
      description: The list of detected instances of sensitive data.
    CustomDataIdentifiersDetectionsList:
      type: array
      items:
        $ref: "#/components/schemas/CustomDataIdentifiersDetections"
    Cvss:
      type: object
      properties:
        Version:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of CVSS for the CVSS score.
        BaseScore:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The base CVSS score.
        BaseVector:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The base scoring vector for the CVSS score.
        Source:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The origin of the original CVSS score and vector.
        Adjustments:
          allOf:
            - $ref: "#/components/schemas/AdjustmentList"
            - description: Adjustments to the CVSS metrics.
      description: CVSS scores from the advisory related to the vulnerability.
    CvssList:
      type: array
      items:
        $ref: "#/components/schemas/Cvss"
    DataClassificationDetails:
      type: object
      properties:
        DetailedResultsLocation:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path to the folder or file that contains the sensitive data.
        Result:
          allOf:
            - $ref: "#/components/schemas/ClassificationResult"
            - description: The details about the sensitive data that was detected on the resource.
      description: Provides details about sensitive data that was detected on a resource.
    DateRange:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: A date range value for the date filter.
        Unit:
          allOf:
            - $ref: "#/components/schemas/DateRangeUnit"
            - description: A date range unit for the date filter.
      description: A date range for the date filter.
    DateFilter:
      type: object
      properties:
        Start:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>A timestamp that provides the start date for the date filter.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
        End:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>A timestamp that provides the end date for the date filter.</p> <p>A correctly formatted example is <code>2020-05-21T20:16:34.724Z</code>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For more information, see <a href="https://www.rfc-editor.org/rfc/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>.</p>
        DateRange:
          allOf:
            - $ref: "#/components/schemas/DateRange"
            - description: A date range for the date filter.
      description: A date filter for querying findings.
    DateRangeUnit:
      type: string
      enum:
        - DAYS
    DeclineInvitationsRequest:
      type: object
      required:
        - AccountIds
      title: DeclineInvitationsRequest
      properties:
        AccountIds:
          allOf:
            - $ref: "#/components/schemas/AccountIdList"
            - description: The list of prospective member account IDs for which to decline an invitation.
    DeleteActionTargetRequest:
      type: object
      title: DeleteActionTargetRequest
      properties: {}
    DeleteFindingAggregatorRequest:
      type: object
      title: DeleteFindingAggregatorRequest
      properties: {}
    DeleteInsightRequest:
      type: object
      title: DeleteInsightRequest
      properties: {}
    DeleteInvitationsRequest:
      type: object
      required:
        - AccountIds
      title: DeleteInvitationsRequest
      properties:
        AccountIds:
          allOf:
            - $ref: "#/components/schemas/AccountIdList"
            - description: The list of member account IDs that received the invitations you want to delete.
    DeleteMembersRequest:
      type: object
      required:
        - AccountIds
      title: DeleteMembersRequest
      properties:
        AccountIds:
          allOf:
            - $ref: "#/components/schemas/AccountIdList"
            - description: The list of account IDs for the member accounts to delete.
    NextToken:
      type: string
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    DescribeActionTargetsRequest:
      type: object
      title: DescribeActionTargetsRequest
      properties:
        ActionTargetArns:
          allOf:
            - $ref: "#/components/schemas/ArnList"
            - description: A list of custom action target ARNs for the custom action targets to retrieve.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: <p>The token that is required for pagination. On your first call to the <code>DescribeActionTargets</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to return.
    DescribeHubRequest:
      type: object
      title: DescribeHubRequest
      properties: {}
    DescribeOrganizationConfigurationRequest:
      type: object
      title: DescribeOrganizationConfigurationRequest
      properties: {}
    DescribeProductsRequest:
      type: object
      title: DescribeProductsRequest
      properties: {}
    ProductsList:
      type: array
      items:
        $ref: "#/components/schemas/Product"
    DescribeStandardsControlsRequest:
      type: object
      title: DescribeStandardsControlsRequest
      properties: {}
    StandardsControls:
      type: array
      items:
        $ref: "#/components/schemas/StandardsControl"
    DescribeStandardsRequest:
      type: object
      title: DescribeStandardsRequest
      properties: {}
    Standards:
      type: array
      items:
        $ref: "#/components/schemas/Standard"
    DisableImportFindingsForProductRequest:
      type: object
      title: DisableImportFindingsForProductRequest
      properties: {}
    DisableOrganizationAdminAccountRequest:
      type: object
      required:
        - AdminAccountId
      title: DisableOrganizationAdminAccountRequest
      properties:
        AdminAccountId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account identifier of the Security Hub administrator account.
    DisableSecurityHubRequest:
      type: object
      title: DisableSecurityHubRequest
      properties: {}
    DisassociateFromAdministratorAccountRequest:
      type: object
      title: DisassociateFromAdministratorAccountRequest
      properties: {}
    DisassociateFromMasterAccountRequest:
      type: object
      title: DisassociateFromMasterAccountRequest
      properties: {}
    DisassociateMembersRequest:
      type: object
      required:
        - AccountIds
      title: DisassociateMembersRequest
      properties:
        AccountIds:
          allOf:
            - $ref: "#/components/schemas/AccountIdList"
            - description: The account IDs of the member accounts to disassociate from the administrator account.
    EnableImportFindingsForProductRequest:
      type: object
      required:
        - ProductArn
      title: EnableImportFindingsForProductRequest
      properties:
        ProductArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the product to enable the integration for.
    EnableOrganizationAdminAccountRequest:
      type: object
      required:
        - AdminAccountId
      title: EnableOrganizationAdminAccountRequest
      properties:
        AdminAccountId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account identifier of the account to designate as the Security Hub administrator account.
    TagMap:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    EnableSecurityHubRequest:
      type: object
      title: EnableSecurityHubRequest
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags to add to the hub resource when you enable Security Hub.
        EnableDefaultStandards:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Whether to enable the security standards that Security Hub has designated as automatically enabled. If you do not provide a value for <code>EnableDefaultStandards</code>, it is set to <code>true</code>. To not enable the automatically enabled standards, set <code>EnableDefaultStandards</code> to <code>false</code>.
        ControlFindingGenerator:
          allOf:
            - $ref: "#/components/schemas/ControlFindingGenerator"
            - description: <p>This field, used when enabling Security Hub, specifies whether the calling account has consolidated control findings turned on. If the value for this field is set to <code>SECURITY_CONTROL</code>, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.</p> <p>If the value for this field is set to <code>STANDARD_CONTROL</code>, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.</p> <p>The value for this field in a member account matches the value in the administrator account. For accounts that aren't part of an organization, the default value of this field is <code>SECURITY_CONTROL</code> if you enabled Security Hub on or after February 23, 2023.</p>
    FilePaths:
      type: object
      properties:
        FilePath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Path to the infected or suspicious file on the resource it was detected on. "
        FileName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the infected or suspicious file corresponding to the hash. "
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Amazon Resource Name (ARN) of the resource on which the threat was detected. "
        Hash:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The hash value for the infected or suspicious file. "
      description: "Provides information about the file paths that were affected by the threat. "
    FilePathList:
      type: array
      items:
        $ref: "#/components/schemas/FilePaths"
    FindingAggregator:
      type: object
      properties:
        FindingAggregatorArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the finding aggregator. You use the finding aggregator ARN to retrieve details for, update, and delete the finding aggregator.
      description: A finding aggregator. A finding aggregator contains the configuration for finding aggregation.
    FindingAggregatorList:
      type: array
      items:
        $ref: "#/components/schemas/FindingAggregator"
    FindingProviderSeverity:
      type: object
      properties:
        Label:
          allOf:
            - $ref: "#/components/schemas/SeverityLabel"
            - description: The severity label assigned to the finding by the finding provider.
        Original:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The finding provider's original value for the severity.
      description: The severity assigned to the finding by the finding provider.
    FirewallPolicyStatefulRuleGroupReferencesList:
      type: array
      items:
        $ref: "#/components/schemas/FirewallPolicyStatefulRuleGroupReferencesDetails"
    FirewallPolicyStatelessCustomActionsList:
      type: array
      items:
        $ref: "#/components/schemas/FirewallPolicyStatelessCustomActionsDetails"
    FirewallPolicyStatelessRuleGroupReferencesList:
      type: array
      items:
        $ref: "#/components/schemas/FirewallPolicyStatelessRuleGroupReferencesDetails"
    FirewallPolicyStatefulRuleGroupReferencesDetails:
      type: object
      properties:
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the stateful rule group.
      description: A stateful rule group that is used by the firewall policy.
    StatelessCustomActionDefinition:
      type: object
      properties:
        PublishMetricAction:
          allOf:
            - $ref: "#/components/schemas/StatelessCustomPublishMetricAction"
            - description: Information about metrics to publish to CloudWatch.
      description: The definition of a custom action that can be used for stateless packet handling.
    FirewallPolicyStatelessCustomActionsDetails:
      type: object
      properties:
        ActionDefinition:
          allOf:
            - $ref: "#/components/schemas/StatelessCustomActionDefinition"
            - description: The definition of the custom action.
        ActionName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the custom action.
      description: A custom action that can be used for stateless packet handling.
    FirewallPolicyStatelessRuleGroupReferencesDetails:
      type: object
      properties:
        Priority:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The order in which to run the stateless rule group.
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the stateless rule group.
      description: A stateless rule group that is used by the firewall policy.
    GetAdministratorAccountRequest:
      type: object
      title: GetAdministratorAccountRequest
      properties: {}
    Invitation:
      type: object
      properties:
        AccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: The account ID of the Security Hub administrator account that the invitation was sent from.
        InvitationId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ID of the invitation sent to the member account.
        InvitedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The timestamp of when the invitation was sent.
        MemberStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The current status of the association between the member and administrator accounts.
      description: Details about an invitation.
    GetEnabledStandardsRequest:
      type: object
      title: GetEnabledStandardsRequest
      properties:
        StandardsSubscriptionArns:
          allOf:
            - $ref: "#/components/schemas/StandardsSubscriptionArns"
            - description: The list of the standards subscription ARNs for the standards to retrieve.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: <p>The token that is required for pagination. On your first call to the <code>GetEnabledStandards</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of results to return in the response.
    GetFindingAggregatorRequest:
      type: object
      title: GetFindingAggregatorRequest
      properties: {}
    SortCriteria:
      type: array
      items:
        $ref: "#/components/schemas/SortCriterion"
    GetFindingsRequest:
      type: object
      title: GetFindingsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/AwsSecurityFindingFilters"
            - description: <p>The finding attributes used to define a condition to filter the returned findings.</p> <p>You can filter by up to 10 finding attributes. For each attribute, you can provide up to 20 filter values.</p> <p>Note that in the available filter fields, <code>WorkflowState</code> is deprecated. To search for a finding based on its workflow status, use <code>WorkflowStatus</code>.</p>
        SortCriteria:
          allOf:
            - $ref: "#/components/schemas/SortCriteria"
            - description: The finding attributes used to sort the list of returned findings.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: <p>The token that is required for pagination. On your first call to the <code>GetFindings</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of findings to return.
    GetInsightResultsRequest:
      type: object
      title: GetInsightResultsRequest
      properties: {}
    InsightResults:
      type: object
      required:
        - InsightArn
        - GroupByAttribute
        - ResultValues
      properties:
        InsightArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the insight whose results are returned by the <code>GetInsightResults</code> operation.
        GroupByAttribute:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The attribute that the findings are grouped by for the insight whose results are returned by the <code>GetInsightResults</code> operation.
        ResultValues:
          allOf:
            - $ref: "#/components/schemas/InsightResultValueList"
            - description: The list of insight result values returned by the <code>GetInsightResults</code> operation.
      description: The insight results returned by the <code>GetInsightResults</code> operation.
    GetInsightsRequest:
      type: object
      title: GetInsightsRequest
      properties:
        InsightArns:
          allOf:
            - $ref: "#/components/schemas/ArnList"
            - description: The ARNs of the insights to describe. If you do not provide any insight ARNs, then <code>GetInsights</code> returns all of your custom insights. It does not return any managed insights.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: <p>The token that is required for pagination. On your first call to the <code>GetInsights</code> operation, set the value of this parameter to <code>NULL</code>.</p> <p>For subsequent calls to the operation, to continue listing data, set the value of this parameter to the value returned from the previous response.</p>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResults"
            - description: The maximum number of items to return in the response.
    InsightList:
      type: array
      items:
        $ref: "#/components/schemas/Insight"
    GetInvitationsCountRequest:
      type: object
      title: GetInvitationsCountRequest
      properties: {}
    GetMasterAccountRequest:
      type: object
      title: GetMasterAccountRequest
      properties: {}
    GetMembersRequest:
      type: object
      required:
        - AccountIds
      title: GetMembersRequest
      properties:
        AccountIds:
          allOf:
            - $ref: "#/components/schemas/AccountIdList"
            - description: "The list of account IDs for the Security Hub member accounts to return the details for. "
    MemberList:
      type: array
      items:
        $ref: "#/components/schemas/Member"
    ImportFindingsError:
      type: object
      required:
        - Id
        - ErrorCode
        - ErrorMessage
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the finding that could not be updated.
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The code of the error returned by the <code>BatchImportFindings</code> operation.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The message of the error returned by the <code>BatchImportFindings</code> operation.
      description: The list of the findings that cannot be imported. For each finding, the list provides the error.
    Insight:
      type: object
      required:
        - InsightArn
        - Name
        - Filters
        - GroupByAttribute
      properties:
        InsightArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of a Security Hub insight.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of a Security Hub insight.
        Filters:
          allOf:
            - $ref: "#/components/schemas/AwsSecurityFindingFilters"
            - description: One or more attributes used to filter the findings included in the insight. The insight only includes findings that match the criteria defined in the filters.
        GroupByAttribute:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The grouping attribute for the insight's findings. Indicates how to group the matching findings, and identifies the type of item that the insight applies to. For example, if an insight is grouped by resource identifier, then the insight produces a list of resource identifiers.
      description: Contains information about a Security Hub insight.
    InsightResultValue:
      type: object
      required:
        - GroupByAttributeValue
        - Count
      properties:
        GroupByAttributeValue:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of the attribute that the findings are grouped by for the insight whose results are returned by the <code>GetInsightResults</code> operation.
        Count:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of findings returned for each <code>GroupByAttributeValue</code>.
      description: The insight result values returned by the <code>GetInsightResults</code> operation.
    InsightResultValueList:
      type: array
      items:
        $ref: "#/components/schemas/InsightResultValue"
    IntegrationType:
      type: string
      enum:
        - SEND_FINDINGS_TO_SECURITY_HUB
        - RECEIVE_FINDINGS_FROM_SECURITY_HUB
        - UPDATE_FINDINGS_IN_SECURITY_HUB
    IntegrationTypeList:
      type: array
      items:
        $ref: "#/components/schemas/IntegrationType"
    Timestamp:
      type: string
      format: date-time
    InvitationList:
      type: array
      items:
        $ref: "#/components/schemas/Invitation"
    InviteMembersRequest:
      type: object
      required:
        - AccountIds
      title: InviteMembersRequest
      properties:
        AccountIds:
          allOf:
            - $ref: "#/components/schemas/AccountIdList"
            - description: "The list of account IDs of the Amazon Web Services accounts to invite to Security Hub as members. "
    IpFilter:
      type: object
      properties:
        Cidr:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A finding's CIDR value.
      description: The IP filter for querying findings.
    Ipv6CidrBlockAssociation:
      type: object
      properties:
        AssociationId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The association ID for the IPv6 CIDR block.
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The IPv6 CIDR block.
        CidrBlockState:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Information about the state of the CIDR block. Valid values are as follows:</p> <ul> <li> <p> <code>associating</code> </p> </li> <li> <p> <code>associated</code> </p> </li> <li> <p> <code>disassociating</code> </p> </li> <li> <p> <code>disassociated</code> </p> </li> <li> <p> <code>failed</code> </p> </li> <li> <p> <code>failing</code> </p> </li> </ul>
      description: An IPV6 CIDR block association.
    KeywordFilter:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A value for the keyword.
      description: A keyword filter for querying findings.
    ListEnabledProductsForImportRequest:
      type: object
      title: ListEnabledProductsForImportRequest
      properties: {}
    ProductSubscriptionArnList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    ListFindingAggregatorsRequest:
      type: object
      title: ListFindingAggregatorsRequest
      properties: {}
    ListInvitationsRequest:
      type: object
      title: ListInvitationsRequest
      properties: {}
    ListMembersRequest:
      type: object
      title: ListMembersRequest
      properties: {}
    ListOrganizationAdminAccountsRequest:
      type: object
      title: ListOrganizationAdminAccountsRequest
      properties: {}
    ListSecurityControlDefinitionsRequest:
      type: object
      title: ListSecurityControlDefinitionsRequest
      properties: {}
    SecurityControlDefinitions:
      type: array
      items:
        $ref: "#/components/schemas/SecurityControlDefinition"
    ListStandardsControlAssociationsRequest:
      type: object
      title: ListStandardsControlAssociationsRequest
      properties: {}
    StandardsControlAssociationSummaries:
      type: array
      items:
        $ref: "#/components/schemas/StandardsControlAssociationSummary"
    ResourceArn:
      type: string
      pattern: ^arn:aws:securityhub:.*
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    MalwareType:
      type: string
      enum:
        - ADWARE
        - BLENDED_THREAT
        - BOTNET_AGENT
        - COIN_MINER
        - EXPLOIT_KIT
        - KEYLOGGER
        - MACRO
        - POTENTIALLY_UNWANTED
        - SPYWARE
        - RANSOMWARE
        - REMOTE_ACCESS
        - ROOTKIT
        - TROJAN
        - VIRUS
        - WORM
    MalwareState:
      type: string
      enum:
        - OBSERVED
        - REMOVAL_FAILED
        - REMOVED
    Malware:
      type: object
      required:
        - Name
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the malware that was observed.
        Type:
          allOf:
            - $ref: "#/components/schemas/MalwareType"
            - description: The type of the malware that was observed.
        Path:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The file system path of the malware that was observed.
        State:
          allOf:
            - $ref: "#/components/schemas/MalwareState"
            - description: The state of the malware that was observed.
      description: A list of malware related to a finding.
    MapFilterComparison:
      type: string
      enum:
        - EQUALS
        - NOT_EQUALS
    MapFilter:
      type: object
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The key of the map filter. For example, for <code>ResourceTags</code>, <code>Key</code> identifies the name of the tag. For <code>UserDefinedFields</code>, <code>Key</code> is the name of the field.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value for the key in the map filter. Filter values are case sensitive. For example, one of the values for a tag called <code>Department</code> might be <code>Security</code>. If you provide <code>security</code> as the filter value, then there is no match.
        Comparison:
          allOf:
            - $ref: "#/components/schemas/MapFilterComparison"
            - description: <p>The condition to apply to the key value when querying for findings with a map filter.</p> <p>To search for values that exactly match the filter value, use <code>EQUALS</code>. For example, for the <code>ResourceTags</code> field, the filter <code>Department EQUALS Security</code> matches findings that have the value <code>Security</code> for the tag <code>Department</code>.</p> <p>To search for values other than the filter value, use <code>NOT_EQUALS</code>. For example, for the <code>ResourceTags</code> field, the filter <code>Department NOT_EQUALS Finance</code> matches findings that do not have the value <code>Finance</code> for the tag <code>Department</code>.</p> <p> <code>EQUALS</code> filters on the same field are joined by <code>OR</code>. A finding matches if it matches any one of those filters.</p> <p> <code>NOT_EQUALS</code> filters on the same field are joined by <code>AND</code>. A finding matches only if it matches all of those filters.</p> <p>You cannot have both an <code>EQUALS</code> filter and a <code>NOT_EQUALS</code> filter on the same field.</p>
      description: A map filter for querying findings. Each map filter provides the field to check, the value to look for, and the comparison operator.
    Member:
      type: object
      properties:
        AccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: The Amazon Web Services account ID of the member account.
        Email:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The email address of the member account.
        MasterId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - deprecated: true
              description: <p>This is replaced by <code>AdministratorID</code>.</p> <p>The Amazon Web Services account ID of the Security Hub administrator account associated with this member account.</p>This field is deprecated, use AdministratorId instead.
        AdministratorId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The Amazon Web Services account ID of the Security Hub administrator account associated with this member account.
        MemberStatus:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The status of the relationship between the member account and its administrator account. </p> <p>The status can have one of the following values:</p> <ul> <li> <p> <code>Created</code> - Indicates that the administrator account added the member account, but has not yet invited the member account.</p> </li> <li> <p> <code>Invited</code> - Indicates that the administrator account invited the member account. The member account has not yet responded to the invitation.</p> </li> <li> <p> <code>Enabled</code> - Indicates that the member account is currently active. For manually invited member accounts, indicates that the member account accepted the invitation.</p> </li> <li> <p> <code>Removed</code> - Indicates that the administrator account disassociated the member account.</p> </li> <li> <p> <code>Resigned</code> - Indicates that the member account disassociated themselves from the administrator account.</p> </li> <li> <p> <code>Deleted</code> - Indicates that the administrator account deleted the member account.</p> </li> <li> <p> <code>AccountSuspended</code> - Indicates that an organization account was suspended from Amazon Web Services at the same time that the administrator account tried to enable the organization account as a member account.</p> </li> </ul>
        InvitedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: A timestamp for the date and time when the invitation was sent to the member account.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The timestamp for the date and time when the member account was updated.
      description: The details about a member account.
    NetworkDirection:
      type: string
      enum:
        - IN
        - OUT
    PortRange:
      type: object
      properties:
        Begin:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The first port in the port range.
        End:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The last port in the port range.
      description: A range of ports.
    NetworkPathComponentDetails:
      type: object
      properties:
        Address:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: The IP addresses of the destination.
        PortRanges:
          allOf:
            - $ref: "#/components/schemas/PortRangeList"
            - description: A list of port ranges for the destination.
      description: Information about the destination of the next component in the network path.
    NetworkHeader:
      type: object
      properties:
        Protocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The protocol used for the component.
        Destination:
          allOf:
            - $ref: "#/components/schemas/NetworkPathComponentDetails"
            - description: Information about the destination of the component.
        Source:
          allOf:
            - $ref: "#/components/schemas/NetworkPathComponentDetails"
            - description: Information about the origin of the component.
      description: Details about a network path component that occurs before or after the current component.
    NetworkPathComponent:
      type: object
      properties:
        ComponentId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of a component in the network path.
        ComponentType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of component.
        Egress:
          allOf:
            - $ref: "#/components/schemas/NetworkHeader"
            - description: Information about the component that comes after the current component in the network path.
        Ingress:
          allOf:
            - $ref: "#/components/schemas/NetworkHeader"
            - description: Information about the component that comes before the current node in the network path.
      description: Information about a network path component.
    PortRangeList:
      type: array
      items:
        $ref: "#/components/schemas/PortRange"
    NumberFilter:
      type: object
      properties:
        Gte:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: "The greater-than-equal condition to be applied to a single field when querying for findings. "
        Lte:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: "The less-than-equal condition to be applied to a single field when querying for findings. "
        Eq:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The equal-to condition to be applied to a single field when querying for findings.
      description: A number filter for querying findings.
    Ranges:
      type: array
      items:
        $ref: "#/components/schemas/Range"
    Pages:
      type: array
      items:
        $ref: "#/components/schemas/Page"
    Records:
      type: array
      items:
        $ref: "#/components/schemas/Record"
    Range:
      type: object
      properties:
        Start:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The number of lines (for a line range) or characters (for an offset range) from the beginning of the file to the end of the sensitive data.
        End:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The number of lines (for a line range) or characters (for an offset range) from the beginning of the file to the end of the sensitive data.
        StartColumn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: In the line where the sensitive data starts, the column within the line where the sensitive data starts.
      description: Identifies where the sensitive data begins and ends.
    Page:
      type: object
      properties:
        PageNumber:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The page number of the page that contains the sensitive data.
        LineRange:
          allOf:
            - $ref: "#/components/schemas/Range"
            - description: An occurrence of sensitive data detected in a non-binary text file or a Microsoft Word file. Non-binary text files include files such as HTML, XML, JSON, and TXT files.
        OffsetRange:
          allOf:
            - $ref: "#/components/schemas/Range"
            - description: An occurrence of sensitive data detected in a binary text file.
      description: An occurrence of sensitive data in an Adobe Portable Document Format (PDF) file.
    Partition:
      type: string
      enum:
        - aws
        - aws-cn
        - aws-us-gov
    PortProbeDetailList:
      type: array
      items:
        $ref: "#/components/schemas/PortProbeDetail"
    PortProbeDetail:
      type: object
      properties:
        LocalPortDetails:
          allOf:
            - $ref: "#/components/schemas/ActionLocalPortDetails"
            - description: Provides information about the port that was scanned.
        LocalIpDetails:
          allOf:
            - $ref: "#/components/schemas/ActionLocalIpDetails"
            - description: Provides information about the IP address where the scanned port is located.
        RemoteIpDetails:
          allOf:
            - $ref: "#/components/schemas/ActionRemoteIpDetails"
            - description: Provides information about the remote IP address that performed the scan.
      description: A port scan that was part of the port probe. For each scan, PortProbeDetails provides information about the local IP address and port that were scanned, and the remote IP address that the scan originated from.
    Product:
      type: object
      required:
        - ProductArn
      properties:
        ProductArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN assigned to the product.
        ProductName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the product.
        CompanyName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the company that provides the product.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the product.
        Categories:
          allOf:
            - $ref: "#/components/schemas/CategoryList"
            - description: The categories assigned to the product.
        IntegrationTypes:
          allOf:
            - $ref: "#/components/schemas/IntegrationTypeList"
            - description: <p>The types of integration that the product supports. Available values are the following.</p> <ul> <li> <p> <code>SEND_FINDINGS_TO_SECURITY_HUB</code> - The integration sends findings to Security Hub.</p> </li> <li> <p> <code>RECEIVE_FINDINGS_FROM_SECURITY_HUB</code> - The integration receives findings from Security Hub.</p> </li> <li> <p> <code>UPDATE_FINDINGS_IN_SECURITY_HUB</code> - The integration does not send new findings to Security Hub, but does make updates to the findings that it receives from Security Hub.</p> </li> </ul>
        MarketplaceUrl:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>For integrations with Amazon Web Services services, the Amazon Web Services Console URL from which to activate the service.</p> <p>For integrations with third-party products, the Amazon Web Services Marketplace URL from which to subscribe to or purchase the product.</p>
        ActivationUrl:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The URL to the service or product documentation about the integration with Security Hub, including how to activate the integration.
        ProductSubscriptionResourcePolicy:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The resource policy associated with the product.
      description: Contains details about a product.
    PropagatingVgwSetDetails:
      type: object
      properties:
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the virtual private gateway. "
      description: " Describes a virtual private gateway propagating route. "
    Recommendation:
      type: object
      properties:
        Text:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Describes the recommended steps to take to remediate an issue identified in a finding.
        Url:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A URL to a page or site that contains information about how to remediate a finding.
      description: A recommendation on how to remediate the issue identified in a finding.
    Record:
      type: object
      properties:
        JsonPath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The path, as a JSONPath expression, to the field in the record that contains the data. If the field name is longer than 20 characters, it is truncated. If the path is longer than 250 characters, it is truncated.
        RecordIndex:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The record index, starting from 0, for the record that contains the data.
      description: An occurrence of sensitive data in an Apache Avro object container or an Apache Parquet file.
    RegionAvailabilityStatus:
      type: string
      enum:
        - AVAILABLE
        - UNAVAILABLE
    ResourceDetails:
      type: object
      properties:
        AwsAutoScalingAutoScalingGroup:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingAutoScalingGroupDetails"
            - description: Details for an autoscaling group.
        AwsCodeBuildProject:
          allOf:
            - $ref: "#/components/schemas/AwsCodeBuildProjectDetails"
            - description: Details for an CodeBuild project.
        AwsCloudFrontDistribution:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFrontDistributionDetails"
            - description: Details about a CloudFront distribution.
        AwsEc2Instance:
          allOf:
            - $ref: "#/components/schemas/AwsEc2InstanceDetails"
            - description: Details about an EC2 instance related to a finding.
        AwsEc2NetworkInterface:
          allOf:
            - $ref: "#/components/schemas/AwsEc2NetworkInterfaceDetails"
            - description: Details for an EC2 network interface.
        AwsEc2SecurityGroup:
          allOf:
            - $ref: "#/components/schemas/AwsEc2SecurityGroupDetails"
            - description: Details for an EC2 security group.
        AwsEc2Volume:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VolumeDetails"
            - description: Details for an Amazon EC2 volume.
        AwsEc2Vpc:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpcDetails"
            - description: Details for an Amazon EC2 VPC.
        AwsEc2Eip:
          allOf:
            - $ref: "#/components/schemas/AwsEc2EipDetails"
            - description: Details about an Elastic IP address.
        AwsEc2Subnet:
          allOf:
            - $ref: "#/components/schemas/AwsEc2SubnetDetails"
            - description: Details about a subnet in Amazon EC2.
        AwsEc2NetworkAcl:
          allOf:
            - $ref: "#/components/schemas/AwsEc2NetworkAclDetails"
            - description: Details about an EC2 network access control list (ACL).
        AwsElbv2LoadBalancer:
          allOf:
            - $ref: "#/components/schemas/AwsElbv2LoadBalancerDetails"
            - description: Details about a load balancer.
        AwsElasticBeanstalkEnvironment:
          allOf:
            - $ref: "#/components/schemas/AwsElasticBeanstalkEnvironmentDetails"
            - description: Details about an Elastic Beanstalk environment.
        AwsElasticsearchDomain:
          allOf:
            - $ref: "#/components/schemas/AwsElasticsearchDomainDetails"
            - description: Details for an Elasticsearch domain.
        AwsS3Bucket:
          allOf:
            - $ref: "#/components/schemas/AwsS3BucketDetails"
            - description: Details about an S3 bucket related to a finding.
        AwsS3AccountPublicAccessBlock:
          allOf:
            - $ref: "#/components/schemas/AwsS3AccountPublicAccessBlockDetails"
            - description: Details about the Amazon S3 Public Access Block configuration for an account.
        AwsS3Object:
          allOf:
            - $ref: "#/components/schemas/AwsS3ObjectDetails"
            - description: Details about an S3 object related to a finding.
        AwsSecretsManagerSecret:
          allOf:
            - $ref: "#/components/schemas/AwsSecretsManagerSecretDetails"
            - description: Details about a Secrets Manager secret.
        AwsIamAccessKey:
          allOf:
            - $ref: "#/components/schemas/AwsIamAccessKeyDetails"
            - description: Details about an IAM access key related to a finding.
        AwsIamUser:
          allOf:
            - $ref: "#/components/schemas/AwsIamUserDetails"
            - description: Details about an IAM user.
        AwsIamPolicy:
          allOf:
            - $ref: "#/components/schemas/AwsIamPolicyDetails"
            - description: Details about an IAM permissions policy.
        AwsApiGatewayV2Stage:
          allOf:
            - $ref: "#/components/schemas/AwsApiGatewayV2StageDetails"
            - description: Provides information about a version 2 stage for Amazon API Gateway.
        AwsApiGatewayV2Api:
          allOf:
            - $ref: "#/components/schemas/AwsApiGatewayV2ApiDetails"
            - description: Provides information about a version 2 API in Amazon API Gateway.
        AwsDynamoDbTable:
          allOf:
            - $ref: "#/components/schemas/AwsDynamoDbTableDetails"
            - description: Details about a DynamoDB table.
        AwsApiGatewayStage:
          allOf:
            - $ref: "#/components/schemas/AwsApiGatewayStageDetails"
            - description: Provides information about a version 1 Amazon API Gateway stage.
        AwsApiGatewayRestApi:
          allOf:
            - $ref: "#/components/schemas/AwsApiGatewayRestApiDetails"
            - description: Provides information about a REST API in version 1 of Amazon API Gateway.
        AwsCloudTrailTrail:
          allOf:
            - $ref: "#/components/schemas/AwsCloudTrailTrailDetails"
            - description: Provides details about a CloudTrail trail.
        AwsSsmPatchCompliance:
          allOf:
            - $ref: "#/components/schemas/AwsSsmPatchComplianceDetails"
            - description: Provides information about the state of a patch on an instance based on the patch baseline that was used to patch the instance.
        AwsCertificateManagerCertificate:
          allOf:
            - $ref: "#/components/schemas/AwsCertificateManagerCertificateDetails"
            - description: Provides details about an Certificate Manager certificate.
        AwsRedshiftCluster:
          allOf:
            - $ref: "#/components/schemas/AwsRedshiftClusterDetails"
            - description: Contains details about an Amazon Redshift cluster.
        AwsElbLoadBalancer:
          allOf:
            - $ref: "#/components/schemas/AwsElbLoadBalancerDetails"
            - description: Contains details about a Classic Load Balancer.
        AwsIamGroup:
          allOf:
            - $ref: "#/components/schemas/AwsIamGroupDetails"
            - description: Contains details about an IAM group.
        AwsIamRole:
          allOf:
            - $ref: "#/components/schemas/AwsIamRoleDetails"
            - description: Details about an IAM role.
        AwsKmsKey:
          allOf:
            - $ref: "#/components/schemas/AwsKmsKeyDetails"
            - description: Details about an KMS key.
        AwsLambdaFunction:
          allOf:
            - $ref: "#/components/schemas/AwsLambdaFunctionDetails"
            - description: Details about a Lambda function.
        AwsLambdaLayerVersion:
          allOf:
            - $ref: "#/components/schemas/AwsLambdaLayerVersionDetails"
            - description: Details for a Lambda layer version.
        AwsRdsDbInstance:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbInstanceDetails"
            - description: Details about an Amazon RDS database instance.
        AwsSnsTopic:
          allOf:
            - $ref: "#/components/schemas/AwsSnsTopicDetails"
            - description: Details about an SNS topic.
        AwsSqsQueue:
          allOf:
            - $ref: "#/components/schemas/AwsSqsQueueDetails"
            - description: Details about an SQS queue.
        AwsWafWebAcl:
          allOf:
            - $ref: "#/components/schemas/AwsWafWebAclDetails"
            - description: Details for an WAF web ACL.
        AwsRdsDbSnapshot:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbSnapshotDetails"
            - description: Details about an Amazon RDS database snapshot.
        AwsRdsDbClusterSnapshot:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbClusterSnapshotDetails"
            - description: Details about an Amazon RDS database cluster snapshot.
        AwsRdsDbCluster:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbClusterDetails"
            - description: Details about an Amazon RDS database cluster.
        AwsEcsCluster:
          allOf:
            - $ref: "#/components/schemas/AwsEcsClusterDetails"
            - description: Details about an Amazon ECS cluster.
        AwsEcsContainer:
          allOf:
            - $ref: "#/components/schemas/AwsEcsContainerDetails"
            - description: "Provides information about a Docker container that's part of a task. "
        AwsEcsTaskDefinition:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDefinitionDetails"
            - description: Details about a task definition. A task definition describes the container and volume definitions of an Amazon Elastic Container Service task.
        Container:
          allOf:
            - $ref: "#/components/schemas/ContainerDetails"
            - description: Details about a container resource related to a finding.
        Other:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: <p>Details about a resource that are not available in a type-specific details object. Use the <code>Other</code> object in the following cases.</p> <ul> <li> <p>The type-specific object does not contain all of the fields that you want to populate. In this case, first use the type-specific object to populate those fields. Use the <code>Other</code> object to populate the fields that are missing from the type-specific object.</p> </li> <li> <p>The resource type does not have a corresponding object. This includes resources for which the type is <code>Other</code>. </p> </li> </ul>
        AwsRdsEventSubscription:
          allOf:
            - $ref: "#/components/schemas/AwsRdsEventSubscriptionDetails"
            - description: Details about an RDS event notification subscription.
        AwsEcsService:
          allOf:
            - $ref: "#/components/schemas/AwsEcsServiceDetails"
            - description: Details about a service within an ECS cluster.
        AwsAutoScalingLaunchConfiguration:
          allOf:
            - $ref: "#/components/schemas/AwsAutoScalingLaunchConfigurationDetails"
            - description: Provides details about a launch configuration.
        AwsEc2VpnConnection:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpnConnectionDetails"
            - description: Details about an Amazon EC2 VPN connection.
        AwsEcrContainerImage:
          allOf:
            - $ref: "#/components/schemas/AwsEcrContainerImageDetails"
            - description: Information about an Amazon ECR image.
        AwsOpenSearchServiceDomain:
          allOf:
            - $ref: "#/components/schemas/AwsOpenSearchServiceDomainDetails"
            - description: Details about an Amazon OpenSearch Service domain.
        AwsEc2VpcEndpointService:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpcEndpointServiceDetails"
            - description: Details about the service configuration for a VPC endpoint service.
        AwsXrayEncryptionConfig:
          allOf:
            - $ref: "#/components/schemas/AwsXrayEncryptionConfigDetails"
            - description: Information about the encryption configuration for X-Ray.
        AwsWafRateBasedRule:
          allOf:
            - $ref: "#/components/schemas/AwsWafRateBasedRuleDetails"
            - description: Details about a rate-based rule for global resources.
        AwsWafRegionalRateBasedRule:
          allOf:
            - $ref: "#/components/schemas/AwsWafRegionalRateBasedRuleDetails"
            - description: Details about a rate-based rule for Regional resources.
        AwsEcrRepository:
          allOf:
            - $ref: "#/components/schemas/AwsEcrRepositoryDetails"
            - description: Information about an Amazon Elastic Container Registry repository.
        AwsEksCluster:
          allOf:
            - $ref: "#/components/schemas/AwsEksClusterDetails"
            - description: Details about an Amazon EKS cluster.
        AwsNetworkFirewallFirewallPolicy:
          allOf:
            - $ref: "#/components/schemas/AwsNetworkFirewallFirewallPolicyDetails"
            - description: Details about an Network Firewall firewall policy.
        AwsNetworkFirewallFirewall:
          allOf:
            - $ref: "#/components/schemas/AwsNetworkFirewallFirewallDetails"
            - description: Details about an Network Firewall firewall.
        AwsNetworkFirewallRuleGroup:
          allOf:
            - $ref: "#/components/schemas/AwsNetworkFirewallRuleGroupDetails"
            - description: Details about an Network Firewall rule group.
        AwsRdsDbSecurityGroup:
          allOf:
            - $ref: "#/components/schemas/AwsRdsDbSecurityGroupDetails"
            - description: Details about an Amazon RDS DB security group.
        AwsKinesisStream:
          allOf:
            - $ref: "#/components/schemas/AwsKinesisStreamDetails"
            - description: Details about an Amazon Kinesis data stream.
        AwsEc2TransitGateway:
          allOf:
            - $ref: "#/components/schemas/AwsEc2TransitGatewayDetails"
            - description: Details about an Amazon EC2 transit gateway that interconnects your virtual private clouds (VPC) and on-premises networks.
        AwsEfsAccessPoint:
          allOf:
            - $ref: "#/components/schemas/AwsEfsAccessPointDetails"
            - description: "Details about an Amazon EFS access point. An access point is an application-specific view into an EFS file system that applies an operating system user and group, and a file system path, to any file system request made through the access point. "
        AwsCloudFormationStack:
          allOf:
            - $ref: "#/components/schemas/AwsCloudFormationStackDetails"
            - description: Details about an CloudFormation stack. A stack is a collection of Amazon Web Services resources that you can manage as a single unit.
        AwsCloudWatchAlarm:
          allOf:
            - $ref: "#/components/schemas/AwsCloudWatchAlarmDetails"
            - description: Details about an Amazon CloudWatch alarm. An alarm allows you to monitor and receive alerts about your Amazon Web Services resources and applications across multiple Regions.
        AwsEc2VpcPeeringConnection:
          allOf:
            - $ref: "#/components/schemas/AwsEc2VpcPeeringConnectionDetails"
            - description: "Details about an Amazon EC2 VPC peering connection. A VPC peering connection is a networking connection between two VPCs that enables you to route traffic between them privately. "
        AwsWafRegionalRuleGroup:
          allOf:
            - $ref: "#/components/schemas/AwsWafRegionalRuleGroupDetails"
            - description: "Details about an WAF rule group for Regional resources. "
        AwsWafRegionalRule:
          allOf:
            - $ref: "#/components/schemas/AwsWafRegionalRuleDetails"
            - description: "Details about an WAF rule for Regional resources. "
        AwsWafRegionalWebAcl:
          allOf:
            - $ref: "#/components/schemas/AwsWafRegionalWebAclDetails"
            - description: "Details about an WAF web access control list (web ACL) for Regional resources. "
        AwsWafRule:
          allOf:
            - $ref: "#/components/schemas/AwsWafRuleDetails"
            - description: "Details about an WAF rule for global resources. "
        AwsWafRuleGroup:
          allOf:
            - $ref: "#/components/schemas/AwsWafRuleGroupDetails"
            - description: "Details about an WAF rule group for global resources. "
        AwsEcsTask:
          allOf:
            - $ref: "#/components/schemas/AwsEcsTaskDetails"
            - description: "Details about a task in a cluster. "
        AwsBackupBackupVault:
          allOf:
            - $ref: "#/components/schemas/AwsBackupBackupVaultDetails"
            - description: "Provides details about an Backup backup vault. "
        AwsBackupBackupPlan:
          allOf:
            - $ref: "#/components/schemas/AwsBackupBackupPlanDetails"
            - description: "Provides details about an Backup backup plan. "
        AwsBackupRecoveryPoint:
          allOf:
            - $ref: "#/components/schemas/AwsBackupRecoveryPointDetails"
            - description: "Provides details about an Backup backup, or recovery point. "
        AwsEc2LaunchTemplate:
          $ref: "#/components/schemas/AwsEc2LaunchTemplateDetails"
        AwsSageMakerNotebookInstance:
          $ref: "#/components/schemas/AwsSageMakerNotebookInstanceDetails"
        AwsWafv2WebAcl:
          $ref: "#/components/schemas/AwsWafv2WebAclDetails"
        AwsWafv2RuleGroup:
          $ref: "#/components/schemas/AwsWafv2RuleGroupDetails"
        AwsEc2RouteTable:
          allOf:
            - $ref: "#/components/schemas/AwsEc2RouteTableDetails"
            - description: " Provides details about a route table. A route table contains a set of rules, called routes, that determine where to direct network traffic from your subnet or gateway. "
      description: <p>Additional details about a resource related to a finding.</p> <p>To provide the details, use the object that corresponds to the resource type. For example, if the resource type is <code>AwsEc2Instance</code>, then you use the <code>AwsEc2Instance</code> object to provide the details.</p> <p>If the type-specific object does not contain all of the fields you want to populate, then you use the <code>Other</code> object to populate those additional fields.</p> <p>You also use the <code>Other</code> object to populate the details when the selected type does not have a corresponding object.</p>
    Resource:
      type: object
      required:
        - Type
        - Id
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>The type of the resource that details are provided for. If possible, set <code>Type</code> to one of the supported resource types. For example, if the resource is an EC2 instance, then set <code>Type</code> to <code>AwsEc2Instance</code>.</p> <p>If the resource does not match any of the provided types, then set <code>Type</code> to <code>Other</code>. </p>
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The canonical identifier for the given resource type.
        Partition:
          allOf:
            - $ref: "#/components/schemas/Partition"
            - description: The canonical Amazon Web Services partition name that the Region is assigned to.
        Region:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The canonical Amazon Web Services external Region name where this resource is located.
        ResourceRole:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Identifies the role of the resource in the finding. A resource is either the actor or target of the finding activity,
        Tags:
          allOf:
            - $ref: "#/components/schemas/FieldMap"
            - description: A list of Amazon Web Services tags associated with a resource at the time the finding was processed.
        DataClassification:
          allOf:
            - $ref: "#/components/schemas/DataClassificationDetails"
            - description: Contains information about sensitive data that was detected on the resource.
        Details:
          allOf:
            - $ref: "#/components/schemas/ResourceDetails"
            - description: Additional details about the resource related to a finding.
      description: A resource related to a finding.
    Result:
      type: object
      properties:
        AccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: An Amazon Web Services account ID of the account that was not processed.
        ProcessingResult:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The reason that the account was not processed.
      description: Details about the account that was not processed.
    RouteSetDetails:
      type: object
      properties:
        CarrierGatewayId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the carrier gateway. "
        CoreNetworkArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of the core network. "
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The IPv4 CIDR block used for the destination match. "
        DestinationIpv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The IPv6 CIDR block used for the destination match. "
        DestinationPrefixListId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The prefix of the destination Amazon Web Service. "
        EgressOnlyInternetGatewayId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the egress-only internet gateway. "
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of a gateway attached to your VPC. "
        InstanceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of a NAT instance in your VPC. "
        InstanceOwnerId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the Amazon Web Services account that owns the instance. "
        LocalGatewayId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the local gateway. "
        NatGatewayId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of a NAT gateway. "
        NetworkInterfaceId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of the network interface. "
        Origin:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " Describes how the route was created. "
        State:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The state of the route. "
        TransitGatewayId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of a transit gateway. "
        VpcPeeringConnectionId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ID of a VPC peering connection. "
      description: " Provides details about the routes in the route table. "
    RuleGroupVariables:
      type: object
      properties:
        IpSets:
          allOf:
            - $ref: "#/components/schemas/RuleGroupVariablesIpSetsDetails"
            - description: A list of IP addresses and address ranges, in CIDR notation.
        PortSets:
          allOf:
            - $ref: "#/components/schemas/RuleGroupVariablesPortSetsDetails"
            - description: A list of port ranges.
      description: Additional settings to use in the specified rules.
    RuleGroupSource:
      type: object
      properties:
        RulesSourceList:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceListDetails"
            - description: Stateful inspection criteria for a domain list rule group. A domain list rule group determines access by specific protocols to specific domains.
        RulesString:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Stateful inspection criteria, provided in Suricata compatible intrusion prevention system (IPS) rules.
        StatefulRules:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatefulRulesList"
            - description: Suricata rule specifications.
        StatelessRulesAndCustomActions:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatelessRulesAndCustomActionsDetails"
            - description: The stateless rules and custom actions used by a stateless rule group.
      description: The rules and actions for the rule group.
    RuleGroupSourceListDetails:
      type: object
      properties:
        GeneratedRulesType:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Indicates whether to allow or deny access to the domains listed in <code>Targets</code>.
        TargetTypes:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The protocols that you want to inspect. Specify <code>LS_SNI</code> for HTTPS. Specify <code>HTTP_HOST</code> for HTTP. You can specify either or both.
        Targets:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The domains that you want to inspect for in your traffic flows. You can provide full domain names, or use the '.' prefix as a wildcard. For example, <code>.example.com</code> matches all domains that end with <code>example.com</code>.
      description: Stateful inspection criteria for a domain list rule group.
    RuleGroupSourceStatefulRulesList:
      type: array
      items:
        $ref: "#/components/schemas/RuleGroupSourceStatefulRulesDetails"
    RuleGroupSourceStatelessRulesAndCustomActionsDetails:
      type: object
      properties:
        CustomActions:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceCustomActionsList"
            - description: Custom actions for the rule group.
        StatelessRules:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatelessRulesList"
            - description: Stateless rules for the rule group.
      description: Stateless rules and custom actions for a stateless rule group.
    RuleGroupSourceCustomActionsDetails:
      type: object
      properties:
        ActionDefinition:
          allOf:
            - $ref: "#/components/schemas/StatelessCustomActionDefinition"
            - description: The definition of a custom action.
        ActionName:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A descriptive name of the custom action.
      description: A custom action definition. A custom action is an optional, non-standard action to use for stateless packet handling.
    RuleGroupSourceCustomActionsList:
      type: array
      items:
        $ref: "#/components/schemas/RuleGroupSourceCustomActionsDetails"
    RuleGroupSourceStatefulRulesHeaderDetails:
      type: object
      properties:
        Destination:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The destination IP address or address range to inspect for, in CIDR notation. To match with any address, specify <code>ANY</code>.
        DestinationPort:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The destination port to inspect for. You can specify an individual port, such as <code>1994</code>. You also can specify a port range, such as <code>1990:1994</code>. To match with any port, specify <code>ANY</code>.
        Direction:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The direction of traffic flow to inspect. If set to <code>ANY</code>, the inspection matches bidirectional traffic, both from the source to the destination and from the destination to the source. If set to <code>FORWARD</code>, the inspection only matches traffic going from the source to the destination.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The protocol to inspect for. To inspector for all protocols, use <code>IP</code>.
        Source:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The source IP address or address range to inspect for, in CIDR notation. To match with any address, specify <code>ANY</code>.
        SourcePort:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The source port to inspect for. You can specify an individual port, such as <code>1994</code>. You also can specify a port range, such as <code>1990:1994</code>. To match with any port, specify <code>ANY</code>.
      description: The inspection criteria for a stateful rule.
    RuleGroupSourceStatefulRulesOptionsList:
      type: array
      items:
        $ref: "#/components/schemas/RuleGroupSourceStatefulRulesOptionsDetails"
    RuleGroupSourceStatefulRulesDetails:
      type: object
      properties:
        Action:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: Defines what Network Firewall should do with the packets in a traffic flow when the flow matches the stateful rule criteria.
        Header:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatefulRulesHeaderDetails"
            - description: The stateful inspection criteria for the rule.
        RuleOptions:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatefulRulesOptionsList"
            - description: Additional options for the rule.
      description: A Suricata rule specification.
    RuleGroupSourceStatefulRulesRuleOptionsSettingsList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    RuleGroupSourceStatefulRulesOptionsDetails:
      type: object
      properties:
        Keyword:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A keyword to look for.
        Settings:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatefulRulesRuleOptionsSettingsList"
            - description: A list of settings.
      description: A rule option for a stateful rule.
    RuleGroupSourceStatelessRuleMatchAttributes:
      type: object
      properties:
        DestinationPorts:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsList"
            - description: A list of port ranges to specify the destination ports to inspect for.
        Destinations:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesDestinationsList"
            - description: The destination IP addresses and address ranges to inspect for, in CIDR notation.
        Protocols:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesProtocolsList"
            - description: The protocols to inspect for.
        SourcePorts:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesSourcePortsList"
            - description: A list of port ranges to specify the source ports to inspect for.
        Sources:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesSourcesList"
            - description: The source IP addresses and address ranges to inspect for, in CIDR notation.
        TcpFlags:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesTcpFlagsList"
            - description: The TCP flags and masks to inspect for.
      description: Criteria for the stateless rule.
    RuleGroupSourceStatelessRuleDefinition:
      type: object
      properties:
        Actions:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The actions to take on a packet that matches one of the stateless rule definition's match attributes. You must specify a standard action (<code>aws:pass</code>, <code>aws:drop</code>, or <code>aws:forward_to_sfe</code>). You can then add custom actions.
        MatchAttributes:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributes"
            - description: The criteria for Network Firewall to use to inspect an individual packet in a stateless rule inspection.
      description: The definition of the stateless rule.
    RuleGroupSourceStatelessRuleMatchAttributesDestinationPortsList:
      type: array
      items:
        $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts"
    RuleGroupSourceStatelessRuleMatchAttributesDestinationsList:
      type: array
      items:
        $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesDestinations"
    RuleGroupSourceStatelessRuleMatchAttributesProtocolsList:
      type: array
      items:
        $ref: "#/components/schemas/Integer"
    RuleGroupSourceStatelessRuleMatchAttributesSourcePortsList:
      type: array
      items:
        $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesSourcePorts"
    RuleGroupSourceStatelessRuleMatchAttributesSourcesList:
      type: array
      items:
        $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesSources"
    RuleGroupSourceStatelessRuleMatchAttributesTcpFlagsList:
      type: array
      items:
        $ref: "#/components/schemas/RuleGroupSourceStatelessRuleMatchAttributesTcpFlags"
    RuleGroupSourceStatelessRuleMatchAttributesDestinationPorts:
      type: object
      properties:
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The starting port value for the port range.
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The ending port value for the port range.
      description: A port range to specify the destination ports to inspect for.
    RuleGroupSourceStatelessRuleMatchAttributesDestinations:
      type: object
      properties:
        AddressDefinition:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: An IP address or a block of IP addresses.
      description: A destination IP address or range.
    RuleGroupSourceStatelessRuleMatchAttributesSourcePorts:
      type: object
      properties:
        FromPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The starting port value for the port range.
        ToPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The ending port value for the port range.
      description: A port range to specify the source ports to inspect for.
    RuleGroupSourceStatelessRuleMatchAttributesSources:
      type: object
      properties:
        AddressDefinition:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: An IP address or a block of IP addresses.
      description: A source IP addresses and address range to inspect for.
    RuleGroupSourceStatelessRuleMatchAttributesTcpFlags:
      type: object
      properties:
        Flags:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: Defines the flags from the <code>Masks</code> setting that must be set in order for the packet to match. Flags that are listed must be set. Flags that are not listed must not be set.
        Masks:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The set of flags to consider in the inspection. If not specified, then all flags are inspected.
      description: A set of TCP flags and masks to inspect for.
    RuleGroupSourceStatelessRulesList:
      type: array
      items:
        $ref: "#/components/schemas/RuleGroupSourceStatelessRulesDetails"
    RuleGroupSourceStatelessRulesDetails:
      type: object
      properties:
        Priority:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Indicates the order in which to run this rule relative to all of the rules in the stateless rule group.
        RuleDefinition:
          allOf:
            - $ref: "#/components/schemas/RuleGroupSourceStatelessRuleDefinition"
            - description: Provides the definition of the stateless rule.
      description: A stateless rule in the rule group.
    RuleGroupVariablesIpSetsDetails:
      type: object
      properties:
        Definition:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The list of IP addresses and ranges.
      description: A list of IP addresses and address ranges, in CIDR notation.
    RuleGroupVariablesPortSetsDetails:
      type: object
      properties:
        Definition:
          allOf:
            - $ref: "#/components/schemas/NonEmptyStringList"
            - description: The list of port ranges.
      description: A list of port ranges.
    SeverityRating:
      type: string
      enum:
        - LOW
        - MEDIUM
        - HIGH
        - CRITICAL
    SecurityControl:
      type: object
      required:
        - SecurityControlId
        - SecurityControlArn
        - Title
        - Description
        - RemediationUrl
        - SeverityRating
        - SecurityControlStatus
      properties:
        SecurityControlId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The unique identifier of a security control across standards. Values for this field typically consist of an Amazon Web Service name and a number, such as APIGateway.3. "
        SecurityControlArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) for a security control across standards, such as <code>arn:aws:securityhub:eu-central-1:123456789012:security-control/S3.1</code>. This parameter doesn't mention a specific standard. "
        Title:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The title of a security control. "
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The description of a security control across standards. This typically summarizes how Security Hub evaluates the control and the conditions under which it produces a failed finding. This parameter doesn't reference a specific standard. "
        RemediationUrl:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " A link to Security Hub documentation that explains how to remediate a failed finding for a security control. "
        SeverityRating:
          allOf:
            - $ref: "#/components/schemas/SeverityRating"
            - description: ' The severity of a security control. For more information about how Security Hub determines control severity, see <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/controls-findings-create-update.html#control-findings-severity">Assigning severity to control findings</a> in the <i>Security Hub User Guide</i>. '
        SecurityControlStatus:
          allOf:
            - $ref: "#/components/schemas/ControlStatus"
            - description: ' The status of a security control based on the compliance status of its findings. For more information about how control status is determined, see <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/controls-overall-status.html">Determining the overall status of a control from its findings</a> in the <i>Security Hub User Guide</i>. '
      description: " A security control in Security Hub describes a security best practice related to a specific resource. "
    SecurityControlDefinition:
      type: object
      required:
        - SecurityControlId
        - Title
        - Description
        - RemediationUrl
        - SeverityRating
        - CurrentRegionAvailability
      properties:
        SecurityControlId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The unique identifier of a security control across standards. Values for this field typically consist of an Amazon Web Service name and a number (for example, APIGateway.3). This parameter differs from <code>SecurityControlArn</code>, which is a unique Amazon Resource Name (ARN) assigned to a control. The ARN references the security control ID (for example, arn:aws:securityhub:eu-central-1:123456789012:security-control/APIGateway.3). "
        Title:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The title of a security control. "
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The description of a security control across standards. This typically summarizes how Security Hub evaluates the control and the conditions under which it produces a failed finding. This parameter doesn't reference a specific standard. "
        RemediationUrl:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " A link to Security Hub documentation that explains how to remediate a failed finding for a security control. "
        SeverityRating:
          allOf:
            - $ref: "#/components/schemas/SeverityRating"
            - description: ' The severity of a security control. For more information about how Security Hub determines control severity, see <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/controls-findings-create-update.html#control-findings-severity">Assigning severity to control findings</a> in the <i>Security Hub User Guide</i>. '
        CurrentRegionAvailability:
          allOf:
            - $ref: "#/components/schemas/RegionAvailabilityStatus"
            - description: " Specifies whether a security control is available in the current Amazon Web Services Region. "
      description: " Provides metadata for a security control, including its unique standard-agnostic identifier, title, description, severity, availability in Amazon Web Services Regions, and a link to remediation steps. "
    SensitiveDataDetections:
      type: object
      properties:
        Count:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The total number of occurrences of sensitive data that were detected.
        Type:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The type of sensitive data that was detected. For example, the type might indicate that the data is an email address.
        Occurrences:
          allOf:
            - $ref: "#/components/schemas/Occurrences"
            - description: Details about the sensitive data that was detected.
      description: The list of detected instances of sensitive data.
    SensitiveDataDetectionsList:
      type: array
      items:
        $ref: "#/components/schemas/SensitiveDataDetections"
    SensitiveDataResult:
      type: object
      properties:
        Category:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The category of sensitive data that was detected. For example, the category can indicate that the sensitive data involved credentials, financial information, or personal information.
        Detections:
          allOf:
            - $ref: "#/components/schemas/SensitiveDataDetectionsList"
            - description: The list of detected instances of sensitive data.
        TotalCount:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The total number of occurrences of sensitive data.
      description: Contains a detected instance of sensitive data that are based on built-in identifiers.
    SoftwarePackage:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the software package.
        Version:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The version of the software package.
        Epoch:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The epoch of the software package.
        Release:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The release of the software package.
        Architecture:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The architecture used for the software package.
        PackageManager:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The source of the package.
        FilePath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The file system path to the package manager inventory file.
        FixedInVersion:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The version of the software package in which the vulnerability has been resolved. "
        Remediation:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "Describes the actions a customer can take to resolve the vulnerability in the software package. "
        SourceLayerHash:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The source layer hash of the vulnerable package. "
        SourceLayerArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The Amazon Resource Name (ARN) of the source layer. "
      description: Information about a software package.
    SoftwarePackageList:
      type: array
      items:
        $ref: "#/components/schemas/SoftwarePackage"
    SortOrder:
      type: string
      enum:
        - asc
        - desc
    StandardsManagedBy:
      type: object
      properties:
        Company:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: An identifier for the company that manages a specific security standard. For existing standards, the value is equal to <code>Amazon Web Services</code>.
        Product:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: An identifier for the product that manages a specific security standard. For existing standards, the value is equal to the Amazon Web Services service that manages the standard.
      description: Provides details about the management of a security standard.
    Standard:
      type: object
      properties:
        StandardsArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of a standard.
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the standard.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the standard.
        EnabledByDefault:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Whether the standard is enabled by default. When Security Hub is enabled from the console, if a standard is enabled by default, the check box for that standard is selected by default.</p> <p>When Security Hub is enabled using the <code>EnableSecurityHub</code> API operation, the standard is enabled by default unless <code>EnableDefaultStandards</code> is set to <code>false</code>.</p>
        StandardsManagedBy:
          allOf:
            - $ref: "#/components/schemas/StandardsManagedBy"
            - description: "Provides details about the management of a standard. "
      description: Provides information about a specific security standard.
    StandardsControl:
      type: object
      properties:
        StandardsControlArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the security standard control.
        ControlStatus:
          allOf:
            - $ref: "#/components/schemas/ControlStatus"
            - description: The current status of the security standard control. Indicates whether the control is enabled or disabled. Security Hub does not check against disabled controls.
        DisabledReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The reason provided for the most recent change in status for the control.
        ControlStatusUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The date and time that the status of the security standard control was most recently updated.
        ControlId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the security standard control.
        Title:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The title of the security standard control.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The longer description of the security standard control. Provides information about what the control is checking for.
        RemediationUrl:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A link to remediation information for the control in the Security Hub user documentation.
        SeverityRating:
          allOf:
            - $ref: "#/components/schemas/SeverityRating"
            - description: <p>The severity of findings generated from this security standard control.</p> <p>The finding severity is based on an assessment of how easy it would be to compromise Amazon Web Services resources if the issue is detected.</p>
        RelatedRequirements:
          allOf:
            - $ref: "#/components/schemas/RelatedRequirementsList"
            - description: The list of requirements that are related to this control.
      description: Details for an individual security standard control.
    StandardsControlArnList:
      type: array
      items:
        $ref: "#/components/schemas/NonEmptyString"
    StandardsControlAssociationDetail:
      type: object
      required:
        - StandardsArn
        - SecurityControlId
        - SecurityControlArn
        - AssociationStatus
      properties:
        StandardsArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of a security standard. "
        SecurityControlId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The unique identifier of a security control across standards. Values for this field typically consist of an Amazon Web Service name and a number, such as APIGateway.3. "
        SecurityControlArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ARN of a security control across standards, such as <code>arn:aws:securityhub:eu-central-1:123456789012:security-control/S3.1</code>. This parameter doesn't mention a specific standard. "
        AssociationStatus:
          allOf:
            - $ref: "#/components/schemas/AssociationStatus"
            - description: " Specifies whether a control is enabled or disabled in a specified standard. "
        RelatedRequirements:
          allOf:
            - $ref: "#/components/schemas/RelatedRequirementsList"
            - description: " The requirement that underlies a control in the compliance framework related to the standard. "
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The time at which the enablement status of the control in the specified standard was last updated. "
        UpdatedReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The reason for updating the enablement status of a control in a specified standard. "
        StandardsControlTitle:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The title of a control. This field may reference a specific standard. "
        StandardsControlDescription:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The description of a control. This typically summarizes how Security Hub evaluates the control and the conditions under which it produces a failed finding. This parameter may reference a specific standard. "
        StandardsControlArns:
          allOf:
            - $ref: "#/components/schemas/StandardsControlArnList"
            - description: ' Provides the input parameter that Security Hub uses to call the <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_UpdateStandardsControl.html">UpdateStandardsControl</a> API. This API can be used to enable or disable a control in a specified standard. '
      description: " Provides details about a control's enablement status in a specified standard. "
    StandardsControlAssociationSummary:
      type: object
      required:
        - StandardsArn
        - SecurityControlId
        - SecurityControlArn
        - AssociationStatus
      properties:
        StandardsArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The Amazon Resource Name (ARN) of a standard. "
        SecurityControlId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " A unique standard-agnostic identifier for a control. Values for this field typically consist of an Amazon Web Service and a number, such as APIGateway.5. This field doesn't reference a specific standard. "
        SecurityControlArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The ARN of a control, such as <code>arn:aws:securityhub:eu-central-1:123456789012:security-control/S3.1</code>. This parameter doesn't mention a specific standard. "
        AssociationStatus:
          allOf:
            - $ref: "#/components/schemas/AssociationStatus"
            - description: " The enablement status of a control in a specific standard. "
        RelatedRequirements:
          allOf:
            - $ref: "#/components/schemas/RelatedRequirementsList"
            - description: " The requirement that underlies this control in the compliance framework related to the standard. "
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: " The last time that a control's enablement status in a specified standard was updated. "
        UpdatedReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The reason for updating the control's enablement status in a specified standard. "
        StandardsControlTitle:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The title of a control. "
        StandardsControlDescription:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The description of a control. This typically summarizes how Security Hub evaluates the control and the conditions under which it produces a failed finding. The parameter may reference a specific standard. "
      description: " An array that provides the enablement status and other details for each control that applies to each enabled standard. "
    StandardsInputParameterMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/NonEmptyString"
    StandardsStatus:
      type: string
      enum:
        - PENDING
        - READY
        - FAILED
        - DELETING
        - INCOMPLETE
    StatusReasonCode:
      type: string
      enum:
        - NO_AVAILABLE_CONFIGURATION_RECORDER
        - INTERNAL_ERROR
    StandardsStatusReason:
      type: object
      required:
        - StatusReasonCode
      properties:
        StatusReasonCode:
          allOf:
            - $ref: "#/components/schemas/StatusReasonCode"
            - description: The reason code that represents the reason for the current status of a standard subscription.
      description: The reason for the current status of a standard subscription.
    StandardsSubscription:
      type: object
      required:
        - StandardsSubscriptionArn
        - StandardsArn
        - StandardsInput
        - StandardsStatus
      properties:
        StandardsSubscriptionArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of a resource that represents your subscription to a supported standard.
        StandardsArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of a standard.
        StandardsInput:
          allOf:
            - $ref: "#/components/schemas/StandardsInputParameterMap"
            - description: A key-value pair of input for the standard.
        StandardsStatus:
          allOf:
            - $ref: "#/components/schemas/StandardsStatus"
            - description: <p>The status of the standard subscription.</p> <p>The status values are as follows:</p> <ul> <li> <p> <code>PENDING</code> - Standard is in the process of being enabled.</p> </li> <li> <p> <code>READY</code> - Standard is enabled.</p> </li> <li> <p> <code>INCOMPLETE</code> - Standard could not be enabled completely. Some controls may not be available.</p> </li> <li> <p> <code>DELETING</code> - Standard is in the process of being disabled.</p> </li> <li> <p> <code>FAILED</code> - Standard could not be disabled.</p> </li> </ul>
        StandardsStatusReason:
          allOf:
            - $ref: "#/components/schemas/StandardsStatusReason"
            - description: The reason for the current status.
      description: A resource that represents your subscription to a supported standard.
    StatelessCustomPublishMetricAction:
      type: object
      properties:
        Dimensions:
          allOf:
            - $ref: "#/components/schemas/StatelessCustomPublishMetricActionDimensionsList"
            - description: Defines CloudWatch dimension values to publish.
      description: Information about metrics to publish to CloudWatch.
    StatelessCustomPublishMetricActionDimensionsList:
      type: array
      items:
        $ref: "#/components/schemas/StatelessCustomPublishMetricActionDimension"
    StatelessCustomPublishMetricActionDimension:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value to use for the custom metric dimension.
      description: Defines a CloudWatch dimension value to publish.
    StatusReason:
      type: object
      required:
        - ReasonCode
      properties:
        ReasonCode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: 'A code that represents a reason for the control status. For the list of status reason codes and their meanings, see <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-results.html#securityhub-standards-results-asff">Standards-related information in the ASFF</a> in the <i>Security Hub User Guide</i>. '
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The corresponding description for the status reason code.
      description: Provides additional context for the value of <code>Compliance.Status</code>.
    StringFilterComparison:
      type: string
      enum:
        - EQUALS
        - PREFIX
        - NOT_EQUALS
        - PREFIX_NOT_EQUALS
    StringFilter:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The string filter value. Filter values are case sensitive. For example, the product name for control-based findings is <code>Security Hub</code>. If you provide <code>security hub</code> as the filter text, then there is no match.
        Comparison:
          allOf:
            - $ref: "#/components/schemas/StringFilterComparison"
            - description: <p>The condition to apply to a string value when querying for findings. To search for values that contain the filter criteria value, use one of the following comparison operators:</p> <ul> <li> <p>To search for values that exactly match the filter value, use <code>EQUALS</code>.</p> <p>For example, the filter <code>ResourceType EQUALS AwsEc2SecurityGroup</code> only matches findings that have a resource type of <code>AwsEc2SecurityGroup</code>.</p> </li> <li> <p>To search for values that start with the filter value, use <code>PREFIX</code>.</p> <p>For example, the filter <code>ResourceType PREFIX AwsIam</code> matches findings that have a resource type that starts with <code>AwsIam</code>. Findings with a resource type of <code>AwsIamPolicy</code>, <code>AwsIamRole</code>, or <code>AwsIamUser</code> would all match.</p> </li> </ul> <p> <code>EQUALS</code> and <code>PREFIX</code> filters on the same field are joined by <code>OR</code>. A finding matches if it matches any one of those filters.</p> <p>To search for values that do not contain the filter criteria value, use one of the following comparison operators:</p> <ul> <li> <p>To search for values that do not exactly match the filter value, use <code>NOT_EQUALS</code>.</p> <p>For example, the filter <code>ResourceType NOT_EQUALS AwsIamPolicy</code> matches findings that have a resource type other than <code>AwsIamPolicy</code>.</p> </li> <li> <p>To search for values that do not start with the filter value, use <code>PREFIX_NOT_EQUALS</code>.</p> <p>For example, the filter <code>ResourceType PREFIX_NOT_EQUALS AwsIam</code> matches findings that have a resource type that does not start with <code>AwsIam</code>. Findings with a resource type of <code>AwsIamPolicy</code>, <code>AwsIamRole</code>, or <code>AwsIamUser</code> would all be excluded from the results.</p> </li> </ul> <p> <code>NOT_EQUALS</code> and <code>PREFIX_NOT_EQUALS</code> filters on the same field are joined by <code>AND</code>. A finding matches only if it matches all of those filters.</p> <p>For filters on the same field, you cannot provide both an <code>EQUALS</code> filter and a <code>NOT_EQUALS</code> or <code>PREFIX_NOT_EQUALS</code> filter. Combining filters in this way always returns an error, even if the provided filter values would return valid results.</p> <p>You can combine <code>PREFIX</code> filters with <code>NOT_EQUALS</code> or <code>PREFIX_NOT_EQUALS</code> filters for the same field. Security Hub first processes the <code>PREFIX</code> filters, then the <code>NOT_EQUALS</code> or <code>PREFIX_NOT_EQUALS</code> filters.</p> <p> For example, for the following filter, Security Hub first identifies findings that have resource types that start with either <code>AwsIAM</code> or <code>AwsEc2</code>. It then excludes findings that have a resource type of <code>AwsIamPolicy</code> and findings that have a resource type of <code>AwsEc2NetworkInterface</code>.</p> <ul> <li> <p> <code>ResourceType PREFIX AwsIam</code> </p> </li> <li> <p> <code>ResourceType PREFIX AwsEc2</code> </p> </li> <li> <p> <code>ResourceType NOT_EQUALS AwsIamPolicy</code> </p> </li> <li> <p> <code>ResourceType NOT_EQUALS AwsEc2NetworkInterface</code> </p> </li> </ul>
      description: A string filter for querying findings.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagMap"
            - description: The tags to add to the resource. You can add up to 50 tags at a time. The tag keys can be no longer than 128 characters. The tag values can be no longer than 256 characters.
    Threat:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the threat. "
        Severity:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The severity of the threat. "
        ItemCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "This total number of items in which the threat has been detected. "
        FilePaths:
          allOf:
            - $ref: "#/components/schemas/FilePathList"
            - description: "Provides information about the file paths that were affected by the threat. "
      description: "Provides information about the threat detected in a security finding and the file paths that were affected by the threat. "
    ThreatIntelIndicatorType:
      type: string
      enum:
        - DOMAIN
        - EMAIL_ADDRESS
        - HASH_MD5
        - HASH_SHA1
        - HASH_SHA256
        - HASH_SHA512
        - IPV4_ADDRESS
        - IPV6_ADDRESS
        - MUTEX
        - PROCESS
        - URL
    ThreatIntelIndicatorCategory:
      type: string
      enum:
        - BACKDOOR
        - CARD_STEALER
        - COMMAND_AND_CONTROL
        - DROP_SITE
        - EXPLOIT_SITE
        - KEYLOGGER
    ThreatIntelIndicator:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/ThreatIntelIndicatorType"
            - description: The type of threat intelligence indicator.
        Value:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The value of a threat intelligence indicator.
        Category:
          allOf:
            - $ref: "#/components/schemas/ThreatIntelIndicatorCategory"
            - description: The category of a threat intelligence indicator.
        LastObservedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the most recent instance of a threat intelligence indicator was observed.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        Source:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The source of the threat intelligence indicator.
        SourceUrl:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The URL to the page or site where you can get more information about the threat intelligence indicator.
      description: Details about the threat intelligence related to a finding.
    UnprocessedErrorCode:
      type: string
      enum:
        - INVALID_INPUT
        - ACCESS_DENIED
        - NOT_FOUND
        - LIMIT_EXCEEDED
    UnprocessedSecurityControl:
      type: object
      required:
        - SecurityControlId
        - ErrorCode
      properties:
        SecurityControlId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The control (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters) for which a response couldn't be returned. "
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/UnprocessedErrorCode"
            - description: " The error code for the unprocessed security control. "
        ErrorReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: " The reason why the security control was unprocessed. "
      description: " Provides details about a security control for which a response couldn't be returned. "
    UnprocessedStandardsControlAssociation:
      type: object
      required:
        - StandardsControlAssociationId
        - ErrorCode
      properties:
        StandardsControlAssociationId:
          allOf:
            - $ref: "#/components/schemas/StandardsControlAssociationId"
            - description: " An array with one or more objects that includes a security control (identified with <code>SecurityControlId</code>, <code>SecurityControlArn</code>, or a mix of both parameters) and the Amazon Resource Name (ARN) of a standard. This parameter shows the specific controls for which the enablement status couldn't be retrieved in specified standards when calling <a href=\"https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateStandardsControlAssociations.html\">BatchUpdateStandardsControlAssociations</a>. "
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/UnprocessedErrorCode"
            - description: "The error code for the unprocessed standard and control association. "
        ErrorReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The reason why the standard and control association was unprocessed. "
      description: " Provides details about which control's enablement status couldn't be retrieved in a specified standard when calling <a href=\"https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateStandardsControlAssociations.html\">BatchUpdateStandardsControlAssociations</a>. This parameter also provides details about why the request was unprocessed. "
    UnprocessedStandardsControlAssociationUpdate:
      type: object
      required:
        - StandardsControlAssociationUpdate
        - ErrorCode
      properties:
        StandardsControlAssociationUpdate:
          allOf:
            - $ref: "#/components/schemas/StandardsControlAssociationUpdate"
            - description: 'An array of control and standard associations for which an update failed when calling <a href="https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateStandardsControlAssociations.html">BatchUpdateStandardsControlAssociations</a>. '
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/UnprocessedErrorCode"
            - description: The error code for the unprocessed update of the control's enablement status in the specified standard.
        ErrorReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The reason why a control's enablement status in the specified standard couldn't be updated. "
      description: "Provides details about which control's enablement status could not be updated in a specified standard when calling the <a href=\"https://docs.aws.amazon.com/securityhub/1.0/APIReference/API_BatchUpdateStandardsControlAssociations.html\">BatchUpdateStandardsControlAssociations</a> API. This parameter also provides details about why the request was unprocessed. "
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateActionTargetRequest:
      type: object
      title: UpdateActionTargetRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The updated name of the custom action target.
        Description:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The updated description for the custom action target.
    UpdateFindingAggregatorRequest:
      type: object
      required:
        - FindingAggregatorArn
        - RegionLinkingMode
      title: UpdateFindingAggregatorRequest
      properties:
        FindingAggregatorArn:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The ARN of the finding aggregator. To obtain the ARN, use <code>ListFindingAggregators</code>.
        RegionLinkingMode:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates whether to aggregate findings from all of the available Regions in the current partition. Also determines whether to automatically aggregate findings from new Regions as Security Hub supports them and you opt into them.</p> <p>The selected option also determines how to use the Regions provided in the Regions list.</p> <p>The options are as follows:</p> <ul> <li> <p> <code>ALL_REGIONS</code> - Indicates to aggregate findings from all of the Regions where Security Hub is enabled. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. </p> </li> <li> <p> <code>ALL_REGIONS_EXCEPT_SPECIFIED</code> - Indicates to aggregate findings from all of the Regions where Security Hub is enabled, except for the Regions listed in the <code>Regions</code> parameter. When you choose this option, Security Hub also automatically aggregates findings from new Regions as Security Hub supports them and you opt into them. </p> </li> <li> <p> <code>SPECIFIED_REGIONS</code> - Indicates to aggregate findings only from the Regions listed in the <code>Regions</code> parameter. Security Hub does not automatically aggregate findings from new Regions. </p> </li> </ul>
        Regions:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: <p>If <code>RegionLinkingMode</code> is <code>ALL_REGIONS_EXCEPT_SPECIFIED</code>, then this is a space-separated list of Regions that do not aggregate findings to the aggregation Region.</p> <p>If <code>RegionLinkingMode</code> is <code>SPECIFIED_REGIONS</code>, then this is a space-separated list of Regions that do aggregate findings to the aggregation Region.</p>
    UpdateFindingsRequest:
      type: object
      required:
        - Filters
      title: UpdateFindingsRequest
      properties:
        Filters:
          allOf:
            - $ref: "#/components/schemas/AwsSecurityFindingFilters"
            - description: A collection of attributes that specify which findings you want to update.
        Note:
          allOf:
            - $ref: "#/components/schemas/NoteUpdate"
            - description: The updated note for the finding.
        RecordState:
          allOf:
            - $ref: "#/components/schemas/RecordState"
            - description: The updated record state for the finding.
    UpdateInsightRequest:
      type: object
      title: UpdateInsightRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The updated name for the insight.
        Filters:
          allOf:
            - $ref: "#/components/schemas/AwsSecurityFindingFilters"
            - description: The updated filters that define this insight.
        GroupByAttribute:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The updated <code>GroupBy</code> attribute that defines this insight.
    UpdateOrganizationConfigurationRequest:
      type: object
      required:
        - AutoEnable
      title: UpdateOrganizationConfigurationRequest
      properties:
        AutoEnable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Whether to automatically enable Security Hub for new accounts in the organization.</p> <p>By default, this is <code>false</code>, and new accounts are not added automatically.</p> <p>To automatically enable Security Hub for new accounts, set this to <code>true</code>.</p>
        AutoEnableStandards:
          allOf:
            - $ref: "#/components/schemas/AutoEnableStandards"
            - description: <p>Whether to automatically enable Security Hub <a href="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-enable-disable.html">default standards</a> for new member accounts in the organization.</p> <p>By default, this parameter is equal to <code>DEFAULT</code>, and new member accounts are automatically enabled with default Security Hub standards.</p> <p>To opt out of enabling default standards for new member accounts, set this parameter equal to <code>NONE</code>.</p>
    UpdateSecurityHubConfigurationRequest:
      type: object
      title: UpdateSecurityHubConfigurationRequest
      properties:
        AutoEnableControls:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p>Whether to automatically enable new controls when they are added to standards that are enabled.</p> <p>By default, this is set to <code>true</code>, and new controls are enabled automatically. To not automatically enable new controls, set this to <code>false</code>. </p>
        ControlFindingGenerator:
          allOf:
            - $ref: "#/components/schemas/ControlFindingGenerator"
            - description: <p>Updates whether the calling account has consolidated control findings turned on. If the value for this field is set to <code>SECURITY_CONTROL</code>, Security Hub generates a single finding for a control check even when the check applies to multiple enabled standards.</p> <p>If the value for this field is set to <code>STANDARD_CONTROL</code>, Security Hub generates separate findings for a control check when the check applies to multiple enabled standards.</p> <p>For accounts that are part of an organization, this value can only be updated in the administrator account.</p>
    UpdateStandardsControlRequest:
      type: object
      title: UpdateStandardsControlRequest
      properties:
        ControlStatus:
          allOf:
            - $ref: "#/components/schemas/ControlStatus"
            - description: The updated status of the security standard control.
        DisabledReason:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: A description of the reason why you are disabling a security standard control. If you are disabling a control, then this is required.
    VolumeMount:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The name of the volume. "
        MountPath:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The path in the container at which the volume should be mounted. "
      description: "Describes the mounting of a volume in a container. "
    VpcInfoCidrBlockSetDetails:
      type: object
      properties:
        CidrBlock:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The IPv4 CIDR block for the VPC. "
      description: "Provides details about the IPv4 CIDR blocks for the VPC. "
    VpcInfoIpv6CidrBlockSetDetails:
      type: object
      properties:
        Ipv6CidrBlock:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: "The IPv6 CIDR block for the VPC. "
      description: "Provides details about the IPv6 CIDR blocks for the VPC. "
    VulnerabilityVendor:
      type: object
      required:
        - Name
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The name of the vendor.
        Url:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The URL of the vulnerability advisory.
        VendorSeverity:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The severity that the vendor assigned to the vulnerability.
        VendorCreatedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the vulnerability advisory was created.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
        VendorUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: <p>Indicates when the vulnerability advisory was last updated.</p> <p>Uses the <code>date-time</code> format specified in <a href="https://tools.ietf.org/html/rfc3339#section-5.6">RFC 3339 section 5.6, Internet Date/Time Format</a>. The value cannot contain spaces, and date and time should be separated by <code>T</code>. For example, <code>2020-03-22T13:22:13.933Z</code>.</p>
      description: A vendor that generates a vulnerability report.
    VulnerabilityFixAvailable:
      type: string
      enum:
        - YES
        - NO
        - PARTIAL
    Vulnerability:
      type: object
      required:
        - Id
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The identifier of the vulnerability.
        VulnerablePackages:
          allOf:
            - $ref: "#/components/schemas/SoftwarePackageList"
            - description: List of software packages that have the vulnerability.
        Cvss:
          allOf:
            - $ref: "#/components/schemas/CvssList"
            - description: CVSS scores from the advisory related to the vulnerability.
        RelatedVulnerabilities:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: List of vulnerabilities that are related to this vulnerability.
        Vendor:
          allOf:
            - $ref: "#/components/schemas/VulnerabilityVendor"
            - description: Information about the vendor that generates the vulnerability report.
        ReferenceUrls:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of URLs that provide additional information about the vulnerability.
        FixAvailable:
          allOf:
            - $ref: "#/components/schemas/VulnerabilityFixAvailable"
            - description: <p>Specifies if all vulnerable packages in a finding have a value for <code>FixedInVersion</code> and <code>Remediation</code>. This field is evaluated for each vulnerability <code>Id</code> based on the number of vulnerable packages that have a value for both <code>FixedInVersion</code> and <code>Remediation</code>. Valid values are as follows:</p> <ul> <li> <p> <code>YES</code> if all vulnerable packages have a value for both <code>FixedInVersion</code> and <code>Remediation</code> </p> </li> <li> <p> <code>NO</code> if no vulnerable packages have a value for <code>FixedInVersion</code> and <code>Remediation</code> </p> </li> <li> <p> <code>PARTIAL</code> otherwise</p> </li> </ul>
      description: A vulnerability associated with a finding.
    WafExcludedRule:
      type: object
      properties:
        RuleId:
          allOf:
            - $ref: "#/components/schemas/NonEmptyString"
            - description: The unique identifier for the rule to exclude from the rule group.
      description: Details about a rule to exclude from a rule group.
security:
  - hmac: []
