openapi: 3.0.0
info:
  version: 2019-02-03
  x-release: v4
  title: AWSKendraFrontendService
  description: Amazon Kendra is a service for indexing large document sets.
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: kendra
  x-aws-signingName: kendra
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kendra-2019-02-03.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/kendra/
servers:
  - url: http://kendra.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The kendra multi-region endpoint
  - url: https://kendra.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The kendra multi-region endpoint
  - url: http://kendra.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The kendra endpoint for China (Beijing) and China (Ningxia)
  - url: https://kendra.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The kendra endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AWSKendraFrontendService.AssociateEntitiesToExperience:
    post:
      operationId: AssociateEntitiesToExperience
      description: Grants users or groups in your IAM Identity Center identity source access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateEntitiesToExperienceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceAlreadyExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociateEntitiesToExperienceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.AssociateEntitiesToExperience
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.AssociatePersonasToEntities:
    post:
      operationId: AssociatePersonasToEntities
      description: Defines the specific permissions of users or groups in your IAM Identity Center identity source with access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociatePersonasToEntitiesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceAlreadyExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssociatePersonasToEntitiesRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.AssociatePersonasToEntities
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.BatchDeleteDocument:
    post:
      operationId: BatchDeleteDocument
      description: <p>Removes one or more documents from an index. The documents must have been added with the <code>BatchPutDocument</code> API.</p> <p>The documents are deleted asynchronously. You can see the progress of the deletion by using Amazon Web Services CloudWatch. Any error messages related to the processing of the batch are sent to you CloudWatch log.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDeleteDocumentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDeleteDocumentRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.BatchDeleteDocument
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.BatchDeleteFeaturedResultsSet:
    post:
      operationId: BatchDeleteFeaturedResultsSet
      description: Removes one or more sets of featured results. Features results are placed above all other results for certain queries. If there's an exact match of a query, then one or more specific documents are featured in the search results.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchDeleteFeaturedResultsSetResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchDeleteFeaturedResultsSetRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.BatchDeleteFeaturedResultsSet
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.BatchGetDocumentStatus:
    post:
      operationId: BatchGetDocumentStatus
      description: <p>Returns the indexing status for one or more documents submitted with the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchPutDocument.html"> BatchPutDocument</a> API.</p> <p>When you use the <code>BatchPutDocument</code> API, documents are indexed asynchronously. You can use the <code>BatchGetDocumentStatus</code> API to get the current status of a list of documents so that you can determine if they have been successfully indexed.</p> <p>You can also use the <code>BatchGetDocumentStatus</code> API to check the status of the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchDeleteDocument.html"> BatchDeleteDocument</a> API. When a document is deleted from the index, Amazon Kendra returns <code>NOT_FOUND</code> as the status.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchGetDocumentStatusResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchGetDocumentStatusRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.BatchGetDocumentStatus
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.BatchPutDocument:
    post:
      operationId: BatchPutDocument
      description: <p>Adds one or more documents to an index.</p> <p>The <code>BatchPutDocument</code> API enables you to ingest inline documents or a set of documents stored in an Amazon S3 bucket. Use this API to ingest your text and unstructured text into an index, add custom attributes to the documents, and to attach an access control list to the documents added to the index.</p> <p>The documents are indexed asynchronously. You can see the progress of the batch using Amazon Web Services CloudWatch. Any error messages related to processing the batch are sent to your Amazon Web Services CloudWatch log.</p> <p>For an example of ingesting inline documents using Python and Java SDKs, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-adding-binary-doc.html">Adding files directly to an index</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchPutDocumentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchPutDocumentRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.BatchPutDocument
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ClearQuerySuggestions:
    post:
      operationId: ClearQuerySuggestions
      description: <p>Clears existing query suggestions from an index.</p> <p>This deletes existing suggestions only, not the queries in the query log. After you clear suggestions, Amazon Kendra learns new suggestions based on new queries added to the query log from the time you cleared suggestions. If you do not see any new suggestions, then please allow Amazon Kendra to collect enough queries to learn new suggestions.</p> <p> <code>ClearQuerySuggestions</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClearQuerySuggestionsRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ClearQuerySuggestions
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.CreateAccessControlConfiguration:
    post:
      operationId: CreateAccessControlConfiguration
      description: <p>Creates an access configuration for your documents. This includes user and group access information for your documents. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.</p> <p>You can use this to re-configure your existing document level access control without indexing all of your documents again. For example, your index contains top-secret company documents that only certain employees or users should access. One of these users leaves the company or switches to a team that should be blocked from accessing top-secret documents. The user still has access to top-secret documents because the user had access when your documents were previously indexed. You can create a specific access control configuration for the user with deny access. You can later update the access control configuration to allow access if the user returns to the company and re-joins the 'top-secret' team. You can re-configure access control for your documents as circumstances change.</p> <p>To apply your access control configuration to certain documents, you call the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchPutDocument.html">BatchPutDocument</a> API with the <code>AccessControlConfigurationId</code> included in the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Document.html">Document</a> object. If you use an S3 bucket as a data source, you update the <code>.metadata.json</code> with the <code>AccessControlConfigurationId</code> and synchronize your data source. Amazon Kendra currently only supports access control configuration for S3 data sources and documents indexed using the <code>BatchPutDocument</code> API.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAccessControlConfigurationResponse"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccessControlConfigurationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateAccessControlConfiguration
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.CreateDataSource:
    post:
      operationId: CreateDataSource
      description: <p>Creates a data source connector that you want to use with an Amazon Kendra index.</p> <p>You specify a name, data source connector type and description for your data source. You also specify configuration information for the data source connector.</p> <p> <code>CreateDataSource</code> is a synchronous operation. The operation returns 200 if the data source was successfully created. Otherwise, an exception is raised.</p> <p>For an example of creating an index and data source using the Python SDK, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/gs-python.html">Getting started with Python SDK</a>. For an example of creating an index and data source using the Java SDK, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/gs-java.html">Getting started with Java SDK</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDataSourceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceAlreadyExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "487":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDataSourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateDataSource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.CreateExperience:
    post:
      operationId: CreateExperience
      description: Creates an Amazon Kendra experience such as a search application. For more information on creating a search application experience, including using the Python and Java SDKs, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateExperienceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateExperienceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateExperience
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.CreateFaq:
    post:
      operationId: CreateFaq
      description: <p>Creates a set of frequently ask questions (FAQs) using a specified FAQ file stored in an Amazon S3 bucket.</p> <p>Adding FAQs to an index is an asynchronous operation.</p> <p>For an example of adding an FAQ to an index using Python and Java SDKs, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-creating-faq.html#using-faq-file">Using your FAQ file</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFaqResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFaqRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateFaq
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.CreateFeaturedResultsSet:
    post:
      operationId: CreateFeaturedResultsSet
      description: <p>Creates a set of featured results to display at the top of the search results page. Featured results are placed above all other results for certain queries. You map specific queries to specific documents for featuring in the results. If a query contains an exact match, then one or more specific documents are featured in the search results.</p> <p>You can create up to 50 sets of featured results per index. You can request to increase this limit by contacting <a href="http://aws.amazon.com/contact-us/">Support</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFeaturedResultsSetResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: FeaturedResultsConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeaturedResultsConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateFeaturedResultsSetRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateFeaturedResultsSet
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.CreateIndex:
    post:
      operationId: CreateIndex
      description: <p>Creates an Amazon Kendra index. Index creation is an asynchronous API. To determine if index creation has completed, check the <code>Status</code> field returned from a call to <code>DescribeIndex</code>. The <code>Status</code> field is set to <code>ACTIVE</code> when the index is ready to use.</p> <p>Once the index is active you can index your documents using the <code>BatchPutDocument</code> API or using one of the supported data sources.</p> <p>For an example of creating an index and data source using the Python SDK, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/gs-python.html">Getting started with Python SDK</a>. For an example of creating an index and data source using the Java SDK, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/gs-java.html">Getting started with Java SDK</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateIndexResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceAlreadyExistException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceAlreadyExistException"
        "482":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateIndexRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateIndex
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.CreateQuerySuggestionsBlockList:
    post:
      operationId: CreateQuerySuggestionsBlockList
      description: <p>Creates a block list to exlcude certain queries from suggestions.</p> <p>Any query that contains words or phrases specified in the block list is blocked or filtered out from being shown as a suggestion.</p> <p>You need to provide the file location of your block list text file in your S3 bucket. In your text file, enter each block word or phrase on a separate line.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p> <p> <code>CreateQuerySuggestionsBlockList</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p> <p>For an example of creating a block list for query suggestions using the Python SDK, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/query-suggestions.html#suggestions-block-list">Query suggestions block list</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateQuerySuggestionsBlockListResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateQuerySuggestionsBlockListRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateQuerySuggestionsBlockList
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.CreateThesaurus:
    post:
      operationId: CreateThesaurus
      description: <p>Creates a thesaurus for an index. The thesaurus contains a list of synonyms in Solr format.</p> <p>For an example of adding a thesaurus file to an index, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/index-synonyms-adding-thesaurus-file.html">Adding custom synonyms to an index</a>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateThesaurusResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateThesaurusRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.CreateThesaurus
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DeleteAccessControlConfiguration:
    post:
      operationId: DeleteAccessControlConfiguration
      description: Deletes an access control configuration that you created for your documents in an index. This includes user and group access information for your documents. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAccessControlConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteAccessControlConfigurationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteAccessControlConfiguration
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DeleteDataSource:
    post:
      operationId: DeleteDataSource
      description: Deletes an Amazon Kendra data source connector. An exception is not thrown if the data source is already being deleted. While the data source is being deleted, the <code>Status</code> field returned by a call to the <code>DescribeDataSource</code> API is set to <code>DELETING</code>. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/delete-data-source.html">Deleting Data Sources</a>.
      responses:
        "200":
          description: Success
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDataSourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteDataSource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DeleteExperience:
    post:
      operationId: DeleteExperience
      description: Deletes your Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteExperienceResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteExperienceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteExperience
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DeleteFaq:
    post:
      operationId: DeleteFaq
      description: Removes an FAQ from an index.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteFaqRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteFaq
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DeleteIndex:
    post:
      operationId: DeleteIndex
      description: Deletes an existing Amazon Kendra index. An exception is not thrown if the index is already being deleted. While the index is being deleted, the <code>Status</code> field returned by a call to the <code>DescribeIndex</code> API is set to <code>DELETING</code>.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteIndexRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteIndex
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DeletePrincipalMapping:
    post:
      operationId: DeletePrincipalMapping
      description: <p>Deletes a group so that all users and sub groups that belong to the group can no longer access documents only available to that group.</p> <p>For example, after deleting the group "Summer Interns", all interns who belonged to that group no longer see intern-only documents in their search results.</p> <p>If you want to delete or replace users or sub groups of a group, you need to use the <code>PutPrincipalMapping</code> operation. For example, if a user in the group "Engineering" leaves the engineering team and another user takes their place, you provide an updated list of users or sub groups that belong to the "Engineering" group when calling <code>PutPrincipalMapping</code>. You can update your internal list of users or sub groups and input this list when calling <code>PutPrincipalMapping</code>.</p> <p> <code>DeletePrincipalMapping</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeletePrincipalMappingRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeletePrincipalMapping
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DeleteQuerySuggestionsBlockList:
    post:
      operationId: DeleteQuerySuggestionsBlockList
      description: <p>Deletes a block list used for query suggestions for an index.</p> <p>A deleted block list might not take effect right away. Amazon Kendra needs to refresh the entire suggestions list to add back the queries that were previously blocked.</p> <p> <code>DeleteQuerySuggestionsBlockList</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteQuerySuggestionsBlockListRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteQuerySuggestionsBlockList
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DeleteThesaurus:
    post:
      operationId: DeleteThesaurus
      description: "Deletes an existing Amazon Kendra thesaurus. "
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteThesaurusRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DeleteThesaurus
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DescribeAccessControlConfiguration:
    post:
      operationId: DescribeAccessControlConfiguration
      description: Gets information about an access control configuration that you created for your documents in an index. This includes user and group access information for your documents. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeAccessControlConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeAccessControlConfigurationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeAccessControlConfiguration
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DescribeDataSource:
    post:
      operationId: DescribeDataSource
      description: Gets information about an Amazon Kendra data source connector.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeDataSourceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeDataSourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeDataSource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DescribeExperience:
    post:
      operationId: DescribeExperience
      description: Gets information about your Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeExperienceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeExperienceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeExperience
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DescribeFaq:
    post:
      operationId: DescribeFaq
      description: Gets information about an FAQ list.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFaqResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeFaqRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeFaq
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DescribeFeaturedResultsSet:
    post:
      operationId: DescribeFeaturedResultsSet
      description: Gets information about a set of featured results. Features results are placed above all other results for certain queries. If there's an exact match of a query, then one or more specific documents are featured in the search results.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeFeaturedResultsSetResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeFeaturedResultsSetRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeFeaturedResultsSet
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DescribeIndex:
    post:
      operationId: DescribeIndex
      description: Gets information about an existing Amazon Kendra index.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeIndexResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeIndexRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeIndex
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DescribePrincipalMapping:
    post:
      operationId: DescribePrincipalMapping
      description: <p>Describes the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups. This includes information on the status of actions currently processing or yet to be processed, when actions were last updated, when actions were received by Amazon Kendra, the latest action that should process and apply after other actions, and useful error messages if an action could not be processed.</p> <p> <code>DescribePrincipalMapping</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribePrincipalMappingResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribePrincipalMappingRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribePrincipalMapping
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DescribeQuerySuggestionsBlockList:
    post:
      operationId: DescribeQuerySuggestionsBlockList
      description: <p>Gets information about a block list used for query suggestions for an index.</p> <p>This is used to check the current settings that are applied to a block list.</p> <p> <code>DescribeQuerySuggestionsBlockList</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeQuerySuggestionsBlockListResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeQuerySuggestionsBlockListRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeQuerySuggestionsBlockList
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DescribeQuerySuggestionsConfig:
    post:
      operationId: DescribeQuerySuggestionsConfig
      description: <p>Gets information on the settings of query suggestions for an index.</p> <p>This is used to check the current settings applied to query suggestions.</p> <p> <code>DescribeQuerySuggestionsConfig</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeQuerySuggestionsConfigResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeQuerySuggestionsConfigRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeQuerySuggestionsConfig
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DescribeThesaurus:
    post:
      operationId: DescribeThesaurus
      description: Gets information about an existing Amazon Kendra thesaurus.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeThesaurusResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DescribeThesaurusRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DescribeThesaurus
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DisassociateEntitiesFromExperience:
    post:
      operationId: DisassociateEntitiesFromExperience
      description: Prevents users or groups in your IAM Identity Center identity source from accessing your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateEntitiesFromExperienceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociateEntitiesFromExperienceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DisassociateEntitiesFromExperience
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.DisassociatePersonasFromEntities:
    post:
      operationId: DisassociatePersonasFromEntities
      description: Removes the specific permissions of users or groups in your IAM Identity Center identity source with access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociatePersonasFromEntitiesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisassociatePersonasFromEntitiesRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.DisassociatePersonasFromEntities
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.GetQuerySuggestions:
    post:
      operationId: GetQuerySuggestions
      description: <p>Fetches the queries that are suggested to your users.</p> <p> <code>GetQuerySuggestions</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetQuerySuggestionsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetQuerySuggestionsRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.GetQuerySuggestions
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.GetSnapshots:
    post:
      operationId: GetSnapshots
      description: Retrieves search metrics data. The data provides a snapshot of how your users interact with your search application and how effective the application is.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSnapshotsResponse"
        "480":
          description: InvalidRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidRequestException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetSnapshotsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.GetSnapshots
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListAccessControlConfigurations:
    post:
      operationId: ListAccessControlConfigurations
      description: Lists one or more access control configurations for an index. This includes user and group access information for your documents. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAccessControlConfigurationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListAccessControlConfigurationsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListAccessControlConfigurations
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListDataSourceSyncJobs:
    post:
      operationId: ListDataSourceSyncJobs
      description: Gets statistics about synchronizing a data source connector.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDataSourceSyncJobsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDataSourceSyncJobsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListDataSourceSyncJobs
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListDataSources:
    post:
      operationId: ListDataSources
      description: Lists the data source connectors that you have created.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDataSourcesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListDataSourcesRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListDataSources
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListEntityPersonas:
    post:
      operationId: ListEntityPersonas
      description: Lists specific permissions of users and groups with access to your Amazon Kendra experience.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEntityPersonasResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEntityPersonasRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListEntityPersonas
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListExperienceEntities:
    post:
      operationId: ListExperienceEntities
      description: Lists users or groups in your IAM Identity Center identity source that are granted access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListExperienceEntitiesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListExperienceEntitiesRequest"
      parameters:
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListExperienceEntities
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListExperiences:
    post:
      operationId: ListExperiences
      description: Lists one or more Amazon Kendra experiences. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListExperiencesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListExperiencesRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListExperiences
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListFaqs:
    post:
      operationId: ListFaqs
      description: Gets a list of FAQ lists associated with an index.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFaqsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListFaqsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListFaqs
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListFeaturedResultsSets:
    post:
      operationId: ListFeaturedResultsSets
      description: Lists all your sets of featured results for a given index. Features results are placed above all other results for certain queries. If there's an exact match of a query, then one or more specific documents are featured in the search results.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFeaturedResultsSetsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListFeaturedResultsSetsRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListFeaturedResultsSets
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListGroupsOlderThanOrderingId:
    post:
      operationId: ListGroupsOlderThanOrderingId
      description: <p>Provides a list of groups that are mapped to users before a given ordering or timestamp identifier.</p> <p> <code>ListGroupsOlderThanOrderingId</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGroupsOlderThanOrderingIdResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListGroupsOlderThanOrderingIdRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListGroupsOlderThanOrderingId
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListIndices:
    post:
      operationId: ListIndices
      description: Lists the Amazon Kendra indexes that you created.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListIndicesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListIndicesRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListIndices
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListQuerySuggestionsBlockLists:
    post:
      operationId: ListQuerySuggestionsBlockLists
      description: <p>Lists the block lists used for query suggestions for an index.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p> <p> <code>ListQuerySuggestionsBlockLists</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListQuerySuggestionsBlockListsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListQuerySuggestionsBlockListsRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListQuerySuggestionsBlockLists
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Gets a list of tags associated with a specified resource. Indexes, FAQs, and data sources can have tags associated with them.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListTagsForResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.ListThesauri:
    post:
      operationId: ListThesauri
      description: Lists the thesauri for an index.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListThesauriResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListThesauriRequest"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.ListThesauri
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.PutPrincipalMapping:
    post:
      operationId: PutPrincipalMapping
      description: <p>Maps users to their groups so that you only need to provide the user ID when you issue the query.</p> <p>You can also map sub groups to groups. For example, the group "Company Intellectual Property Teams" includes sub groups "Research" and "Engineering". These sub groups include their own list of users or people who work in these teams. Only users who work in research and engineering, and therefore belong in the intellectual property group, can see top-secret company documents in their search results.</p> <p>This is useful for user context filtering, where search results are filtered based on the user or their group access to documents. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">Filtering on user context</a>.</p> <p>If more than five <code>PUT</code> actions for a group are currently processing, a validation exception is thrown.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutPrincipalMappingRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.PutPrincipalMapping
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.Query:
    post:
      operationId: Query
      description: <p>Searches an active index. Use this API to search your documents using query. The <code>Query</code> API enables to do faceted search and to filter results based on document attributes.</p> <p>It also enables you to provide user context that Amazon Kendra uses to enforce document access control in the search results.</p> <p>Amazon Kendra searches your index for text content and question and answer (FAQ) content. By default the response contains three types of results.</p> <ul> <li> <p>Relevant passages</p> </li> <li> <p>Matching FAQs</p> </li> <li> <p>Relevant documents</p> </li> </ul> <p>You can specify that the query return only one type of result using the <code>QueryResultTypeFilter</code> parameter.</p> <p>Each query returns the 100 most relevant results. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryResult"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QueryRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.Query
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.StartDataSourceSyncJob:
    post:
      operationId: StartDataSourceSyncJob
      description: Starts a synchronization job for a data source connector. If a synchronization job is already in progress, Amazon Kendra returns a <code>ResourceInUseException</code> exception.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartDataSourceSyncJobResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartDataSourceSyncJobRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.StartDataSourceSyncJob
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.StopDataSourceSyncJob:
    post:
      operationId: StopDataSourceSyncJob
      description: Stops a synchronization job that is currently running. You can't stop a scheduled synchronization job.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopDataSourceSyncJobRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.StopDataSourceSyncJob
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.SubmitFeedback:
    post:
      operationId: SubmitFeedback
      description: <p>Enables you to provide feedback to Amazon Kendra to improve the performance of your index.</p> <p> <code>SubmitFeedback</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitFeedbackRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.SubmitFeedback
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.TagResource:
    post:
      operationId: TagResource
      description: Adds the specified tag to the specified index, FAQ, or data source resource. If the tag already exists, the existing value is replaced with the new value.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.TagResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.UntagResource:
    post:
      operationId: UntagResource
      description: Removes a tag from an index, FAQ, or a data source.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceUnavailableException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceUnavailableException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UntagResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.UpdateAccessControlConfiguration:
    post:
      operationId: UpdateAccessControlConfiguration
      description: <p>Updates an access control configuration for your documents in an index. This includes user and group access information for your documents. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.</p> <p>You can update an access control configuration you created without indexing all of your documents again. For example, your index contains top-secret company documents that only certain employees or users should access. You created an 'allow' access control configuration for one user who recently joined the 'top-secret' team, switching from a team with 'deny' access to top-secret documents. However, the user suddenly returns to their previous team and should no longer have access to top secret documents. You can update the access control configuration to re-configure access control for your documents as circumstances change.</p> <p>You call the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchPutDocument.html">BatchPutDocument</a> API to apply the updated access control configuration, with the <code>AccessControlConfigurationId</code> included in the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Document.html">Document</a> object. If you use an S3 bucket as a data source, you synchronize your data source to apply the <code>AccessControlConfigurationId</code> in the <code>.metadata.json</code> file. Amazon Kendra currently only supports access control configuration for S3 data sources and documents indexed using the <code>BatchPutDocument</code> API.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAccessControlConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccessControlConfigurationRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateAccessControlConfiguration
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.UpdateDataSource:
    post:
      operationId: UpdateDataSource
      description: Updates an existing Amazon Kendra data source connector.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDataSourceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateDataSource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.UpdateExperience:
    post:
      operationId: UpdateExperience
      description: Updates your Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateExperienceRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateExperience
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.UpdateFeaturedResultsSet:
    post:
      operationId: UpdateFeaturedResultsSet
      description: Updates a set of featured results. Features results are placed above all other results for certain queries. You map specific queries to specific documents for featuring in the results. If a query contains an exact match of a query, then one or more specific documents are featured in the search results.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFeaturedResultsSetResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: FeaturedResultsConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeaturedResultsConflictException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateFeaturedResultsSetRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateFeaturedResultsSet
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.UpdateIndex:
    post:
      operationId: UpdateIndex
      description: Updates an existing Amazon Kendra index.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateIndexRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateIndex
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.UpdateQuerySuggestionsBlockList:
    post:
      operationId: UpdateQuerySuggestionsBlockList
      description: <p>Updates a block list used for query suggestions for an index.</p> <p>Updates to a block list might not take effect right away. Amazon Kendra needs to refresh the entire suggestions list to apply any updates to the block list. Other changes not related to the block list apply immediately.</p> <p>If a block list is updating, then you need to wait for the first update to finish before submitting another update.</p> <p>Amazon Kendra supports partial updates, so you only need to provide the fields you want to update.</p> <p> <code>UpdateQuerySuggestionsBlockList</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateQuerySuggestionsBlockListRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateQuerySuggestionsBlockList
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.UpdateQuerySuggestionsConfig:
    post:
      operationId: UpdateQuerySuggestionsConfig
      description: <p>Updates the settings of query suggestions for an index.</p> <p>Amazon Kendra supports partial updates, so you only need to provide the fields you want to update.</p> <p>If an update is currently processing (i.e. 'happening'), you need to wait for the update to finish before making another update.</p> <p>Updates to query suggestions settings might not take effect right away. The time for your updated settings to take effect depends on the updates made and the number of search queries in your index.</p> <p>You can still enable/disable query suggestions at any time.</p> <p> <code>UpdateQuerySuggestionsConfig</code> is currently not supported in the Amazon Web Services GovCloud (US-West) region.</p>
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateQuerySuggestionsConfigRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateQuerySuggestionsConfig
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AWSKendraFrontendService.UpdateThesaurus:
    post:
      operationId: UpdateThesaurus
      description: Updates a thesaurus for an index.
      responses:
        "200":
          description: Success
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateThesaurusRequest"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AWSKendraFrontendService.UpdateThesaurus
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateEntitiesToExperienceResponse:
      type: object
      properties:
        FailedEntityList:
          allOf:
            - $ref: "#/components/schemas/AssociateEntitiesToExperienceFailedEntityList"
            - description: Lists the users or groups in your IAM Identity Center identity source that failed to properly configure with your Amazon Kendra experience.
    AssociateEntitiesToExperienceRequest:
      type: object
      required:
        - Id
        - IndexId
        - EntityList
      title: AssociateEntitiesToExperienceRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: The identifier of your Amazon Kendra experience.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for your Amazon Kendra experience.
        EntityList:
          allOf:
            - $ref: "#/components/schemas/AssociateEntityList"
            - description: Lists users or groups in your IAM Identity Center identity source.
    ValidationException: {}
    ResourceNotFoundException: {}
    ResourceAlreadyExistException: {}
    ThrottlingException: {}
    AccessDeniedException: {}
    InternalServerException: {}
    AssociatePersonasToEntitiesResponse:
      type: object
      properties:
        FailedEntityList:
          allOf:
            - $ref: "#/components/schemas/FailedEntityList"
            - description: Lists the users or groups in your IAM Identity Center identity source that failed to properly configure with your Amazon Kendra experience.
    AssociatePersonasToEntitiesRequest:
      type: object
      required:
        - Id
        - IndexId
        - Personas
      title: AssociatePersonasToEntitiesRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: The identifier of your Amazon Kendra experience.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for your Amazon Kendra experience.
        Personas:
          allOf:
            - $ref: "#/components/schemas/EntityPersonaConfigurationList"
            - description: The personas that define the specific permissions of users or groups in your IAM Identity Center identity source. The available personas or access roles are <code>Owner</code> and <code>Viewer</code>. For more information on these personas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html#access-search-experience">Providing access to your search page</a>.
    BatchDeleteDocumentResponse:
      type: object
      properties:
        FailedDocuments:
          allOf:
            - $ref: "#/components/schemas/BatchDeleteDocumentResponseFailedDocuments"
            - description: A list of documents that could not be removed from the index. Each entry contains an error message that indicates why the document couldn't be removed from the index.
    BatchDeleteDocumentRequest:
      type: object
      required:
        - IndexId
        - DocumentIdList
      title: BatchDeleteDocumentRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index that contains the documents to delete.
        DocumentIdList:
          allOf:
            - $ref: "#/components/schemas/DocumentIdList"
            - description: One or more identifiers for documents to delete from the index.
        DataSourceSyncJobMetricTarget:
          $ref: "#/components/schemas/DataSourceSyncJobMetricTarget"
    ConflictException: {}
    BatchDeleteFeaturedResultsSetResponse:
      type: object
      required:
        - Errors
      properties:
        Errors:
          allOf:
            - $ref: "#/components/schemas/BatchDeleteFeaturedResultsSetErrors"
            - description: The list of errors for the featured results set IDs, explaining why they couldn't be removed from the index.
    BatchDeleteFeaturedResultsSetRequest:
      type: object
      required:
        - IndexId
        - FeaturedResultsSetIds
      title: BatchDeleteFeaturedResultsSetRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used for featuring results.
        FeaturedResultsSetIds:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetIdList"
            - description: The identifiers of the featured results sets that you want to delete.
    BatchGetDocumentStatusResponse:
      type: object
      properties:
        Errors:
          allOf:
            - $ref: "#/components/schemas/BatchGetDocumentStatusResponseErrors"
            - description: A list of documents that Amazon Kendra couldn't get the status for. The list includes the ID of the document and the reason that the status couldn't be found.
        DocumentStatusList:
          allOf:
            - $ref: "#/components/schemas/DocumentStatusList"
            - description: The status of documents. The status indicates if the document is waiting to be indexed, is in the process of indexing, has completed indexing, or failed indexing. If a document failed indexing, the status provides the reason why.
    BatchGetDocumentStatusRequest:
      type: object
      required:
        - IndexId
        - DocumentInfoList
      title: BatchGetDocumentStatusRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index to add documents to. The index ID is returned by the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_CreateIndex.html">CreateIndex </a> API.
        DocumentInfoList:
          allOf:
            - $ref: "#/components/schemas/DocumentInfoList"
            - description: A list of <code>DocumentInfo</code> objects that identify the documents for which to get the status. You identify the documents by their document ID and optional attributes.
    BatchPutDocumentResponse:
      type: object
      properties:
        FailedDocuments:
          allOf:
            - $ref: "#/components/schemas/BatchPutDocumentResponseFailedDocuments"
            - description: <p>A list of documents that were not added to the index because the document failed a validation check. Each document contains an error message that indicates why the document couldn't be added to the index.</p> <p>If there was an error adding a document to an index the error is reported in your Amazon Web Services CloudWatch log. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/cloudwatch-logs.html">Monitoring Amazon Kendra with Amazon CloudWatch Logs</a> </p>
    BatchPutDocumentRequest:
      type: object
      required:
        - IndexId
        - Documents
      title: BatchPutDocumentRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index to add the documents to. You need to create the index first using the <code>CreateIndex</code> API.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of an IAM role with permission to access your S3 bucket. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM access roles for Amazon Kendra</a>.
        Documents:
          allOf:
            - $ref: "#/components/schemas/DocumentList"
            - description: <p>One or more documents to add to the index.</p> <p>Documents have the following file size limits.</p> <ul> <li> <p>50 MB total size for any file</p> </li> <li> <p>5 MB extracted text for any file</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas</a>.</p>
        CustomDocumentEnrichmentConfiguration:
          allOf:
            - $ref: "#/components/schemas/CustomDocumentEnrichmentConfiguration"
            - description: <p>Configuration information for altering your document metadata and content during the document ingestion process when you use the <code>BatchPutDocument</code> API.</p> <p>For more information on how to create, modify and delete document metadata, or make other content alterations when you ingest documents into Amazon Kendra, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html">Customizing document metadata during the ingestion process</a>.</p>
    ServiceQuotaExceededException: {}
    ClearQuerySuggestionsRequest:
      type: object
      required:
        - IndexId
      title: ClearQuerySuggestionsRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index you want to clear query suggestions from.
    CreateAccessControlConfigurationResponse:
      type: object
      required:
        - Id
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/AccessControlConfigurationId"
            - description: The identifier of the access control configuration for your documents in an index.
    CreateAccessControlConfigurationRequest:
      type: object
      required:
        - IndexId
        - Name
      title: CreateAccessControlConfigurationRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index to create an access control configuration for your documents.
        Name:
          allOf:
            - $ref: "#/components/schemas/AccessControlConfigurationName"
            - description: A name for the access control configuration.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description for the access control configuration.
        AccessControlList:
          allOf:
            - $ref: "#/components/schemas/PrincipalList"
            - description: Information on principals (users and/or groups) and which documents they should have access to. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
        HierarchicalAccessControlList:
          allOf:
            - $ref: "#/components/schemas/HierarchicalPrincipalList"
            - description: The list of <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html">principal</a> lists that define the hierarchy for which documents users should have access to.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientTokenName"
            - description: A token that you provide to identify the request to create an access control configuration. Multiple calls to the <code>CreateAccessControlConfiguration</code> API with the same client token will create only one access control configuration.
    CreateDataSourceResponse:
      type: object
      required:
        - Id
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source connector.
    CreateDataSourceRequest:
      type: object
      required:
        - Name
        - IndexId
        - Type
      title: CreateDataSourceRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/DataSourceName"
            - description: A name for the data source connector.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index you want to use with the data source connector.
        Type:
          allOf:
            - $ref: "#/components/schemas/DataSourceType"
            - description: The type of data source repository. For example, <code>SHAREPOINT</code>.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/DataSourceConfiguration"
            - description: <p>Configuration information to connect to your data source repository.</p> <p>You can't specify the <code>Configuration</code> parameter when the <code>Type</code> parameter is set to <code>CUSTOM</code>. If you do, you receive a <code>ValidationException</code> exception.</p> <p>The <code>Configuration</code> parameter is required for all other data sources.</p>
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information for an Amazon Virtual Private Cloud to connect to your data source. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html">Configuring a VPC</a>.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description for the data source connector.
        Schedule:
          allOf:
            - $ref: "#/components/schemas/ScanSchedule"
            - description: <p>Sets the frequency for Amazon Kendra to check the documents in your data source repository and update the index. If you don't set a schedule Amazon Kendra will not periodically update the index. You can call the <code>StartDataSourceSyncJob</code> API to update the index.</p> <p>Specify a <code>cron-</code> format schedule string or an empty string to indicate that the index is updated on demand.</p> <p>You can't specify the <code>Schedule</code> parameter when the <code>Type</code> parameter is set to <code>CUSTOM</code>. If you do, you receive a <code>ValidationException</code> exception.</p>
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: <p>The Amazon Resource Name (ARN) of an IAM role with permission to access the data source and required resources. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM access roles for Amazon Kendra.</a>.</p> <p>You can't specify the <code>RoleArn</code> parameter when the <code>Type</code> parameter is set to <code>CUSTOM</code>. If you do, you receive a <code>ValidationException</code> exception.</p> <p>The <code>RoleArn</code> parameter is required for all other data sources.</p>
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: "A list of key-value pairs that identify or categorize the data source connector. You can also use tags to help control access to the data source connector. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @."
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientTokenName"
            - description: A token that you provide to identify the request to create a data source connector. Multiple calls to the <code>CreateDataSource</code> API with the same client token will create only one data source connector.
        LanguageCode:
          allOf:
            - $ref: "#/components/schemas/LanguageCode"
            - description: The code for a language. This allows you to support a language for all documents when creating the data source connector. English is supported by default. For more information on supported languages, including their codes, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html">Adding documents in languages other than English</a>.
        CustomDocumentEnrichmentConfiguration:
          allOf:
            - $ref: "#/components/schemas/CustomDocumentEnrichmentConfiguration"
            - description: <p>Configuration information for altering document metadata and content during the document ingestion process.</p> <p>For more information on how to create, modify and delete document metadata, or make other content alterations when you ingest documents into Amazon Kendra, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html">Customizing document metadata during the ingestion process</a>.</p>
    CreateExperienceResponse:
      type: object
      required:
        - Id
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: The identifier of your Amazon Kendra experience.
    CreateExperienceRequest:
      type: object
      required:
        - Name
        - IndexId
      title: CreateExperienceRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ExperienceName"
            - description: A name for your Amazon Kendra experience.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for your Amazon Kendra experience.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of an IAM role with permission to access <code>Query</code> API, <code>GetQuerySuggestions</code> API, and other required APIs. The role also must include permission to access IAM Identity Center (successor to Single Sign-On) that stores your user and group information. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM access roles for Amazon Kendra</a>.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/ExperienceConfiguration"
            - description: Configuration information for your Amazon Kendra experience. This includes <code>ContentSourceConfiguration</code>, which specifies the data source IDs and/or FAQ IDs, and <code>UserIdentityConfiguration</code>, which specifies the user or group information to grant access to your Amazon Kendra experience.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description for your Amazon Kendra experience.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientTokenName"
            - description: A token that you provide to identify the request to create your Amazon Kendra experience. Multiple calls to the <code>CreateExperience</code> API with the same client token creates only one Amazon Kendra experience.
    CreateFaqResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/FaqId"
            - description: The identifier of the FAQ.
    CreateFaqRequest:
      type: object
      required:
        - IndexId
        - Name
        - S3Path
        - RoleArn
      title: CreateFaqRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the FAQ.
        Name:
          allOf:
            - $ref: "#/components/schemas/FaqName"
            - description: A name for the FAQ.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description for the FAQ.
        S3Path:
          allOf:
            - $ref: "#/components/schemas/S3Path"
            - description: The path to the FAQ file in S3.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of an IAM role with permission to access the S3 bucket that contains the FAQs. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM access roles for Amazon Kendra</a>.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: A list of key-value pairs that identify the FAQ. You can use the tags to identify and organize your resources and to control access to resources.
        FileFormat:
          allOf:
            - $ref: "#/components/schemas/FaqFileFormat"
            - description: <p>The format of the FAQ input file. You can choose between a basic CSV format, a CSV format that includes customs attributes in a header, and a JSON format that includes custom attributes.</p> <p>The format must match the format of the file stored in the S3 bucket identified in the <code>S3Path</code> parameter.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-creating-faq.html">Adding questions and answers</a>.</p>
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientTokenName"
            - description: "A token that you provide to identify the request to create a FAQ. Multiple calls to the <code>CreateFaqRequest</code> API with the same client token will create only one FAQ. "
        LanguageCode:
          allOf:
            - $ref: "#/components/schemas/LanguageCode"
            - description: The code for a language. This allows you to support a language for the FAQ document. English is supported by default. For more information on supported languages, including their codes, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html">Adding documents in languages other than English</a>.
    CreateFeaturedResultsSetResponse:
      type: object
      properties:
        FeaturedResultsSet:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSet"
            - description: Information on the set of featured results. This includes the identifier of the featured results set, whether the featured results set is active or inactive, when the featured results set was created, and more.
    CreateFeaturedResultsSetRequest:
      type: object
      required:
        - IndexId
        - FeaturedResultsSetName
      title: CreateFeaturedResultsSetRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index that you want to use for featuring results.
        FeaturedResultsSetName:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetName"
            - description: A name for the set of featured results.
        Description:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetDescription"
            - description: A description for the set of featured results.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientTokenName"
            - description: A token that you provide to identify the request to create a set of featured results. Multiple calls to the <code>CreateFeaturedResultsSet</code> API with the same client token will create only one featured results set.
        Status:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetStatus"
            - description: The current status of the set of featured results. When the value is <code>ACTIVE</code>, featured results are ready for use. You can still configure your settings before setting the status to <code>ACTIVE</code>. You can set the status to <code>ACTIVE</code> or <code>INACTIVE</code> using the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_UpdateFeaturedResultsSet.html">UpdateFeaturedResultsSet</a> API. The queries you specify for featured results must be unique per featured results set for each index, whether the status is <code>ACTIVE</code> or <code>INACTIVE</code>.
        QueryTexts:
          allOf:
            - $ref: "#/components/schemas/QueryTextList"
            - description: A list of queries for featuring results. For more information on the list of queries, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_FeaturedResultsSet.html">FeaturedResultsSet</a>.
        FeaturedDocuments:
          allOf:
            - $ref: "#/components/schemas/FeaturedDocumentList"
            - description: A list of document IDs for the documents you want to feature at the top of the search results page. For more information on the list of documents, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_FeaturedResultsSet.html">FeaturedResultsSet</a>.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: "A list of key-value pairs that identify or categorize the featured results set. You can also use tags to help control access to the featured results set. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols:_ . : / = + - @."
    FeaturedResultsConflictException: {}
    CreateIndexResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index. Use this identifier when you query an index, set up a data source, or index a document.
    CreateIndexRequest:
      type: object
      required:
        - Name
        - RoleArn
      title: CreateIndexRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/IndexName"
            - description: A name for the index.
        Edition:
          allOf:
            - $ref: "#/components/schemas/IndexEdition"
            - description: <p>The Amazon Kendra edition to use for the index. Choose <code>DEVELOPER_EDITION</code> for indexes intended for development, testing, or proof of concept. Use <code>ENTERPRISE_EDITION</code> for production. Once you set the edition for an index, it can't be changed.</p> <p>The <code>Edition</code> parameter is optional. If you don't supply a value, the default is <code>ENTERPRISE_EDITION</code>.</p> <p>For more information on quota limits for Enterprise and Developer editions, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas</a>.</p>
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of an IAM role with permission to access your Amazon CloudWatch logs and metrics. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM access roles for Amazon Kendra</a>.
        ServerSideEncryptionConfiguration:
          allOf:
            - $ref: "#/components/schemas/ServerSideEncryptionConfiguration"
            - description: The identifier of the KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description for the index.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientTokenName"
            - description: A token that you provide to identify the request to create an index. Multiple calls to the <code>CreateIndex</code> API with the same client token will create only one index.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: "A list of key-value pairs that identify or categorize the index. You can also use tags to help control access to the index. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @."
        UserTokenConfigurations:
          allOf:
            - $ref: "#/components/schemas/UserTokenConfigurationList"
            - description: The user token configuration.
        UserContextPolicy:
          allOf:
            - $ref: "#/components/schemas/UserContextPolicy"
            - description: <p>The user context policy.</p> <dl> <dt>ATTRIBUTE_FILTER</dt> <dd> <p>All indexed content is searchable and displayable for all users. If you want to filter search results on user context, you can use the attribute filters of <code>_user_id</code> and <code>_group_ids</code> or you can provide user and group information in <code>UserContext</code>. </p> </dd> <dt>USER_TOKEN</dt> <dd> <p>Enables token-based user access control to filter search results on user context. All documents with no access control and all documents accessible to the user will be searchable and displayable. </p> </dd> </dl>
        UserGroupResolutionConfiguration:
          allOf:
            - $ref: "#/components/schemas/UserGroupResolutionConfiguration"
            - description: Gets users and groups from IAM Identity Center (successor to Single Sign-On) identity source. To configure this, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html">UserGroupResolutionConfiguration</a>.
    CreateQuerySuggestionsBlockListResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListId"
            - description: The identifier of the block list.
    CreateQuerySuggestionsBlockListRequest:
      type: object
      required:
        - IndexId
        - Name
        - SourceS3Path
        - RoleArn
      title: CreateQuerySuggestionsBlockListRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index you want to create a query suggestions block list for.
        Name:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListName"
            - description: <p>A name for the block list.</p> <p>For example, the name 'offensive-words', which includes all offensive words that could appear in user queries and need to be blocked from suggestions.</p>
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: <p>A description for the block list.</p> <p>For example, the description "List of all offensive words that can appear in user queries and need to be blocked from suggestions."</p>
        SourceS3Path:
          allOf:
            - $ref: "#/components/schemas/S3Path"
            - description: <p>The S3 path to your block list text file in your S3 bucket.</p> <p>Each block word or phrase should be on a separate line in a text file.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientTokenName"
            - description: A token that you provide to identify the request to create a query suggestions block list.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of an IAM role with permission to access your S3 bucket that contains the block list text file. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM access roles for Amazon Kendra</a>.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: "A list of key-value pairs that identify or categorize the block list. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @."
    CreateThesaurusResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ThesaurusId"
            - description: "The identifier of the thesaurus. "
    CreateThesaurusRequest:
      type: object
      required:
        - IndexId
        - Name
        - RoleArn
        - SourceS3Path
      title: CreateThesaurusRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the thesaurus.
        Name:
          allOf:
            - $ref: "#/components/schemas/ThesaurusName"
            - description: A name for the thesaurus.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description for the thesaurus.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of an IAM role with permission to access your S3 bucket that contains the thesaurus file. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM access roles for Amazon Kendra</a>.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: "A list of key-value pairs that identify or categorize the thesaurus. You can also use tags to help control access to the thesaurus. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @."
        SourceS3Path:
          allOf:
            - $ref: "#/components/schemas/S3Path"
            - description: The path to the thesaurus file in S3.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientTokenName"
            - description: "A token that you provide to identify the request to create a thesaurus. Multiple calls to the <code>CreateThesaurus</code> API with the same client token will create only one thesaurus. "
    DeleteAccessControlConfigurationResponse:
      type: object
      properties: {}
    DeleteAccessControlConfigurationRequest:
      type: object
      required:
        - IndexId
        - Id
      title: DeleteAccessControlConfigurationRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for an access control configuration.
        Id:
          allOf:
            - $ref: "#/components/schemas/AccessControlConfigurationId"
            - description: The identifier of the access control configuration you want to delete.
    DeleteDataSourceRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DeleteDataSourceRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source connector you want to delete.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used with the data source connector.
    DeleteExperienceResponse:
      type: object
      properties: {}
    DeleteExperienceRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DeleteExperienceRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: The identifier of your Amazon Kendra experience you want to delete.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for your Amazon Kendra experience.
    DeleteFaqRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DeleteFaqRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/FaqId"
            - description: The identifier of the FAQ you want to remove.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the FAQ.
    DeleteIndexRequest:
      type: object
      required:
        - Id
      title: DeleteIndexRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index you want to delete.
    DeletePrincipalMappingRequest:
      type: object
      required:
        - IndexId
        - GroupId
      title: DeletePrincipalMappingRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index you want to delete a group from.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: <p>The identifier of the data source you want to delete a group from.</p> <p>A group can be tied to multiple data sources. You can delete a group from accessing documents in a certain data source. For example, the groups "Research", "Engineering", and "Sales and Marketing" are all tied to the company's documents stored in the data sources Confluence and Salesforce. You want to delete "Research" and "Engineering" groups from Salesforce, so that these groups cannot access customer-related documents stored in Salesforce. Only "Sales and Marketing" should access documents in the Salesforce data source.</p>
        GroupId:
          allOf:
            - $ref: "#/components/schemas/GroupId"
            - description: The identifier of the group you want to delete.
        OrderingId:
          allOf:
            - $ref: "#/components/schemas/PrincipalOrderingId"
            - description: <p>The timestamp identifier you specify to ensure Amazon Kendra does not override the latest <code>DELETE</code> action with previous actions. The highest number ID, which is the ordering ID, is the latest action you want to process and apply on top of other actions with lower number IDs. This prevents previous actions with lower number IDs from possibly overriding the latest action.</p> <p>The ordering ID can be the Unix time of the last update you made to a group members list. You would then provide this list when calling <code>PutPrincipalMapping</code>. This ensures your <code>DELETE</code> action for that updated group with the latest members list doesn't get overwritten by earlier <code>DELETE</code> actions for the same group which are yet to be processed.</p> <p>The default ordering ID is the current Unix time in milliseconds that the action was received by Amazon Kendra. </p>
    DeleteQuerySuggestionsBlockListRequest:
      type: object
      required:
        - IndexId
        - Id
      title: DeleteQuerySuggestionsBlockListRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the block list.
        Id:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListId"
            - description: The identifier of the block list you want to delete.
    DeleteThesaurusRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DeleteThesaurusRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ThesaurusId"
            - description: The identifier of the thesaurus you want to delete.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the thesaurus.
    DescribeAccessControlConfigurationResponse:
      type: object
      required:
        - Name
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/AccessControlConfigurationName"
            - description: The name for the access control configuration.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description for the access control configuration.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: The error message containing details if there are issues processing the access control configuration.
        AccessControlList:
          allOf:
            - $ref: "#/components/schemas/PrincipalList"
            - description: Information on principals (users and/or groups) and which documents they should have access to. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
        HierarchicalAccessControlList:
          allOf:
            - $ref: "#/components/schemas/HierarchicalPrincipalList"
            - description: The list of <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html">principal</a> lists that define the hierarchy for which documents users should have access to.
    DescribeAccessControlConfigurationRequest:
      type: object
      required:
        - IndexId
        - Id
      title: DescribeAccessControlConfigurationRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for an access control configuration.
        Id:
          allOf:
            - $ref: "#/components/schemas/AccessControlConfigurationId"
            - description: The identifier of the access control configuration you want to get information on.
    DescribeDataSourceResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source connector.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used with the data source connector.
        Name:
          allOf:
            - $ref: "#/components/schemas/DataSourceName"
            - description: The name for the data source connector.
        Type:
          allOf:
            - $ref: "#/components/schemas/DataSourceType"
            - description: The type of the data source. For example, <code>SHAREPOINT</code>.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/DataSourceConfiguration"
            - description: Configuration details for the data source connector. This shows how the data source is configured. The configuration options for a data source depend on the data source provider.
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information for an Amazon Virtual Private Cloud to connect to your data source. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html">Configuring a VPC</a>.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the data source connector was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the data source connector was last updated.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description for the data source connector.
        Status:
          allOf:
            - $ref: "#/components/schemas/DataSourceStatus"
            - description: The current status of the data source connector. When the status is <code>ACTIVE</code> the data source is ready to use. When the status is <code>FAILED</code>, the <code>ErrorMessage</code> field contains the reason that the data source failed.
        Schedule:
          allOf:
            - $ref: "#/components/schemas/ScanSchedule"
            - description: The schedule for Amazon Kendra to update the index.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of the role with permission to access the data source and required resources.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: When the <code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field contains a description of the error that caused the data source to fail.
        LanguageCode:
          allOf:
            - $ref: "#/components/schemas/LanguageCode"
            - description: The code for a language. This shows a supported language for all documents in the data source. English is supported by default. For more information on supported languages, including their codes, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html">Adding documents in languages other than English</a>.
        CustomDocumentEnrichmentConfiguration:
          allOf:
            - $ref: "#/components/schemas/CustomDocumentEnrichmentConfiguration"
            - description: <p>Configuration information for altering document metadata and content during the document ingestion process when you describe a data source.</p> <p>For more information on how to create, modify and delete document metadata, or make other content alterations when you ingest documents into Amazon Kendra, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html">Customizing document metadata during the ingestion process</a>.</p>
    DescribeDataSourceRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DescribeDataSourceRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source connector.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used with the data source connector.
    DescribeExperienceResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: Shows the identifier of your Amazon Kendra experience.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: Shows the identifier of the index for your Amazon Kendra experience.
        Name:
          allOf:
            - $ref: "#/components/schemas/ExperienceName"
            - description: Shows the name of your Amazon Kendra experience.
        Endpoints:
          allOf:
            - $ref: "#/components/schemas/ExperienceEndpoints"
            - description: Shows the endpoint URLs for your Amazon Kendra experiences. The URLs are unique and fully hosted by Amazon Web Services.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/ExperienceConfiguration"
            - description: Shows the configuration information for your Amazon Kendra experience. This includes <code>ContentSourceConfiguration</code>, which specifies the data source IDs and/or FAQ IDs, and <code>UserIdentityConfiguration</code>, which specifies the user or group information to grant access to your Amazon Kendra experience.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when your Amazon Kendra experience was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when your Amazon Kendra experience was last updated.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: Shows the description for your Amazon Kendra experience.
        Status:
          allOf:
            - $ref: "#/components/schemas/ExperienceStatus"
            - description: The current processing status of your Amazon Kendra experience. When the status is <code>ACTIVE</code>, your Amazon Kendra experience is ready to use. When the status is <code>FAILED</code>, the <code>ErrorMessage</code> field contains the reason that this failed.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: Shows the Amazon Resource Name (ARN) of a role with permission to access <code>Query</code> API, <code>QuerySuggestions</code> API, <code>SubmitFeedback</code> API, and IAM Identity Center that stores your user and group information.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: The reason your Amazon Kendra experience could not properly process.
    DescribeExperienceRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DescribeExperienceRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: The identifier of your Amazon Kendra experience you want to get information on.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for your Amazon Kendra experience.
    DescribeFaqResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/FaqId"
            - description: The identifier of the FAQ.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the FAQ.
        Name:
          allOf:
            - $ref: "#/components/schemas/FaqName"
            - description: The name that you gave the FAQ when it was created.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the FAQ that you provided when it was created.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the FAQ was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the FAQ was last updated.
        S3Path:
          $ref: "#/components/schemas/S3Path"
        Status:
          allOf:
            - $ref: "#/components/schemas/FaqStatus"
            - description: The status of the FAQ. It is ready to use when the status is <code>ACTIVE</code>.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of the role that provides access to the S3 bucket containing the input files for the FAQ.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: If the <code>Status</code> field is <code>FAILED</code>, the <code>ErrorMessage</code> field contains the reason why the FAQ failed.
        FileFormat:
          allOf:
            - $ref: "#/components/schemas/FaqFileFormat"
            - description: The file format used by the input files for the FAQ.
        LanguageCode:
          allOf:
            - $ref: "#/components/schemas/LanguageCode"
            - description: The code for a language. This shows a supported language for the FAQ document. English is supported by default. For more information on supported languages, including their codes, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html">Adding documents in languages other than English</a>.
    DescribeFaqRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DescribeFaqRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/FaqId"
            - description: The identifier of the FAQ you want to get information on.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the FAQ.
    DescribeFeaturedResultsSetResponse:
      type: object
      properties:
        FeaturedResultsSetId:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetId"
            - description: The identifier of the set of featured results.
        FeaturedResultsSetName:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetName"
            - description: The name for the set of featured results.
        Description:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetDescription"
            - description: The description for the set of featured results.
        Status:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetStatus"
            - description: The current status of the set of featured results. When the value is <code>ACTIVE</code>, featured results are ready for use. You can still configure your settings before setting the status to <code>ACTIVE</code>. You can set the status to <code>ACTIVE</code> or <code>INACTIVE</code> using the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_UpdateFeaturedResultsSet.html">UpdateFeaturedResultsSet</a> API. The queries you specify for featured results must be unique per featured results set for each index, whether the status is <code>ACTIVE</code> or <code>INACTIVE</code>.
        QueryTexts:
          allOf:
            - $ref: "#/components/schemas/QueryTextList"
            - description: The list of queries for featuring results. For more information on the list of queries, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_FeaturedResultsSet.html">FeaturedResultsSet</a>.
        FeaturedDocumentsWithMetadata:
          allOf:
            - $ref: "#/components/schemas/FeaturedDocumentWithMetadataList"
            - description: The list of document IDs for the documents you want to feature with their metadata information. For more information on the list of featured documents, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_FeaturedResultsSet.html">FeaturedResultsSet</a>.
        FeaturedDocumentsMissing:
          allOf:
            - $ref: "#/components/schemas/FeaturedDocumentMissingList"
            - description: The list of document IDs that don't exist but you have specified as featured documents. Amazon Kendra cannot feature these documents if they don't exist in the index. You can check the status of a document and its ID or check for documents with status errors using the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchGetDocumentStatus.html">BatchGetDocumentStatus</a> API.
        LastUpdatedTimestamp:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The timestamp when the set of featured results was last updated.
        CreationTimestamp:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The Unix timestamp when the set of the featured results was created.
    DescribeFeaturedResultsSetRequest:
      type: object
      required:
        - IndexId
        - FeaturedResultsSetId
      title: DescribeFeaturedResultsSetRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used for featuring results.
        FeaturedResultsSetId:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetId"
            - description: The identifier of the set of featured results that you want to get information on.
    DescribeIndexResponse:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/IndexName"
            - description: The name of the index.
        Id:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index.
        Edition:
          allOf:
            - $ref: "#/components/schemas/IndexEdition"
            - description: The Amazon Kendra edition used for the index. You decide the edition when you create the index.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of the IAM role that gives Amazon Kendra permission to write to your Amazon Cloudwatch logs.
        ServerSideEncryptionConfiguration:
          allOf:
            - $ref: "#/components/schemas/ServerSideEncryptionConfiguration"
            - description: The identifier of the KMScustomer master key (CMK) that is used to encrypt your data. Amazon Kendra doesn't support asymmetric CMKs.
        Status:
          allOf:
            - $ref: "#/components/schemas/IndexStatus"
            - description: The current status of the index. When the value is <code>ACTIVE</code>, the index is ready for use. If the <code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field contains a message that explains why.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description for the index.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the index was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix when the index was last updated.
        DocumentMetadataConfigurations:
          allOf:
            - $ref: "#/components/schemas/DocumentMetadataConfigurationList"
            - description: Configuration information for document metadata or fields. Document metadata are fields or attributes associated with your documents. For example, the company department name associated with each document.
        IndexStatistics:
          allOf:
            - $ref: "#/components/schemas/IndexStatistics"
            - description: Provides information about the number of FAQ questions and answers and the number of text documents indexed.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: When the <code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field contains a message that explains why.
        CapacityUnits:
          allOf:
            - $ref: "#/components/schemas/CapacityUnitsConfiguration"
            - description: For Enterprise Edition indexes, you can choose to use additional capacity to meet the needs of your application. This contains the capacity units used for the index. A query or document storage capacity of zero indicates that the index is using the default capacity. For more information on the default capacity for an index and adjusting this, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/adjusting-capacity.html">Adjusting capacity</a>.
        UserTokenConfigurations:
          allOf:
            - $ref: "#/components/schemas/UserTokenConfigurationList"
            - description: The user token configuration for the Amazon Kendra index.
        UserContextPolicy:
          allOf:
            - $ref: "#/components/schemas/UserContextPolicy"
            - description: The user context policy for the Amazon Kendra index.
        UserGroupResolutionConfiguration:
          allOf:
            - $ref: "#/components/schemas/UserGroupResolutionConfiguration"
            - description: Whether you have enabled the configuration for fetching access levels of groups and users from an IAM Identity Center (successor to Single Sign-On) identity source.
    DescribeIndexRequest:
      type: object
      required:
        - Id
      title: DescribeIndexRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index you want to get information on.
    DescribePrincipalMappingResponse:
      type: object
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: Shows the identifier of the index to see information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: Shows the identifier of the data source to see information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/GroupId"
            - description: Shows the identifier of the group to see information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
        GroupOrderingIdSummaries:
          allOf:
            - $ref: "#/components/schemas/GroupOrderingIdSummaries"
            - description: <p>Shows the following information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups:</p> <ul> <li> <p>Status—the status can be either <code>PROCESSING</code>, <code>SUCCEEDED</code>, <code>DELETING</code>, <code>DELETED</code>, or <code>FAILED</code>.</p> </li> <li> <p>Last updated—the last date-time an action was updated.</p> </li> <li> <p>Received—the last date-time an action was received or submitted.</p> </li> <li> <p>Ordering ID—the latest action that should process and apply after other actions.</p> </li> <li> <p>Failure reason—the reason an action could not be processed.</p> </li> </ul>
    DescribePrincipalMappingRequest:
      type: object
      required:
        - IndexId
        - GroupId
      title: DescribePrincipalMappingRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index required to check the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source to check the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
        GroupId:
          allOf:
            - $ref: "#/components/schemas/GroupId"
            - description: The identifier of the group required to check the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
    DescribeQuerySuggestionsBlockListResponse:
      type: object
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the block list.
        Id:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListId"
            - description: The identifier of the block list.
        Name:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListName"
            - description: The name of the block list.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description for the block list.
        Status:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListStatus"
            - description: The current status of the block list. When the value is <code>ACTIVE</code>, the block list is ready for use.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: The error message containing details if there are issues processing the block list.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when a block list for query suggestions was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when a block list for query suggestions was last updated.
        SourceS3Path:
          allOf:
            - $ref: "#/components/schemas/S3Path"
            - description: <p>Shows the current S3 path to your block list text file in your S3 bucket.</p> <p>Each block word or phrase should be on a separate line in a text file.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
        ItemCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The current number of valid, non-empty words or phrases in the block list text file.
        FileSizeBytes:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The current size of the block list text file in S3.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: <p>The IAM (Identity and Access Management) role used by Amazon Kendra to access the block list text file in S3.</p> <p>The role needs S3 read permissions to your file in S3 and needs to give STS (Security Token Service) assume role permissions to Amazon Kendra.</p>
    DescribeQuerySuggestionsBlockListRequest:
      type: object
      required:
        - IndexId
        - Id
      title: DescribeQuerySuggestionsBlockListRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the block list.
        Id:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListId"
            - description: The identifier of the block list you want to get information on.
    DescribeQuerySuggestionsConfigResponse:
      type: object
      properties:
        Mode:
          allOf:
            - $ref: "#/components/schemas/Mode"
            - description: <p>Whether query suggestions are currently in <code>ENABLED</code> mode or <code>LEARN_ONLY</code> mode.</p> <p>By default, Amazon Kendra enables query suggestions.<code>LEARN_ONLY</code> turns off query suggestions for your users. You can change the mode using the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_UpdateQuerySuggestionsConfig.html">UpdateQuerySuggestionsConfig</a> API.</p>
        Status:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsStatus"
            - description: <p>Whether the status of query suggestions settings is currently <code>ACTIVE</code> or <code>UPDATING</code>.</p> <p>Active means the current settings apply and Updating means your changed settings are in the process of applying.</p>
        QueryLogLookBackWindowInDays:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: How recent your queries are in your query log time window (in days).
        IncludeQueriesWithoutUserInformation:
          allOf:
            - $ref: "#/components/schemas/ObjectBoolean"
            - description: " <code>TRUE</code> to use all queries, otherwise use only queries that include user information to generate the query suggestions."
        MinimumNumberOfQueryingUsers:
          allOf:
            - $ref: "#/components/schemas/MinimumNumberOfQueryingUsers"
            - description: The minimum number of unique users who must search a query in order for the query to be eligible to suggest to your users.
        MinimumQueryCount:
          allOf:
            - $ref: "#/components/schemas/MinimumQueryCount"
            - description: The minimum number of times a query must be searched in order for the query to be eligible to suggest to your users.
        LastSuggestionsBuildTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when query suggestions for an index was last updated.
        LastClearTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: <p>The Unix timestamp when query suggestions for an index was last cleared.</p> <p>After you clear suggestions, Amazon Kendra learns new suggestions based on new queries added to the query log from the time you cleared suggestions. Amazon Kendra only considers re-occurences of a query from the time you cleared suggestions. </p>
        TotalSuggestionsCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>The current total count of query suggestions for an index.</p> <p>This count can change when you update your query suggestions settings, if you filter out certain queries from suggestions using a block list, and as the query log accumulates more queries for Amazon Kendra to learn from.</p>
    DescribeQuerySuggestionsConfigRequest:
      type: object
      required:
        - IndexId
      title: DescribeQuerySuggestionsConfigRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index with query suggestions that you want to get information on.
    DescribeThesaurusResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ThesaurusId"
            - description: The identifier of the thesaurus.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the thesaurus.
        Name:
          allOf:
            - $ref: "#/components/schemas/ThesaurusName"
            - description: The thesaurus name.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The thesaurus description.
        Status:
          allOf:
            - $ref: "#/components/schemas/ThesaurusStatus"
            - description: <p>The current status of the thesaurus. When the value is <code>ACTIVE</code>, queries are able to use the thesaurus. If the <code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field provides more information. </p> <p>If the status is <code>ACTIVE_BUT_UPDATE_FAILED</code>, it means that Amazon Kendra could not ingest the new thesaurus file. The old thesaurus file is still active. </p>
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: "When the <code>Status</code> field value is <code>FAILED</code>, the <code>ErrorMessage</code> field provides more information. "
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the thesaurus was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the thesaurus was last updated.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: "An IAM role that gives Amazon Kendra permissions to access thesaurus file specified in <code>SourceS3Path</code>. "
        SourceS3Path:
          $ref: "#/components/schemas/S3Path"
        FileSizeBytes:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The size of the thesaurus file in bytes.
        TermCount:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: "The number of unique terms in the thesaurus file. For example, the synonyms <code>a,b,c</code> and <code>a=&gt;d</code>, the term count would be 4. "
        SynonymRuleCount:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The number of synonym rules in the thesaurus file.
    DescribeThesaurusRequest:
      type: object
      required:
        - Id
        - IndexId
      title: DescribeThesaurusRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ThesaurusId"
            - description: The identifier of the thesaurus you want to get information on.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the thesaurus.
    DisassociateEntitiesFromExperienceResponse:
      type: object
      properties:
        FailedEntityList:
          allOf:
            - $ref: "#/components/schemas/FailedEntityList"
            - description: Lists the users or groups in your IAM Identity Center identity source that failed to properly remove access to your Amazon Kendra experience.
    DisassociateEntitiesFromExperienceRequest:
      type: object
      required:
        - Id
        - IndexId
        - EntityList
      title: DisassociateEntitiesFromExperienceRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: The identifier of your Amazon Kendra experience.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for your Amazon Kendra experience.
        EntityList:
          allOf:
            - $ref: "#/components/schemas/DisassociateEntityList"
            - description: Lists users or groups in your IAM Identity Center identity source.
    DisassociatePersonasFromEntitiesResponse:
      type: object
      properties:
        FailedEntityList:
          allOf:
            - $ref: "#/components/schemas/FailedEntityList"
            - description: Lists the users or groups in your IAM Identity Center identity source that failed to properly remove access to your Amazon Kendra experience.
    DisassociatePersonasFromEntitiesRequest:
      type: object
      required:
        - Id
        - IndexId
        - EntityIds
      title: DisassociatePersonasFromEntitiesRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: The identifier of your Amazon Kendra experience.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for your Amazon Kendra experience.
        EntityIds:
          allOf:
            - $ref: "#/components/schemas/EntityIdsList"
            - description: The identifiers of users or groups in your IAM Identity Center identity source. For example, user IDs could be user emails.
    GetQuerySuggestionsResponse:
      type: object
      properties:
        QuerySuggestionsId:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsId"
            - description: The identifier for a list of query suggestions for an index.
        Suggestions:
          allOf:
            - $ref: "#/components/schemas/SuggestionList"
            - description: A list of query suggestions for an index.
    GetQuerySuggestionsRequest:
      type: object
      required:
        - IndexId
        - QueryText
      title: GetQuerySuggestionsRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index you want to get query suggestions from.
        QueryText:
          allOf:
            - $ref: "#/components/schemas/SuggestionQueryText"
            - description: <p>The text of a user's query to generate query suggestions.</p> <p>A query is suggested if the query prefix matches what a user starts to type as their query.</p> <p>Amazon Kendra does not show any suggestions if a user types fewer than two characters or more than 60 characters. A query must also have at least one search result and contain at least one word of more than four characters.</p>
        MaxSuggestionsCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of query suggestions you want to show to your users.
    GetSnapshotsResponse:
      type: object
      properties:
        SnapShotTimeFilter:
          allOf:
            - $ref: "#/components/schemas/TimeRange"
            - description: The Unix timestamp for the beginning and end of the time window for the search metrics data.
        SnapshotsDataHeader:
          allOf:
            - $ref: "#/components/schemas/SnapshotsDataHeaderFields"
            - description: The column headers for the search metrics data.
        SnapshotsData:
          allOf:
            - $ref: "#/components/schemas/SnapshotsDataRecords"
            - description: The search metrics data. The data returned depends on the metric type you requested.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, Amazon Kendra returns this token, which you can use in a later request to retrieve the next set of search metrics data.
    GetSnapshotsRequest:
      type: object
      required:
        - IndexId
        - Interval
        - MetricType
      title: GetSnapshotsRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index to get search metrics data.
        Interval:
          allOf:
            - $ref: "#/components/schemas/Interval"
            - description: "<p>The time interval or time window to get search metrics data. The time interval uses the time zone of your index. You can view data in the following time windows:</p> <ul> <li> <p> <code>THIS_WEEK</code>: The current week, starting on the Sunday and ending on the day before the current date.</p> </li> <li> <p> <code>ONE_WEEK_AGO</code>: The previous week, starting on the Sunday and ending on the following Saturday.</p> </li> <li> <p> <code>TWO_WEEKS_AGO</code>: The week before the previous week, starting on the Sunday and ending on the following Saturday.</p> </li> <li> <p> <code>THIS_MONTH</code>: The current month, starting on the first day of the month and ending on the day before the current date.</p> </li> <li> <p> <code>ONE_MONTH_AGO</code>: The previous month, starting on the first day of the month and ending on the last day of the month.</p> </li> <li> <p> <code>TWO_MONTHS_AGO</code>: The month before the previous month, starting on the first day of the month and ending on last day of the month.</p> </li> </ul>"
        MetricType:
          allOf:
            - $ref: "#/components/schemas/MetricType"
            - description: <p>The metric you want to retrieve. You can specify only one metric per call.</p> <p>For more information about the metrics you can view, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/search-analytics.html">Gaining insights with search analytics</a>.</p>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of search metrics data.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The maximum number of returned data for the metric.
    InvalidRequestException: {}
    ListAccessControlConfigurationsResponse:
      type: object
      required:
        - AccessControlConfigurations
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: If the response is truncated, Amazon Kendra returns this token, which you can use in the subsequent request to retrieve the next set of access control configurations.
        AccessControlConfigurations:
          allOf:
            - $ref: "#/components/schemas/AccessControlConfigurationSummaryList"
            - description: The details of your access control configurations.
    ListAccessControlConfigurationsRequest:
      type: object
      required:
        - IndexId
      title: ListAccessControlConfigurationsRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the access control configuration.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: If the previous response was incomplete (because there's more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of access control configurations.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResultsIntegerForListAccessControlConfigurationsRequest"
            - description: The maximum number of access control configurations to return.
    ListDataSourceSyncJobsResponse:
      type: object
      properties:
        History:
          allOf:
            - $ref: "#/components/schemas/DataSourceSyncJobHistoryList"
            - description: A history of synchronization jobs for the data source connector.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of jobs.
    ListDataSourceSyncJobsRequest:
      type: object
      required:
        - Id
        - IndexId
      title: ListDataSourceSyncJobsRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source connector.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used with the data source connector.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of jobs.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResultsIntegerForListDataSourceSyncJobsRequest"
            - description: The maximum number of synchronization jobs to return in the response. If there are fewer results in the list, this response contains only the actual results.
        StartTimeFilter:
          allOf:
            - $ref: "#/components/schemas/TimeRange"
            - description: When specified, the synchronization jobs returned in the list are limited to jobs between the specified dates.
        StatusFilter:
          allOf:
            - $ref: "#/components/schemas/DataSourceSyncJobStatus"
            - description: Only returns synchronization jobs with the <code>Status</code> field equal to the specified status.
    ListDataSourcesResponse:
      type: object
      properties:
        SummaryItems:
          allOf:
            - $ref: "#/components/schemas/DataSourceSummaryList"
            - description: An array of summary information for one or more data source connector.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of data source connectors.
    ListDataSourcesRequest:
      type: object
      required:
        - IndexId
      title: ListDataSourcesRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used with one or more data source connectors.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: "If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of data source connectors. "
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResultsIntegerForListDataSourcesRequest"
            - description: The maximum number of data source connectors to return.
    ListEntityPersonasResponse:
      type: object
      properties:
        SummaryItems:
          allOf:
            - $ref: "#/components/schemas/PersonasSummaryList"
            - description: An array of summary information for one or more users or groups.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, Amazon Kendra returns this token, which you can use in a later request to retrieve the next set of users or groups.
    ListEntityPersonasRequest:
      type: object
      required:
        - Id
        - IndexId
      title: ListEntityPersonasRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: The identifier of your Amazon Kendra experience.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for your Amazon Kendra experience.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of users or groups.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResultsIntegerForListEntityPersonasRequest"
            - description: The maximum number of returned users or groups.
    ListExperienceEntitiesResponse:
      type: object
      properties:
        SummaryItems:
          allOf:
            - $ref: "#/components/schemas/ExperienceEntitiesSummaryList"
            - description: An array of summary information for one or more users or groups.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, Amazon Kendra returns this token, which you can use in a later request to retrieve the next set of users or groups.
    ListExperienceEntitiesRequest:
      type: object
      required:
        - Id
        - IndexId
      title: ListExperienceEntitiesRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: The identifier of your Amazon Kendra experience.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for your Amazon Kendra experience.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of users or groups.
    ListExperiencesResponse:
      type: object
      properties:
        SummaryItems:
          allOf:
            - $ref: "#/components/schemas/ExperiencesSummaryList"
            - description: An array of summary information for one or more Amazon Kendra experiences.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, Amazon Kendra returns this token, which you can use in a later request to retrieve the next set of Amazon Kendra experiences.
    ListExperiencesRequest:
      type: object
      required:
        - IndexId
      title: ListExperiencesRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for your Amazon Kendra experience.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of Amazon Kendra experiences.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResultsIntegerForListExperiencesRequest"
            - description: The maximum number of returned Amazon Kendra experiences.
    ListFaqsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of FAQs.
        FaqSummaryItems:
          allOf:
            - $ref: "#/components/schemas/FaqSummaryItems"
            - description: information about the FAQs associated with the specified index.
    ListFaqsRequest:
      type: object
      required:
        - IndexId
      title: ListFaqsRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The index that contains the FAQ lists.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of FAQs.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResultsIntegerForListFaqsRequest"
            - description: The maximum number of FAQs to return in the response. If there are fewer results in the list, this response contains only the actual results.
    ListFeaturedResultsSetsResponse:
      type: object
      properties:
        FeaturedResultsSetSummaryItems:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetSummaryItems"
            - description: An array of summary information for one or more featured results sets.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, Amazon Kendra returns a pagination token in the response.
    ListFeaturedResultsSetsRequest:
      type: object
      required:
        - IndexId
      title: ListFeaturedResultsSetsRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used for featuring results.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of featured results sets.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResultsIntegerForListFeaturedResultsSetsRequest"
            - description: The maximum number of featured results sets to return.
    ListGroupsOlderThanOrderingIdResponse:
      type: object
      properties:
        GroupsSummaries:
          allOf:
            - $ref: "#/components/schemas/ListOfGroupSummaries"
            - description: " Summary information for list of groups that are mapped to users before a given ordering or timestamp identifier. "
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of groups that are mapped to users before a given ordering or timestamp identifier. "
    ListGroupsOlderThanOrderingIdRequest:
      type: object
      required:
        - IndexId
        - OrderingId
      title: ListGroupsOlderThanOrderingIdRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for getting a list of groups mapped to users before a given ordering or timestamp identifier.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source for getting a list of groups mapped to users before a given ordering timestamp identifier.
        OrderingId:
          allOf:
            - $ref: "#/components/schemas/PrincipalOrderingId"
            - description: The timestamp identifier used for the latest <code>PUT</code> or <code>DELETE</code> action for mapping users to their groups.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: " If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of groups that are mapped to users before a given ordering or timestamp identifier. "
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResultsIntegerForListPrincipalsRequest"
            - description: " The maximum number of returned groups that are mapped to users before a given ordering or timestamp identifier. "
    ListIndicesResponse:
      type: object
      properties:
        IndexConfigurationSummaryItems:
          allOf:
            - $ref: "#/components/schemas/IndexConfigurationSummaryList"
            - description: An array of summary information on the configuration of one or more indexes.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of indexes.
    ListIndicesRequest:
      type: object
      title: ListIndicesRequest
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: "If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of indexes. "
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResultsIntegerForListIndicesRequest"
            - description: The maximum number of indices to return.
    ListQuerySuggestionsBlockListsResponse:
      type: object
      properties:
        BlockListSummaryItems:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListSummaryItems"
            - description: <p>Summary items for a block list.</p> <p>This includes summary items on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of block lists.
    ListQuerySuggestionsBlockListsRequest:
      type: object
      required:
        - IndexId
      title: ListQuerySuggestionsBlockListsRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: <p>The identifier of the index for a list of all block lists that exist for that index.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of block lists (<code>BlockListSummaryItems</code>).
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResultsIntegerForListQuerySuggestionsBlockLists"
            - description: The maximum number of block lists to return.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: A list of tags associated with the index, FAQ, or data source.
    ListTagsForResourceRequest:
      type: object
      required:
        - ResourceARN
      title: ListTagsForResourceRequest
      properties:
        ResourceARN:
          allOf:
            - $ref: "#/components/schemas/AmazonResourceName"
            - description: The Amazon Resource Name (ARN) of the index, FAQ, or data source to get a list of tags for.
    ResourceUnavailableException: {}
    ListThesauriResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: "If the response is truncated, Amazon Kendra returns this token that you can use in the subsequent request to retrieve the next set of thesauri. "
        ThesaurusSummaryItems:
          allOf:
            - $ref: "#/components/schemas/ThesaurusSummaryItems"
            - description: An array of summary information for a thesaurus or multiple thesauri.
    ListThesauriRequest:
      type: object
      required:
        - IndexId
      title: ListThesauriRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index with one or more thesauri.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: "If the previous response was incomplete (because there is more data to retrieve), Amazon Kendra returns a pagination token in the response. You can use this pagination token to retrieve the next set of thesauri (<code>ThesaurusSummaryItems</code>). "
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MaxResultsIntegerForListThesauriRequest"
            - description: The maximum number of thesauri to return.
    PutPrincipalMappingRequest:
      type: object
      required:
        - IndexId
        - GroupId
        - GroupMembers
      title: PutPrincipalMappingRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index you want to map users to their groups.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: <p>The identifier of the data source you want to map users to their groups.</p> <p>This is useful if a group is tied to multiple data sources, but you only want the group to access documents of a certain data source. For example, the groups "Research", "Engineering", and "Sales and Marketing" are all tied to the company's documents stored in the data sources Confluence and Salesforce. However, "Sales and Marketing" team only needs access to customer-related documents stored in Salesforce.</p>
        GroupId:
          allOf:
            - $ref: "#/components/schemas/GroupId"
            - description: The identifier of the group you want to map its users to.
        GroupMembers:
          allOf:
            - $ref: "#/components/schemas/GroupMembers"
            - description: <p>The list that contains your users or sub groups that belong the same group.</p> <p>For example, the group "Company" includes the user "CEO" and the sub groups "Research", "Engineering", and "Sales and Marketing".</p> <p>If you have more than 1000 users and/or sub groups for a single group, you need to provide the path to the S3 file that lists your users and sub groups for a group. Your sub groups can contain more than 1000 users, but the list of sub groups that belong to a group (and/or users) must be no more than 1000.</p>
        OrderingId:
          allOf:
            - $ref: "#/components/schemas/PrincipalOrderingId"
            - description: <p>The timestamp identifier you specify to ensure Amazon Kendra does not override the latest <code>PUT</code> action with previous actions. The highest number ID, which is the ordering ID, is the latest action you want to process and apply on top of other actions with lower number IDs. This prevents previous actions with lower number IDs from possibly overriding the latest action.</p> <p>The ordering ID can be the Unix time of the last update you made to a group members list. You would then provide this list when calling <code>PutPrincipalMapping</code>. This ensures your <code>PUT</code> action for that updated group with the latest members list doesn't get overwritten by earlier <code>PUT</code> actions for the same group which are yet to be processed.</p> <p>The default ordering ID is the current Unix time in milliseconds that the action was received by Amazon Kendra.</p>
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: <p>The Amazon Resource Name (ARN) of a role that has access to the S3 file that contains your list of users or sub groups that belong to a group.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html#iam-roles-ds">IAM roles for Amazon Kendra</a>.</p>
    QueryResult:
      type: object
      properties:
        QueryId:
          allOf:
            - $ref: "#/components/schemas/QueryId"
            - description: The identifier for the search. You use <code>QueryId</code> to identify the search when using the feedback API.
        ResultItems:
          allOf:
            - $ref: "#/components/schemas/QueryResultItemList"
            - description: The results of the search.
        FacetResults:
          allOf:
            - $ref: "#/components/schemas/FacetResultList"
            - description: Contains the facet results. A <code>FacetResult</code> contains the counts for each attribute key that was specified in the <code>Facets</code> input parameter.
        TotalNumberOfResults:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The total number of items found by the search; however, you can only retrieve up to 100 items. For example, if the search found 192 items, you can only retrieve the first 100 of the items.
        Warnings:
          allOf:
            - $ref: "#/components/schemas/WarningList"
            - description: <p>A list of warning codes and their messages on problems with your query.</p> <p>Amazon Kendra currently only supports one type of warning, which is a warning on invalid syntax used in the query. For examples of invalid query syntax, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/searching-example.html#searching-index-query-syntax">Searching with advanced query syntax</a>.</p>
        SpellCorrectedQueries:
          allOf:
            - $ref: "#/components/schemas/SpellCorrectedQueryList"
            - description: A list of information related to suggested spell corrections for a query.
        FeaturedResultsItems:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsItemList"
            - description: The list of featured result items. Featured results are displayed at the top of the search results page, placed above all other results for certain queries. If there's an exact match of a query, then certain documents are featured in the search results.
    QueryRequest:
      type: object
      required:
        - IndexId
      title: QueryRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index to search. The identifier is returned in the response from the <code>CreateIndex</code> API.
        QueryText:
          allOf:
            - $ref: "#/components/schemas/QueryText"
            - description: "The input query text for the search. Amazon Kendra truncates queries at 30 token words, which excludes punctuation and stop words. Truncation still applies if you use Boolean or more advanced, complex queries. "
        AttributeFilter:
          allOf:
            - $ref: "#/components/schemas/AttributeFilter"
            - description: <p>Enables filtered searches based on document attributes. You can only provide one attribute filter; however, the <code>AndAllFilters</code>, <code>NotFilter</code>, and <code>OrAllFilters</code> parameters contain a list of other filters.</p> <p>The <code>AttributeFilter</code> parameter enables you to create a set of filtering rules that a document must satisfy to be included in the query results.</p>
        Facets:
          allOf:
            - $ref: "#/components/schemas/FacetList"
            - description: An array of documents attributes. Amazon Kendra returns a count for each attribute key specified. This helps your users narrow their search.
        RequestedDocumentAttributes:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeKeyList"
            - description: An array of document attributes to include in the response. You can limit the response to include certain document attributes. By default all document attributes are included in the response.
        QueryResultTypeFilter:
          allOf:
            - $ref: "#/components/schemas/QueryResultType"
            - description: Sets the type of query. Only results for the specified query type are returned.
        DocumentRelevanceOverrideConfigurations:
          allOf:
            - $ref: "#/components/schemas/DocumentRelevanceOverrideConfigurationList"
            - description: <p>Overrides relevance tuning configurations of fields or attributes set at the index level.</p> <p>If you use this API to override the relevance tuning configured at the index level, but there is no relevance tuning configured at the index level, then Amazon Kendra does not apply any relevance tuning.</p> <p>If there is relevance tuning configured at the index level, but you do not use this API to override any relevance tuning in the index, then Amazon Kendra uses the relevance tuning that is configured at the index level.</p> <p>If there is relevance tuning configured for fields at the index level, but you use this API to override only some of these fields, then for the fields you did not override, the importance is set to 1.</p>
        PageNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Query results are returned in pages the size of the <code>PageSize</code> parameter. By default, Amazon Kendra returns the first page of results. Use this parameter to get result pages after the first one.
        PageSize:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Sets the number of results that are returned in each page of results. The default page size is 10. The maximum number of results returned is 100. If you ask for more than 100 results, only 100 are returned.
        SortingConfiguration:
          allOf:
            - $ref: "#/components/schemas/SortingConfiguration"
            - description: <p>Provides information that determines how the results of the query are sorted. You can set the field that Amazon Kendra should sort the results on, and specify whether the results should be sorted in ascending or descending order. In the case of ties in sorting the results, the results are sorted by relevance.</p> <p>If you don't provide sorting configuration, the results are sorted by the relevance that Amazon Kendra determines for the result.</p>
        UserContext:
          allOf:
            - $ref: "#/components/schemas/UserContext"
            - description: The user context token or user and group information.
        VisitorId:
          allOf:
            - $ref: "#/components/schemas/VisitorId"
            - description: Provides an identifier for a specific user. The <code>VisitorId</code> should be a unique identifier, such as a GUID. Don't use personally identifiable information, such as the user's email address, as the <code>VisitorId</code>.
        SpellCorrectionConfiguration:
          allOf:
            - $ref: "#/components/schemas/SpellCorrectionConfiguration"
            - description: Enables suggested spell corrections for queries.
    StartDataSourceSyncJobResponse:
      type: object
      properties:
        ExecutionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Identifies a particular synchronization job.
    StartDataSourceSyncJobRequest:
      type: object
      required:
        - Id
        - IndexId
      title: StartDataSourceSyncJobRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source connector to synchronize.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used with the data source connector.
    ResourceInUseException: {}
    StopDataSourceSyncJobRequest:
      type: object
      required:
        - Id
        - IndexId
      title: StopDataSourceSyncJobRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source connector for which to stop the synchronization jobs.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used with the data source connector.
    SubmitFeedbackRequest:
      type: object
      required:
        - IndexId
        - QueryId
      title: SubmitFeedbackRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index that was queried.
        QueryId:
          allOf:
            - $ref: "#/components/schemas/QueryId"
            - description: The identifier of the specific query for which you are submitting feedback. The query ID is returned in the response to the <code>Query</code> API.
        ClickFeedbackItems:
          allOf:
            - $ref: "#/components/schemas/ClickFeedbackList"
            - description: "Tells Amazon Kendra that a particular search result link was chosen by the user. "
        RelevanceFeedbackItems:
          allOf:
            - $ref: "#/components/schemas/RelevanceFeedbackList"
            - description: Provides Amazon Kendra with relevant or not relevant feedback for whether a particular item was relevant to the search.
    TagResourceResponse:
      type: object
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - ResourceARN
        - Tags
      title: TagResourceRequest
      properties:
        ResourceARN:
          allOf:
            - $ref: "#/components/schemas/AmazonResourceName"
            - description: The Amazon Resource Name (ARN) of the index, FAQ, or data source to tag.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: A list of tag keys to add to the index, FAQ, or data source. If a tag already exists, the existing value is replaced with the new value.
    UntagResourceResponse:
      type: object
      properties: {}
    UntagResourceRequest:
      type: object
      required:
        - ResourceARN
        - TagKeys
      title: UntagResourceRequest
      properties:
        ResourceARN:
          allOf:
            - $ref: "#/components/schemas/AmazonResourceName"
            - description: The Amazon Resource Name (ARN) of the index, FAQ, or data source to remove the tag from.
        TagKeys:
          allOf:
            - $ref: "#/components/schemas/TagKeyList"
            - description: A list of tag keys to remove from the index, FAQ, or data source. If a tag key does not exist on the resource, it is ignored.
    UpdateAccessControlConfigurationResponse:
      type: object
      properties: {}
    UpdateAccessControlConfigurationRequest:
      type: object
      required:
        - IndexId
        - Id
      title: UpdateAccessControlConfigurationRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for an access control configuration.
        Id:
          allOf:
            - $ref: "#/components/schemas/AccessControlConfigurationId"
            - description: The identifier of the access control configuration you want to update.
        Name:
          allOf:
            - $ref: "#/components/schemas/AccessControlConfigurationName"
            - description: A new name for the access control configuration.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A new description for the access control configuration.
        AccessControlList:
          allOf:
            - $ref: "#/components/schemas/PrincipalList"
            - description: Information you want to update on principals (users and/or groups) and which documents they should have access to. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
        HierarchicalAccessControlList:
          allOf:
            - $ref: "#/components/schemas/HierarchicalPrincipalList"
            - description: The updated list of <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html">principal</a> lists that define the hierarchy for which documents users should have access to.
    UpdateDataSourceRequest:
      type: object
      required:
        - Id
        - IndexId
      title: UpdateDataSourceRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source connector you want to update.
        Name:
          allOf:
            - $ref: "#/components/schemas/DataSourceName"
            - description: A new name for the data source connector.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used with the data source connector.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/DataSourceConfiguration"
            - description: Configuration information you want to update for the data source connector.
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information for an Amazon Virtual Private Cloud to connect to your data source. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html">Configuring a VPC</a>.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A new description for the data source connector.
        Schedule:
          allOf:
            - $ref: "#/components/schemas/ScanSchedule"
            - description: The sync schedule you want to update for the data source connector.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of a role with permission to access the data source and required resources. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM roles for Amazon Kendra</a>.
        LanguageCode:
          allOf:
            - $ref: "#/components/schemas/LanguageCode"
            - description: The code for a language you want to update for the data source connector. This allows you to support a language for all documents when updating the data source. English is supported by default. For more information on supported languages, including their codes, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html">Adding documents in languages other than English</a>.
        CustomDocumentEnrichmentConfiguration:
          allOf:
            - $ref: "#/components/schemas/CustomDocumentEnrichmentConfiguration"
            - description: <p>Configuration information you want to update for altering document metadata and content during the document ingestion process.</p> <p>For more information on how to create, modify and delete document metadata, or make other content alterations when you ingest documents into Amazon Kendra, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html">Customizing document metadata during the ingestion process</a>.</p>
    UpdateExperienceRequest:
      type: object
      required:
        - Id
        - IndexId
      title: UpdateExperienceRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: The identifier of your Amazon Kendra experience you want to update.
        Name:
          allOf:
            - $ref: "#/components/schemas/ExperienceName"
            - description: A new name for your Amazon Kendra experience.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for your Amazon Kendra experience.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of a role with permission to access <code>Query</code> API, <code>QuerySuggestions</code> API, <code>SubmitFeedback</code> API, and IAM Identity Center that stores your user and group information. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM roles for Amazon Kendra</a>.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/ExperienceConfiguration"
            - description: Configuration information you want to update for your Amazon Kendra experience.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A new description for your Amazon Kendra experience.
    UpdateFeaturedResultsSetResponse:
      type: object
      properties:
        FeaturedResultsSet:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSet"
            - description: Information on the set of featured results. This includes the identifier of the featured results set, whether the featured results set is active or inactive, when the featured results set was last updated, and more.
    UpdateFeaturedResultsSetRequest:
      type: object
      required:
        - IndexId
        - FeaturedResultsSetId
      title: UpdateFeaturedResultsSetRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index used for featuring results.
        FeaturedResultsSetId:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetId"
            - description: The identifier of the index used for featuring results.
        FeaturedResultsSetName:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetName"
            - description: A new name for the set of featured results.
        Description:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetDescription"
            - description: A new description for the set of featured results.
        Status:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetStatus"
            - description: You can set the status to <code>ACTIVE</code> or <code>INACTIVE</code>. When the value is <code>ACTIVE</code>, featured results are ready for use. You can still configure your settings before setting the status to <code>ACTIVE</code>. The queries you specify for featured results must be unique per featured results set for each index, whether the status is <code>ACTIVE</code> or <code>INACTIVE</code>.
        QueryTexts:
          allOf:
            - $ref: "#/components/schemas/QueryTextList"
            - description: A list of queries for featuring results. For more information on the list of queries, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_FeaturedResultsSet.html">FeaturedResultsSet</a>.
        FeaturedDocuments:
          allOf:
            - $ref: "#/components/schemas/FeaturedDocumentList"
            - description: A list of document IDs for the documents you want to feature at the top of the search results page. For more information on the list of featured documents, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_FeaturedResultsSet.html">FeaturedResultsSet</a>.
    UpdateIndexRequest:
      type: object
      required:
        - Id
      title: UpdateIndexRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index you want to update.
        Name:
          allOf:
            - $ref: "#/components/schemas/IndexName"
            - description: The name of the index you want to update.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: An Identity and Access Management (IAM) role that gives Amazon Kendra permission to access Amazon CloudWatch logs and metrics.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A new description for the index.
        DocumentMetadataConfigurationUpdates:
          allOf:
            - $ref: "#/components/schemas/DocumentMetadataConfigurationList"
            - description: The document metadata configuration you want to update for the index. Document metadata are fields or attributes associated with your documents. For example, the company department name associated with each document.
        CapacityUnits:
          allOf:
            - $ref: "#/components/schemas/CapacityUnitsConfiguration"
            - description: <p>Sets the number of additional document storage and query capacity units that should be used by the index. You can change the capacity of the index up to 5 times per day, or make 5 API calls.</p> <p>If you are using extra storage units, you can't reduce the storage capacity below what is required to meet the storage needs for your index.</p>
        UserTokenConfigurations:
          allOf:
            - $ref: "#/components/schemas/UserTokenConfigurationList"
            - description: The user token configuration.
        UserContextPolicy:
          allOf:
            - $ref: "#/components/schemas/UserContextPolicy"
            - description: The user context policy.
        UserGroupResolutionConfiguration:
          allOf:
            - $ref: "#/components/schemas/UserGroupResolutionConfiguration"
            - description: Enables fetching access levels of groups and users from an IAM Identity Center (successor to Single Sign-On) identity source. To configure this, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html">UserGroupResolutionConfiguration</a>.
    UpdateQuerySuggestionsBlockListRequest:
      type: object
      required:
        - IndexId
        - Id
      title: UpdateQuerySuggestionsBlockListRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the block list.
        Id:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListId"
            - description: The identifier of the block list you want to update.
        Name:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListName"
            - description: A new name for the block list.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A new description for the block list.
        SourceS3Path:
          allOf:
            - $ref: "#/components/schemas/S3Path"
            - description: <p>The S3 path where your block list text file sits in S3.</p> <p>If you update your block list and provide the same path to the block list text file in S3, then Amazon Kendra reloads the file to refresh the block list. Amazon Kendra does not automatically refresh your block list. You need to call the <code>UpdateQuerySuggestionsBlockList</code> API to refresh you block list.</p> <p>If you update your block list, then Amazon Kendra asynchronously refreshes all query suggestions with the latest content in the S3 file. This means changes might not take effect immediately.</p>
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The IAM (Identity and Access Management) role used to access the block list text file in S3.
    UpdateQuerySuggestionsConfigRequest:
      type: object
      required:
        - IndexId
      title: UpdateQuerySuggestionsConfigRequest
      properties:
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: " The identifier of the index with query suggestions you want to update."
        Mode:
          allOf:
            - $ref: "#/components/schemas/Mode"
            - description: <p>Set the mode to <code>ENABLED</code> or <code>LEARN_ONLY</code>.</p> <p>By default, Amazon Kendra enables query suggestions. <code>LEARN_ONLY</code> mode allows you to turn off query suggestions. You can to update this at any time.</p> <p>In <code>LEARN_ONLY</code> mode, Amazon Kendra continues to learn from new queries to keep suggestions up to date for when you are ready to switch to ENABLED mode again.</p>
        QueryLogLookBackWindowInDays:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: <p>How recent your queries are in your query log time window.</p> <p>The time window is the number of days from current day to past days.</p> <p>By default, Amazon Kendra sets this to 180.</p>
        IncludeQueriesWithoutUserInformation:
          allOf:
            - $ref: "#/components/schemas/ObjectBoolean"
            - description: <p> <code>TRUE</code> to include queries without user information (i.e. all queries, irrespective of the user), otherwise <code>FALSE</code> to only include queries with user information.</p> <p>If you pass user information to Amazon Kendra along with the queries, you can set this flag to <code>FALSE</code> and instruct Amazon Kendra to only consider queries with user information.</p> <p>If you set to <code>FALSE</code>, Amazon Kendra only considers queries searched at least <code>MinimumQueryCount</code> times across <code>MinimumNumberOfQueryingUsers</code> unique users for suggestions.</p> <p>If you set to <code>TRUE</code>, Amazon Kendra ignores all user information and learns from all queries.</p>
        MinimumNumberOfQueryingUsers:
          allOf:
            - $ref: "#/components/schemas/MinimumNumberOfQueryingUsers"
            - description: <p>The minimum number of unique users who must search a query in order for the query to be eligible to suggest to your users.</p> <p>Increasing this number might decrease the number of suggestions. However, this ensures a query is searched by many users and is truly popular to suggest to users.</p> <p>How you tune this setting depends on your specific needs.</p>
        MinimumQueryCount:
          allOf:
            - $ref: "#/components/schemas/MinimumQueryCount"
            - description: <p>The the minimum number of times a query must be searched in order to be eligible to suggest to your users.</p> <p>Decreasing this number increases the number of suggestions. However, this affects the quality of suggestions as it sets a low bar for a query to be considered popular to suggest to users.</p> <p>How you tune this setting depends on your specific needs.</p>
    UpdateThesaurusRequest:
      type: object
      required:
        - Id
        - IndexId
      title: UpdateThesaurusRequest
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ThesaurusId"
            - description: The identifier of the thesaurus you want to update.
        Name:
          allOf:
            - $ref: "#/components/schemas/ThesaurusName"
            - description: A new name for the thesaurus.
        IndexId:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: The identifier of the index for the thesaurus.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A new description for the thesaurus.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: An IAM role that gives Amazon Kendra permissions to access thesaurus file specified in <code>SourceS3Path</code>.
        SourceS3Path:
          $ref: "#/components/schemas/S3Path"
    AccessControlConfigurationId:
      type: string
      pattern: "[a-zA-Z0-9-]+"
      minLength: 1
      maxLength: 36
    AccessControlConfigurationName:
      type: string
      pattern: "[\\S\\s]*"
      minLength: 1
      maxLength: 200
    AccessControlConfigurationSummary:
      type: object
      required:
        - Id
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/AccessControlConfigurationId"
            - description: The identifier of the access control configuration.
      description: Summary information on an access control configuration that you created for your documents in an index.
    AccessControlConfigurationSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/AccessControlConfigurationSummary"
    S3ObjectKey:
      type: string
      minLength: 1
      maxLength: 1024
    AccessControlListConfiguration:
      type: object
      properties:
        KeyPath:
          allOf:
            - $ref: "#/components/schemas/S3ObjectKey"
            - description: Path to the Amazon S3 bucket that contains the ACL files.
      description: Access Control List files for the documents in a data source. For the format of the file, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html">Access control for S3 data sources</a>.
    ColumnName:
      type: string
      pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
      minLength: 1
      maxLength: 100
    AclConfiguration:
      type: object
      required:
        - AllowedGroupsColumnName
      properties:
        AllowedGroupsColumnName:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: A list of groups, separated by semi-colons, that filters a query response based on user context. The document is only returned to users that are in one of the groups specified in the <code>UserContext</code> field of the <code>Query</code> API.
      description: Provides information about the column that should be used for filtering the query response by groups.
    String:
      type: string
      minLength: 1
      maxLength: 2048
    AdditionalResultAttributeValueType:
      type: string
      enum:
        - TEXT_WITH_HIGHLIGHTS_VALUE
    AdditionalResultAttributeValue:
      type: object
      properties:
        TextWithHighlightsValue:
          allOf:
            - $ref: "#/components/schemas/TextWithHighlights"
            - description: The text associated with the attribute and information about the highlight to apply to the text.
      description: An attribute returned with a document from a search.
    AdditionalResultAttribute:
      type: object
      required:
        - Key
        - ValueType
        - Value
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The key that identifies the attribute.
        ValueType:
          allOf:
            - $ref: "#/components/schemas/AdditionalResultAttributeValueType"
            - description: The data type of the <code>Value</code> property.
        Value:
          allOf:
            - $ref: "#/components/schemas/AdditionalResultAttributeValue"
            - description: An object that contains the attribute value.
      description: An attribute returned from an index query.
    AdditionalResultAttributeList:
      type: array
      items:
        $ref: "#/components/schemas/AdditionalResultAttribute"
    TextWithHighlights:
      type: object
      properties:
        Text:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The text to display to the user.
        Highlights:
          allOf:
            - $ref: "#/components/schemas/HighlightList"
            - description: The beginning and end of the text that should be highlighted.
      description: Provides text and information about where to highlight the text.
    SiteUrl:
      type: string
      pattern: ^https:\/\/[a-zA-Z0-9_\-\.]+$
      minLength: 1
      maxLength: 2048
    SiteId:
      type: string
      pattern: ^[A-Za-z0-9-]+$
      minLength: 1
      maxLength: 128
    SecretArn:
      type: string
      pattern: arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
      minLength: 1
      maxLength: 1284
    S3Path:
      type: object
      required:
        - Bucket
        - Key
      properties:
        Bucket:
          allOf:
            - $ref: "#/components/schemas/S3BucketName"
            - description: The name of the S3 bucket that contains the file.
        Key:
          allOf:
            - $ref: "#/components/schemas/S3ObjectKey"
            - description: The name of the file.
      description: Information required to find a specific file in an Amazon S3 bucket.
    Boolean:
      type: boolean
    EntityFilter:
      type: array
      items:
        $ref: "#/components/schemas/AlfrescoEntity"
      minItems: 1
      maxItems: 3
    DataSourceToIndexFieldMappingList:
      type: array
      items:
        $ref: "#/components/schemas/DataSourceToIndexFieldMapping"
      minItems: 1
      maxItems: 100
    DataSourceInclusionsExclusionsStrings:
      type: array
      items:
        $ref: "#/components/schemas/DataSourceInclusionsExclusionsStringsMember"
      minItems: 0
      maxItems: 100
    DataSourceVpcConfiguration:
      type: object
      required:
        - SubnetIds
        - SecurityGroupIds
      properties:
        SubnetIds:
          allOf:
            - $ref: "#/components/schemas/SubnetIdList"
            - description: A list of identifiers for subnets within your Amazon VPC. The subnets should be able to connect to each other in the VPC, and they should have outgoing access to the Internet through a NAT device.
        SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/SecurityGroupIdList"
            - description: A list of identifiers of security groups within your Amazon VPC. The security groups should enable Amazon Kendra to connect to the data source.
      description: Provides the configuration information to connect to an Amazon VPC.
    AlfrescoConfiguration:
      type: object
      required:
        - SiteUrl
        - SiteId
        - SecretArn
        - SslCertificateS3Path
      properties:
        SiteUrl:
          allOf:
            - $ref: "#/components/schemas/SiteUrl"
            - description: The URL of the Alfresco site. For example, <i>https://hostname:8080</i>.
        SiteId:
          allOf:
            - $ref: "#/components/schemas/SiteId"
            - description: The identifier of the Alfresco site. For example, <i>my-site</i>.
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: <p>The Amazon Resource Name (ARN) of an Secrets Manager secret that contains the key-value pairs required to connect to your Alfresco data source. The secret must contain a JSON structure with the following keys:</p> <ul> <li> <p>username—The user name of the Alfresco account.</p> </li> <li> <p>password—The password of the Alfresco account.</p> </li> </ul>
        SslCertificateS3Path:
          allOf:
            - $ref: "#/components/schemas/S3Path"
            - description: <p>The path to the SSL certificate stored in an Amazon S3 bucket. You use this to connect to Alfresco if you require a secure SSL connection.</p> <p>You can simply generate a self-signed X509 certificate on any computer using OpenSSL. For an example of using OpenSSL to create an X509 certificate, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/configuring-https-ssl.html">Create and sign an X509 certificate</a>.</p>
        CrawlSystemFolders:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index shared files."
        CrawlComments:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index comments of blogs and other content."
        EntityFilter:
          allOf:
            - $ref: "#/components/schemas/EntityFilter"
            - description: Specify whether to index document libraries, wikis, or blogs. You can specify one or more of these options.
        DocumentLibraryFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Alfresco document libraries to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Alfresco fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html"> Mapping data source fields</a>. The Alfresco data source field names must exist in your Alfresco custom metadata.
        BlogFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Alfresco blogs to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Alfresco fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html"> Mapping data source fields</a>. The Alfresco data source field names must exist in your Alfresco custom metadata.
        WikiFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Alfresco wikis to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Alfresco fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html"> Mapping data source fields</a>. The Alfresco data source field names must exist in your Alfresco custom metadata.
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to include certain files in your Alfresco data source. Files that match the patterns are included in the index. Files that don't match the patterns are excluded from the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to exclude certain files in your Alfresco data source. Files that match the patterns are excluded from the index. Files that don't match the patterns are included in the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information for an Amazon Virtual Private Cloud to connect to your Alfresco. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html">Configuring a VPC</a>.
      description: <p>Provides the configuration information to connect to Alfresco as your data source.</p> <note> <p>Alfresco data source connector is currently in preview mode. Basic authentication is currently supported. If you would like to use Alfresco connector in production, contact <a href="http://aws.amazon.com/contact-us/">Support</a>.</p> </note>
    AlfrescoEntity:
      type: string
      enum:
        - wiki
        - blog
        - documentLibrary
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    FailedEntity:
      type: object
      properties:
        EntityId:
          allOf:
            - $ref: "#/components/schemas/EntityId"
            - description: The identifier of the user or group in your IAM Identity Center identity source. For example, a user ID could be an email.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: The reason the user or group in your IAM Identity Center identity source failed to properly configure with your Amazon Kendra experience.
      description: Information on the users or groups in your IAM Identity Center identity source that failed to properly configure with your Amazon Kendra experience.
    AssociateEntitiesToExperienceFailedEntityList:
      type: array
      items:
        $ref: "#/components/schemas/FailedEntity"
      minItems: 1
      maxItems: 20
    ExperienceId:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 36
    IndexId:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9-]*"
      minLength: 36
      maxLength: 36
    AssociateEntityList:
      type: array
      items:
        $ref: "#/components/schemas/EntityConfiguration"
      minItems: 1
      maxItems: 20
    EntityConfiguration:
      type: object
      required:
        - EntityId
        - EntityType
      properties:
        EntityId:
          allOf:
            - $ref: "#/components/schemas/EntityId"
            - description: The identifier of a user or group in your IAM Identity Center identity source. For example, a user ID could be an email.
        EntityType:
          allOf:
            - $ref: "#/components/schemas/EntityType"
            - description: Specifies whether you are configuring a <code>User</code> or a <code>Group</code>.
      description: Provides the configuration information for users or groups in your IAM Identity Center identity source to grant access your Amazon Kendra experience.
    EntityPersonaConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/EntityPersonaConfiguration"
      minItems: 1
      maxItems: 25
    FailedEntityList:
      type: array
      items:
        $ref: "#/components/schemas/FailedEntity"
      minItems: 1
      maxItems: 25
    AttributeFilterList:
      type: array
      items:
        $ref: "#/components/schemas/AttributeFilter"
    AttributeFilter:
      type: object
      properties:
        AndAllFilters:
          allOf:
            - $ref: "#/components/schemas/AttributeFilterList"
            - description: Performs a logical <code>AND</code> operation on all supplied filters.
        OrAllFilters:
          allOf:
            - $ref: "#/components/schemas/AttributeFilterList"
            - description: Performs a logical <code>OR</code> operation on all supplied filters.
        NotFilter:
          allOf:
            - $ref: "#/components/schemas/AttributeFilter"
            - description: Performs a logical <code>NOT</code> operation on all supplied filters.
        EqualsTo:
          allOf:
            - $ref: "#/components/schemas/DocumentAttribute"
            - description: Performs an equals operation on two document attributes or metadata fields.
        ContainsAll:
          allOf:
            - $ref: "#/components/schemas/DocumentAttribute"
            - description: Returns true when a document contains all of the specified document attributes or metadata fields. This filter is only applicable to <code>StringListValue</code> metadata.
        ContainsAny:
          allOf:
            - $ref: "#/components/schemas/DocumentAttribute"
            - description: Returns true when a document contains any of the specified document attributes or metadata fields. This filter is only applicable to <code>StringListValue</code> metadata.
        GreaterThan:
          allOf:
            - $ref: "#/components/schemas/DocumentAttribute"
            - description: Performs a greater than operation on two document attributes or metadata fields. Use with a document attribute of type <code>Date</code> or <code>Long</code>.
        GreaterThanOrEquals:
          allOf:
            - $ref: "#/components/schemas/DocumentAttribute"
            - description: Performs a greater or equals than operation on two document attributes or metadata fields. Use with a document attribute of type <code>Date</code> or <code>Long</code>.
        LessThan:
          allOf:
            - $ref: "#/components/schemas/DocumentAttribute"
            - description: Performs a less than operation on two document attributes or metadata fields. Use with a document attribute of type <code>Date</code> or <code>Long</code>.
        LessThanOrEquals:
          allOf:
            - $ref: "#/components/schemas/DocumentAttribute"
            - description: Performs a less than or equals operation on two document attributes or metadata fields. Use with a document attribute of type <code>Date</code> or <code>Long</code>.
      description: <p>Provides filtering the query results based on document attributes or metadata fields.</p> <p>When you use the <code>AndAllFilters</code> or <code>OrAllFilters</code>, filters you can use 2 layers under the first attribute filter. For example, you can use:</p> <p> <code>&lt;AndAllFilters&gt;</code> </p> <ol> <li> <p> <code> &lt;OrAllFilters&gt;</code> </p> </li> <li> <p> <code> &lt;EqualsTo&gt;</code> </p> </li> </ol> <p>If you use more than 2 layers, you receive a <code>ValidationException</code> exception with the message "<code>AttributeFilter</code> cannot have a depth of more than 2."</p> <p>If you use more than 10 attribute filters in a given list for <code>AndAllFilters</code> or <code>OrAllFilters</code>, you receive a <code>ValidationException</code> with the message "<code>AttributeFilter</code> cannot have a length of more than 10".</p>
    DocumentAttribute:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeKey"
            - description: The identifier for the attribute.
        Value:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeValue"
            - description: The value of the attribute.
      description: A document attribute or metadata field. To create custom document attributes, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-attributes.html">Custom attributes</a>.
    BasicAuthenticationConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/BasicAuthenticationConfiguration"
      minItems: 0
      maxItems: 10
    AuthenticationConfiguration:
      type: object
      properties:
        BasicAuthentication:
          allOf:
            - $ref: "#/components/schemas/BasicAuthenticationConfigurationList"
            - description: <p>The list of configuration information that's required to connect to and crawl a website host using basic authentication credentials.</p> <p>The list includes the name and port number of the website host.</p>
      description: Provides the configuration information to connect to websites that require user authentication.
    Host:
      type: string
      pattern: ([^\s]*)
      minLength: 1
      maxLength: 253
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    BasicAuthenticationConfiguration:
      type: object
      required:
        - Host
        - Port
        - Credentials
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: <p>The name of the website host you want to connect to using authentication credentials.</p> <p>For example, the host name of https://a.example.com/page1.html is "a.example.com".</p>
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: <p>The port number of the website host you want to connect to using authentication credentials.</p> <p>For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.</p>
        Credentials:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: <p>Your secret ARN, which you can create in <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html">Secrets Manager</a> </p> <p>You use a secret if basic authentication credentials are required to connect to a website. The secret stores your credentials of user name and password.</p>
      description: Provides the configuration information to connect to websites that require basic user authentication.
    DocumentIdList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentId"
      minItems: 1
      maxItems: 10
    DataSourceSyncJobMetricTarget:
      type: object
      required:
        - DataSourceId
      properties:
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The ID of the data source that is running the sync job.
        DataSourceSyncJobId:
          allOf:
            - $ref: "#/components/schemas/DataSourceSyncJobId"
            - description: <p>The ID of the sync job that is running on the data source.</p> <p>If the ID of a sync job is not provided and there is a sync job running, then the ID of this sync job is used and metrics are generated for this sync job.</p> <p>If the ID of a sync job is not provided and there is no sync job running, then no metrics are generated and documents are indexed/deleted at the index level without sync job metrics included.</p>
      description: Maps a particular data source sync job to a particular data source.
    BatchDeleteDocumentResponseFailedDocuments:
      type: array
      items:
        $ref: "#/components/schemas/BatchDeleteDocumentResponseFailedDocument"
    DocumentId:
      type: string
      minLength: 1
      maxLength: 2048
    ErrorCode:
      type: string
      enum:
        - InternalError
        - InvalidRequest
    ErrorMessage:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 2048
    BatchDeleteDocumentResponseFailedDocument:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DocumentId"
            - description: The identifier of the document that couldn't be removed from the index.
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/ErrorCode"
            - description: The error code for why the document couldn't be removed from the index.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: An explanation for why the document couldn't be removed from the index.
      description: Provides information about documents that could not be removed from an index by the <code>BatchDeleteDocument</code> API.
    FeaturedResultsSetId:
      type: string
      pattern: ^[a-zA-Z-0-9]*
      minLength: 36
      maxLength: 36
    BatchDeleteFeaturedResultsSetError:
      type: object
      required:
        - Id
        - ErrorCode
        - ErrorMessage
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetId"
            - description: The identifier of the set of featured results that couldn't be removed from the index.
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/ErrorCode"
            - description: The error code for why the set of featured results couldn't be removed from the index.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: An explanation for why the set of featured results couldn't be removed from the index.
      description: Provides information about a set of featured results that couldn't be removed from an index by the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchDeleteFeaturedResultsSet.html">BatchDeleteFeaturedResultsSet</a> API.
    BatchDeleteFeaturedResultsSetErrors:
      type: array
      items:
        $ref: "#/components/schemas/BatchDeleteFeaturedResultsSetError"
    FeaturedResultsSetIdList:
      type: array
      items:
        $ref: "#/components/schemas/FeaturedResultsSetId"
      minItems: 1
      maxItems: 50
    DocumentInfoList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentInfo"
      minItems: 1
      maxItems: 10
    BatchGetDocumentStatusResponseErrors:
      type: array
      items:
        $ref: "#/components/schemas/BatchGetDocumentStatusResponseError"
    DocumentStatusList:
      type: array
      items:
        $ref: "#/components/schemas/Status"
    BatchGetDocumentStatusResponseError:
      type: object
      properties:
        DocumentId:
          allOf:
            - $ref: "#/components/schemas/DocumentId"
            - description: The identifier of the document whose status could not be retrieved.
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/ErrorCode"
            - description: Indicates the source of the error.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: States that the API could not get the status of a document. This could be because the request is not valid or there is a system error.
      description: Provides a response when the status of a document could not be retrieved.
    RoleArn:
      type: string
      pattern: arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}
      minLength: 0
      maxLength: 1284
    DocumentList:
      type: array
      items:
        $ref: "#/components/schemas/Document"
      minItems: 1
      maxItems: 10
    CustomDocumentEnrichmentConfiguration:
      type: object
      properties:
        InlineConfigurations:
          allOf:
            - $ref: "#/components/schemas/InlineCustomDocumentEnrichmentConfigurationList"
            - description: Configuration information to alter document attributes or metadata fields and content when ingesting documents into Amazon Kendra.
        PreExtractionHookConfiguration:
          allOf:
            - $ref: "#/components/schemas/HookConfiguration"
            - description: Configuration information for invoking a Lambda function in Lambda on the original or raw documents before extracting their metadata and text. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation">Advanced data manipulation</a>.
        PostExtractionHookConfiguration:
          allOf:
            - $ref: "#/components/schemas/HookConfiguration"
            - description: Configuration information for invoking a Lambda function in Lambda on the structured documents with their metadata and text extracted. You can use a Lambda function to apply advanced logic for creating, modifying, or deleting document metadata and content. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#advanced-data-manipulation">Advanced data manipulation</a>.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of a role with permission to run <code>PreExtractionHookConfiguration</code> and <code>PostExtractionHookConfiguration</code> for altering document metadata and content during the document ingestion process. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM roles for Amazon Kendra</a>.
      description: <p>Provides the configuration information for altering document metadata and content during the document ingestion process.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html">Customizing document metadata during the ingestion process</a>.</p>
    BatchPutDocumentResponseFailedDocuments:
      type: array
      items:
        $ref: "#/components/schemas/BatchPutDocumentResponseFailedDocument"
    BatchPutDocumentResponseFailedDocument:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DocumentId"
            - description: The identifier of the document.
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/ErrorCode"
            - description: The type of error that caused the document to fail to be indexed.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: A description of the reason why the document could not be indexed.
      description: Provides information about a document that could not be indexed.
    Blob:
      type: string
    EnterpriseId:
      type: string
      pattern: ^[A-Z0-9]*$
      minLength: 1
      maxLength: 64
    BoxConfiguration:
      type: object
      required:
        - EnterpriseId
        - SecretArn
      properties:
        EnterpriseId:
          allOf:
            - $ref: "#/components/schemas/EnterpriseId"
            - description: The identifier of the Box Enterprise platform. You can find the enterprise ID in the Box Developer Console settings or when you create an app in Box and download your authentication credentials. For example, <i>801234567</i>.
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: <p>The Amazon Resource Name (ARN) of an Secrets Manager secret that contains the key-value pairs required to connect to your Box platform. The secret must contain a JSON structure with the following keys:</p> <ul> <li> <p>clientID—The identifier of the client OAuth 2.0 authentication application created in Box.</p> </li> <li> <p>clientSecret—A set of characters known only to the OAuth 2.0 authentication application created in Box.</p> </li> <li> <p>publicKeyId—The identifier of the public key contained within an identity certificate.</p> </li> <li> <p>privateKey—A set of characters that make up an encryption key.</p> </li> <li> <p>passphrase—A set of characters that act like a password.</p> </li> </ul> <p>You create an application in Box to generate the keys or credentials required for the secret. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-box.html">Using a Box data source</a>.</p>
        UseChangeLog:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to use the Slack change log to determine which documents require updating in the index. Depending on the data source change log's size, it may take longer for Amazon Kendra to use the change log than to scan all of your documents."
        CrawlComments:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index comments."
        CrawlTasks:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index the contents of tasks."
        CrawlWebLinks:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index web links."
        FileFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Box files to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Box fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Box field names must exist in your Box custom metadata.
        TaskFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Box tasks to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Box fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Box field names must exist in your Box custom metadata.
        CommentFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Box comments to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Box fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Box field names must exist in your Box custom metadata.
        WebLinkFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Box web links to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Box fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Box field names must exist in your Box custom metadata.
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to include certain files and folders in your Box platform. Files and folders that match the patterns are included in the index. Files and folders that don't match the patterns are excluded from the index. If a file or folder matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the file or folder isn't included in the index.
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to exclude certain files and folders from your Box platform. Files and folders that match the patterns are excluded from the index.Files and folders that don't match the patterns are included in the index. If a file or folder matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the file or folder isn't included in the index.
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information for an Amazon VPC to connect to your Box. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html">Configuring a VPC</a>.
      description: Provides the configuration information to connect to Box as your data source.
    StorageCapacityUnit:
      type: integer
      minimum: 0
    QueryCapacityUnit:
      type: integer
      minimum: 0
    CapacityUnitsConfiguration:
      type: object
      required:
        - StorageCapacityUnits
        - QueryCapacityUnits
      properties:
        StorageCapacityUnits:
          allOf:
            - $ref: "#/components/schemas/StorageCapacityUnit"
            - description: The amount of extra storage capacity for an index. A single capacity unit provides 30 GB of storage space or 100,000 documents, whichever is reached first. You can add up to 100 extra capacity units.
        QueryCapacityUnits:
          allOf:
            - $ref: "#/components/schemas/QueryCapacityUnit"
            - description: <p>The amount of extra query capacity for an index and <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_GetQuerySuggestions.html">GetQuerySuggestions</a> capacity.</p> <p>A single extra capacity unit for an index provides 0.1 queries per second or approximately 8,000 queries per day. You can add up to 100 extra capacity units.</p> <p> <code>GetQuerySuggestions</code> capacity is five times the provisioned query capacity for an index, or the base capacity of 2.5 calls per second, whichever is higher. For example, the base capacity for an index is 0.1 queries per second, and <code>GetQuerySuggestions</code> capacity has a base of 2.5 calls per second. If you add another 0.1 queries per second to total 0.2 queries per second for an index, the <code>GetQuerySuggestions</code> capacity is 2.5 calls per second (higher than five times 0.2 queries per second).</p>
      description: Specifies additional capacity units configured for your Enterprise Edition index. You can add and remove capacity units to fit your usage requirements.
    ChangeDetectingColumns:
      type: array
      items:
        $ref: "#/components/schemas/ColumnName"
      minItems: 1
      maxItems: 5
    ClaimRegex:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 100
    ResultId:
      type: string
      minLength: 1
      maxLength: 73
    Timestamp:
      type: string
      format: date-time
    ClickFeedback:
      type: object
      required:
        - ResultId
        - ClickTime
      properties:
        ResultId:
          allOf:
            - $ref: "#/components/schemas/ResultId"
            - description: The identifier of the search result that was clicked.
        ClickTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the result was clicked.
      description: Gathers information about when a particular result was clicked by a user. Your application uses the <code>SubmitFeedback</code> API to provide click information.
    ClickFeedbackList:
      type: array
      items:
        $ref: "#/components/schemas/ClickFeedback"
    ClientTokenName:
      type: string
      minLength: 1
      maxLength: 100
    ColumnConfiguration:
      type: object
      required:
        - DocumentIdColumnName
        - DocumentDataColumnName
        - ChangeDetectingColumns
      properties:
        DocumentIdColumnName:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: The column that provides the document's identifier.
        DocumentDataColumnName:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: The column that contains the contents of the document.
        DocumentTitleColumnName:
          allOf:
            - $ref: "#/components/schemas/ColumnName"
            - description: The column that contains the title of the document.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: An array of objects that map database column names to the corresponding fields in an index. You must first create the fields in the index using the <code>UpdateIndex</code> API.
        ChangeDetectingColumns:
          allOf:
            - $ref: "#/components/schemas/ChangeDetectingColumns"
            - description: One to five columns that indicate when a document in the database has changed.
      description: Provides information about how Amazon Kendra should use the columns of a database in an index.
    ConditionOperator:
      type: string
      enum:
        - GreaterThan
        - GreaterThanOrEquals
        - LessThan
        - LessThanOrEquals
        - Equals
        - NotEquals
        - Contains
        - NotContains
        - Exists
        - NotExists
        - BeginsWith
    ConfluenceAttachmentFieldMappingsList:
      type: array
      items:
        $ref: "#/components/schemas/ConfluenceAttachmentToIndexFieldMapping"
      minItems: 1
      maxItems: 11
    ConfluenceAttachmentConfiguration:
      type: object
      properties:
        CrawlAttachments:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index attachments of pages and blogs in Confluence."
        AttachmentFieldMappings:
          allOf:
            - $ref: "#/components/schemas/ConfluenceAttachmentFieldMappingsList"
            - description: <p>Maps attributes or field names of Confluence attachments to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confluence data source field names must exist in your Confluence custom metadata.</p> <p>If you specify the <code>AttachentFieldMappings</code> parameter, you must specify at least one field mapping.</p>
      description: Configuration of attachment settings for the Confluence data source. Attachment settings are optional, if you don't specify settings attachments, Amazon Kendra won't index them.
    ConfluenceAttachmentToIndexFieldMapping:
      type: object
      properties:
        DataSourceFieldName:
          allOf:
            - $ref: "#/components/schemas/ConfluenceAttachmentFieldName"
            - description: <p>The name of the field in the data source. </p> <p>You must first create the index field using the <code>UpdateIndex</code> API. </p>
        DateFieldFormat:
          allOf:
            - $ref: "#/components/schemas/DataSourceDateFieldFormat"
            - description: The format for date fields in the data source. If the field specified in <code>DataSourceFieldName</code> is a date field you must specify the date format. If the field is not a date field, an exception is thrown.
        IndexFieldName:
          allOf:
            - $ref: "#/components/schemas/IndexFieldName"
            - description: The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.
      description: Maps attributes or field names of Confluence attachments to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confuence data source field names must exist in your Confluence custom metadata.
    ConfluenceAttachmentFieldName:
      type: string
      enum:
        - AUTHOR
        - CONTENT_TYPE
        - CREATED_DATE
        - DISPLAY_URL
        - FILE_SIZE
        - ITEM_TYPE
        - PARENT_ID
        - SPACE_KEY
        - SPACE_NAME
        - URL
        - VERSION
    DataSourceDateFieldFormat:
      type: string
      pattern: ^(?!\s).*(?<!\s)$
      minLength: 4
      maxLength: 40
    IndexFieldName:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 30
    ConfluenceAuthenticationType:
      type: string
      enum:
        - HTTP_BASIC
        - PAT
    ConfluenceBlogFieldMappingsList:
      type: array
      items:
        $ref: "#/components/schemas/ConfluenceBlogToIndexFieldMapping"
      minItems: 1
      maxItems: 9
    ConfluenceBlogConfiguration:
      type: object
      properties:
        BlogFieldMappings:
          allOf:
            - $ref: "#/components/schemas/ConfluenceBlogFieldMappingsList"
            - description: <p>Maps attributes or field names of Confluence blogs to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confluence data source field names must exist in your Confluence custom metadata.</p> <p>If you specify the <code>BlogFieldMappings</code> parameter, you must specify at least one field mapping.</p>
      description: Configuration of blog settings for the Confluence data source. Blogs are always indexed unless filtered from the index by the <code>ExclusionPatterns</code> or <code>InclusionPatterns</code> fields in the <code>ConfluenceConfiguration</code> object.
    ConfluenceBlogToIndexFieldMapping:
      type: object
      properties:
        DataSourceFieldName:
          allOf:
            - $ref: "#/components/schemas/ConfluenceBlogFieldName"
            - description: "The name of the field in the data source. "
        DateFieldFormat:
          allOf:
            - $ref: "#/components/schemas/DataSourceDateFieldFormat"
            - description: The format for date fields in the data source. If the field specified in <code>DataSourceFieldName</code> is a date field you must specify the date format. If the field is not a date field, an exception is thrown.
        IndexFieldName:
          allOf:
            - $ref: "#/components/schemas/IndexFieldName"
            - description: The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.
      description: Maps attributes or field names of Confluence blog to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confluence data source field names must exist in your Confluence custom metadata.
    ConfluenceBlogFieldName:
      type: string
      enum:
        - AUTHOR
        - DISPLAY_URL
        - ITEM_TYPE
        - LABELS
        - PUBLISH_DATE
        - SPACE_KEY
        - SPACE_NAME
        - URL
        - VERSION
    Url:
      type: string
      pattern: ^(https?|ftp|file):\/\/([^\s]*)
      minLength: 1
      maxLength: 2048
    ConfluenceVersion:
      type: string
      enum:
        - CLOUD
        - SERVER
    ConfluenceSpaceConfiguration:
      type: object
      properties:
        CrawlPersonalSpaces:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: ' <code>TRUE</code> to index personal spaces. You can add restrictions to items in personal spaces. If personal spaces are indexed, queries without user context information may return restricted items from a personal space in their results. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">Filtering on user context</a>.'
        CrawlArchivedSpaces:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index archived spaces."
        IncludeSpaces:
          allOf:
            - $ref: "#/components/schemas/ConfluenceSpaceList"
            - description: A list of space keys for Confluence spaces. If you include a key, the blogs, documents, and attachments in the space are indexed. Spaces that aren't in the list aren't indexed. A space in the list must exist. Otherwise, Amazon Kendra logs an error when the data source is synchronized. If a space is in both the <code>IncludeSpaces</code> and the <code>ExcludeSpaces</code> list, the space is excluded.
        ExcludeSpaces:
          allOf:
            - $ref: "#/components/schemas/ConfluenceSpaceList"
            - description: A list of space keys of Confluence spaces. If you include a key, the blogs, documents, and attachments in the space are not indexed. If a space is in both the <code>ExcludeSpaces</code> and the <code>IncludeSpaces</code> list, the space is excluded.
        SpaceFieldMappings:
          allOf:
            - $ref: "#/components/schemas/ConfluenceSpaceFieldMappingsList"
            - description: <p>Maps attributes or field names of Confluence spaces to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confluence data source field names must exist in your Confluence custom metadata.</p> <p>If you specify the <code>SpaceFieldMappings</code> parameter, you must specify at least one field mapping.</p>
      description: Configuration information for indexing Confluence spaces.
    ConfluencePageConfiguration:
      type: object
      properties:
        PageFieldMappings:
          allOf:
            - $ref: "#/components/schemas/ConfluencePageFieldMappingsList"
            - description: <p>Maps attributes or field names of Confluence pages to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confluence data source field names must exist in your Confluence custom metadata.</p> <p>If you specify the <code>PageFieldMappings</code> parameter, you must specify at least one field mapping.</p>
      description: Configuration of the page settings for the Confluence data source.
    ProxyConfiguration:
      type: object
      required:
        - Host
        - Port
      properties:
        Host:
          allOf:
            - $ref: "#/components/schemas/Host"
            - description: <p>The name of the website host you want to connect to via a web proxy server.</p> <p>For example, the host name of https://a.example.com/page1.html is "a.example.com".</p>
        Port:
          allOf:
            - $ref: "#/components/schemas/Port"
            - description: <p>The port number of the website host you want to connect to via a web proxy server. </p> <p>For example, the port for https://a.example.com/page1.html is 443, the standard port for HTTPS.</p>
        Credentials:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: <p>Your secret ARN, which you can create in <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html">Secrets Manager</a> </p> <p>The credentials are optional. You use a secret if web proxy credentials are required to connect to a website host. Amazon Kendra currently support basic authentication to connect to a web proxy server. The secret stores your credentials.</p>
      description: Provides the configuration information for a web proxy to connect to website hosts.
    ConfluenceConfiguration:
      type: object
      required:
        - ServerUrl
        - SecretArn
        - Version
      properties:
        ServerUrl:
          allOf:
            - $ref: "#/components/schemas/Url"
            - description: The URL of your Confluence instance. Use the full URL of the server. For example, <i>https://server.example.com:port/</i>. You can also use an IP address, for example, <i>https://192.168.1.113/</i>.
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: <p>The Amazon Resource Name (ARN) of an Secrets Manager secret that contains the user name and password required to connect to the Confluence instance. If you use Confluence Cloud, you use a generated API token as the password.</p> <p>You can also provide authentication credentials in the form of a personal access token. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-confluence.html">Using a Confluence data source</a>.</p>
        Version:
          allOf:
            - $ref: "#/components/schemas/ConfluenceVersion"
            - description: The version or the type of Confluence installation to connect to.
        SpaceConfiguration:
          allOf:
            - $ref: "#/components/schemas/ConfluenceSpaceConfiguration"
            - description: Configuration information for indexing Confluence spaces.
        PageConfiguration:
          allOf:
            - $ref: "#/components/schemas/ConfluencePageConfiguration"
            - description: Configuration information for indexing Confluence pages.
        BlogConfiguration:
          allOf:
            - $ref: "#/components/schemas/ConfluenceBlogConfiguration"
            - description: Configuration information for indexing Confluence blogs.
        AttachmentConfiguration:
          allOf:
            - $ref: "#/components/schemas/ConfluenceAttachmentConfiguration"
            - description: Configuration information for indexing attachments to Confluence blogs and pages.
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information for an Amazon Virtual Private Cloud to connect to your Confluence. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html">Configuring a VPC</a>.
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to include certain blog posts, pages, spaces, or attachments in your Confluence. Content that matches the patterns are included in the index. Content that doesn't match the patterns is excluded from the index. If content matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the content isn't included in the index.
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to exclude certain blog posts, pages, spaces, or attachments in your Confluence. Content that matches the patterns are excluded from the index. Content that doesn't match the patterns is included in the index. If content matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the content isn't included in the index.
        ProxyConfiguration:
          allOf:
            - $ref: "#/components/schemas/ProxyConfiguration"
            - description: <p>Configuration information to connect to your Confluence URL instance via a web proxy. You can use this option for Confluence Server.</p> <p>You must provide the website host name and port number. For example, the host name of <i>https://a.example.com/page1.html</i> is "a.example.com" and the port is 443, the standard port for HTTPS.</p> <p>Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication of user name and password. To store web proxy credentials, you use a secret in Secrets Manager.</p> <p>It is recommended that you follow best security practices when configuring your web proxy. This includes setting up throttling, setting up logging and monitoring, and applying security patches on a regular basis. If you use your web proxy with multiple data sources, sync jobs that occur at the same time could strain the load on your proxy. It is recommended you prepare your proxy beforehand for any security and load requirements.</p>
        AuthenticationType:
          allOf:
            - $ref: "#/components/schemas/ConfluenceAuthenticationType"
            - description: Whether you want to connect to Confluence using basic authentication of user name and password, or a personal access token. You can use a personal access token for Confluence Server.
      description: Provides the configuration information to connect to Confluence as your data source.
    ConfluencePageFieldMappingsList:
      type: array
      items:
        $ref: "#/components/schemas/ConfluencePageToIndexFieldMapping"
      minItems: 1
      maxItems: 12
    ConfluencePageToIndexFieldMapping:
      type: object
      properties:
        DataSourceFieldName:
          allOf:
            - $ref: "#/components/schemas/ConfluencePageFieldName"
            - description: The name of the field in the data source.
        DateFieldFormat:
          allOf:
            - $ref: "#/components/schemas/DataSourceDateFieldFormat"
            - description: The format for date fields in the data source. If the field specified in <code>DataSourceFieldName</code> is a date field you must specify the date format. If the field is not a date field, an exception is thrown.
        IndexFieldName:
          allOf:
            - $ref: "#/components/schemas/IndexFieldName"
            - description: The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.
      description: Maps attributes or field names of Confluence pages to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confluence data source field names must exist in your Confluence custom metadata.
    ConfluencePageFieldName:
      type: string
      enum:
        - AUTHOR
        - CONTENT_STATUS
        - CREATED_DATE
        - DISPLAY_URL
        - ITEM_TYPE
        - LABELS
        - MODIFIED_DATE
        - PARENT_ID
        - SPACE_KEY
        - SPACE_NAME
        - URL
        - VERSION
    ConfluenceSpaceList:
      type: array
      items:
        $ref: "#/components/schemas/ConfluenceSpaceIdentifier"
      minItems: 1
    ConfluenceSpaceFieldMappingsList:
      type: array
      items:
        $ref: "#/components/schemas/ConfluenceSpaceToIndexFieldMapping"
      minItems: 1
      maxItems: 4
    ConfluenceSpaceToIndexFieldMapping:
      type: object
      properties:
        DataSourceFieldName:
          allOf:
            - $ref: "#/components/schemas/ConfluenceSpaceFieldName"
            - description: "The name of the field in the data source. "
        DateFieldFormat:
          allOf:
            - $ref: "#/components/schemas/DataSourceDateFieldFormat"
            - description: The format for date fields in the data source. If the field specified in <code>DataSourceFieldName</code> is a date field you must specify the date format. If the field is not a date field, an exception is thrown.
        IndexFieldName:
          allOf:
            - $ref: "#/components/schemas/IndexFieldName"
            - description: The name of the index field to map to the Confluence data source field. The index field type must match the Confluence field type.
      description: Maps attributes or field names of Confluence spaces to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Confluence fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Confluence data source field names must exist in your Confluence custom metadata.
    ConfluenceSpaceFieldName:
      type: string
      enum:
        - DISPLAY_URL
        - ITEM_TYPE
        - SPACE_KEY
        - URL
    ConfluenceSpaceIdentifier:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 255
    DatabaseHost:
      type: string
      minLength: 1
      maxLength: 253
    DatabasePort:
      type: integer
      minimum: 1
      maximum: 65535
    DatabaseName:
      type: string
      pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
      minLength: 1
      maxLength: 100
    TableName:
      type: string
      pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
      minLength: 1
      maxLength: 100
    ConnectionConfiguration:
      type: object
      required:
        - DatabaseHost
        - DatabasePort
        - DatabaseName
        - TableName
        - SecretArn
      properties:
        DatabaseHost:
          allOf:
            - $ref: "#/components/schemas/DatabaseHost"
            - description: The name of the host for the database. Can be either a string (host.subdomain.domain.tld) or an IPv4 or IPv6 address.
        DatabasePort:
          allOf:
            - $ref: "#/components/schemas/DatabasePort"
            - description: The port that the database uses for connections.
        DatabaseName:
          allOf:
            - $ref: "#/components/schemas/DatabaseName"
            - description: The name of the database containing the document data.
        TableName:
          allOf:
            - $ref: "#/components/schemas/TableName"
            - description: The name of the table that contains the document data.
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: The Amazon Resource Name (ARN) of credentials stored in Secrets Manager. The credentials should be a user/password pair. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-database.html">Using a Database Data Source</a>. For more information about Secrets Manager, see <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html"> What Is Secrets Manager</a> in the <i> Secrets Manager </i> user guide.
      description: Provides the configuration information that's required to connect to a database.
    DataSourceIdList:
      type: array
      items:
        $ref: "#/components/schemas/DataSourceId"
      minItems: 1
      maxItems: 100
    FaqIdsList:
      type: array
      items:
        $ref: "#/components/schemas/FaqId"
      minItems: 1
      maxItems: 100
    ContentSourceConfiguration:
      type: object
      properties:
        DataSourceIds:
          allOf:
            - $ref: "#/components/schemas/DataSourceIdList"
            - description: The identifier of the data sources you want to use for your Amazon Kendra experience.
        FaqIds:
          allOf:
            - $ref: "#/components/schemas/FaqIdsList"
            - description: The identifier of the FAQs that you want to use for your Amazon Kendra experience.
        DirectPutContent:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to use documents you indexed directly using the <code>BatchPutDocument</code> API."
      description: Provides the configuration information for your content sources, such as data sources, FAQs, and content indexed directly via <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchPutDocument.html">BatchPutDocument</a>.
    ContentType:
      type: string
      enum:
        - PDF
        - HTML
        - MS_WORD
        - PLAIN_TEXT
        - PPT
        - RTF
        - XML
        - XSLT
        - MS_EXCEL
        - CSV
        - JSON
        - MD
    Integer:
      type: integer
    Correction:
      type: object
      properties:
        BeginOffset:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The zero-based location in the response string or text where the corrected word starts.
        EndOffset:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The zero-based location in the response string or text where the corrected word ends.
        Term:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The string or text of a misspelled word in a query.
        CorrectedTerm:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The string or text of a corrected misspelled word in a query.
      description: A corrected misspelled word in a query.
    CorrectionList:
      type: array
      items:
        $ref: "#/components/schemas/Correction"
    CrawlDepth:
      type: integer
      minimum: 0
      maximum: 10
    Description:
      type: string
      pattern: ^\P{C}*$
      minLength: 0
      maxLength: 1000
    PrincipalList:
      type: array
      items:
        $ref: "#/components/schemas/Principal"
    HierarchicalPrincipalList:
      type: array
      description: A list of <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html">principal</a> lists that define the hierarchy for which documents users should have access to. Each hierarchical list specifies which user or group has allow or deny access for each document.
      items:
        $ref: "#/components/schemas/HierarchicalPrincipal"
      minItems: 1
      maxItems: 30
    DataSourceName:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 1000
    DataSourceType:
      type: string
      enum:
        - S3
        - SHAREPOINT
        - DATABASE
        - SALESFORCE
        - ONEDRIVE
        - SERVICENOW
        - CUSTOM
        - CONFLUENCE
        - GOOGLEDRIVE
        - WEBCRAWLER
        - WORKDOCS
        - FSX
        - SLACK
        - BOX
        - QUIP
        - JIRA
        - GITHUB
        - ALFRESCO
        - TEMPLATE
    DataSourceConfiguration:
      type: object
      properties:
        S3Configuration:
          allOf:
            - $ref: "#/components/schemas/S3DataSourceConfiguration"
            - description: Provides the configuration information to connect to an Amazon S3 bucket as your data source.
        SharePointConfiguration:
          allOf:
            - $ref: "#/components/schemas/SharePointConfiguration"
            - description: Provides the configuration information to connect to Microsoft SharePoint as your data source.
        DatabaseConfiguration:
          allOf:
            - $ref: "#/components/schemas/DatabaseConfiguration"
            - description: Provides the configuration information to connect to a database as your data source.
        SalesforceConfiguration:
          allOf:
            - $ref: "#/components/schemas/SalesforceConfiguration"
            - description: Provides the configuration information to connect to Salesforce as your data source.
        OneDriveConfiguration:
          allOf:
            - $ref: "#/components/schemas/OneDriveConfiguration"
            - description: Provides the configuration information to connect to Microsoft OneDrive as your data source.
        ServiceNowConfiguration:
          allOf:
            - $ref: "#/components/schemas/ServiceNowConfiguration"
            - description: Provides the configuration information to connect to ServiceNow as your data source.
        ConfluenceConfiguration:
          allOf:
            - $ref: "#/components/schemas/ConfluenceConfiguration"
            - description: Provides the configuration information to connect to Confluence as your data source.
        GoogleDriveConfiguration:
          allOf:
            - $ref: "#/components/schemas/GoogleDriveConfiguration"
            - description: Provides the configuration information to connect to Google Drive as your data source.
        WebCrawlerConfiguration:
          $ref: "#/components/schemas/WebCrawlerConfiguration"
        WorkDocsConfiguration:
          allOf:
            - $ref: "#/components/schemas/WorkDocsConfiguration"
            - description: Provides the configuration information to connect to Amazon WorkDocs as your data source.
        FsxConfiguration:
          allOf:
            - $ref: "#/components/schemas/FsxConfiguration"
            - description: Provides the configuration information to connect to Amazon FSx as your data source.
        SlackConfiguration:
          allOf:
            - $ref: "#/components/schemas/SlackConfiguration"
            - description: Provides the configuration information to connect to Slack as your data source.
        BoxConfiguration:
          allOf:
            - $ref: "#/components/schemas/BoxConfiguration"
            - description: Provides the configuration information to connect to Box as your data source.
        QuipConfiguration:
          allOf:
            - $ref: "#/components/schemas/QuipConfiguration"
            - description: Provides the configuration information to connect to Quip as your data source.
        JiraConfiguration:
          allOf:
            - $ref: "#/components/schemas/JiraConfiguration"
            - description: Provides the configuration information to connect to Jira as your data source.
        GitHubConfiguration:
          allOf:
            - $ref: "#/components/schemas/GitHubConfiguration"
            - description: Provides the configuration information to connect to GitHub as your data source.
        AlfrescoConfiguration:
          allOf:
            - $ref: "#/components/schemas/AlfrescoConfiguration"
            - description: Provides the configuration information to connect to Alfresco as your data source.
        TemplateConfiguration:
          allOf:
            - $ref: "#/components/schemas/TemplateConfiguration"
            - description: Provides a template for the configuration information to connect to your data source.
      description: Provides the configuration information for an Amazon Kendra data source.
    ScanSchedule:
      type: string
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 0
      maxItems: 200
    LanguageCode:
      type: string
      pattern: "[a-zA-Z-]*"
      description: The code for a language. The default language is English. For more information on supported languages, including their codes, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html">Adding documents in languages other than English</a>.
      minLength: 2
      maxLength: 10
    DataSourceId:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 100
    ExperienceName:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 1000
    ExperienceConfiguration:
      type: object
      properties:
        ContentSourceConfiguration:
          allOf:
            - $ref: "#/components/schemas/ContentSourceConfiguration"
            - description: The identifiers of your data sources and FAQs. Or, you can specify that you want to use documents indexed via the <code>BatchPutDocument</code> API. This is the content you want to use for your Amazon Kendra experience.
        UserIdentityConfiguration:
          allOf:
            - $ref: "#/components/schemas/UserIdentityConfiguration"
            - description: The IAM Identity Center field name that contains the identifiers of your users, such as their emails.
      description: Provides the configuration information for your Amazon Kendra experience. This includes the data source IDs and/or FAQ IDs, and user or group information to grant access to your Amazon Kendra experience.
    FaqName:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 100
    FaqFileFormat:
      type: string
      enum:
        - CSV
        - CSV_WITH_HEADER
        - JSON
    FaqId:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 100
    FeaturedResultsSetName:
      type: string
      pattern: "[a-zA-Z0-9][ a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 1000
    FeaturedResultsSetDescription:
      type: string
      pattern: ^\P{C}*$
      minLength: 0
      maxLength: 1000
    FeaturedResultsSetStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
    QueryTextList:
      type: array
      items:
        $ref: "#/components/schemas/QueryText"
      minItems: 0
      maxItems: 49
    FeaturedDocumentList:
      type: array
      items:
        $ref: "#/components/schemas/FeaturedDocument"
    FeaturedResultsSet:
      type: object
      properties:
        FeaturedResultsSetId:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetId"
            - description: The identifier of the set of featured results.
        FeaturedResultsSetName:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetName"
            - description: The name for the set of featured results.
        Description:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetDescription"
            - description: The description for the set of featured results.
        Status:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetStatus"
            - description: The current status of the set of featured results. When the value is <code>ACTIVE</code>, featured results are ready for use. You can still configure your settings before setting the status to <code>ACTIVE</code>. You can set the status to <code>ACTIVE</code> or <code>INACTIVE</code> using the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_UpdateFeaturedResultsSet.html">UpdateFeaturedResultsSet</a> API. The queries you specify for featured results must be unique per featured results set for each index, whether the status is <code>ACTIVE</code> or <code>INACTIVE</code>.
        QueryTexts:
          allOf:
            - $ref: "#/components/schemas/QueryTextList"
            - description: <p>The list of queries for featuring results.</p> <p>Specific queries are mapped to specific documents for featuring in the results. If a query contains an exact match, then one or more specific documents are featured in the results. The exact match applies to the full query. For example, if you only specify 'Kendra', queries such as 'How does kendra semantically rank results?' will not render the featured results. Featured results are designed for specific queries, rather than queries that are too broad in scope.</p>
        FeaturedDocuments:
          allOf:
            - $ref: "#/components/schemas/FeaturedDocumentList"
            - description: <p>The list of document IDs for the documents you want to feature at the top of the search results page. You can use the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Query.html">Query</a> API to search for specific documents with their document IDs included in the result items, or you can use the console.</p> <p>You can add up to four featured documents. You can request to increase this limit by contacting <a href="http://aws.amazon.com/contact-us/">Support</a>.</p> <p>Specific queries are mapped to specific documents for featuring in the results. If a query contains an exact match, then one or more specific documents are featured in the results. The exact match applies to the full query. For example, if you only specify 'Kendra', queries such as 'How does kendra semantically rank results?' will not render the featured results. Featured results are designed for specific queries, rather than queries that are too broad in scope.</p>
        LastUpdatedTimestamp:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The Unix timestamp when the set of featured results was last updated.
        CreationTimestamp:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The Unix timestamp when the set of featured results was created.
      description: A set of featured results that are displayed at the top of your search results. Featured results are placed above all other results for certain queries. If there's an exact match of a query, then one or more specific documents are featured in the search results.
    IndexName:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 1000
    IndexEdition:
      type: string
      enum:
        - DEVELOPER_EDITION
        - ENTERPRISE_EDITION
    ServerSideEncryptionConfiguration:
      type: object
      properties:
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - description: The identifier of the KMS key. Amazon Kendra doesn't support asymmetric keys.
      description: Provides the identifier of the KMS key used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric keys.
    UserTokenConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/UserTokenConfiguration"
      maxItems: 1
    UserContextPolicy:
      type: string
      enum:
        - ATTRIBUTE_FILTER
        - USER_TOKEN
    UserGroupResolutionConfiguration:
      type: object
      required:
        - UserGroupResolutionMode
      properties:
        UserGroupResolutionMode:
          allOf:
            - $ref: "#/components/schemas/UserGroupResolutionMode"
            - description: The identity store provider (mode) you want to use to get users and groups. IAM Identity Center (successor to Single Sign-On) is currently the only available mode. Your users and groups must exist in an IAM Identity Center identity source in order to use this mode.
      description: <p>Provides the configuration information to get users and groups from an IAM Identity Center (successor to Single Sign-On) identity source. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents. You can also use the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_PutPrincipalMapping.html">PutPrincipalMapping</a> API to map users to their groups so that you only need to provide the user ID when you issue the query.</p> <p>To set up an IAM Identity Center identity source in the console to use with Amazon Kendra, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/getting-started-aws-sso.html">Getting started with an IAM Identity Center identity source</a>. You must also grant the required permissions to use IAM Identity Center with Amazon Kendra. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html#iam-roles-aws-sso">IAM roles for IAM Identity Center</a>.</p> <p>Amazon Kendra currently does not support using <code>UserGroupResolutionConfiguration</code> with an Amazon Web Services organization member account for your IAM Identity Center identify source. You must create your index in the management account for the organization in order to use <code>UserGroupResolutionConfiguration</code>.</p>
    QuerySuggestionsBlockListName:
      type: string
      pattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*
      minLength: 1
      maxLength: 100
    QuerySuggestionsBlockListId:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9-]*"
      minLength: 36
      maxLength: 36
    ThesaurusName:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 100
    ThesaurusId:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 100
    InlineCustomDocumentEnrichmentConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/InlineCustomDocumentEnrichmentConfiguration"
      minItems: 0
      maxItems: 100
    HookConfiguration:
      type: object
      required:
        - LambdaArn
        - S3Bucket
      properties:
        InvocationCondition:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeCondition"
            - description: <p>The condition used for when a Lambda function should be invoked.</p> <p>For example, you can specify a condition that if there are empty date-time values, then Amazon Kendra should invoke a function that inserts the current date-time.</p>
        LambdaArn:
          allOf:
            - $ref: "#/components/schemas/LambdaArn"
            - description: The Amazon Resource Name (ARN) of a role with permission to run a Lambda function during ingestion. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html">IAM roles for Amazon Kendra</a>.
        S3Bucket:
          allOf:
            - $ref: "#/components/schemas/S3BucketName"
            - description: Stores the original, raw documents or the structured, parsed documents before and after altering them. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html#cde-data-contracts-lambda">Data contracts for Lambda functions</a>.
      description: <p>Provides the configuration information for invoking a Lambda function in Lambda to alter document metadata and content when ingesting documents into Amazon Kendra. You can configure your Lambda function using <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_CustomDocumentEnrichmentConfiguration.html">PreExtractionHookConfiguration</a> if you want to apply advanced alterations on the original or raw documents. If you want to apply advanced alterations on the Amazon Kendra structured documents, you must configure your Lambda function using <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_CustomDocumentEnrichmentConfiguration.html">PostExtractionHookConfiguration</a>. You can only invoke one Lambda function. However, this function can invoke other functions it requires.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html">Customizing document metadata during the ingestion process</a>.</p>
    S3DataSourceConfiguration:
      type: object
      required:
        - BucketName
      properties:
        BucketName:
          allOf:
            - $ref: "#/components/schemas/S3BucketName"
            - description: The name of the bucket that contains the documents.
        InclusionPrefixes:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of S3 prefixes for the documents that should be included in the index.
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of glob patterns for documents that should be indexed. If a document that matches an inclusion pattern also matches an exclusion pattern, the document is not indexed.</p> <p>Some <a href="https://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters">examples</a> are:</p> <ul> <li> <p> <i>*.txt</i> will include all text files in a directory (files with the extension .txt).</p> </li> <li> <p> <i>**/*.txt</i> will include all text files in a directory and its subdirectories.</p> </li> <li> <p> <i>*tax*</i> will include all files in a directory that contain 'tax' in the file name, such as 'tax', 'taxes', 'income_tax'.</p> </li> </ul>
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of glob patterns for documents that should not be indexed. If a document that matches an inclusion prefix or inclusion pattern also matches an exclusion pattern, the document is not indexed.</p> <p>Some <a href="https://docs.aws.amazon.com/cli/latest/reference/s3/#use-of-exclude-and-include-filters">examples</a> are:</p> <ul> <li> <p> <i>*.png , *.jpg</i> will exclude all PNG and JPEG image files in a directory (files with the extensions .png and .jpg).</p> </li> <li> <p> <i>*internal*</i> will exclude all files in a directory that contain 'internal' in the file name, such as 'internal', 'internal_only', 'company_internal'.</p> </li> <li> <p> <i>**/*internal*</i> will exclude all internal-related files in a directory and its subdirectories.</p> </li> </ul>
        DocumentsMetadataConfiguration:
          $ref: "#/components/schemas/DocumentsMetadataConfiguration"
        AccessControlListConfiguration:
          allOf:
            - $ref: "#/components/schemas/AccessControlListConfiguration"
            - description: Provides the path to the S3 bucket that contains the user context filtering files for the data source. For the format of the file, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/s3-acl.html">Access control for S3 data sources</a>.
      description: Provides the configuration information to connect to an Amazon S3 bucket.
    SharePointConfiguration:
      type: object
      required:
        - SharePointVersion
        - Urls
        - SecretArn
      properties:
        SharePointVersion:
          allOf:
            - $ref: "#/components/schemas/SharePointVersion"
            - description: The version of Microsoft SharePoint that you use.
        Urls:
          allOf:
            - $ref: "#/components/schemas/SharePointUrlList"
            - description: The Microsoft SharePoint site URLs for the documents you want to index.
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: The Amazon Resource Name (ARN) of an Secrets Manager secret that contains the user name and password required to connect to the SharePoint instance. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-sharepoint.html">Microsoft SharePoint</a>.
        CrawlAttachments:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index document attachments."
        UseChangeLog:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to use the SharePoint change log to determine which documents require updating in the index. Depending on the change log's size, it may take longer for Amazon Kendra to use the change log than to scan all of your documents in SharePoint."
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of regular expression patterns to include certain documents in your SharePoint. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the document isn't included in the index.</p> <p>The regex applies to the display URL of the SharePoint document.</p>
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of regular expression patterns to exclude certain documents in your SharePoint. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the document isn't included in the index.</p> <p>The regex applies to the display URL of the SharePoint document.</p>
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information for an Amazon Virtual Private Cloud to connect to your Microsoft SharePoint. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html">Configuring a VPC</a>.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map SharePoint data source attributes or field names to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to SharePoint fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The SharePoint data source field names must exist in your SharePoint custom metadata.
        DocumentTitleFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The Microsoft SharePoint attribute field that contains the title of the document.
        DisableLocalGroups:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to disable local groups information."
        SslCertificateS3Path:
          allOf:
            - $ref: "#/components/schemas/S3Path"
            - description: <p>The path to the SSL certificate stored in an Amazon S3 bucket. You use this to connect to SharePoint Server if you require a secure SSL connection.</p> <p>You can generate a self-signed X509 certificate on any computer using OpenSSL. For an example of using OpenSSL to create an X509 certificate, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/configuring-https-ssl.html">Create and sign an X509 certificate</a>.</p>
        AuthenticationType:
          allOf:
            - $ref: "#/components/schemas/SharePointOnlineAuthenticationType"
            - description: Whether you want to connect to SharePoint Online using basic authentication of user name and password, or OAuth authentication of user name, password, client ID, and client secret, or AD App-only authentication of client secret.
        ProxyConfiguration:
          allOf:
            - $ref: "#/components/schemas/ProxyConfiguration"
            - description: <p>Configuration information to connect to your Microsoft SharePoint site URLs via instance via a web proxy. You can use this option for SharePoint Server.</p> <p>You must provide the website host name and port number. For example, the host name of <i>https://a.example.com/page1.html</i> is "a.example.com" and the port is 443, the standard port for HTTPS.</p> <p>Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication of user name and password. To store web proxy credentials, you use a secret in Secrets Manager.</p> <p>It is recommended that you follow best security practices when configuring your web proxy. This includes setting up throttling, setting up logging and monitoring, and applying security patches on a regular basis. If you use your web proxy with multiple data sources, sync jobs that occur at the same time could strain the load on your proxy. It is recommended you prepare your proxy beforehand for any security and load requirements.</p>
      description: Provides the configuration information to connect to Microsoft SharePoint as your data source.
    DatabaseConfiguration:
      type: object
      required:
        - DatabaseEngineType
        - ConnectionConfiguration
        - ColumnConfiguration
      properties:
        DatabaseEngineType:
          allOf:
            - $ref: "#/components/schemas/DatabaseEngineType"
            - description: The type of database engine that runs the database.
        ConnectionConfiguration:
          allOf:
            - $ref: "#/components/schemas/ConnectionConfiguration"
            - description: Configuration information that's required to connect to a database.
        VpcConfiguration:
          $ref: "#/components/schemas/DataSourceVpcConfiguration"
        ColumnConfiguration:
          allOf:
            - $ref: "#/components/schemas/ColumnConfiguration"
            - description: Information about where the index should get the document information from the database.
        AclConfiguration:
          allOf:
            - $ref: "#/components/schemas/AclConfiguration"
            - description: Information about the database column that provides information for user context filtering.
        SqlConfiguration:
          allOf:
            - $ref: "#/components/schemas/SqlConfiguration"
            - description: Provides information about how Amazon Kendra uses quote marks around SQL identifiers when querying a database data source.
      description: "Provides the configuration information to connect to a index. "
    SalesforceConfiguration:
      type: object
      required:
        - ServerUrl
        - SecretArn
      properties:
        ServerUrl:
          allOf:
            - $ref: "#/components/schemas/Url"
            - description: The instance URL for the Salesforce site that you want to index.
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: <p>The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the key/value pairs required to connect to your Salesforce instance. The secret must contain a JSON structure with the following keys:</p> <ul> <li> <p>authenticationUrl - The OAUTH endpoint that Amazon Kendra connects to get an OAUTH token. </p> </li> <li> <p>consumerKey - The application public key generated when you created your Salesforce application.</p> </li> <li> <p>consumerSecret - The application private key generated when you created your Salesforce application.</p> </li> <li> <p>password - The password associated with the user logging in to the Salesforce instance.</p> </li> <li> <p>securityToken - The token associated with the user logging in to the Salesforce instance.</p> </li> <li> <p>username - The user name of the user logging in to the Salesforce instance.</p> </li> </ul>
        StandardObjectConfigurations:
          allOf:
            - $ref: "#/components/schemas/SalesforceStandardObjectConfigurationList"
            - description: Configuration of the Salesforce standard objects that Amazon Kendra indexes.
        KnowledgeArticleConfiguration:
          allOf:
            - $ref: "#/components/schemas/SalesforceKnowledgeArticleConfiguration"
            - description: Configuration information for the knowledge article types that Amazon Kendra indexes. Amazon Kendra indexes standard knowledge articles and the standard fields of knowledge articles, or the custom fields of custom knowledge articles, but not both.
        ChatterFeedConfiguration:
          allOf:
            - $ref: "#/components/schemas/SalesforceChatterFeedConfiguration"
            - description: Configuration information for Salesforce chatter feeds.
        CrawlAttachments:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether Amazon Kendra should index attachments to Salesforce objects.
        StandardObjectAttachmentConfiguration:
          allOf:
            - $ref: "#/components/schemas/SalesforceStandardObjectAttachmentConfiguration"
            - description: "Configuration information for processing attachments to Salesforce standard objects. "
        IncludeAttachmentFilePatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of regular expression patterns to include certain documents in your Salesforce. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the document isn't included in the index.</p> <p>The pattern is applied to the name of the attached file.</p>
        ExcludeAttachmentFilePatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of regular expression patterns to exclude certain documents in your Salesforce. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the document isn't included in the index.</p> <p>The pattern is applied to the name of the attached file.</p>
      description: Provides the configuration information to connect to Salesforce as your data source.
    OneDriveConfiguration:
      type: object
      required:
        - TenantDomain
        - SecretArn
        - OneDriveUsers
      properties:
        TenantDomain:
          allOf:
            - $ref: "#/components/schemas/TenantDomain"
            - description: "The Azure Active Directory domain of the organization. "
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: The Amazon Resource Name (ARN) of an Secrets Managersecret that contains the user name and password to connect to OneDrive. The user name should be the application ID for the OneDrive application, and the password is the application key for the OneDrive application.
        OneDriveUsers:
          allOf:
            - $ref: "#/components/schemas/OneDriveUsers"
            - description: A list of user accounts whose documents should be indexed.
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of regular expression patterns to include certain documents in your OneDrive. Documents that match the patterns are included in the index. Documents that don't match the patterns are excluded from the index. If a document matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the document isn't included in the index.</p> <p>The pattern is applied to the file name.</p>
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of regular expression patterns to exclude certain documents in your OneDrive. Documents that match the patterns are excluded from the index. Documents that don't match the patterns are included in the index. If a document matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the document isn't included in the index.</p> <p>The pattern is applied to the file name.</p>
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map OneDrive data source attributes or field names to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to OneDrive fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The OneDrive data source field names must exist in your OneDrive custom metadata.
        DisableLocalGroups:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to disable local groups information."
      description: Provides the configuration information to connect to OneDrive as your data source.
    ServiceNowConfiguration:
      type: object
      required:
        - HostUrl
        - SecretArn
        - ServiceNowBuildVersion
      properties:
        HostUrl:
          allOf:
            - $ref: "#/components/schemas/ServiceNowHostUrl"
            - description: "The ServiceNow instance that the data source connects to. The host endpoint should look like the following: <i>{instance}.service-now.com.</i> "
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: The Amazon Resource Name (ARN) of the Secrets Manager secret that contains the user name and password required to connect to the ServiceNow instance. You can also provide OAuth authentication credentials of user name, password, client ID, and client secret. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-servicenow.html">Using a ServiceNow data source</a>.
        ServiceNowBuildVersion:
          allOf:
            - $ref: "#/components/schemas/ServiceNowBuildVersionType"
            - description: The identifier of the release that the ServiceNow host is running. If the host is not running the <code>LONDON</code> release, use <code>OTHERS</code>.
        KnowledgeArticleConfiguration:
          allOf:
            - $ref: "#/components/schemas/ServiceNowKnowledgeArticleConfiguration"
            - description: Configuration information for crawling knowledge articles in the ServiceNow site.
        ServiceCatalogConfiguration:
          allOf:
            - $ref: "#/components/schemas/ServiceNowServiceCatalogConfiguration"
            - description: Configuration information for crawling service catalogs in the ServiceNow site.
        AuthenticationType:
          allOf:
            - $ref: "#/components/schemas/ServiceNowAuthenticationType"
            - description: <p>The type of authentication used to connect to the ServiceNow instance. If you choose <code>HTTP_BASIC</code>, Amazon Kendra is authenticated using the user name and password provided in the Secrets Manager secret in the <code>SecretArn</code> field. If you choose <code>OAUTH2</code>, Amazon Kendra is authenticated using the credentials of client ID, client secret, user name and password.</p> <p>When you use <code>OAUTH2</code> authentication, you must generate a token and a client secret using the ServiceNow console. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-servicenow.html">Using a ServiceNow data source</a>.</p>
      description: Provides the configuration information to connect to ServiceNow as your data source.
    GoogleDriveConfiguration:
      type: object
      required:
        - SecretArn
      properties:
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: The Amazon Resource Name (ARN) of a Secrets Managersecret that contains the credentials required to connect to Google Drive. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-google-drive.html">Using a Google Workspace Drive data source</a>.
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to include certain items in your Google Drive, including shared drives and users' My Drives. Items that match the patterns are included in the index. Items that don't match the patterns are excluded from the index. If an item matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the item isn't included in the index.
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to exclude certain items in your Google Drive, including shared drives and users' My Drives. Items that match the patterns are excluded from the index. Items that don't match the patterns are included in the index. If an item matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the item isn't included in the index.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: Maps Google Drive data source attributes or field names to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Google Drive fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Google Drive data source field names must exist in your Google Drive custom metadata.
        ExcludeMimeTypes:
          allOf:
            - $ref: "#/components/schemas/ExcludeMimeTypesList"
            - description: <p>A list of MIME types to exclude from the index. All documents matching the specified MIME type are excluded. </p> <p>For a list of MIME types, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-google-drive.html">Using a Google Workspace Drive data source</a>.</p>
        ExcludeUserAccounts:
          allOf:
            - $ref: "#/components/schemas/ExcludeUserAccountsList"
            - description: A list of email addresses of the users. Documents owned by these users are excluded from the index. Documents shared with excluded users are indexed unless they are excluded in another way.
        ExcludeSharedDrives:
          allOf:
            - $ref: "#/components/schemas/ExcludeSharedDrivesList"
            - description: A list of identifiers or shared drives to exclude from the index. All files and folders stored on the shared drive are excluded.
      description: Provides the configuration information to connect to Google Drive as your data source.
    WebCrawlerConfiguration:
      type: object
      required:
        - Urls
      properties:
        Urls:
          allOf:
            - $ref: "#/components/schemas/Urls"
            - description: <p>Specifies the seed or starting point URLs of the websites or the sitemap URLs of the websites you want to crawl.</p> <p>You can include website subdomains. You can list up to 100 seed URLs and up to three sitemap URLs.</p> <p>You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own web pages, or web pages that you have authorization to index.</i> </p>
        CrawlDepth:
          allOf:
            - $ref: "#/components/schemas/CrawlDepth"
            - description: <p>Specifies the number of levels in a website that you want to crawl.</p> <p>The first level begins from the website seed or starting point URL. For example, if a website has three levels—index level (the seed in this example), sections level, and subsections level—and you are only interested in crawling information up to the sections level (levels 0-1), you can set your depth to 1.</p> <p>The default crawl depth is set to 2.</p>
        MaxLinksPerPage:
          allOf:
            - $ref: "#/components/schemas/MaxLinksPerPage"
            - description: <p>The maximum number of URLs on a web page to include when crawling a website. This number is per web page.</p> <p>As a website’s web pages are crawled, any URLs the web pages link to are also crawled. URLs on a web page are crawled in order of appearance.</p> <p>The default maximum links per page is 100.</p>
        MaxContentSizePerPageInMegaBytes:
          allOf:
            - $ref: "#/components/schemas/MaxContentSizePerPageInMegaBytes"
            - description: <p>The maximum size (in MB) of a web page or attachment to crawl.</p> <p>Files larger than this size (in MB) are skipped/not crawled.</p> <p>The default maximum size of a web page or attachment is set to 50 MB.</p>
        MaxUrlsPerMinuteCrawlRate:
          allOf:
            - $ref: "#/components/schemas/MaxUrlsPerMinuteCrawlRate"
            - description: <p>The maximum number of URLs crawled per website host per minute.</p> <p>A minimum of one URL is required.</p> <p>The default maximum number of URLs crawled per website host per minute is 300.</p>
        UrlInclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to include certain URLs to crawl. URLs that match the patterns are included in the index. URLs that don't match the patterns are excluded from the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index.
        UrlExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to exclude certain URLs to crawl. URLs that match the patterns are excluded from the index. URLs that don't match the patterns are included in the index. If a URL matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the URL file isn't included in the index.
        ProxyConfiguration:
          allOf:
            - $ref: "#/components/schemas/ProxyConfiguration"
            - description: <p>Configuration information required to connect to your internal websites via a web proxy.</p> <p>You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS.</p> <p>Web proxy credentials are optional and you can use them to connect to a web proxy server that requires basic authentication. To store web proxy credentials, you use a secret in <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html">Secrets Manager</a>.</p>
        AuthenticationConfiguration:
          allOf:
            - $ref: "#/components/schemas/AuthenticationConfiguration"
            - description: <p>Configuration information required to connect to websites using authentication.</p> <p>You can connect to websites using basic authentication of user name and password. You use a secret in <a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/intro.html">Secrets Manager</a> to store your authentication credentials.</p> <p>You must provide the website host name and port number. For example, the host name of https://a.example.com/page1.html is "a.example.com" and the port is 443, the standard port for HTTPS.</p>
      description: Provides the configuration information required for Amazon Kendra Web Crawler.
    WorkDocsConfiguration:
      type: object
      required:
        - OrganizationId
      properties:
        OrganizationId:
          allOf:
            - $ref: "#/components/schemas/OrganizationId"
            - description: <p>The identifier of the directory corresponding to your Amazon WorkDocs site repository.</p> <p>You can find the organization ID in the <a href="https://console.aws.amazon.com/directoryservicev2/">Directory Service</a> by going to <b>Active Directory</b>, then <b>Directories</b>. Your Amazon WorkDocs site directory has an ID, which is the organization ID. You can also set up a new Amazon WorkDocs directory in the Directory Service console and enable a Amazon WorkDocs site for the directory in the Amazon WorkDocs console.</p>
        CrawlComments:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: <p> <code>TRUE</code> to include comments on documents in your index. Including comments in your index means each comment is a document that can be searched on.</p> <p>The default is set to <code>FALSE</code>.</p>
        UseChangeLog:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to use the Amazon WorkDocs change log to determine which documents require updating in the index. Depending on the change log's size, it may take longer for Amazon Kendra to use the change log than to scan all of your documents in Amazon WorkDocs."
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to include certain files in your Amazon WorkDocs site repository. Files that match the patterns are included in the index. Files that don't match the patterns are excluded from the index. If a file matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to exclude certain files in your Amazon WorkDocs site repository. Files that match the patterns are excluded from the index. Files that don’t match the patterns are included in the index. If a file matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map Amazon WorkDocs data source attributes or field names to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Amazon WorkDocs fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Amazon WorkDocs data source field names must exist in your Amazon WorkDocs custom metadata.
      description: <p>Provides the configuration information to connect to Amazon WorkDocs as your data source.</p> <p>Amazon WorkDocs connector is available in Oregon, North Virginia, Sydney, Singapore and Ireland regions.</p>
    FsxConfiguration:
      type: object
      required:
        - FileSystemId
        - FileSystemType
        - VpcConfiguration
      properties:
        FileSystemId:
          allOf:
            - $ref: "#/components/schemas/FileSystemId"
            - description: <p>The identifier of the Amazon FSx file system.</p> <p>You can find your file system ID on the file system dashboard in the Amazon FSx console. For information on how to create a file system in Amazon FSx console, using Windows File Server as an example, see <a href="https://docs.aws.amazon.com/fsx/latest/WindowsGuide/getting-started-step1.html">Amazon FSx Getting started guide</a>.</p>
        FileSystemType:
          allOf:
            - $ref: "#/components/schemas/FsxFileSystemType"
            - description: The Amazon FSx file system type. Windows is currently the only supported type.
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information for an Amazon Virtual Private Cloud to connect to your Amazon FSx. Your Amazon FSx instance must reside inside your VPC.
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: <p>The Amazon Resource Name (ARN) of an Secrets Manager secret that contains the key-value pairs required to connect to your Amazon FSx file system. Windows is currently the only supported type. The secret must contain a JSON structure with the following keys:</p> <ul> <li> <p>username—The Active Directory user name, along with the Domain Name System (DNS) domain name. For example, <i>user@corp.example.com</i>. The Active Directory user account must have read and mounting access to the Amazon FSx file system for Windows.</p> </li> <li> <p>password—The password of the Active Directory user account with read and mounting access to the Amazon FSx Windows file system.</p> </li> </ul>
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to include certain files in your Amazon FSx file system. Files that match the patterns are included in the index. Files that don't match the patterns are excluded from the index. If a file matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to exclude certain files in your Amazon FSx file system. Files that match the patterns are excluded from the index. Files that don't match the patterns are included in the index. If a file matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map Amazon FSx data source attributes or field names to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Amazon FSx fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Amazon FSx data source field names must exist in your Amazon FSx custom metadata.
      description: Provides the configuration information to connect to Amazon FSx as your data source.
    SlackConfiguration:
      type: object
      required:
        - TeamId
        - SecretArn
        - SlackEntityList
        - SinceCrawlDate
      properties:
        TeamId:
          allOf:
            - $ref: "#/components/schemas/TeamId"
            - description: <p>The identifier of the team in the Slack workspace. For example, <i>T0123456789</i>.</p> <p>You can find your team ID in the URL of the main page of your Slack workspace. When you log in to Slack via a browser, you are directed to the URL of the main page. For example, <i>https://app.slack.com/client/<b>T0123456789</b>/...</i>.</p>
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: <p>The Amazon Resource Name (ARN) of an Secrets Manager secret that contains the key-value pairs required to connect to your Slack workspace team. The secret must contain a JSON structure with the following keys:</p> <ul> <li> <p>slackToken—The user or bot token created in Slack. For more information on creating a token in Slack, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-slack.html#slack-authentication">Authentication for a Slack data source</a>.</p> </li> </ul>
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information for an Amazon Virtual Private Cloud to connect to your Slack. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html">Configuring a VPC</a>.
        SlackEntityList:
          allOf:
            - $ref: "#/components/schemas/SlackEntityList"
            - description: Specify whether to index public channels, private channels, group messages, and direct messages. You can specify one or more of these options.
        UseChangeLog:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to use the Slack change log to determine which documents require updating in the index. Depending on the Slack change log's size, it may take longer for Amazon Kendra to use the change log than to scan all of your documents in Slack."
        CrawlBotMessage:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index bot messages from your Slack workspace team."
        ExcludeArchived:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to exclude archived messages to index from your Slack workspace team."
        SinceCrawlDate:
          allOf:
            - $ref: "#/components/schemas/SinceCrawlDate"
            - description: "The date to start crawling your data from your Slack workspace team. The date must follow this format: <code>yyyy-mm-dd</code>."
        LookBackPeriod:
          allOf:
            - $ref: "#/components/schemas/LookBackPeriod"
            - description: <p>The number of hours for change log to look back from when you last synchronized your data. You can look back up to 7 days or 168 hours.</p> <p>Change log updates your index only if new content was added since you last synced your data. Updated or deleted content from before you last synced does not get updated in your index. To capture updated or deleted content before you last synced, set the <code>LookBackPeriod</code> to the number of hours you want change log to look back.</p>
        PrivateChannelFilter:
          allOf:
            - $ref: "#/components/schemas/PrivateChannelFilter"
            - description: The list of private channel names from your Slack workspace team. You use this if you want to index specific private channels, not all private channels. You can also use regular expression patterns to filter private channels.
        PublicChannelFilter:
          allOf:
            - $ref: "#/components/schemas/PublicChannelFilter"
            - description: The list of public channel names to index from your Slack workspace team. You use this if you want to index specific public channels, not all public channels. You can also use regular expression patterns to filter public channels.
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to include certain attached files in your Slack workspace team. Files that match the patterns are included in the index. Files that don't match the patterns are excluded from the index. If a file matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to exclude certain attached files in your Slack workspace team. Files that match the patterns are excluded from the index. Files that don’t match the patterns are included in the index. If a file matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map Slack data source attributes or field names to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Slack fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Slack data source field names must exist in your Slack custom metadata.
      description: Provides the configuration information to connect to Slack as your data source.
    QuipConfiguration:
      type: object
      required:
        - Domain
        - SecretArn
      properties:
        Domain:
          allOf:
            - $ref: "#/components/schemas/Domain"
            - description: The Quip site domain. For example, <i>https://quip-company.quipdomain.com/browse</i>. The domain in this example is "quipdomain".
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: <p>The Amazon Resource Name (ARN) of an Secrets Manager secret that contains the key-value pairs that are required to connect to your Quip. The secret must contain a JSON structure with the following keys:</p> <ul> <li> <p>accessToken—The token created in Quip. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-slack.html">Using a Quip data source</a>.</p> </li> </ul>
        CrawlFileComments:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index file comments."
        CrawlChatRooms:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index the contents of chat rooms."
        CrawlAttachments:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index attachments."
        FolderIds:
          allOf:
            - $ref: "#/components/schemas/FolderIdList"
            - description: The identifiers of the Quip folders you want to index. You can find the folder ID in your browser URL when you access your folder in Quip. For example, <i>https://quip-company.quipdomain.com/zlLuOVNSarTL/folder-name</i>. The folder ID in this example is "zlLuOVNSarTL".
        ThreadFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Quip threads to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Quip fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Quip field names must exist in your Quip custom metadata.
        MessageFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Quip messages to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Quip fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Quip field names must exist in your Quip custom metadata.
        AttachmentFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Quip attachments to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Quip fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Quip field names must exist in your Quip custom metadata.
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to include certain files in your Quip file system. Files that match the patterns are included in the index. Files that don't match the patterns are excluded from the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence, and the file isn't included in the index.
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to exclude certain files in your Quip file system. Files that match the patterns are excluded from the index. Files that don’t match the patterns are included in the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence, and the file isn't included in the index.
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information for an Amazon Virtual Private Cloud (VPC) to connect to your Quip. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html">Configuring a VPC</a>.
      description: Provides the configuration information to connect to Quip as your data source.
    JiraConfiguration:
      type: object
      required:
        - JiraAccountUrl
        - SecretArn
      properties:
        JiraAccountUrl:
          allOf:
            - $ref: "#/components/schemas/JiraAccountUrl"
            - description: The URL of the Jira account. For example, <i>company.atlassian.net</i>.
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: <p>The Amazon Resource Name (ARN) of a secret in Secrets Manager contains the key-value pairs required to connect to your Jira data source. The secret must contain a JSON structure with the following keys:</p> <ul> <li> <p>jiraId—The Jira user name or email.</p> </li> <li> <p>jiraCredentials—The Jira API token. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-jira.html">Using a Jira data source</a>.</p> </li> </ul>
        UseChangeLog:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to use the Jira change log to determine which documents require updating in the index. Depending on the change log's size, it may take longer for Amazon Kendra to use the change log than to scan all of your documents in Jira."
        Project:
          allOf:
            - $ref: "#/components/schemas/Project"
            - description: Specify which projects to crawl in your Jira data source. You can specify one or more Jira project IDs.
        IssueType:
          allOf:
            - $ref: "#/components/schemas/IssueType"
            - description: Specify which issue types to crawl in your Jira data source. You can specify one or more of these options to crawl.
        Status:
          allOf:
            - $ref: "#/components/schemas/JiraStatus"
            - description: Specify which statuses to crawl in your Jira data source. You can specify one or more of these options to crawl.
        IssueSubEntityFilter:
          allOf:
            - $ref: "#/components/schemas/IssueSubEntityFilter"
            - description: Specify whether to crawl comments, attachments, and work logs. You can specify one or more of these options.
        AttachmentFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Jira attachments to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Jira fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html"> Mapping data source fields</a>. The Jira data source field names must exist in your Jira custom metadata.
        CommentFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Jira comments to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Jira fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html"> Mapping data source fields</a>. The Jira data source field names must exist in your Jira custom metadata.
        IssueFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Jira issues to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Jira fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html"> Mapping data source fields</a>. The Jira data source field names must exist in your Jira custom metadata.
        ProjectFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Jira projects to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Jira fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html"> Mapping data source fields</a>. The Jira data source field names must exist in your Jira custom metadata.
        WorkLogFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of Jira work logs to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Jira fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html"> Mapping data source fields</a>. The Jira data source field names must exist in your Jira custom metadata.
        InclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to include certain file paths, file names, and file types in your Jira data source. Files that match the patterns are included in the index. Files that don't match the patterns are excluded from the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        ExclusionPatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: A list of regular expression patterns to exclude certain file paths, file names, and file types in your Jira data source. Files that match the patterns are excluded from the index. Files that don’t match the patterns are included in the index. If a file matches both an inclusion pattern and an exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information for an Amazon Virtual Private Cloud to connect to your Jira. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html">Configuring a VPC</a>.
      description: Provides the configuration information to connect to Jira as your data source.
    GitHubConfiguration:
      type: object
      required:
        - SecretArn
      properties:
        SaaSConfiguration:
          allOf:
            - $ref: "#/components/schemas/SaaSConfiguration"
            - description: Configuration information to connect to GitHub Enterprise Cloud (SaaS).
        OnPremiseConfiguration:
          allOf:
            - $ref: "#/components/schemas/OnPremiseConfiguration"
            - description: Configuration information to connect to GitHub Enterprise Server (on premises).
        Type:
          allOf:
            - $ref: "#/components/schemas/Type"
            - description: The type of GitHub service you want to connect to—GitHub Enterprise Cloud (SaaS) or GitHub Enterprise Server (on premises).
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/SecretArn"
            - description: <p>The Amazon Resource Name (ARN) of an Secrets Manager secret that contains the key-value pairs required to connect to your GitHub. The secret must contain a JSON structure with the following keys:</p> <ul> <li> <p>personalToken—The access token created in GitHub. For more information on creating a token in GitHub, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/data-source-github.html">Using a GitHub data source</a>.</p> </li> </ul>
        UseChangeLog:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to use the GitHub change log to determine which documents require updating in the index. Depending on the GitHub change log's size, it may take longer for Amazon Kendra to use the change log than to scan all of your documents in GitHub."
        GitHubDocumentCrawlProperties:
          allOf:
            - $ref: "#/components/schemas/GitHubDocumentCrawlProperties"
            - description: Configuration information to include certain types of GitHub content. You can configure to index repository files only, or also include issues and pull requests, comments, and comment attachments.
        RepositoryFilter:
          allOf:
            - $ref: "#/components/schemas/RepositoryNames"
            - description: A list of names of the specific repositories you want to index.
        InclusionFolderNamePatterns:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of regular expression patterns to include certain folder names in your GitHub repository or repositories. Folder names that match the patterns are included in the index. Folder names that don't match the patterns are excluded from the index. If a folder matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the folder isn't included in the index.
        InclusionFileTypePatterns:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of regular expression patterns to include certain file types in your GitHub repository or repositories. File types that match the patterns are included in the index. File types that don't match the patterns are excluded from the index. If a file matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        InclusionFileNamePatterns:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of regular expression patterns to include certain file names in your GitHub repository or repositories. File names that match the patterns are included in the index. File names that don't match the patterns are excluded from the index. If a file matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        ExclusionFolderNamePatterns:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of regular expression patterns to exclude certain folder names in your GitHub repository or repositories. Folder names that match the patterns are excluded from the index. Folder names that don't match the patterns are included in the index. If a folder matches both an exclusion and inclusion pattern, the exclusion pattern takes precedence and the folder isn't included in the index.
        ExclusionFileTypePatterns:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of regular expression patterns to exclude certain file types in your GitHub repository or repositories. File types that match the patterns are excluded from the index. File types that don't match the patterns are included in the index. If a file matches both an exclusion and inclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        ExclusionFileNamePatterns:
          allOf:
            - $ref: "#/components/schemas/StringList"
            - description: A list of regular expression patterns to exclude certain file names in your GitHub repository or repositories. File names that match the patterns are excluded from the index. File names that don't match the patterns are included in the index. If a file matches both an exclusion and inclusion pattern, the exclusion pattern takes precedence and the file isn't included in the index.
        VpcConfiguration:
          allOf:
            - $ref: "#/components/schemas/DataSourceVpcConfiguration"
            - description: Configuration information of an Amazon Virtual Private Cloud to connect to your GitHub. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/vpc-configuration.html">Configuring a VPC</a>.
        GitHubRepositoryConfigurationFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map GitHub repository attributes or field names to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to GitHub fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The GitHub data source field names must exist in your GitHub custom metadata.
        GitHubCommitConfigurationFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of GitHub commits to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to GitHub fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The GitHub data source field names must exist in your GitHub custom metadata.
        GitHubIssueDocumentConfigurationFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of GitHub issues to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to GitHub fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The GitHub data source field names must exist in your GitHub custom metadata.
        GitHubIssueCommentConfigurationFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of GitHub issue comments to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to GitHub fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The GitHub data source field names must exist in your GitHub custom metadata.
        GitHubIssueAttachmentConfigurationFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of GitHub issue attachments to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to GitHub fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The GitHub data source field names must exist in your GitHub custom metadata.
        GitHubPullRequestCommentConfigurationFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of GitHub pull request comments to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to GitHub fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The GitHub data source field names must exist in your GitHub custom metadata.
        GitHubPullRequestDocumentConfigurationFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of GitHub pull requests to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to GitHub fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The GitHub data source field names must exist in your GitHub custom metadata.
        GitHubPullRequestDocumentAttachmentConfigurationFieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: A list of <code>DataSourceToIndexFieldMapping</code> objects that map attributes or field names of GitHub pull request attachments to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to GitHub fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The GitHub data source field names must exist in your GitHub custom metadata.
      description: Provides the configuration information to connect to GitHub as your data source.
    TemplateConfiguration:
      type: object
      properties:
        Template:
          allOf:
            - $ref: "#/components/schemas/Template"
            - description: <p>The template schema used for the data source, where templates schemas are supported.</p> <p>See <a href="https://docs.aws.amazon.com/kendra/latest/dg/ds-schemas.html">Data source template schemas</a>.</p>
      description: Provides a template for the configuration information to connect to your data source.
    DataSourceFieldName:
      type: string
      pattern: ^[a-zA-Z][a-zA-Z0-9_.]*$
      minLength: 1
      maxLength: 100
    PrincipalName:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 200
    DataSourceGroup:
      type: object
      required:
        - GroupId
        - DataSourceId
      properties:
        GroupId:
          allOf:
            - $ref: "#/components/schemas/PrincipalName"
            - description: The identifier of the group you want to add to your list of groups. This is for filtering search results based on the groups' access to documents.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source group you want to add to your list of data source groups. This is for filtering search results based on the groups' access to documents in that data source.
      description: Data source information for user context filtering.
    DataSourceGroups:
      type: array
      items:
        $ref: "#/components/schemas/DataSourceGroup"
      minItems: 1
      maxItems: 2048
    DataSourceInclusionsExclusionsStringsMember:
      type: string
      minLength: 1
      maxLength: 150
    DataSourceStatus:
      type: string
      enum:
        - CREATING
        - DELETING
        - FAILED
        - UPDATING
        - ACTIVE
    DataSourceSummary:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/DataSourceName"
            - description: The name of the data source.
        Id:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier for the data source.
        Type:
          allOf:
            - $ref: "#/components/schemas/DataSourceType"
            - description: The type of the data source.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the data source connector was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the data source connector was last updated.
        Status:
          allOf:
            - $ref: "#/components/schemas/DataSourceStatus"
            - description: The status of the data source. When the status is <code>ACTIVE</code> the data source is ready to use.
        LanguageCode:
          allOf:
            - $ref: "#/components/schemas/LanguageCode"
            - description: The code for a language. This shows a supported language for all documents in the data source. English is supported by default. For more information on supported languages, including their codes, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html">Adding documents in languages other than English</a>.
      description: Summary information for a Amazon Kendra data source.
    DataSourceSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/DataSourceSummary"
    DataSourceSyncJobStatus:
      type: string
      enum:
        - FAILED
        - SUCCEEDED
        - SYNCING
        - INCOMPLETE
        - STOPPING
        - ABORTED
        - SYNCING_INDEXING
    DataSourceSyncJobMetrics:
      type: object
      properties:
        DocumentsAdded:
          allOf:
            - $ref: "#/components/schemas/MetricValue"
            - description: The number of documents added from the data source up to now in the data source sync.
        DocumentsModified:
          allOf:
            - $ref: "#/components/schemas/MetricValue"
            - description: The number of documents modified in the data source up to now in the data source sync run.
        DocumentsDeleted:
          allOf:
            - $ref: "#/components/schemas/MetricValue"
            - description: The number of documents deleted from the data source up to now in the data source sync run.
        DocumentsFailed:
          allOf:
            - $ref: "#/components/schemas/MetricValue"
            - description: The number of documents that failed to sync from the data source up to now in the data source sync run.
        DocumentsScanned:
          allOf:
            - $ref: "#/components/schemas/MetricValue"
            - description: The current number of documents crawled by the current sync job in the data source.
      description: Maps a batch delete document request to a specific data source sync job. This is optional and should only be supplied when documents are deleted by a data source connector.
    DataSourceSyncJob:
      type: object
      properties:
        ExecutionId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A identifier for the synchronization job.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the synchronization job started.
        EndTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the synchronization job completed.
        Status:
          allOf:
            - $ref: "#/components/schemas/DataSourceSyncJobStatus"
            - description: The execution status of the synchronization job. When the <code>Status</code> field is set to <code>SUCCEEDED</code>, the synchronization job is done. If the status code is set to <code>FAILED</code>, the <code>ErrorCode</code> and <code>ErrorMessage</code> fields give you the reason for the failure.
        ErrorMessage:
          allOf:
            - $ref: "#/components/schemas/ErrorMessage"
            - description: If the <code>Status</code> field is set to <code>ERROR</code>, the <code>ErrorMessage</code> field contains a description of the error that caused the synchronization to fail.
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/ErrorCode"
            - description: If the <code>Status</code> field is set to <code>FAILED</code>, the <code>ErrorCode</code> field indicates the reason the synchronization failed.
        DataSourceErrorCode:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: If the reason that the synchronization failed is due to an error with the underlying data source, this field contains a code that identifies the error.
        Metrics:
          allOf:
            - $ref: "#/components/schemas/DataSourceSyncJobMetrics"
            - description: Maps a batch delete document request to a specific data source sync job. This is optional and should only be supplied when documents are deleted by a data source connector.
      description: Provides information about a data source synchronization job.
    DataSourceSyncJobHistoryList:
      type: array
      items:
        $ref: "#/components/schemas/DataSourceSyncJob"
    DataSourceSyncJobId:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 100
    MetricValue:
      type: string
      pattern: (([1-9][0-9]*)|0)
    DataSourceToIndexFieldMapping:
      type: object
      required:
        - DataSourceFieldName
        - IndexFieldName
      properties:
        DataSourceFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the column or attribute in the data source.
        DateFieldFormat:
          allOf:
            - $ref: "#/components/schemas/DataSourceDateFieldFormat"
            - description: The type of data stored in the column or attribute.
        IndexFieldName:
          allOf:
            - $ref: "#/components/schemas/IndexFieldName"
            - description: The name of the field in the index.
      description: Maps a column or attribute in the data source to an index field. You must first create the fields in the index using the <code>UpdateIndex</code> API.
    SubnetIdList:
      type: array
      items:
        $ref: "#/components/schemas/SubnetId"
      minItems: 1
      maxItems: 6
    SecurityGroupIdList:
      type: array
      items:
        $ref: "#/components/schemas/VpcSecurityGroupId"
      minItems: 1
      maxItems: 10
    DatabaseEngineType:
      type: string
      enum:
        - RDS_AURORA_MYSQL
        - RDS_AURORA_POSTGRESQL
        - RDS_MYSQL
        - RDS_POSTGRESQL
    SqlConfiguration:
      type: object
      properties:
        QueryIdentifiersEnclosingOption:
          allOf:
            - $ref: "#/components/schemas/QueryIdentifiersEnclosingOption"
            - description: <p>Determines whether Amazon Kendra encloses SQL identifiers for tables and column names in double quotes (") when making a database query.</p> <p>By default, Amazon Kendra passes SQL identifiers the way that they are entered into the data source configuration. It does not change the case of identifiers or enclose them in quotes.</p> <p>PostgreSQL internally converts uppercase characters to lower case characters in identifiers unless they are quoted. Choosing this option encloses identifiers in quotes so that PostgreSQL does not convert the character's case.</p> <p>For MySQL databases, you must enable the <code>ansi_quotes</code> option when you set this field to <code>DOUBLE_QUOTES</code>.</p>
      description: Provides the configuration information to use a SQL database.
    GroupId:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 1024
    PrincipalOrderingId:
      type: integer
      minimum: 0
      maximum: 32535158400000
    ExperienceEndpoints:
      type: array
      items:
        $ref: "#/components/schemas/ExperienceEndpoint"
      minItems: 1
      maxItems: 2
    ExperienceStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - FAILED
    FaqStatus:
      type: string
      enum:
        - CREATING
        - UPDATING
        - ACTIVE
        - DELETING
        - FAILED
    FeaturedDocumentWithMetadataList:
      type: array
      items:
        $ref: "#/components/schemas/FeaturedDocumentWithMetadata"
    FeaturedDocumentMissingList:
      type: array
      items:
        $ref: "#/components/schemas/FeaturedDocumentMissing"
    Long:
      type: integer
    IndexStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - FAILED
        - UPDATING
        - SYSTEM_UPDATING
    DocumentMetadataConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentMetadataConfiguration"
      minItems: 0
      maxItems: 500
    IndexStatistics:
      type: object
      required:
        - FaqStatistics
        - TextDocumentStatistics
      properties:
        FaqStatistics:
          allOf:
            - $ref: "#/components/schemas/FaqStatistics"
            - description: The number of question and answer topics in the index.
        TextDocumentStatistics:
          allOf:
            - $ref: "#/components/schemas/TextDocumentStatistics"
            - description: The number of text documents indexed.
      description: Provides information about the number of documents and the number of questions and answers in an index.
    GroupOrderingIdSummaries:
      type: array
      items:
        $ref: "#/components/schemas/GroupOrderingIdSummary"
      maxItems: 10
    QuerySuggestionsBlockListStatus:
      type: string
      enum:
        - ACTIVE
        - CREATING
        - DELETING
        - UPDATING
        - ACTIVE_BUT_UPDATE_FAILED
        - FAILED
    Mode:
      type: string
      enum:
        - ENABLED
        - LEARN_ONLY
    QuerySuggestionsStatus:
      type: string
      enum:
        - ACTIVE
        - UPDATING
    ObjectBoolean:
      type: boolean
    MinimumNumberOfQueryingUsers:
      type: integer
      minimum: 1
      maximum: 10000
    MinimumQueryCount:
      type: integer
      minimum: 1
      maximum: 10000
    ThesaurusStatus:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - DELETING
        - UPDATING
        - ACTIVE_BUT_UPDATE_FAILED
        - FAILED
    DisassociateEntityList:
      type: array
      items:
        $ref: "#/components/schemas/EntityConfiguration"
      minItems: 1
      maxItems: 40
    EntityIdsList:
      type: array
      items:
        $ref: "#/components/schemas/EntityId"
      minItems: 1
      maxItems: 25
    Title:
      type: string
    DocumentAttributeList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentAttribute"
    Document:
      type: object
      required:
        - Id
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DocumentId"
            - description: <p>A identifier of the document in the index.</p> <p>Note, each document ID must be unique per index. You cannot create a data source to index your documents with their unique IDs and then use the <code>BatchPutDocument</code> API to index the same documents, or vice versa. You can delete a data source and then use the <code>BatchPutDocument</code> API to index the same documents, or vice versa.</p>
        Title:
          allOf:
            - $ref: "#/components/schemas/Title"
            - description: The title of the document.
        Blob:
          allOf:
            - $ref: "#/components/schemas/Blob"
            - description: <p>The contents of the document. </p> <p>Documents passed to the <code>Blob</code> parameter must be base64 encoded. Your code might not need to encode the document file bytes if you're using an Amazon Web Services SDK to call Amazon Kendra APIs. If you are calling the Amazon Kendra endpoint directly using REST, you must base64 encode the contents before sending.</p>
        S3Path:
          $ref: "#/components/schemas/S3Path"
        Attributes:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeList"
            - description: <p>Custom attributes to apply to the document. Use the custom attributes to provide additional information for searching, to provide facets for refining searches, and to provide additional information in the query response.</p> <p>For example, 'DataSourceId' and 'DataSourceSyncJobId' are custom attributes that provide information on the synchronization of documents running on a data source. Note, 'DataSourceSyncJobId' could be an optional custom attribute as Amazon Kendra will use the ID of a running sync job.</p>
        AccessControlList:
          allOf:
            - $ref: "#/components/schemas/PrincipalList"
            - description: Information on principals (users and/or groups) and which documents they should have access to. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
        HierarchicalAccessControlList:
          allOf:
            - $ref: "#/components/schemas/HierarchicalPrincipalList"
            - description: The list of <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html">principal</a> lists that define the hierarchy for which documents users should have access to.
        ContentType:
          allOf:
            - $ref: "#/components/schemas/ContentType"
            - description: The file type of the document in the <code>Blob</code> field.
        AccessControlConfigurationId:
          allOf:
            - $ref: "#/components/schemas/AccessControlConfigurationId"
            - description: The identifier of the access control configuration that you want to apply to the document.
      description: A document in an index.
    DocumentAttributeKey:
      type: string
      pattern: "[a-zA-Z0-9_][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 200
    DocumentAttributeValue:
      type: object
      properties:
        StringValue:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeStringValue"
            - description: A string, such as "department".
        StringListValue:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeStringListValue"
            - description: A list of strings. The default maximum length or number of strings is 10.
        LongValue:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: A long integer value.
        DateValue:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: <p>A date expressed as an ISO 8601 string.</p> <p>It is important for the time zone to be included in the ISO 8601 date-time format. For example, 2012-03-25T12:30:10+01:00 is the ISO 8601 date-time format for March 25th 2012 at 12:30PM (plus 10 seconds) in Central European Time.</p>
      description: The value of a document attribute. You can only provide one value for a document attribute.
    DocumentAttributeCondition:
      type: object
      required:
        - ConditionDocumentAttributeKey
        - Operator
      properties:
        ConditionDocumentAttributeKey:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeKey"
            - description: <p>The identifier of the document attribute used for the condition.</p> <p>For example, 'Source_URI' could be an identifier for the attribute or metadata field that contains source URIs associated with the documents.</p> <p>Amazon Kendra currently does not support <code>_document_body</code> as an attribute key used for the condition.</p>
        Operator:
          allOf:
            - $ref: "#/components/schemas/ConditionOperator"
            - description: <p>The condition operator.</p> <p>For example, you can use 'Contains' to partially match a string.</p>
        ConditionOnValue:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeValue"
            - description: <p>The value used by the operator.</p> <p>For example, you can specify the value 'financial' for strings in the 'Source_URI' field that partially match or contain this value.</p>
      description: <p>The condition used for the target document attribute or metadata field when ingesting documents into Amazon Kendra. You use this with <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_DocumentAttributeTarget.html">DocumentAttributeTarget to apply the condition</a>.</p> <p>For example, you can create the 'Department' target field and have it prefill department names associated with the documents based on information in the 'Source_URI' field. Set the condition that if the 'Source_URI' field contains 'financial' in its URI value, then prefill the target field 'Department' with the target value 'Finance' for the document.</p> <p>Amazon Kendra cannot create a target field if it has not already been created as an index field. After you create your index field, you can create a document metadata field using <code>DocumentAttributeTarget</code>. Amazon Kendra then will map your newly created metadata field to your index field.</p>
    DocumentAttributeKeyList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentAttributeKey"
      minItems: 1
      maxItems: 100
    DocumentAttributeStringListValue:
      type: array
      items:
        $ref: "#/components/schemas/String"
    DocumentAttributeStringValue:
      type: string
      minLength: 1
      maxLength: 2048
    DocumentAttributeTarget:
      type: object
      properties:
        TargetDocumentAttributeKey:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeKey"
            - description: <p>The identifier of the target document attribute or metadata field.</p> <p>For example, 'Department' could be an identifier for the target attribute or metadata field that includes the department names associated with the documents.</p>
        TargetDocumentAttributeValueDeletion:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to delete the existing target value for your specified target attribute key. You cannot create a target value and set this to <code>TRUE</code>. To create a target value (<code>TargetDocumentAttributeValue</code>), set this to <code>FALSE</code>."
        TargetDocumentAttributeValue:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeValue"
            - description: <p>The target value you want to create for the target attribute.</p> <p>For example, 'Finance' could be the target value for the target attribute key 'Department'.</p>
      description: <p>The target document attribute or metadata field you want to alter when ingesting documents into Amazon Kendra.</p> <p>For example, you can delete customer identification numbers associated with the documents, stored in the document metadata field called 'Customer_ID'. You set the target key as 'Customer_ID' and the deletion flag to <code>TRUE</code>. This removes all customer ID values in the field 'Customer_ID'. This would scrub personally identifiable information from each document's metadata.</p> <p>Amazon Kendra cannot create a target field if it has not already been created as an index field. After you create your index field, you can create a document metadata field using <code>DocumentAttributeTarget</code>. Amazon Kendra then will map your newly created metadata field to your index field.</p> <p>You can also use this with <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_DocumentAttributeCondition.html">DocumentAttributeCondition</a>.</p>
    FacetResultList:
      type: array
      items:
        $ref: "#/components/schemas/FacetResult"
    DocumentAttributeValueCountPair:
      type: object
      properties:
        DocumentAttributeValue:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeValue"
            - description: The value of the attribute. For example, "HR".
        Count:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of documents in the response that have the attribute value for the key.
        FacetResults:
          allOf:
            - $ref: "#/components/schemas/FacetResultList"
            - description: <p>Contains the results of a document attribute that is a nested facet. A <code>FacetResult</code> contains the counts for each facet nested within a facet.</p> <p>For example, the document attribute or facet "Department" includes a value called "Engineering". In addition, the document attribute or facet "SubDepartment" includes the values "Frontend" and "Backend" for documents assigned to "Engineering". You can display nested facets in the search results so that documents can be searched not only by department but also by a sub department within a department. The counts for documents that belong to "Frontend" and "Backend" within "Engineering" are returned for a query.</p> <p/> <p/>
      description: Provides the count of documents that match a particular attribute when doing a faceted search.
    DocumentAttributeValueCountPairList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentAttributeValueCountPair"
    DocumentAttributeValueType:
      type: string
      enum:
        - STRING_VALUE
        - STRING_LIST_VALUE
        - LONG_VALUE
        - DATE_VALUE
    DocumentInfo:
      type: object
      required:
        - DocumentId
      properties:
        DocumentId:
          allOf:
            - $ref: "#/components/schemas/DocumentId"
            - description: The identifier of the document.
        Attributes:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeList"
            - description: <p>Attributes that identify a specific version of a document to check.</p> <p>The only valid attributes are:</p> <ul> <li> <p>version</p> </li> <li> <p>datasourceId</p> </li> <li> <p>jobExecutionId</p> </li> </ul> <p>The attributes follow these rules:</p> <ul> <li> <p> <code>dataSourceId</code> and <code>jobExecutionId</code> must be used together.</p> </li> <li> <p> <code>version</code> is ignored if <code>dataSourceId</code> and <code>jobExecutionId</code> are not provided.</p> </li> <li> <p>If <code>dataSourceId</code> and <code>jobExecutionId</code> are provided, but <code>version</code> is not, the version defaults to "0".</p> </li> </ul>
      description: Identifies a document for which to retrieve status information
    DocumentMetadataBoolean:
      type: boolean
    DocumentMetadataConfigurationName:
      type: string
      minLength: 1
      maxLength: 30
    Relevance:
      type: object
      properties:
        Freshness:
          allOf:
            - $ref: "#/components/schemas/DocumentMetadataBoolean"
            - description: Indicates that this field determines how "fresh" a document is. For example, if document 1 was created on November 5, and document 2 was created on October 31, document 1 is "fresher" than document 2. You can only set the <code>Freshness</code> field on one <code>DATE</code> type field. Only applies to <code>DATE</code> fields.
        Importance:
          allOf:
            - $ref: "#/components/schemas/Importance"
            - description: The relative importance of the field in the search. Larger numbers provide more of a boost than smaller numbers.
        Duration:
          allOf:
            - $ref: "#/components/schemas/Duration"
            - description: <p>Specifies the time period that the boost applies to. For example, to make the boost apply to documents with the field value within the last month, you would use "2628000s". Once the field value is beyond the specified range, the effect of the boost drops off. The higher the importance, the faster the effect drops off. If you don't specify a value, the default is 3 months. The value of the field is a numeric string followed by the character "s", for example "86400s" for one day, or "604800s" for one week. </p> <p>Only applies to <code>DATE</code> fields.</p>
        RankOrder:
          allOf:
            - $ref: "#/components/schemas/Order"
            - description: <p>Determines how values should be interpreted.</p> <p>When the <code>RankOrder</code> field is <code>ASCENDING</code>, higher numbers are better. For example, a document with a rating score of 10 is higher ranking than a document with a rating score of 1.</p> <p>When the <code>RankOrder</code> field is <code>DESCENDING</code>, lower numbers are better. For example, in a task tracking application, a priority 1 task is more important than a priority 5 task.</p> <p>Only applies to <code>LONG</code> and <code>DOUBLE</code> fields.</p>
        ValueImportanceMap:
          allOf:
            - $ref: "#/components/schemas/ValueImportanceMap"
            - description: <p>A list of values that should be given a different boost when they appear in the result list. For example, if you are boosting a field called "department," query terms that match the department field are boosted in the result. However, you can add entries from the department field to boost documents with those values higher. </p> <p>For example, you can add entries to the map with names of departments. If you add "HR",5 and "Legal",3 those departments are given special attention when they appear in the metadata of a document. When those terms appear they are given the specified importance instead of the regular importance for the boost.</p>
      description: Provides information for tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.
    Search:
      type: object
      properties:
        Facetable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates that the field can be used to create search facets, a count of results for each value in the field. The default is <code>false</code> .
        Searchable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Determines whether the field is used in the search. If the <code>Searchable</code> field is <code>true</code>, you can use relevance tuning to manually tune how Amazon Kendra weights the field in the search. The default is <code>true</code> for string fields and <code>false</code> for number and date fields.
        Displayable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Determines whether the field is returned in the query response. The default is <code>true</code>.
        Sortable:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Determines whether the field can be used to sort the results of a query. If you specify sorting on a field that does not have <code>Sortable</code> set to <code>true</code>, Amazon Kendra returns an exception. The default is <code>false</code>.
      description: Provides information about how a custom index field is used during a search.
    DocumentMetadataConfiguration:
      type: object
      required:
        - Name
        - Type
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/DocumentMetadataConfigurationName"
            - description: The name of the index field.
        Type:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeValueType"
            - description: "The data type of the index field. "
        Relevance:
          allOf:
            - $ref: "#/components/schemas/Relevance"
            - description: Provides tuning parameters to determine how the field affects the search results.
        Search:
          allOf:
            - $ref: "#/components/schemas/Search"
            - description: Provides information about how the field is used during a search.
      description: Specifies the properties, such as relevance tuning and searchability, of an index field.
    DocumentRelevanceConfiguration:
      type: object
      required:
        - Name
        - Relevance
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/DocumentMetadataConfigurationName"
            - description: The name of the index field.
        Relevance:
          allOf:
            - $ref: "#/components/schemas/Relevance"
            - description: Provides information for tuning the relevance of a field in a search. When a query includes terms that match the field, the results are given a boost in the response based on these tuning parameters.
      description: Overrides the document relevance properties of a custom index field.
    DocumentRelevanceOverrideConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/DocumentRelevanceConfiguration"
      minItems: 0
      maxItems: 500
    DocumentStatus:
      type: string
      enum:
        - NOT_FOUND
        - PROCESSING
        - INDEXED
        - UPDATED
        - FAILED
        - UPDATE_FAILED
    Status:
      type: object
      properties:
        DocumentId:
          allOf:
            - $ref: "#/components/schemas/DocumentId"
            - description: The identifier of the document.
        DocumentStatus:
          allOf:
            - $ref: "#/components/schemas/DocumentStatus"
            - description: <p>The current status of a document.</p> <p>If the document was submitted for deletion, the status is <code>NOT_FOUND</code> after the document is deleted.</p>
        FailureCode:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Indicates the source of the error.
        FailureReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Provides detailed information about why the document couldn't be indexed. Use this information to correct the error before you resubmit the document for indexing.
      description: Provides information about the status of documents submitted for indexing.
    DocumentsMetadataConfiguration:
      type: object
      properties:
        S3Prefix:
          allOf:
            - $ref: "#/components/schemas/S3ObjectKey"
            - description: A prefix used to filter metadata configuration files in the Amazon Web Services S3 bucket. The S3 bucket might contain multiple metadata files. Use <code>S3Prefix</code> to include only the desired metadata files.
      description: Document metadata files that contain information such as the document access control information, source URI, document author, and custom attributes. Each metadata file contains metadata about a single document.
    Domain:
      type: string
      pattern: ^(?!-)[A-Za-z0-9-].*(?<!-)$
      minLength: 1
      maxLength: 63
    Duration:
      type: string
      pattern: "[0-9]+[s]"
      minLength: 1
      maxLength: 10
    Endpoint:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 2048
    EndpointType:
      type: string
      enum:
        - HOME
    EntityId:
      type: string
      pattern: ^([0-9a-f]{10}-|)[A-Fa-f0-9]{8}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{4}-[A-Fa-f0-9]{12}$
      minLength: 1
      maxLength: 47
    EntityType:
      type: string
      enum:
        - USER
        - GROUP
    NameType:
      type: string
      pattern: ^[\S\s]*$
      minLength: 1
      maxLength: 100
      format: password
    EntityDisplayData:
      type: object
      properties:
        UserName:
          allOf:
            - $ref: "#/components/schemas/NameType"
            - description: The name of the user.
        GroupName:
          allOf:
            - $ref: "#/components/schemas/NameType"
            - description: The name of the group.
        IdentifiedUserName:
          allOf:
            - $ref: "#/components/schemas/NameType"
            - description: The user name of the user.
        FirstName:
          allOf:
            - $ref: "#/components/schemas/NameType"
            - description: The first name of the user.
        LastName:
          allOf:
            - $ref: "#/components/schemas/NameType"
            - description: The last name of the user.
      description: Information about the user entity.
    Persona:
      type: string
      enum:
        - OWNER
        - VIEWER
    EntityPersonaConfiguration:
      type: object
      required:
        - EntityId
        - Persona
      properties:
        EntityId:
          allOf:
            - $ref: "#/components/schemas/EntityId"
            - description: The identifier of a user or group in your IAM Identity Center identity source. For example, a user ID could be an email.
        Persona:
          allOf:
            - $ref: "#/components/schemas/Persona"
            - description: The persona that defines the specific permissions of the user or group in your IAM Identity Center identity source. The available personas or access roles are <code>Owner</code> and <code>Viewer</code>. For more information on these personas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html#access-search-experience">Providing access to your search page</a>.
      description: Provides the configuration information for users or groups in your IAM Identity Center identity source for access to your Amazon Kendra experience. Specific permissions are defined for each user or group once they are granted access to your Amazon Kendra experience.
    MimeType:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 256
    ExcludeMimeTypesList:
      type: array
      items:
        $ref: "#/components/schemas/MimeType"
      minItems: 0
      maxItems: 30
    SharedDriveId:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 256
    ExcludeSharedDrivesList:
      type: array
      items:
        $ref: "#/components/schemas/SharedDriveId"
      minItems: 0
      maxItems: 100
    UserAccount:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 256
    ExcludeUserAccountsList:
      type: array
      items:
        $ref: "#/components/schemas/UserAccount"
      minItems: 0
      maxItems: 100
    UserIdentityConfiguration:
      type: object
      properties:
        IdentityAttributeName:
          allOf:
            - $ref: "#/components/schemas/IdentityAttributeName"
            - description: The IAM Identity Center field name that contains the identifiers of your users, such as their emails. This is used for <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">user context filtering</a> and for granting access to your Amazon Kendra experience. You must set up IAM Identity Center with Amazon Kendra. You must include your users and groups in your Access Control List when you ingest documents into your index. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/getting-started-aws-sso.html">Getting started with an IAM Identity Center identity source</a>.
      description: Provides the configuration information for the identifiers of your users.
    ExperienceEndpoint:
      type: object
      properties:
        EndpointType:
          allOf:
            - $ref: "#/components/schemas/EndpointType"
            - description: The type of endpoint for your Amazon Kendra experience. The type currently available is <code>HOME</code>, which is a unique and fully hosted URL to the home page of your Amazon Kendra experience.
        Endpoint:
          allOf:
            - $ref: "#/components/schemas/Endpoint"
            - description: The endpoint of your Amazon Kendra experience.
      description: Provides the configuration information for the endpoint for your Amazon Kendra experience.
    ExperienceEntitiesSummary:
      type: object
      properties:
        EntityId:
          allOf:
            - $ref: "#/components/schemas/EntityId"
            - description: The identifier of a user or group in your IAM Identity Center identity source. For example, a user ID could be an email.
        EntityType:
          allOf:
            - $ref: "#/components/schemas/EntityType"
            - description: Shows the type as <code>User</code> or <code>Group</code>.
        DisplayData:
          allOf:
            - $ref: "#/components/schemas/EntityDisplayData"
            - description: Information about the user entity.
      description: Summary information for users or groups in your IAM Identity Center identity source with granted access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
    ExperienceEntitiesSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ExperienceEntitiesSummary"
    ExperiencesSummary:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ExperienceName"
            - description: The name of your Amazon Kendra experience.
        Id:
          allOf:
            - $ref: "#/components/schemas/ExperienceId"
            - description: The identifier of your Amazon Kendra experience.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when your Amazon Kendra experience was created.
        Status:
          allOf:
            - $ref: "#/components/schemas/ExperienceStatus"
            - description: The processing status of your Amazon Kendra experience.
        Endpoints:
          allOf:
            - $ref: "#/components/schemas/ExperienceEndpoints"
            - description: The endpoint URLs for your Amazon Kendra experiences. The URLs are unique and fully hosted by Amazon Web Services.
      description: Summary information for your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
    ExperiencesSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ExperiencesSummary"
    FacetList:
      type: array
      items:
        $ref: "#/components/schemas/Facet"
    TopDocumentAttributeValueCountPairsSize:
      type: integer
      minimum: 0
      maximum: 5000
    Facet:
      type: object
      properties:
        DocumentAttributeKey:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeKey"
            - description: The unique key for the document attribute.
        Facets:
          allOf:
            - $ref: "#/components/schemas/FacetList"
            - description: <p>An array of document attributes that are nested facets within a facet.</p> <p>For example, the document attribute or facet "Department" includes a value called "Engineering". In addition, the document attribute or facet "SubDepartment" includes the values "Frontend" and "Backend" for documents assigned to "Engineering". You can display nested facets in the search results so that documents can be searched not only by department but also by a sub department within a department. This helps your users further narrow their search.</p> <p>You can only have one nested facet within a facet. If you want to increase this limit, contact <a href="http://aws.amazon.com/contact-us/">Support</a>.</p>
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/TopDocumentAttributeValueCountPairsSize"
            - description: Maximum number of facet values per facet. The default is 10. You can use this to limit the number of facet values to less than 10. If you want to increase the default, contact <a href="http://aws.amazon.com/contact-us/">Support</a>.
      description: <p>Information about a document attribute. You can use document attributes as facets.</p> <p>For example, the document attribute or facet "Department" includes the values "HR", "Engineering", and "Accounting". You can display these values in the search results so that documents can be searched by department.</p> <p>You can display up to 10 facet values per facet for a query. If you want to increase this limit, contact <a href="http://aws.amazon.com/contact-us/">Support</a>.</p>
    FacetResult:
      type: object
      properties:
        DocumentAttributeKey:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeKey"
            - description: The key for the facet values. This is the same as the <code>DocumentAttributeKey</code> provided in the query.
        DocumentAttributeValueType:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeValueType"
            - description: The data type of the facet value. This is the same as the type defined for the index field when it was created.
        DocumentAttributeValueCountPairs:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeValueCountPairList"
            - description: An array of key/value pairs, where the key is the value of the attribute and the count is the number of documents that share the key value.
      description: The facet values for the documents in the response.
    FailureReason:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 2048
    IndexedQuestionAnswersCount:
      type: integer
      minimum: 0
    FaqStatistics:
      type: object
      required:
        - IndexedQuestionAnswersCount
      properties:
        IndexedQuestionAnswersCount:
          allOf:
            - $ref: "#/components/schemas/IndexedQuestionAnswersCount"
            - description: The total number of FAQ questions and answers contained in the index.
      description: Provides statistical information about the FAQ questions and answers contained in an index.
    FaqSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/FaqId"
            - description: The identifier of the FAQ.
        Name:
          allOf:
            - $ref: "#/components/schemas/FaqName"
            - description: The name that you assigned the FAQ when you created or updated the FAQ.
        Status:
          allOf:
            - $ref: "#/components/schemas/FaqStatus"
            - description: The current status of the FAQ. When the status is <code>ACTIVE</code> the FAQ is ready for use.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the FAQ was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the FAQ was last updated.
        FileFormat:
          allOf:
            - $ref: "#/components/schemas/FaqFileFormat"
            - description: "The file type used to create the FAQ. "
        LanguageCode:
          allOf:
            - $ref: "#/components/schemas/LanguageCode"
            - description: The code for a language. This shows a supported language for the FAQ document as part of the summary information for FAQs. English is supported by default. For more information on supported languages, including their codes, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html">Adding documents in languages other than English</a>.
      description: Summary information for frequently asked questions and answers included in an index.
    FaqSummaryItems:
      type: array
      items:
        $ref: "#/components/schemas/FaqSummary"
    FeaturedDocument:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DocumentId"
            - description: The identifier of the document to feature in the search results. You can use the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Query.html">Query</a> API to search for specific documents with their document IDs included in the result items, or you can use the console.
      description: A featured document. This document is displayed at the top of the search results page, placed above all other results for certain queries. If there's an exact match of a query, then the document is featured in the search results.
    FeaturedDocumentMissing:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DocumentId"
            - description: The identifier of the document that doesn't exist but you have specified as a featured document.
      description: A document ID doesn't exist but you have specified as a featured document. Amazon Kendra cannot feature the document if it doesn't exist in the index. You can check the status of a document and its ID or check for documents with status errors using the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_BatchGetDocumentStatus.html">BatchGetDocumentStatus</a> API.
    FeaturedDocumentWithMetadata:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/DocumentId"
            - description: The identifier of the featured document with its metadata. You can use the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Query.html">Query</a> API to search for specific documents with their document IDs included in the result items, or you can use the console.
        Title:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The main title of the featured document.
        URI:
          allOf:
            - $ref: "#/components/schemas/Url"
            - description: The source URI location of the featured document.
      description: A featured document with its metadata information. This document is displayed at the top of the search results page, placed above all other results for certain queries. If there's an exact match of a query, then the document is featured in the search results.
    QueryResultType:
      type: string
      enum:
        - DOCUMENT
        - QUESTION_ANSWER
        - ANSWER
    FeedbackToken:
      type: string
      pattern: ^\P{C}*.\P{C}*$
      minLength: 1
      maxLength: 2048
    FeaturedResultsItem:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ResultId"
            - description: The identifier of the featured result.
        Type:
          allOf:
            - $ref: "#/components/schemas/QueryResultType"
            - description: The type of document within the featured result response. For example, a response could include a question-answer type that's relevant to the query.
        AdditionalAttributes:
          allOf:
            - $ref: "#/components/schemas/AdditionalResultAttributeList"
            - description: One or more additional attributes associated with the featured result.
        DocumentId:
          allOf:
            - $ref: "#/components/schemas/DocumentId"
            - description: The identifier of the featured document.
        DocumentTitle:
          $ref: "#/components/schemas/TextWithHighlights"
        DocumentExcerpt:
          $ref: "#/components/schemas/TextWithHighlights"
        DocumentURI:
          allOf:
            - $ref: "#/components/schemas/Url"
            - description: The source URI location of the featured document.
        DocumentAttributes:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeList"
            - description: An array of document attributes assigned to a featured document in the search results. For example, the document author (<code>_author</code>) or the source URI (<code>_source_uri</code>) of the document.
        FeedbackToken:
          allOf:
            - $ref: "#/components/schemas/FeedbackToken"
            - description: A token that identifies a particular featured result from a particular query. Use this token to provide click-through feedback for the result. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/submitting-feedback.html">Submitting feedback</a>.
      description: A single featured result item. A featured result is displayed at the top of the search results page, placed above all other results for certain queries. If there's an exact match of a query, then certain documents are featured in the search results.
    FeaturedResultsItemList:
      type: array
      items:
        $ref: "#/components/schemas/FeaturedResultsItem"
    FeaturedResultsSetSummary:
      type: object
      properties:
        FeaturedResultsSetId:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetId"
            - description: The identifier of the set of featured results.
        FeaturedResultsSetName:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetName"
            - description: The name for the set of featured results.
        Status:
          allOf:
            - $ref: "#/components/schemas/FeaturedResultsSetStatus"
            - description: The current status of the set of featured results. When the value is <code>ACTIVE</code>, featured results are ready for use. You can still configure your settings before setting the status to <code>ACTIVE</code>. You can set the status to <code>ACTIVE</code> or <code>INACTIVE</code> using the <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_UpdateFeaturedResultsSet.html">UpdateFeaturedResultsSet</a> API. The queries you specify for featured results must be unique per featured results set for each index, whether the status is <code>ACTIVE</code> or <code>INACTIVE</code>.
        LastUpdatedTimestamp:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The Unix timestamp when the set of featured results was last updated.
        CreationTimestamp:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The Unix timestamp when the set of featured results was created.
      description: Summary information for a set of featured results. Featured results are placed above all other results for certain queries. If there's an exact match of a query, then one or more specific documents are featured in the search results.
    FeaturedResultsSetSummaryItems:
      type: array
      items:
        $ref: "#/components/schemas/FeaturedResultsSetSummary"
    FileSystemId:
      type: string
      pattern: ^(fs-[0-9a-f]{8,})$
      minLength: 11
      maxLength: 21
    FolderId:
      type: string
      minLength: 1
      maxLength: 500
    FolderIdList:
      type: array
      items:
        $ref: "#/components/schemas/FolderId"
    FsxFileSystemType:
      type: string
      enum:
        - WINDOWS
    SuggestionQueryText:
      type: string
      pattern: ^\P{C}*$
    QuerySuggestionsId:
      type: string
      minLength: 1
      maxLength: 36
    SuggestionList:
      type: array
      items:
        $ref: "#/components/schemas/Suggestion"
    Interval:
      type: string
      enum:
        - THIS_MONTH
        - THIS_WEEK
        - ONE_WEEK_AGO
        - TWO_WEEKS_AGO
        - ONE_MONTH_AGO
        - TWO_MONTHS_AGO
    MetricType:
      type: string
      enum:
        - QUERIES_BY_COUNT
        - QUERIES_BY_ZERO_CLICK_RATE
        - QUERIES_BY_ZERO_RESULT_RATE
        - DOCS_BY_CLICK_COUNT
        - AGG_QUERY_DOC_METRICS
        - TREND_QUERY_DOC_METRICS
    NextToken:
      type: string
      minLength: 1
      maxLength: 800
    TimeRange:
      type: object
      properties:
        StartTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp for the beginning of the time range.
        EndTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp for the end of the time range.
      description: Provides a range of time.
    SnapshotsDataHeaderFields:
      type: array
      items:
        $ref: "#/components/schemas/String"
    SnapshotsDataRecords:
      type: array
      items:
        $ref: "#/components/schemas/SnapshotsDataRecord"
    SaaSConfiguration:
      type: object
      required:
        - OrganizationName
        - HostUrl
      properties:
        OrganizationName:
          allOf:
            - $ref: "#/components/schemas/OrganizationName"
            - description: The name of the organization of the GitHub Enterprise Cloud (SaaS) account you want to connect to. You can find your organization name by logging into GitHub desktop and selecting <b>Your organizations</b> under your profile picture dropdown.
        HostUrl:
          allOf:
            - $ref: "#/components/schemas/Url"
            - description: The GitHub host URL or API endpoint URL. For example, <i>https://api.github.com</i>.
      description: Provides the configuration information to connect to GitHub Enterprise Cloud (SaaS).
    OnPremiseConfiguration:
      type: object
      required:
        - HostUrl
        - OrganizationName
        - SslCertificateS3Path
      properties:
        HostUrl:
          allOf:
            - $ref: "#/components/schemas/Url"
            - description: "The GitHub host URL or API endpoint URL. For example, <i>https://on-prem-host-url/api/v3/</i> "
        OrganizationName:
          allOf:
            - $ref: "#/components/schemas/OrganizationName"
            - description: The name of the organization of the GitHub Enterprise Server (in-premise) account you want to connect to. You can find your organization name by logging into GitHub desktop and selecting <b>Your organizations</b> under your profile picture dropdown.
        SslCertificateS3Path:
          allOf:
            - $ref: "#/components/schemas/S3Path"
            - description: <p>The path to the SSL certificate stored in an Amazon S3 bucket. You use this to connect to GitHub if you require a secure SSL connection.</p> <p>You can simply generate a self-signed X509 certificate on any computer using OpenSSL. For an example of using OpenSSL to create an X509 certificate, see <a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/configuring-https-ssl.html">Create and sign an X509 certificate</a>.</p>
      description: Provides the configuration information to connect to GitHub Enterprise Server (on premises).
    Type:
      type: string
      enum:
        - SAAS
        - ON_PREMISE
    GitHubDocumentCrawlProperties:
      type: object
      properties:
        CrawlRepositoryDocuments:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index all files with a repository."
        CrawlIssue:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index all issues within a repository."
        CrawlIssueComment:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index all comments on issues."
        CrawlIssueCommentAttachment:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to include all comment attachments for issues."
        CrawlPullRequest:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index all pull requests within a repository."
        CrawlPullRequestComment:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index all comments on pull requests."
        CrawlPullRequestCommentAttachment:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to include all comment attachments for pull requests."
      description: Provides the configuration information to include certain types of GitHub content. You can configure to index repository files only, or also include issues and pull requests, comments, and comment attachments.
    RepositoryNames:
      type: array
      items:
        $ref: "#/components/schemas/RepositoryName"
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    GroupAttributeField:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 100
    MemberGroups:
      type: array
      items:
        $ref: "#/components/schemas/MemberGroup"
      minItems: 1
      maxItems: 1000
    MemberUsers:
      type: array
      items:
        $ref: "#/components/schemas/MemberUser"
      minItems: 1
      maxItems: 1000
    GroupMembers:
      type: object
      properties:
        MemberGroups:
          allOf:
            - $ref: "#/components/schemas/MemberGroups"
            - description: A list of sub groups that belong to a group. For example, the sub groups "Research", "Engineering", and "Sales and Marketing" all belong to the group "Company".
        MemberUsers:
          allOf:
            - $ref: "#/components/schemas/MemberUsers"
            - description: A list of users that belong to a group. For example, a list of interns all belong to the "Interns" group.
        S3PathforGroupMembers:
          allOf:
            - $ref: "#/components/schemas/S3Path"
            - description: <p>If you have more than 1000 users and/or sub groups for a single group, you need to provide the path to the S3 file that lists your users and sub groups for a group. Your sub groups can contain more than 1000 users, but the list of sub groups that belong to a group (and/or users) must be no more than 1000.</p> <p>You can download this <a href="https://docs.aws.amazon.com/kendra/latest/dg/samples/group_members.zip">example S3 file</a> that uses the correct format for listing group members. Note, <code>dataSourceId</code> is optional. The value of <code>type</code> for a group is always <code>GROUP</code> and for a user it is always <code>USER</code>.</p>
      description: A list of users or sub groups that belong to a group. This is useful for user context filtering, where search results are filtered based on the user or their group access to documents.
    GroupOrderingIdSummary:
      type: object
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/PrincipalMappingStatus"
            - description: The current processing status of actions for mapping users to their groups. The status can be either <code>PROCESSING</code>, <code>SUCCEEDED</code>, <code>DELETING</code>, <code>DELETED</code>, or <code>FAILED</code>.
        LastUpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when an action was last updated. An action can be a <code>PUT</code> or <code>DELETE</code> action for mapping users to their groups.
        ReceivedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when an action was received by Amazon Kendra. An action can be a <code>PUT</code> or <code>DELETE</code> action for mapping users to their groups.
        OrderingId:
          allOf:
            - $ref: "#/components/schemas/PrincipalOrderingId"
            - description: The order in which actions should complete processing. An action can be a <code>PUT</code> or <code>DELETE</code> action for mapping users to their groups.
        FailureReason:
          allOf:
            - $ref: "#/components/schemas/FailureReason"
            - description: The reason an action could not be processed. An action can be a <code>PUT</code> or <code>DELETE</code> action for mapping users to their groups.
      description: Summary information on the processing of <code>PUT</code> and <code>DELETE</code> actions for mapping users to their groups.
    PrincipalMappingStatus:
      type: string
      enum:
        - FAILED
        - SUCCEEDED
        - PROCESSING
        - DELETING
        - DELETED
    GroupSummary:
      type: object
      properties:
        GroupId:
          allOf:
            - $ref: "#/components/schemas/GroupId"
            - description: The identifier of the group you want group summary information on.
        OrderingId:
          allOf:
            - $ref: "#/components/schemas/PrincipalOrderingId"
            - description: The timestamp identifier used for the latest <code>PUT</code> or <code>DELETE</code> action.
      description: Summary information for groups.
    Groups:
      type: array
      items:
        $ref: "#/components/schemas/PrincipalName"
      minItems: 1
      maxItems: 2048
    HierarchicalPrincipal:
      type: object
      required:
        - PrincipalList
      properties:
        PrincipalList:
          allOf:
            - $ref: "#/components/schemas/PrincipalList"
            - description: A list of <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_Principal.html">principal</a> lists that define the hierarchy for which documents users should have access to. Each hierarchical list specifies which user or group has allow or deny access for each document.
      description: " Information to define the hierarchy for which documents users should have access to. "
    HighlightType:
      type: string
      enum:
        - STANDARD
        - THESAURUS_SYNONYM
    Highlight:
      type: object
      required:
        - BeginOffset
        - EndOffset
      properties:
        BeginOffset:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The zero-based location in the response string where the highlight starts.
        EndOffset:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The zero-based location in the response string where the highlight ends.
        TopAnswer:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether the response is the best response. True if this is the best response; otherwise, false.
        Type:
          allOf:
            - $ref: "#/components/schemas/HighlightType"
            - description: "The highlight type. "
      description: Provides information that you can use to highlight a search result so that your users can quickly identify terms in the response.
    HighlightList:
      type: array
      items:
        $ref: "#/components/schemas/Highlight"
    LambdaArn:
      type: string
      pattern: /arn:aws[a-zA-Z-]*:lambda:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:function:[a-zA-Z0-9-_]+(\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})?(:[a-zA-Z0-9-_]+)?/
      minLength: 1
      maxLength: 2048
    S3BucketName:
      type: string
      pattern: "[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]"
      minLength: 3
      maxLength: 63
    IdentityAttributeName:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 1000
    Importance:
      type: integer
      minimum: 1
      maximum: 10
    IndexConfigurationSummary:
      type: object
      required:
        - CreatedAt
        - UpdatedAt
        - Status
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/IndexName"
            - description: The name of the index.
        Id:
          allOf:
            - $ref: "#/components/schemas/IndexId"
            - description: A identifier for the index. Use this to identify the index when you are using APIs such as <code>Query</code>, <code>DescribeIndex</code>, <code>UpdateIndex</code>, and <code>DeleteIndex</code>.
        Edition:
          allOf:
            - $ref: "#/components/schemas/IndexEdition"
            - description: "Indicates whether the index is a Enterprise Edition index or a Developer Edition index. "
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the index was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the index was last updated.
        Status:
          allOf:
            - $ref: "#/components/schemas/IndexStatus"
            - description: The current status of the index. When the status is <code>ACTIVE</code>, the index is ready to search.
      description: Summary information on the configuration of an index.
    IndexConfigurationSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/IndexConfigurationSummary"
    TextDocumentStatistics:
      type: object
      required:
        - IndexedTextDocumentsCount
        - IndexedTextBytes
      properties:
        IndexedTextDocumentsCount:
          allOf:
            - $ref: "#/components/schemas/IndexedTextDocumentsCount"
            - description: The number of text documents indexed.
        IndexedTextBytes:
          allOf:
            - $ref: "#/components/schemas/IndexedTextBytes"
            - description: The total size, in bytes, of the indexed documents.
      description: Provides information about text documents indexed in an index.
    IndexedTextBytes:
      type: integer
      minimum: 0
    IndexedTextDocumentsCount:
      type: integer
      minimum: 0
    InlineCustomDocumentEnrichmentConfiguration:
      type: object
      properties:
        Condition:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeCondition"
            - description: Configuration of the condition used for the target document attribute or metadata field when ingesting documents into Amazon Kendra.
        Target:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeTarget"
            - description: Configuration of the target document attribute or metadata field when ingesting documents into Amazon Kendra. You can also include a value.
        DocumentContentDeletion:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to delete content if the condition used for the target attribute is met."
      description: <p>Provides the configuration information for applying basic logic to alter document metadata and content when ingesting documents into Amazon Kendra. To apply advanced logic, to go beyond what you can do with basic logic, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/API_HookConfiguration.html">HookConfiguration</a>.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/custom-document-enrichment.html">Customizing document metadata during the ingestion process</a>.</p>
    IssueSubEntity:
      type: string
      enum:
        - COMMENTS
        - ATTACHMENTS
        - WORKLOGS
    IssueSubEntityFilter:
      type: array
      items:
        $ref: "#/components/schemas/IssueSubEntity"
      minItems: 0
      maxItems: 3
    IssueType:
      type: array
      items:
        $ref: "#/components/schemas/String"
    Issuer:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 65
    JiraAccountUrl:
      type: string
      pattern: ^https:\/\/[a-zA-Z0-9_\-\.]+(\.atlassian\.net\/)$
      minLength: 1
      maxLength: 2048
    Project:
      type: array
      items:
        $ref: "#/components/schemas/String"
    JiraStatus:
      type: array
      items:
        $ref: "#/components/schemas/String"
    JsonTokenTypeConfiguration:
      type: object
      required:
        - UserNameAttributeField
        - GroupAttributeField
      properties:
        UserNameAttributeField:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user name attribute field.
        GroupAttributeField:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The group attribute field.
      description: Provides the configuration information for the JSON token type.
    KeyLocation:
      type: string
      enum:
        - URL
        - SECRET_MANAGER
    UserNameAttributeField:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 100
    JwtTokenTypeConfiguration:
      type: object
      required:
        - KeyLocation
      properties:
        KeyLocation:
          allOf:
            - $ref: "#/components/schemas/KeyLocation"
            - description: The location of the key.
        URL:
          allOf:
            - $ref: "#/components/schemas/Url"
            - description: The signing key URL.
        SecretManagerArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (arn) of the secret.
        UserNameAttributeField:
          allOf:
            - $ref: "#/components/schemas/UserNameAttributeField"
            - description: The user name attribute field.
        GroupAttributeField:
          allOf:
            - $ref: "#/components/schemas/GroupAttributeField"
            - description: The group attribute field.
        Issuer:
          allOf:
            - $ref: "#/components/schemas/Issuer"
            - description: The issuer of the token.
        ClaimRegex:
          allOf:
            - $ref: "#/components/schemas/ClaimRegex"
            - description: The regular expression that identifies the claim.
      description: Provides the configuration information for the JWT token type.
    KmsKeyId:
      type: string
      minLength: 1
      maxLength: 2048
      format: password
    MaxResultsIntegerForListAccessControlConfigurationsRequest:
      type: integer
      minimum: 1
      maximum: 100
    MaxResultsIntegerForListDataSourceSyncJobsRequest:
      type: integer
      minimum: 1
      maximum: 10
    MaxResultsIntegerForListDataSourcesRequest:
      type: integer
      minimum: 1
      maximum: 100
    MaxResultsIntegerForListEntityPersonasRequest:
      type: integer
      minimum: 1
      maximum: 100
    PersonasSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/PersonasSummary"
    MaxResultsIntegerForListExperiencesRequest:
      type: integer
      minimum: 1
      maximum: 100
    MaxResultsIntegerForListFaqsRequest:
      type: integer
      minimum: 1
      maximum: 100
    MaxResultsIntegerForListFeaturedResultsSetsRequest:
      type: integer
      minimum: 1
      maximum: 100
    MaxResultsIntegerForListPrincipalsRequest:
      type: integer
      minimum: 1
      maximum: 10
    ListOfGroupSummaries:
      type: array
      items:
        $ref: "#/components/schemas/GroupSummary"
    MaxResultsIntegerForListIndicesRequest:
      type: integer
      minimum: 1
      maximum: 100
    MaxResultsIntegerForListQuerySuggestionsBlockLists:
      type: integer
      minimum: 1
      maximum: 100
    QuerySuggestionsBlockListSummaryItems:
      type: array
      items:
        $ref: "#/components/schemas/QuerySuggestionsBlockListSummary"
    MaxResultsIntegerForListThesauriRequest:
      type: integer
      minimum: 1
      maximum: 100
    ThesaurusSummaryItems:
      type: array
      items:
        $ref: "#/components/schemas/ThesaurusSummary"
    LookBackPeriod:
      type: integer
      minimum: 0
      maximum: 168
    MaxContentSizePerPageInMegaBytes:
      type: number
      format: float
      minimum: 0.000001
      maximum: 50
    MaxLinksPerPage:
      type: integer
      minimum: 1
      maximum: 1000
    MaxUrlsPerMinuteCrawlRate:
      type: integer
      minimum: 1
      maximum: 300
    MemberGroup:
      type: object
      required:
        - GroupId
      properties:
        GroupId:
          allOf:
            - $ref: "#/components/schemas/GroupId"
            - description: The identifier of the sub group you want to map to a group.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source for the sub group you want to map to a group.
      description: The sub groups that belong to a group.
    UserId:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 1024
    MemberUser:
      type: object
      required:
        - UserId
      properties:
        UserId:
          allOf:
            - $ref: "#/components/schemas/UserId"
            - description: The identifier of the user you want to map to a group.
      description: The users that belong to a group.
    OrganizationName:
      type: string
      pattern: ^[A-Za-z0-9_.-]+$
      minLength: 1
      maxLength: 60
    TenantDomain:
      type: string
      pattern: ^([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\.)+[a-z]{2,}$
      minLength: 1
      maxLength: 256
    OneDriveUsers:
      type: object
      properties:
        OneDriveUserList:
          allOf:
            - $ref: "#/components/schemas/OneDriveUserList"
            - description: A list of users whose documents should be indexed. Specify the user names in email format, for example, <code>username@tenantdomain</code>. If you need to index the documents of more than 100 users, use the <code>OneDriveUserS3Path</code> field to specify the location of a file containing a list of users.
        OneDriveUserS3Path:
          allOf:
            - $ref: "#/components/schemas/S3Path"
            - description: The S3 bucket location of a file containing a list of users whose documents should be indexed.
      description: User accounts whose documents should be indexed.
    OneDriveUser:
      type: string
      pattern: ^(?!\s).+@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$
      minLength: 1
      maxLength: 256
    OneDriveUserList:
      type: array
      items:
        $ref: "#/components/schemas/OneDriveUser"
      minItems: 1
      maxItems: 100
    Order:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    OrganizationId:
      type: string
      pattern: d-[0-9a-fA-F]{10}
      minLength: 12
      maxLength: 12
    PersonasSummary:
      type: object
      properties:
        EntityId:
          allOf:
            - $ref: "#/components/schemas/EntityId"
            - description: The identifier of a user or group in your IAM Identity Center identity source. For example, a user ID could be an email.
        Persona:
          allOf:
            - $ref: "#/components/schemas/Persona"
            - description: The persona that defines the specific permissions of the user or group in your IAM Identity Center identity source. The available personas or access roles are <code>Owner</code> and <code>Viewer</code>. For more information on these personas, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html#access-search-experience">Providing access to your search page</a>.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the summary information was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the summary information was last updated.
      description: Summary information for users or groups in your IAM Identity Center identity source. This applies to users and groups with specific permissions that define their level of access to your Amazon Kendra experience. You can create an Amazon Kendra experience such as a search application. For more information on creating a search application experience, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/deploying-search-experience-no-code.html">Building a search experience with no code</a>.
    PrincipalType:
      type: string
      enum:
        - USER
        - GROUP
    ReadAccessType:
      type: string
      enum:
        - ALLOW
        - DENY
    Principal:
      type: object
      required:
        - Name
        - Type
        - Access
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/PrincipalName"
            - description: The name of the user or group.
        Type:
          allOf:
            - $ref: "#/components/schemas/PrincipalType"
            - description: The type of principal.
        Access:
          allOf:
            - $ref: "#/components/schemas/ReadAccessType"
            - description: Whether to allow or deny document access to the principal.
        DataSourceId:
          allOf:
            - $ref: "#/components/schemas/DataSourceId"
            - description: The identifier of the data source the principal should access documents from.
      description: Provides user and group information for <a href="https://docs.aws.amazon.com/kendra/latest/dg/user-context-filter.html">user context filtering</a>.
    PrivateChannelFilter:
      type: array
      items:
        $ref: "#/components/schemas/String"
    PublicChannelFilter:
      type: array
      items:
        $ref: "#/components/schemas/String"
    QueryId:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9-]*"
      minLength: 1
      maxLength: 36
    QueryIdentifiersEnclosingOption:
      type: string
      enum:
        - DOUBLE_QUOTES
        - NONE
    QueryText:
      type: string
      minLength: 1
      maxLength: 1000
    SortingConfiguration:
      type: object
      required:
        - DocumentAttributeKey
        - SortOrder
      properties:
        DocumentAttributeKey:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeKey"
            - description: <p>The name of the document attribute used to sort the response. You can use any field that has the <code>Sortable</code> flag set to true.</p> <p>You can also sort by any of the following built-in attributes:</p> <ul> <li> <p>_category</p> </li> <li> <p>_created_at</p> </li> <li> <p>_last_updated_at</p> </li> <li> <p>_version</p> </li> <li> <p>_view_count</p> </li> </ul>
        SortOrder:
          allOf:
            - $ref: "#/components/schemas/SortOrder"
            - description: The order that the results should be returned in. In case of ties, the relevance assigned to the result by Amazon Kendra is used as the tie-breaker.
      description: <p>Specifies the document attribute to use to sort the response to a Amazon Kendra query. You can specify a single attribute for sorting. The attribute must have the <code>Sortable</code> flag set to <code>true</code>, otherwise Amazon Kendra returns an exception.</p> <p>You can sort attributes of the following types.</p> <ul> <li> <p>Date value</p> </li> <li> <p>Long value</p> </li> <li> <p>String value</p> </li> </ul> <p>You can't sort attributes of the following type.</p> <ul> <li> <p>String list value</p> </li> </ul>
    UserContext:
      type: object
      properties:
        Token:
          allOf:
            - $ref: "#/components/schemas/Token"
            - description: The user context token for filtering search results for a user. It must be a JWT or a JSON token.
        UserId:
          allOf:
            - $ref: "#/components/schemas/PrincipalName"
            - description: The identifier of the user you want to filter search results based on their access to documents.
        Groups:
          allOf:
            - $ref: "#/components/schemas/Groups"
            - description: The list of groups you want to filter search results based on the groups' access to documents.
        DataSourceGroups:
          allOf:
            - $ref: "#/components/schemas/DataSourceGroups"
            - description: The list of data source groups you want to filter search results based on groups' access to documents in that data source.
      description: <p>Provides information about the user context for an Amazon Kendra index.</p> <p>User context filtering is a kind of personalized search with the benefit of controlling access to documents. For example, not all teams that search the company portal for information should access top-secret company documents, nor are these documents relevant to all users. Only specific users or groups of teams given access to top-secret documents should see these documents in their search results.</p> <p>You provide one of the following:</p> <ul> <li> <p>User token</p> </li> <li> <p>User ID, the groups the user belongs to, and any data sources the groups can access.</p> </li> </ul> <p>If you provide both, an exception is thrown.</p>
    VisitorId:
      type: string
      pattern: "[a-zA-Z0-9][a-zA-Z0-9_-]*"
      minLength: 1
      maxLength: 256
    SpellCorrectionConfiguration:
      type: object
      required:
        - IncludeQuerySpellCheckSuggestions
      properties:
        IncludeQuerySpellCheckSuggestions:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to suggest spell corrections for queries."
      description: <p>Provides the configuration information for suggested query spell corrections.</p> <p>Suggested spell corrections are based on words that appear in your indexed documents and how closely a corrected word matches a misspelled word.</p> <p>This feature is designed with certain defaults or limits. For information on the current limits and how to request more support for some limits, see the <a href="https://docs.aws.amazon.com/kendra/latest/dg/query-spell-check.html">Spell Checker documentation</a>.</p>
    QueryResultItemList:
      type: array
      items:
        $ref: "#/components/schemas/QueryResultItem"
    WarningList:
      type: array
      items:
        $ref: "#/components/schemas/Warning"
      minItems: 1
      maxItems: 1
    SpellCorrectedQueryList:
      type: array
      items:
        $ref: "#/components/schemas/SpellCorrectedQuery"
    QueryResultFormat:
      type: string
      enum:
        - TABLE
        - TEXT
    ScoreAttributes:
      type: object
      properties:
        ScoreConfidence:
          allOf:
            - $ref: "#/components/schemas/ScoreConfidence"
            - description: A relative ranking for how well the response matches the query.
      description: Provides a relative ranking that indicates how confident Amazon Kendra is that the response matches the query.
    TableExcerpt:
      type: object
      properties:
        Rows:
          allOf:
            - $ref: "#/components/schemas/TableRowList"
            - description: A list of rows in the table excerpt.
        TotalNumberOfRows:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: A count of the number of rows in the original table within the document.
      description: An excerpt from a table within a document. The table excerpt displays up to five columns and three rows, depending on how many table cells are relevant to the query and how many columns are available in the original table. The top most relevant cell is displayed in the table excerpt, along with the next most relevant cells.
    QueryResultItem:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ResultId"
            - description: The identifier for the query result.
        Type:
          allOf:
            - $ref: "#/components/schemas/QueryResultType"
            - description: The type of document within the response. For example, a response could include a question-answer that's relevant to the query.
        Format:
          allOf:
            - $ref: "#/components/schemas/QueryResultFormat"
            - description: If the <code>Type</code> of document within the response is <code>ANSWER</code>, then it is either a <code>TABLE</code> answer or <code>TEXT</code> answer. If it's a table answer, a table excerpt is returned in <code>TableExcerpt</code>. If it's a text answer, a text excerpt is returned in <code>DocumentExcerpt</code>.
        AdditionalAttributes:
          allOf:
            - $ref: "#/components/schemas/AdditionalResultAttributeList"
            - description: One or more additional attributes associated with the query result.
        DocumentId:
          allOf:
            - $ref: "#/components/schemas/DocumentId"
            - description: The identifier for the document.
        DocumentTitle:
          allOf:
            - $ref: "#/components/schemas/TextWithHighlights"
            - description: The title of the document. Contains the text of the title and information for highlighting the relevant terms in the title.
        DocumentExcerpt:
          allOf:
            - $ref: "#/components/schemas/TextWithHighlights"
            - description: An extract of the text in the document. Contains information about highlighting the relevant terms in the excerpt.
        DocumentURI:
          allOf:
            - $ref: "#/components/schemas/Url"
            - description: The URI of the original location of the document.
        DocumentAttributes:
          allOf:
            - $ref: "#/components/schemas/DocumentAttributeList"
            - description: An array of document attributes assigned to a document in the search results. For example, the document author (<code>_author</code>) or the source URI (<code>_source_uri</code>) of the document.
        ScoreAttributes:
          allOf:
            - $ref: "#/components/schemas/ScoreAttributes"
            - description: <p>Indicates the confidence that Amazon Kendra has that a result matches the query that you provided. Each result is placed into a bin that indicates the confidence, <code>VERY_HIGH</code>, <code>HIGH</code>, <code>MEDIUM</code> and <code>LOW</code>. You can use the score to determine if a response meets the confidence needed for your application.</p> <p>The field is only set to <code>LOW</code> when the <code>Type</code> field is set to <code>DOCUMENT</code> and Amazon Kendra is not confident that the result matches the query.</p>
        FeedbackToken:
          allOf:
            - $ref: "#/components/schemas/FeedbackToken"
            - description: A token that identifies a particular result from a particular query. Use this token to provide click-through feedback for the result. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/submitting-feedback.html">Submitting feedback </a>.
        TableExcerpt:
          allOf:
            - $ref: "#/components/schemas/TableExcerpt"
            - description: An excerpt from a table within a document.
      description: <p>A single query result.</p> <p>A query result contains information about a document returned by the query. This includes the original location of the document, a list of attributes assigned to the document, and relevant text from the document that satisfies the query.</p>
    QuerySuggestionsBlockListSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListId"
            - description: The identifier of a block list.
        Name:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListName"
            - description: The name of the block list.
        Status:
          allOf:
            - $ref: "#/components/schemas/QuerySuggestionsBlockListStatus"
            - description: The status of the block list.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the block list was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the block list was last updated.
        ItemCount:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of items in the block list file.
      description: <p>Summary information on a query suggestions block list.</p> <p>This includes information on the block list ID, block list name, when the block list was created, when the block list was last updated, and the count of block words/phrases in the block list.</p> <p>For information on the current quota limits for block lists, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/quotas.html">Quotas for Amazon Kendra</a>.</p>
    ValueImportanceMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/Importance"
    RelevanceType:
      type: string
      enum:
        - RELEVANT
        - NOT_RELEVANT
    RelevanceFeedback:
      type: object
      required:
        - ResultId
        - RelevanceValue
      properties:
        ResultId:
          allOf:
            - $ref: "#/components/schemas/ResultId"
            - description: The identifier of the search result that the user provided relevance feedback for.
        RelevanceValue:
          allOf:
            - $ref: "#/components/schemas/RelevanceType"
            - description: Whether the document was relevant or not relevant to the search.
      description: Provides feedback on how relevant a document is to a search. Your application uses the <code>SubmitFeedback</code> API to provide relevance information.
    RelevanceFeedbackList:
      type: array
      items:
        $ref: "#/components/schemas/RelevanceFeedback"
    RepositoryName:
      type: string
      pattern: ^[A-Za-z0-9_.-]+$
      minLength: 1
      maxLength: 64
    SalesforceChatterFeedIncludeFilterTypes:
      type: array
      items:
        $ref: "#/components/schemas/SalesforceChatterFeedIncludeFilterType"
      minItems: 1
      maxItems: 2
    SalesforceChatterFeedConfiguration:
      type: object
      required:
        - DocumentDataFieldName
      properties:
        DocumentDataFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the column in the Salesforce FeedItem table that contains the content to index. Typically this is the <code>Body</code> column.
        DocumentTitleFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the column in the Salesforce FeedItem table that contains the title of the document. This is typically the <code>Title</code> column.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: Maps fields from a Salesforce chatter feed into Amazon Kendra index fields.
        IncludeFilterTypes:
          allOf:
            - $ref: "#/components/schemas/SalesforceChatterFeedIncludeFilterTypes"
            - description: Filters the documents in the feed based on status of the user. When you specify <code>ACTIVE_USERS</code> only documents from users who have an active account are indexed. When you specify <code>STANDARD_USER</code> only documents for Salesforce standard users are documented. You can specify both.
      description: The configuration information for syncing a Salesforce chatter feed. The contents of the object comes from the Salesforce FeedItem table.
    SalesforceChatterFeedIncludeFilterType:
      type: string
      enum:
        - ACTIVE_USER
        - STANDARD_USER
    SalesforceStandardObjectConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/SalesforceStandardObjectConfiguration"
      minItems: 1
      maxItems: 17
    SalesforceKnowledgeArticleConfiguration:
      type: object
      required:
        - IncludedStates
      properties:
        IncludedStates:
          allOf:
            - $ref: "#/components/schemas/SalesforceKnowledgeArticleStateList"
            - description: Specifies the document states that should be included when Amazon Kendra indexes knowledge articles. You must specify at least one state.
        StandardKnowledgeArticleTypeConfiguration:
          allOf:
            - $ref: "#/components/schemas/SalesforceStandardKnowledgeArticleTypeConfiguration"
            - description: Configuration information for standard Salesforce knowledge articles.
        CustomKnowledgeArticleTypeConfigurations:
          allOf:
            - $ref: "#/components/schemas/SalesforceCustomKnowledgeArticleTypeConfigurationList"
            - description: Configuration information for custom Salesforce knowledge articles.
      description: "Provides the configuration information for the knowledge article types that Amazon Kendra indexes. Amazon Kendra indexes standard knowledge articles and the standard fields of knowledge articles, or the custom fields of custom knowledge articles, but not both "
    SalesforceStandardObjectAttachmentConfiguration:
      type: object
      properties:
        DocumentTitleFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the field used for the document title.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: One or more objects that map fields in attachments to Amazon Kendra index fields.
      description: Provides the configuration information for processing attachments to Salesforce standard objects.
    SalesforceCustomKnowledgeArticleTypeName:
      type: string
      pattern: ^[a-zA-Z][a-zA-Z0-9_]*$
      minLength: 1
      maxLength: 100
    SalesforceCustomKnowledgeArticleTypeConfiguration:
      type: object
      required:
        - Name
        - DocumentDataFieldName
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/SalesforceCustomKnowledgeArticleTypeName"
            - description: The name of the configuration.
        DocumentDataFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the field in the custom knowledge article that contains the document data to index.
        DocumentTitleFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the field in the custom knowledge article that contains the document title.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: Maps attributes or field names of the custom knowledge article to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Salesforce fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Salesforce data source field names must exist in your Salesforce custom metadata.
      description: Provides the configuration information for indexing Salesforce custom articles.
    SalesforceCustomKnowledgeArticleTypeConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/SalesforceCustomKnowledgeArticleTypeConfiguration"
      minItems: 1
      maxItems: 10
    SalesforceKnowledgeArticleStateList:
      type: array
      items:
        $ref: "#/components/schemas/SalesforceKnowledgeArticleState"
      minItems: 1
      maxItems: 3
    SalesforceStandardKnowledgeArticleTypeConfiguration:
      type: object
      required:
        - DocumentDataFieldName
      properties:
        DocumentDataFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the field that contains the document data to index.
        DocumentTitleFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the field that contains the document title.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: Maps attributes or field names of the knowledge article to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Salesforce fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Salesforce data source field names must exist in your Salesforce custom metadata.
      description: Provides the configuration information for standard Salesforce knowledge articles.
    SalesforceKnowledgeArticleState:
      type: string
      enum:
        - DRAFT
        - PUBLISHED
        - ARCHIVED
    SalesforceStandardObjectName:
      type: string
      enum:
        - ACCOUNT
        - CAMPAIGN
        - CASE
        - CONTACT
        - CONTRACT
        - DOCUMENT
        - GROUP
        - IDEA
        - LEAD
        - OPPORTUNITY
        - PARTNER
        - PRICEBOOK
        - PRODUCT
        - PROFILE
        - SOLUTION
        - TASK
        - USER
    SalesforceStandardObjectConfiguration:
      type: object
      required:
        - Name
        - DocumentDataFieldName
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/SalesforceStandardObjectName"
            - description: The name of the standard object.
        DocumentDataFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the field in the standard object table that contains the document contents.
        DocumentTitleFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the field in the standard object table that contains the document title.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: Maps attributes or field names of the standard object to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to Salesforce fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The Salesforce data source field names must exist in your Salesforce custom metadata.
      description: Provides the configuration information for indexing a single standard object.
    ScoreConfidence:
      type: string
      enum:
        - VERY_HIGH
        - HIGH
        - MEDIUM
        - LOW
        - NOT_AVAILABLE
      description: Enumeration for query score confidence.
    VpcSecurityGroupId:
      type: string
      pattern: "[-0-9a-zA-Z]+"
      minLength: 1
      maxLength: 200
    SeedUrl:
      type: string
      pattern: ^(https?):\/\/([^\s]*)
      minLength: 1
      maxLength: 2048
    SeedUrlList:
      type: array
      items:
        $ref: "#/components/schemas/SeedUrl"
      minItems: 0
      maxItems: 100
    WebCrawlerMode:
      type: string
      enum:
        - HOST_ONLY
        - SUBDOMAINS
        - EVERYTHING
    SeedUrlConfiguration:
      type: object
      required:
        - SeedUrls
      properties:
        SeedUrls:
          allOf:
            - $ref: "#/components/schemas/SeedUrlList"
            - description: <p>The list of seed or starting point URLs of the websites you want to crawl.</p> <p>The list can include a maximum of 100 seed URLs.</p>
        WebCrawlerMode:
          allOf:
            - $ref: "#/components/schemas/WebCrawlerMode"
            - description: <p>You can choose one of the following modes:</p> <ul> <li> <p> <code>HOST_ONLY</code> – crawl only the website host names. For example, if the seed URL is "abc.example.com", then only URLs with host name "abc.example.com" are crawled.</p> </li> <li> <p> <code>SUBDOMAINS</code> – crawl the website host names with subdomains. For example, if the seed URL is "abc.example.com", then "a.abc.example.com" and "b.abc.example.com" are also crawled.</p> </li> <li> <p> <code>EVERYTHING</code> – crawl the website host names with subdomains and other domains that the web pages link to.</p> </li> </ul> <p>The default mode is set to <code>HOST_ONLY</code>.</p>
      description: <p>Provides the configuration information for the seed or starting point URLs to crawl.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own web pages, or web pages that you have authorization to index.</i> </p>
    ServiceNowAuthenticationType:
      type: string
      enum:
        - HTTP_BASIC
        - OAUTH2
    ServiceNowBuildVersionType:
      type: string
      enum:
        - LONDON
        - OTHERS
    ServiceNowHostUrl:
      type: string
      pattern: ^(?!(^(https?|ftp|file):\/\/))[a-z0-9-]+(\.service-now\.com)$
      minLength: 1
      maxLength: 2048
    ServiceNowKnowledgeArticleConfiguration:
      type: object
      required:
        - DocumentDataFieldName
      properties:
        CrawlAttachments:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index attachments to knowledge articles."
        IncludeAttachmentFilePatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of regular expression patterns to include certain attachments of knowledge articles in your ServiceNow. Item that match the patterns are included in the index. Items that don't match the patterns are excluded from the index. If an item matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the item isn't included in the index.</p> <p>The regex is applied to the field specified in the <code>PatternTargetField</code>.</p>
        ExcludeAttachmentFilePatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of regular expression patterns to exclude certain attachments of knowledge articles in your ServiceNow. Item that match the patterns are excluded from the index. Items that don't match the patterns are included in the index. If an item matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the item isn't included in the index.</p> <p>The regex is applied to the field specified in the <code>PatternTargetField</code>.</p>
        DocumentDataFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the ServiceNow field that is mapped to the index document contents field in the Amazon Kendra index.
        DocumentTitleFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the ServiceNow field that is mapped to the index document title field.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: Maps attributes or field names of knoweldge articles to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to ServiceNow fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The ServiceNow data source field names must exist in your ServiceNow custom metadata.
        FilterQuery:
          allOf:
            - $ref: "#/components/schemas/ServiceNowKnowledgeArticleFilterQuery"
            - description: <p>A query that selects the knowledge articles to index. The query can return articles from multiple knowledge bases, and the knowledge bases can be public or private.</p> <p>The query string must be one generated by the ServiceNow console. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/servicenow-query.html">Specifying documents to index with a query</a>. </p>
      description: Provides the configuration information for crawling knowledge articles in the ServiceNow site.
    ServiceNowServiceCatalogConfiguration:
      type: object
      required:
        - DocumentDataFieldName
      properties:
        CrawlAttachments:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> to index attachments to service catalog items."
        IncludeAttachmentFilePatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of regular expression patterns to include certain attachments of catalogs in your ServiceNow. Item that match the patterns are included in the index. Items that don't match the patterns are excluded from the index. If an item matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the item isn't included in the index.</p> <p>The regex is applied to the file name of the attachment.</p>
        ExcludeAttachmentFilePatterns:
          allOf:
            - $ref: "#/components/schemas/DataSourceInclusionsExclusionsStrings"
            - description: <p>A list of regular expression patterns to exclude certain attachments of catalogs in your ServiceNow. Item that match the patterns are excluded from the index. Items that don't match the patterns are included in the index. If an item matches both an inclusion and exclusion pattern, the exclusion pattern takes precedence and the item isn't included in the index.</p> <p>The regex is applied to the file name of the attachment.</p>
        DocumentDataFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the ServiceNow field that is mapped to the index document contents field in the Amazon Kendra index.
        DocumentTitleFieldName:
          allOf:
            - $ref: "#/components/schemas/DataSourceFieldName"
            - description: The name of the ServiceNow field that is mapped to the index document title field.
        FieldMappings:
          allOf:
            - $ref: "#/components/schemas/DataSourceToIndexFieldMappingList"
            - description: Maps attributes or field names of catalogs to Amazon Kendra index field names. To create custom fields, use the <code>UpdateIndex</code> API before you map to ServiceNow fields. For more information, see <a href="https://docs.aws.amazon.com/kendra/latest/dg/field-mapping.html">Mapping data source fields</a>. The ServiceNow data source field names must exist in your ServiceNow custom metadata.
      description: Provides the configuration information for crawling service catalog items in the ServiceNow site
    ServiceNowKnowledgeArticleFilterQuery:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 2048
    SharePointVersion:
      type: string
      enum:
        - SHAREPOINT_2013
        - SHAREPOINT_2016
        - SHAREPOINT_ONLINE
        - SHAREPOINT_2019
    SharePointUrlList:
      type: array
      items:
        $ref: "#/components/schemas/Url"
      minItems: 1
      maxItems: 100
    SharePointOnlineAuthenticationType:
      type: string
      enum:
        - HTTP_BASIC
        - OAUTH2
    SinceCrawlDate:
      type: string
      pattern: (20\d{2})-(0?[1-9]|1[0-2])-(0?[1-9]|1\d|2\d|3[01])
      minLength: 10
      maxLength: 10
    SiteMap:
      type: string
      pattern: ^(https?):\/\/([^\s]*)
      minLength: 1
      maxLength: 2048
    SiteMapsList:
      type: array
      items:
        $ref: "#/components/schemas/SiteMap"
      minItems: 0
      maxItems: 3
    SiteMapsConfiguration:
      type: object
      required:
        - SiteMaps
      properties:
        SiteMaps:
          allOf:
            - $ref: "#/components/schemas/SiteMapsList"
            - description: <p>The list of sitemap URLs of the websites you want to crawl.</p> <p>The list can include a maximum of three sitemap URLs.</p>
      description: <p>Provides the configuration information for the sitemap URLs to crawl.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own web pages, or web pages that you have authorization to index.</i> </p>
    TeamId:
      type: string
      pattern: "[A-Z0-9]*"
      minLength: 1
      maxLength: 64
    SlackEntityList:
      type: array
      items:
        $ref: "#/components/schemas/SlackEntity"
      minItems: 1
      maxItems: 4
    SlackEntity:
      type: string
      enum:
        - PUBLIC_CHANNEL
        - PRIVATE_CHANNEL
        - GROUP_MESSAGE
        - DIRECT_MESSAGE
    SnapshotsDataRecord:
      type: array
      items:
        $ref: "#/components/schemas/String"
    SortOrder:
      type: string
      enum:
        - DESC
        - ASC
    SuggestedQueryText:
      type: string
      minLength: 1
      maxLength: 1000
    SpellCorrectedQuery:
      type: object
      properties:
        SuggestedQueryText:
          allOf:
            - $ref: "#/components/schemas/SuggestedQueryText"
            - description: The query with the suggested spell corrections.
        Corrections:
          allOf:
            - $ref: "#/components/schemas/CorrectionList"
            - description: The corrected misspelled word or words in a query.
      description: "A query with suggested spell corrections. "
    SubnetId:
      type: string
      pattern: "[\\-0-9a-zA-Z]+"
      minLength: 1
      maxLength: 200
    SuggestionValue:
      type: object
      properties:
        Text:
          allOf:
            - $ref: "#/components/schemas/SuggestionTextWithHighlights"
            - description: The <code>SuggestionTextWithHighlights</code> structure that contains the query suggestion text and highlights.
      description: The <code>SuggestionTextWithHighlights</code> structure information.
    Suggestion:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ResultId"
            - description: The UUID (universally unique identifier) of a single query suggestion.
        Value:
          allOf:
            - $ref: "#/components/schemas/SuggestionValue"
            - description: <p>The value for the UUID (universally unique identifier) of a single query suggestion.</p> <p>The value is the text string of a suggestion.</p>
      description: A single query suggestion.
    SuggestionHighlight:
      type: object
      properties:
        BeginOffset:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The zero-based location in the response string where the highlight starts.
        EndOffset:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The zero-based location in the response string where the highlight ends.
      description: The text highlights for a single query suggestion.
    SuggestionHighlightList:
      type: array
      items:
        $ref: "#/components/schemas/SuggestionHighlight"
    SuggestionTextWithHighlights:
      type: object
      properties:
        Text:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The query suggestion text to display to the user.
        Highlights:
          allOf:
            - $ref: "#/components/schemas/SuggestionHighlightList"
            - description: The beginning and end of the query suggestion text that should be highlighted.
      description: Provides text and information about where to highlight the query suggestion text.
    TableCell:
      type: object
      properties:
        Value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The actual value or content within a table cell. A table cell could contain a date value of a year, or a string value of text, for example.
        TopAnswer:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> if the response of the table cell is the top answer. This is the cell value or content with the highest confidence score or is the most relevant to the query."
        Highlighted:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> means that the table cell has a high enough confidence and is relevant to the query, so the value or content should be highlighted."
        Header:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: " <code>TRUE</code> means that the table cell should be treated as a header."
      description: Provides information about a table cell in a table excerpt.
    TableCellList:
      type: array
      items:
        $ref: "#/components/schemas/TableCell"
    TableRowList:
      type: array
      items:
        $ref: "#/components/schemas/TableRow"
    TableRow:
      type: object
      properties:
        Cells:
          allOf:
            - $ref: "#/components/schemas/TableCellList"
            - description: A list of table cells in a row.
      description: Information about a row in a table excerpt.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/TagKey"
            - description: The key for the tag. Keys are not case sensitive and must be unique for the index, FAQ, or data source.
        Value:
          allOf:
            - $ref: "#/components/schemas/TagValue"
            - description: The value associated with the tag. The value may be an empty string but it can't be null.
      description: "A list of key/value pairs that identify an index, FAQ, or data source. Tag keys and values can consist of Unicode letters, digits, white space, and any of the following symbols: _ . : / = + - @."
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 0
      maxItems: 200
    Template:
      type: object
      properties: {}
      description: <p>The template schema used for the data source, where templates schemas are supported.</p> <p>See <a href="https://docs.aws.amazon.com/kendra/latest/dg/ds-schemas.html">Data source template schemas</a>.</p>
    ThesaurusSummary:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ThesaurusId"
            - description: The identifier of the thesaurus.
        Name:
          allOf:
            - $ref: "#/components/schemas/ThesaurusName"
            - description: The name of the thesaurus.
        Status:
          allOf:
            - $ref: "#/components/schemas/ThesaurusStatus"
            - description: The status of the thesaurus.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the thesaurus was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The Unix timestamp when the thesaurus was last updated.
      description: An array of summary information for a thesaurus or multiple thesauri.
    Token:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 100000
    Urls:
      type: object
      properties:
        SeedUrlConfiguration:
          allOf:
            - $ref: "#/components/schemas/SeedUrlConfiguration"
            - description: <p>Configuration of the seed or starting point URLs of the websites you want to crawl.</p> <p>You can choose to crawl only the website host names, or the website host names with subdomains, or the website host names with subdomains and other domains that the web pages link to.</p> <p>You can list up to 100 seed URLs.</p>
        SiteMapsConfiguration:
          allOf:
            - $ref: "#/components/schemas/SiteMapsConfiguration"
            - description: <p>Configuration of the sitemap URLs of the websites you want to crawl.</p> <p>Only URLs belonging to the same website host names are crawled. You can list up to three sitemap URLs.</p>
      description: <p>Provides the configuration information of the URLs to crawl.</p> <p>You can only crawl websites that use the secure communication protocol, Hypertext Transfer Protocol Secure (HTTPS). If you receive an error when crawling a website, it could be that the website is blocked from crawling.</p> <p> <i>When selecting websites to index, you must adhere to the <a href="https://aws.amazon.com/aup/">Amazon Acceptable Use Policy</a> and all other Amazon terms. Remember that you must only use Amazon Kendra Web Crawler to index your own web pages, or web pages that you have authorization to index.</i> </p>
    UserGroupResolutionMode:
      type: string
      enum:
        - AWS_SSO
        - NONE
    UserTokenConfiguration:
      type: object
      properties:
        JwtTokenTypeConfiguration:
          allOf:
            - $ref: "#/components/schemas/JwtTokenTypeConfiguration"
            - description: Information about the JWT token type configuration.
        JsonTokenTypeConfiguration:
          allOf:
            - $ref: "#/components/schemas/JsonTokenTypeConfiguration"
            - description: Information about the JSON token type configuration.
      description: Provides the configuration information for a token.
    ValueImportanceMapKey:
      type: string
      minLength: 1
      maxLength: 50
    WarningMessage:
      type: string
      pattern: ^\P{C}*$
      minLength: 1
      maxLength: 2048
    WarningCode:
      type: string
      enum:
        - QUERY_LANGUAGE_INVALID_SYNTAX
    Warning:
      type: object
      properties:
        Message:
          allOf:
            - $ref: "#/components/schemas/WarningMessage"
            - description: The message that explains the problem with the query.
        Code:
          allOf:
            - $ref: "#/components/schemas/WarningCode"
            - description: The code used to show the type of warning for the query.
      description: The warning code and message that explains a problem with a query.
security:
  - hmac: []
