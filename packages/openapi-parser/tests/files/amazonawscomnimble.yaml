openapi: 3.0.0
info:
  version: 2020-08-01
  x-release: v4
  title: AmazonNimbleStudio
  description: <p>Welcome to the Amazon Nimble Studio API reference. This API reference provides methods, schema, resources, parameters, and more to help you get the most out of Nimble Studio.</p> <p>Nimble Studio is a virtual studio that empowers visual effects, animation, and interactive content teams to create content securely within a scalable, private cloud service.</p>
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: nimble
  x-aws-signingName: nimble
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/nimble-2020-08-01.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/nimble/
servers:
  - url: http://nimble.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AmazonNimbleStudio multi-region endpoint
  - url: https://nimble.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AmazonNimbleStudio multi-region endpoint
  - url: http://nimble.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AmazonNimbleStudio endpoint for China (Beijing) and China (Ningxia)
  - url: https://nimble.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AmazonNimbleStudio endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  "/2020-08-01/studios/{studioId}/eula-acceptances":
    post:
      operationId: AcceptEulas
      description: Accept EULAs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptEulasResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: The studio ID.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eulaIds:
                  description: The EULA ID.
                  type: array
                  items:
                    $ref: "#/components/schemas/String"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListEulaAcceptances
      description: List EULA acceptances.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEulaAcceptancesResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: eulaIds
          in: query
          required: false
          description: The list of EULA IDs that have been previously accepted.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/String"
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
  "/2020-08-01/studios/{studioId}/launch-profiles":
    post:
      operationId: CreateLaunchProfile
      description: Create a launch profile.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLaunchProfileResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ec2SubnetIds
                - launchProfileProtocolVersions
                - name
                - streamConfiguration
                - studioComponentIds
              properties:
                description:
                  description: A human-readable description of the launch profile.
                  type: string
                  minLength: 0
                  maxLength: 256
                  format: password
                ec2SubnetIds:
                  description: "Specifies the IDs of the EC2 subnets where streaming sessions will be accessible from. These subnets must support the specified instance types. "
                  type: array
                  items:
                    $ref: "#/components/schemas/EC2SubnetId"
                  minItems: 0
                  maxItems: 6
                launchProfileProtocolVersions:
                  description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
                  type: array
                  items:
                    $ref: "#/components/schemas/LaunchProfileProtocolVersion"
                name:
                  description: The name for the launch profile.
                  type: string
                  minLength: 1
                  maxLength: 64
                  format: password
                streamConfiguration:
                  description: Configuration for streaming workstations created using this launch profile.
                  type: object
                  properties:
                    automaticTerminationMode:
                      allOf:
                        - $ref: "#/components/schemas/AutomaticTerminationMode"
                        - description: <p>Indicates if a streaming session created from this launch profile should be terminated automatically or retained without termination after being in a <code>STOPPED</code> state.</p> <ul> <li> <p>When <code>ACTIVATED</code>, the streaming session is scheduled for termination after being in the <code>STOPPED</code> state for the time specified in <code>maxStoppedSessionLengthInMinutes</code>.</p> </li> <li> <p>When <code>DEACTIVATED</code>, the streaming session can remain in the <code>STOPPED</code> state indefinitely.</p> </li> </ul> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>. When allowed, the default value for this parameter is <code>DEACTIVATED</code>.</p>
                    clipboardMode:
                      allOf:
                        - $ref: "#/components/schemas/StreamingClipboardMode"
                        - description: Allows or deactivates the use of the system clipboard to copy and paste between the streaming session and streaming client.
                    ec2InstanceTypes:
                      allOf:
                        - $ref: "#/components/schemas/StreamingInstanceTypeList"
                        - description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.
                    maxSessionLengthInMinutes:
                      allOf:
                        - $ref: "#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes"
                        - description: The length of time, in minutes, that a streaming session can be active before it is stopped or terminated. After this point, Nimble Studio automatically terminates or stops the session. The default length of time is 690 minutes, and the maximum length of time is 30 days.
                    maxStoppedSessionLengthInMinutes:
                      allOf:
                        - $ref: "#/components/schemas/StreamConfigurationMaxStoppedSessionLengthInMinutes"
                        - description: <p>Integer that determines if you can start and stop your sessions and how long a session can stay in the <code>STOPPED</code> state. The default value is 0. The maximum value is 5760.</p> <p>This field is allowed only when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code> and <code>automaticTerminationMode</code> is <code>ACTIVATED</code>.</p> <p>If the value is set to 0, your sessions canâ€™t be <code>STOPPED</code>. If you then call <code>StopStreamingSession</code>, the session fails. If the time that a session stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code> value, the session will automatically be terminated (instead of <code>STOPPED</code>).</p> <p>If the value is set to a positive number, the session can be stopped. You can call <code>StopStreamingSession</code> to stop sessions in the <code>READY</code> state. If the time that a session stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code> value, the session will automatically be stopped (instead of terminated).</p>
                    sessionBackup:
                      allOf:
                        - $ref: "#/components/schemas/StreamConfigurationSessionBackup"
                        - description: Configures how streaming sessions are backed up when launched from this launch profile.
                    sessionPersistenceMode:
                      allOf:
                        - $ref: "#/components/schemas/SessionPersistenceMode"
                        - description: Determine if a streaming session created from this launch profile can configure persistent storage. This means that <code>volumeConfiguration</code> and <code>automaticTerminationMode</code> are configured.
                    sessionStorage:
                      allOf:
                        - $ref: "#/components/schemas/StreamConfigurationSessionStorage"
                        - description: The upload storage for a streaming workstation that is created using this launch profile.
                    streamingImageIds:
                      allOf:
                        - $ref: "#/components/schemas/StreamingImageIdList"
                        - description: The streaming images that users can select from when launching a streaming session with this launch profile.
                    volumeConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/VolumeConfiguration"
                        - description: <p>Custom volume configuration for the root volumes that are attached to streaming sessions.</p> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.</p>
                studioComponentIds:
                  description: Unique identifiers for a collection of studio components that can be used with this launch profile.
                  type: array
                  items:
                    $ref: "#/components/schemas/String"
                  minItems: 1
                  maxItems: 100
                tags:
                  description: A collection of labels, in the form of key-value pairs, that apply to this resource.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/String"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListLaunchProfiles
      description: List all the launch profiles a studio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLaunchProfilesResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The max number of results to return in the response.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: principalId
          in: query
          required: false
          description: "The principal ID. This currently supports a IAM Identity Center UserId. "
          schema:
            type: string
        - name: states
          in: query
          required: false
          description: Filter this request to launch profiles in any of the given states.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/LaunchProfileState"
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
  "/2020-08-01/studios/{studioId}/streaming-images":
    post:
      operationId: CreateStreamingImage
      description: Creates a streaming image resource in a studio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateStreamingImageResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ec2ImageId
                - name
              properties:
                description:
                  description: The description.
                  type: string
                  minLength: 0
                  maxLength: 256
                  format: password
                ec2ImageId:
                  description: The ID of an EC2 machine image with which to create this streaming image.
                  type: string
                  pattern: ^ami-[0-9A-z]+$
                name:
                  description: A friendly name for a streaming image resource.
                  type: string
                  minLength: 0
                  maxLength: 64
                  format: password
                tags:
                  description: A collection of labels, in the form of key-value pairs, that apply to this resource.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/String"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListStreamingImages
      description: <p>List the streaming image resources available to this studio.</p> <p>This list will contain both images provided by Amazon Web Services, as well as streaming images that you have created in your studio.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStreamingImagesResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: owner
          in: query
          required: false
          description: Filter this request to streaming images with the given owner
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
  "/2020-08-01/studios/{studioId}/streaming-sessions":
    post:
      operationId: CreateStreamingSession
      description: <p>Creates a streaming session in a studio.</p> <p>After invoking this operation, you must poll GetStreamingSession until the streaming session is in the <code>READY</code> state.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateStreamingSessionResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - launchProfileId
              properties:
                ec2InstanceType:
                  description: The EC2 Instance type used for the streaming session.
                  type: string
                  enum:
                    - g4dn.xlarge
                    - g4dn.2xlarge
                    - g4dn.4xlarge
                    - g4dn.8xlarge
                    - g4dn.12xlarge
                    - g4dn.16xlarge
                    - g3.4xlarge
                    - g3s.xlarge
                    - g5.xlarge
                    - g5.2xlarge
                    - g5.4xlarge
                    - g5.8xlarge
                    - g5.16xlarge
                launchProfileId:
                  description: The ID of the launch profile used to control access from the streaming session.
                  type: string
                ownedBy:
                  description: The user ID of the user that owns the streaming session. The user that owns the session will be logging into the session and interacting with the virtual workstation.
                  type: string
                streamingImageId:
                  description: The ID of the streaming image.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]*$
                  minLength: 0
                  maxLength: 22
                tags:
                  description: A collection of labels, in the form of key-value pairs, that apply to this resource.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/String"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListStreamingSessions
      description: Lists the streaming sessions in a studio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStreamingSessionsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: createdBy
          in: query
          required: false
          description: Filters the request to streaming sessions created by the given user.
          schema:
            type: string
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: ownedBy
          in: query
          required: false
          description: Filters the request to streaming session owned by the given user
          schema:
            type: string
        - name: sessionIds
          in: query
          required: false
          description: Filters the request to only the provided session IDs.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
  "/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams":
    post:
      operationId: CreateStreamingSessionStream
      description: <p>Creates a streaming session stream for a streaming session.</p> <p>After invoking this API, invoke GetStreamingSessionStream with the returned streamId to poll the resource until it is in the <code>READY</code> state.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateStreamingSessionStreamResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: sessionId
          in: path
          required: true
          description: The streaming session ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                expirationInSeconds:
                  description: The expiration time in seconds.
                  type: integer
                  minimum: 60
                  maximum: 3600
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2020-08-01/studios:
    post:
      operationId: CreateStudio
      description: "<p>Create a new studio.</p> <p>When creating a studio, two IAM roles must be provided: the admin role and the user role. These roles are assumed by your users when they log in to the Nimble Studio portal.</p> <p>The user role must have the <code>AmazonNimbleStudio-StudioUser</code> managed policy attached for the portal to function properly.</p> <p>The admin role must have the <code>AmazonNimbleStudio-StudioAdmin</code> managed policy attached for the portal to function properly.</p> <p>You may optionally specify a KMS key in the <code>StudioEncryptionConfiguration</code>.</p> <p>In Nimble Studio, resource names, descriptions, initialization scripts, and other data you provide are always encrypted at rest using an KMS key. By default, this key is owned by Amazon Web Services and managed on your behalf. You may provide your own KMS key when calling <code>CreateStudio</code> to encrypt this data using a key you own and manage.</p> <p>When providing an KMS key during studio creation, Nimble Studio creates KMS grants in your account to provide your studio user and admin roles access to these KMS keys.</p> <p>If you delete this grant, the studio will no longer be accessible to your portal users.</p> <p>If you delete the studio KMS key, your studio will no longer be accessible.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateStudioResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - adminRoleArn
                - displayName
                - studioName
                - userRoleArn
              properties:
                adminRoleArn:
                  description: The IAM role that studio admins will assume when logging in to the Nimble Studio portal.
                  type: string
                  minLength: 0
                  maxLength: 2048
                displayName:
                  description: A friendly name for the studio.
                  type: string
                  minLength: 0
                  maxLength: 64
                  format: password
                studioEncryptionConfiguration:
                  description: Configuration of the encryption method that is used for the studio.
                  type: object
                  properties:
                    keyArn:
                      allOf:
                        - $ref: "#/components/schemas/StudioEncryptionConfigurationKeyArn"
                        - description: The ARN for a KMS key that is used to encrypt studio data.
                    keyType:
                      allOf:
                        - $ref: "#/components/schemas/StudioEncryptionConfigurationKeyType"
                        - description: The type of KMS key that is used to encrypt studio data.
                studioName:
                  description: The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.
                  type: string
                  pattern: ^[a-z0-9]*$
                  minLength: 3
                  maxLength: 64
                tags:
                  description: A collection of labels, in the form of key-value pairs, that apply to this resource.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/String"
                userRoleArn:
                  description: The IAM role that studio users will assume when logging in to the Nimble Studio portal.
                  type: string
                  minLength: 0
                  maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListStudios
      description: List studios in your Amazon Web Services accounts in the requested Amazon Web Services Region.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStudiosResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
  "/2020-08-01/studios/{studioId}/studio-components":
    post:
      operationId: CreateStudioComponent
      description: Creates a studio component resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateStudioComponentResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - type
              properties:
                configuration:
                  description: The configuration of the studio component, based on component type.
                  type: object
                  properties:
                    activeDirectoryConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/ActiveDirectoryConfiguration"
                        - description: The configuration for a Directory Service for Microsoft Active Directory studio resource.
                    computeFarmConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/ComputeFarmConfiguration"
                        - description: The configuration for a render farm that is associated with a studio resource.
                    licenseServiceConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/LicenseServiceConfiguration"
                        - description: The configuration for a license service that is associated with a studio resource.
                    sharedFileSystemConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/SharedFileSystemConfiguration"
                        - description: The configuration for a shared file storage system that is associated with a studio resource.
                description:
                  description: The description.
                  type: string
                  minLength: 0
                  maxLength: 256
                  format: password
                ec2SecurityGroupIds:
                  description: The EC2 security groups that control access to the studio component.
                  type: array
                  items:
                    $ref: "#/components/schemas/SecurityGroupId"
                  minItems: 0
                  maxItems: 30
                initializationScripts:
                  description: Initialization scripts for studio components.
                  type: array
                  items:
                    $ref: "#/components/schemas/StudioComponentInitializationScript"
                name:
                  description: The name for the studio component.
                  type: string
                  minLength: 0
                  maxLength: 64
                  format: password
                runtimeRoleArn:
                  description: "An IAM role attached to a Studio Component that gives the studio component access to Amazon Web Services resources at anytime while the instance is running. "
                  type: string
                  minLength: 0
                  maxLength: 2048
                scriptParameters:
                  description: Parameters for the studio component scripts.
                  type: array
                  items:
                    $ref: "#/components/schemas/ScriptParameterKeyValue"
                  minItems: 0
                  maxItems: 30
                secureInitializationRoleArn:
                  description: An IAM role attached to Studio Component when the system initialization script runs which give the studio component access to Amazon Web Services resources when the system initialization script runs.
                  type: string
                  minLength: 0
                  maxLength: 2048
                subtype:
                  description: The specific subtype of a studio component.
                  type: string
                  enum:
                    - AWS_MANAGED_MICROSOFT_AD
                    - AMAZON_FSX_FOR_WINDOWS
                    - AMAZON_FSX_FOR_LUSTRE
                    - CUSTOM
                tags:
                  description: A collection of labels, in the form of key-value pairs, that apply to this resource.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/String"
                type:
                  description: The type of the studio component.
                  type: string
                  enum:
                    - ACTIVE_DIRECTORY
                    - SHARED_FILE_SYSTEM
                    - COMPUTE_FARM
                    - LICENSE_SERVICE
                    - CUSTOM
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListStudioComponents
      description: Lists the <code>StudioComponents</code> in a studio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStudioComponentsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The max number of results to return in the response.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: states
          in: query
          required: false
          description: "Filters the request to studio components that are in one of the given states. "
          schema:
            type: array
            items:
              $ref: "#/components/schemas/StudioComponentState"
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
        - name: types
          in: query
          required: false
          description: Filters the request to studio components that are of one of the given types.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/StudioComponentType"
  "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}":
    delete:
      operationId: DeleteLaunchProfile
      description: Permanently delete a launch profile.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteLaunchProfileResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: launchProfileId
          in: path
          required: true
          description: The ID of the launch profile used to control access from the streaming session.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetLaunchProfile
      description: Get a launch profile.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLaunchProfileResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: launchProfileId
          in: path
          required: true
          description: The ID of the launch profile used to control access from the streaming session.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    patch:
      operationId: UpdateLaunchProfile
      description: Update a launch profile.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLaunchProfileResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: launchProfileId
          in: path
          required: true
          description: The ID of the launch profile used to control access from the streaming session.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: A human-readable description of the launch profile.
                  type: string
                  minLength: 0
                  maxLength: 256
                  format: password
                launchProfileProtocolVersions:
                  description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
                  type: array
                  items:
                    $ref: "#/components/schemas/LaunchProfileProtocolVersion"
                name:
                  description: The name for the launch profile.
                  type: string
                  minLength: 1
                  maxLength: 64
                  format: password
                streamConfiguration:
                  description: Configuration for streaming workstations created using this launch profile.
                  type: object
                  properties:
                    automaticTerminationMode:
                      allOf:
                        - $ref: "#/components/schemas/AutomaticTerminationMode"
                        - description: <p>Indicates if a streaming session created from this launch profile should be terminated automatically or retained without termination after being in a <code>STOPPED</code> state.</p> <ul> <li> <p>When <code>ACTIVATED</code>, the streaming session is scheduled for termination after being in the <code>STOPPED</code> state for the time specified in <code>maxStoppedSessionLengthInMinutes</code>.</p> </li> <li> <p>When <code>DEACTIVATED</code>, the streaming session can remain in the <code>STOPPED</code> state indefinitely.</p> </li> </ul> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>. When allowed, the default value for this parameter is <code>DEACTIVATED</code>.</p>
                    clipboardMode:
                      allOf:
                        - $ref: "#/components/schemas/StreamingClipboardMode"
                        - description: Allows or deactivates the use of the system clipboard to copy and paste between the streaming session and streaming client.
                    ec2InstanceTypes:
                      allOf:
                        - $ref: "#/components/schemas/StreamingInstanceTypeList"
                        - description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.
                    maxSessionLengthInMinutes:
                      allOf:
                        - $ref: "#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes"
                        - description: The length of time, in minutes, that a streaming session can be active before it is stopped or terminated. After this point, Nimble Studio automatically terminates or stops the session. The default length of time is 690 minutes, and the maximum length of time is 30 days.
                    maxStoppedSessionLengthInMinutes:
                      allOf:
                        - $ref: "#/components/schemas/StreamConfigurationMaxStoppedSessionLengthInMinutes"
                        - description: <p>Integer that determines if you can start and stop your sessions and how long a session can stay in the <code>STOPPED</code> state. The default value is 0. The maximum value is 5760.</p> <p>This field is allowed only when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code> and <code>automaticTerminationMode</code> is <code>ACTIVATED</code>.</p> <p>If the value is set to 0, your sessions canâ€™t be <code>STOPPED</code>. If you then call <code>StopStreamingSession</code>, the session fails. If the time that a session stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code> value, the session will automatically be terminated (instead of <code>STOPPED</code>).</p> <p>If the value is set to a positive number, the session can be stopped. You can call <code>StopStreamingSession</code> to stop sessions in the <code>READY</code> state. If the time that a session stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code> value, the session will automatically be stopped (instead of terminated).</p>
                    sessionBackup:
                      allOf:
                        - $ref: "#/components/schemas/StreamConfigurationSessionBackup"
                        - description: Configures how streaming sessions are backed up when launched from this launch profile.
                    sessionPersistenceMode:
                      allOf:
                        - $ref: "#/components/schemas/SessionPersistenceMode"
                        - description: Determine if a streaming session created from this launch profile can configure persistent storage. This means that <code>volumeConfiguration</code> and <code>automaticTerminationMode</code> are configured.
                    sessionStorage:
                      allOf:
                        - $ref: "#/components/schemas/StreamConfigurationSessionStorage"
                        - description: The upload storage for a streaming workstation that is created using this launch profile.
                    streamingImageIds:
                      allOf:
                        - $ref: "#/components/schemas/StreamingImageIdList"
                        - description: The streaming images that users can select from when launching a streaming session with this launch profile.
                    volumeConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/VolumeConfiguration"
                        - description: <p>Custom volume configuration for the root volumes that are attached to streaming sessions.</p> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.</p>
                studioComponentIds:
                  description: Unique identifiers for a collection of studio components that can be used with this launch profile.
                  type: array
                  items:
                    $ref: "#/components/schemas/String"
                  minItems: 1
                  maxItems: 100
  "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership/{principalId}":
    delete:
      operationId: DeleteLaunchProfileMember
      description: Delete a user from launch profile membership.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteLaunchProfileMemberResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: launchProfileId
          in: path
          required: true
          description: The ID of the launch profile used to control access from the streaming session.
          schema:
            type: string
        - name: principalId
          in: path
          required: true
          description: "The principal ID. This currently supports a IAM Identity Center UserId. "
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetLaunchProfileMember
      description: Get a user persona in launch profile membership.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLaunchProfileMemberResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: launchProfileId
          in: path
          required: true
          description: The ID of the launch profile used to control access from the streaming session.
          schema:
            type: string
        - name: principalId
          in: path
          required: true
          description: "The principal ID. This currently supports a IAM Identity Center UserId. "
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    patch:
      operationId: UpdateLaunchProfileMember
      description: Update a user persona in launch profile membership.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLaunchProfileMemberResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: launchProfileId
          in: path
          required: true
          description: The ID of the launch profile used to control access from the streaming session.
          schema:
            type: string
        - name: principalId
          in: path
          required: true
          description: "The principal ID. This currently supports a IAM Identity Center UserId. "
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - persona
              properties:
                persona:
                  description: The persona.
                  type: string
                  enum:
                    - USER
  "/2020-08-01/studios/{studioId}/streaming-images/{streamingImageId}":
    delete:
      operationId: DeleteStreamingImage
      description: Delete streaming image.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteStreamingImageResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: streamingImageId
          in: path
          required: true
          description: The streaming image ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetStreamingImage
      description: Get streaming image.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStreamingImageResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: streamingImageId
          in: path
          required: true
          description: The streaming image ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    patch:
      operationId: UpdateStreamingImage
      description: Update streaming image.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateStreamingImageResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: streamingImageId
          in: path
          required: true
          description: The streaming image ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  description: The description.
                  type: string
                  minLength: 0
                  maxLength: 256
                  format: password
                name:
                  description: A friendly name for a streaming image resource.
                  type: string
                  minLength: 0
                  maxLength: 64
                  format: password
  "/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}":
    delete:
      operationId: DeleteStreamingSession
      description: <p>Deletes streaming session resource.</p> <p>After invoking this operation, use GetStreamingSession to poll the resource until it transitions to a <code>DELETED</code> state.</p> <p>A streaming session will count against your streaming session quota until it is marked <code>DELETED</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteStreamingSessionResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: sessionId
          in: path
          required: true
          description: The streaming session ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetStreamingSession
      description: <p>Gets StreamingSession resource.</p> <p>Invoke this operation to poll for a streaming session state while creating or deleting a session.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStreamingSessionResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: sessionId
          in: path
          required: true
          description: The streaming session ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
  "/2020-08-01/studios/{studioId}":
    delete:
      operationId: DeleteStudio
      description: Delete a studio resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteStudioResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetStudio
      description: Get a studio resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStudioResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    patch:
      operationId: UpdateStudio
      description: <p>Update a Studio resource.</p> <p>Currently, this operation only supports updating the displayName of your studio.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateStudioResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                adminRoleArn:
                  description: The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.
                  type: string
                  minLength: 0
                  maxLength: 2048
                displayName:
                  description: A friendly name for the studio.
                  type: string
                  minLength: 0
                  maxLength: 64
                  format: password
                userRoleArn:
                  description: The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.
                  type: string
                  minLength: 0
                  maxLength: 2048
  "/2020-08-01/studios/{studioId}/studio-components/{studioComponentId}":
    delete:
      operationId: DeleteStudioComponent
      description: Deletes a studio component resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteStudioComponentResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioComponentId
          in: path
          required: true
          description: The studio component ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetStudioComponent
      description: Gets a studio component resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStudioComponentResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: studioComponentId
          in: path
          required: true
          description: The studio component ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    patch:
      operationId: UpdateStudioComponent
      description: Updates a studio component resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateStudioComponentResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioComponentId
          in: path
          required: true
          description: The studio component ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                configuration:
                  description: The configuration of the studio component, based on component type.
                  type: object
                  properties:
                    activeDirectoryConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/ActiveDirectoryConfiguration"
                        - description: The configuration for a Directory Service for Microsoft Active Directory studio resource.
                    computeFarmConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/ComputeFarmConfiguration"
                        - description: The configuration for a render farm that is associated with a studio resource.
                    licenseServiceConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/LicenseServiceConfiguration"
                        - description: The configuration for a license service that is associated with a studio resource.
                    sharedFileSystemConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/SharedFileSystemConfiguration"
                        - description: The configuration for a shared file storage system that is associated with a studio resource.
                description:
                  description: The description.
                  type: string
                  minLength: 0
                  maxLength: 256
                  format: password
                ec2SecurityGroupIds:
                  description: The EC2 security groups that control access to the studio component.
                  type: array
                  items:
                    $ref: "#/components/schemas/SecurityGroupId"
                  minItems: 0
                  maxItems: 30
                initializationScripts:
                  description: Initialization scripts for studio components.
                  type: array
                  items:
                    $ref: "#/components/schemas/StudioComponentInitializationScript"
                name:
                  description: The name for the studio component.
                  type: string
                  minLength: 0
                  maxLength: 64
                  format: password
                runtimeRoleArn:
                  description: "An IAM role attached to a Studio Component that gives the studio component access to Amazon Web Services resources at anytime while the instance is running. "
                  type: string
                  minLength: 0
                  maxLength: 2048
                scriptParameters:
                  description: Parameters for the studio component scripts.
                  type: array
                  items:
                    $ref: "#/components/schemas/ScriptParameterKeyValue"
                  minItems: 0
                  maxItems: 30
                secureInitializationRoleArn:
                  description: An IAM role attached to Studio Component when the system initialization script runs which give the studio component access to Amazon Web Services resources when the system initialization script runs.
                  type: string
                  minLength: 0
                  maxLength: 2048
                subtype:
                  description: The specific subtype of a studio component.
                  type: string
                  enum:
                    - AWS_MANAGED_MICROSOFT_AD
                    - AMAZON_FSX_FOR_WINDOWS
                    - AMAZON_FSX_FOR_LUSTRE
                    - CUSTOM
                type:
                  description: The type of the studio component.
                  type: string
                  enum:
                    - ACTIVE_DIRECTORY
                    - SHARED_FILE_SYSTEM
                    - COMPUTE_FARM
                    - LICENSE_SERVICE
                    - CUSTOM
  "/2020-08-01/studios/{studioId}/membership/{principalId}":
    delete:
      operationId: DeleteStudioMember
      description: Delete a user from studio membership.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteStudioMemberResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: principalId
          in: path
          required: true
          description: "The principal ID. This currently supports a IAM Identity Center UserId. "
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetStudioMember
      description: Get a user's membership in a studio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStudioMemberResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: principalId
          in: path
          required: true
          description: "The principal ID. This currently supports a IAM Identity Center UserId. "
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
  "/2020-08-01/eulas/{eulaId}":
    get:
      operationId: GetEula
      description: Get EULA.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEulaResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: eulaId
          in: path
          required: true
          description: The EULA ID.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/details":
    get:
      operationId: GetLaunchProfileDetails
      description: Launch profile details include the launch profile resource and summary information of resources that are used by, or available to, the launch profile. This includes the name and description of all studio components used by the launch profiles, and the name and description of streaming images that can be used with this launch profile.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLaunchProfileDetailsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: launchProfileId
          in: path
          required: true
          description: The ID of the launch profile used to control access from the streaming session.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/init#launchProfileProtocolVersions&launchPurpose&platform":
    get:
      operationId: GetLaunchProfileInitialization
      description: Get a launch profile initialization.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLaunchProfileInitializationResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: launchProfileId
          in: path
          required: true
          description: The ID of the launch profile used to control access from the streaming session.
          schema:
            type: string
        - name: launchProfileProtocolVersions
          in: query
          required: true
          description: The launch profile protocol versions supported by the client.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/String"
        - name: launchPurpose
          in: query
          required: true
          description: The launch purpose.
          schema:
            type: string
        - name: platform
          in: query
          required: true
          description: The platform where this Launch Profile will be used, either Windows or Linux.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2020-08-01/studios/{studioId}/streaming-session-backups/{backupId}":
    get:
      operationId: GetStreamingSessionBackup
      description: <p>Gets <code>StreamingSessionBackup</code> resource.</p> <p>Invoke this operation to poll for a streaming session backup while stopping a streaming session.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStreamingSessionBackupResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: backupId
          in: path
          required: true
          description: The ID of the backup.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/streams/{streamId}":
    get:
      operationId: GetStreamingSessionStream
      description: <p>Gets a StreamingSessionStream for a streaming session.</p> <p>Invoke this operation to poll the resource after invoking <code>CreateStreamingSessionStream</code>.</p> <p>After the <code>StreamingSessionStream</code> changes to the <code>READY</code> state, the url property will contain a stream to be used with the DCV streaming client.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetStreamingSessionStreamResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: sessionId
          in: path
          required: true
          description: The streaming session ID.
          schema:
            type: string
        - name: streamId
          in: path
          required: true
          description: The streaming session stream ID.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /2020-08-01/eulas:
    get:
      operationId: ListEulas
      description: List EULAs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEulasResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: eulaIds
          in: query
          required: false
          description: The list of EULA IDs that should be returned
          schema:
            type: array
            items:
              $ref: "#/components/schemas/String"
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2020-08-01/studios/{studioId}/launch-profiles/{launchProfileId}/membership":
    get:
      operationId: ListLaunchProfileMembers
      description: Get all users in a given launch profile membership.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLaunchProfileMembersResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: launchProfileId
          in: path
          required: true
          description: The ID of the launch profile used to control access from the streaming session.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The max number of results to return in the response.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: PutLaunchProfileMembers
      description: Add/update users with given persona to launch profile membership.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutLaunchProfileMembersResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: launchProfileId
          in: path
          required: true
          description: The ID of the launch profile used to control access from the streaming session.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identityStoreId
                - members
              properties:
                identityStoreId:
                  description: The ID of the identity store.
                  type: string
                members:
                  description: A list of members.
                  type: array
                  items:
                    $ref: "#/components/schemas/NewLaunchProfileMember"
                  minItems: 1
                  maxItems: 20
  "/2020-08-01/studios/{studioId}/streaming-session-backups":
    get:
      operationId: ListStreamingSessionBackups
      description: Lists the backups of a streaming session in a studio.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStreamingSessionBackupsResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: ownedBy
          in: query
          required: false
          description: The user ID of the user that owns the streaming session.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2020-08-01/studios/{studioId}/membership":
    get:
      operationId: ListStudioMembers
      description: <p>Get all users in a given studio membership.</p> <note> <p> <code>ListStudioMembers</code> only returns admin members.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStudioMembersResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The max number of results to return in the response.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: The token for the next set of results, or null if there are no more results.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: PutStudioMembers
      description: Add/update users with given persona to studio membership.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutStudioMembersResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - identityStoreId
                - members
              properties:
                identityStoreId:
                  description: The ID of the identity store.
                  type: string
                members:
                  description: A list of members.
                  type: array
                  items:
                    $ref: "#/components/schemas/NewStudioMember"
                  minItems: 1
                  maxItems: 20
  "/2020-08-01/tags/{resourceArn}":
    get:
      operationId: ListTagsForResource
      description: <p>Gets the tags for a resource, given its Amazon Resource Names (ARN).</p> <p>This operation supports ARNs for all resource types in Nimble Studio that support tags, including studio, studio component, launch profile, streaming image, and streaming session. All resources that can be tagged will contain an ARN property, so you do not have to create this ARN yourself.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource for which you want to list tags.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: Creates tags for a resource, given its ARN.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: "The Amazon Resource Name (ARN) of the resource you want to add tags to. "
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  description: A collection of labels, in the form of key-value pairs, that apply to this resource.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/String"
  "/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/start":
    post:
      operationId: StartStreamingSession
      description: Transitions sessions from the <code>STOPPED</code> state into the <code>READY</code> state. The <code>START_IN_PROGRESS</code> state is the intermediate state between the <code>STOPPED</code> and <code>READY</code> states.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartStreamingSessionResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: sessionId
          in: path
          required: true
          description: The streaming session ID for the <code>StartStreamingSessionRequest</code>.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studio ID for the StartStreamingSessionRequest.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                backupId:
                  description: The ID of the backup.
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2020-08-01/studios/{studioId}/sso-configuration":
    put:
      operationId: StartStudioSSOConfigurationRepair
      description: <p>Repairs the IAM Identity Center configuration for a given studio.</p> <p>If the studio has a valid IAM Identity Center configuration currently associated with it, this operation will fail with a validation error.</p> <p>If the studio does not have a valid IAM Identity Center configuration currently associated with it, then a new IAM Identity Center application is created for the studio and the studio is changed to the <code>READY</code> state.</p> <p>After the IAM Identity Center application is repaired, you must use the Amazon Nimble Studio console to add administrators and users to your studio.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartStudioSSOConfigurationRepairResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: studioId
          in: path
          required: true
          description: "The studio ID. "
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2020-08-01/studios/{studioId}/streaming-sessions/{sessionId}/stop":
    post:
      operationId: StopStreamingSession
      description: Transitions sessions from the <code>READY</code> state into the <code>STOPPED</code> state. The <code>STOP_IN_PROGRESS</code> state is the intermediate state between the <code>READY</code> and <code>STOPPED</code> states.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopStreamingSessionResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: X-Amz-Client-Token
          in: header
          required: false
          description: Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
          schema:
            type: string
            minLength: 1
            maxLength: 64
        - name: sessionId
          in: path
          required: true
          description: The streaming session ID for the <code>StopStreamingSessionRequest</code>.
          schema:
            type: string
        - name: studioId
          in: path
          required: true
          description: The studioId for the StopStreamingSessionRequest.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                volumeRetentionMode:
                  description: Adds additional instructions to a streaming session stop action to either retain the EBS volumes or delete the EBS volumes.
                  type: string
                  enum:
                    - RETAIN
                    - DELETE
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/2020-08-01/tags/{resourceArn}#tagKeys":
    delete:
      operationId: UntagResource
      description: Deletes the tags for a resource.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: InternalServerErrorException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorException"
        "486":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: "Identifies the Amazon Resource Name(ARN) key from which you are removing tags. "
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: One or more tag keys. Specify only the tag keys, not the tag values.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/String"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptEulasResponse:
      type: object
      properties:
        eulaAcceptances:
          allOf:
            - $ref: "#/components/schemas/EulaAcceptanceList"
            - description: A collection of EULA acceptances.
    String:
      type: string
    ResourceNotFoundException: {}
    ConflictException: {}
    ThrottlingException: {}
    ValidationException: {}
    AccessDeniedException: {}
    InternalServerErrorException: {}
    ServiceQuotaExceededException: {}
    CreateLaunchProfileResponse:
      type: object
      properties:
        launchProfile:
          allOf:
            - $ref: "#/components/schemas/LaunchProfile"
            - description: The launch profile.
    EC2SubnetId:
      type: string
    LaunchProfileProtocolVersion:
      type: string
      pattern: ^2021\-03\-31$
      description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
      minLength: 0
      maxLength: 10
    AutomaticTerminationMode:
      type: string
      enum:
        - DEACTIVATED
        - ACTIVATED
    StreamingClipboardMode:
      type: string
      enum:
        - ENABLED
        - DISABLED
    StreamingInstanceTypeList:
      type: array
      description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.
      items:
        $ref: "#/components/schemas/StreamingInstanceType"
      minItems: 1
      maxItems: 30
    StreamConfigurationMaxSessionLengthInMinutes:
      type: integer
      minimum: 1
      maximum: 43200
    StreamConfigurationMaxStoppedSessionLengthInMinutes:
      type: integer
      minimum: 0
      maximum: 5760
    StreamConfigurationSessionBackup:
      type: object
      properties:
        maxBackupsToRetain:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationMaxBackupsToRetain"
            - description: The maximum number of backups that each streaming session created from this launch profile can have.
        mode:
          allOf:
            - $ref: "#/components/schemas/SessionBackupMode"
            - description: <p>Specifies how artists sessions are backed up.</p> <p>Configures backups for streaming sessions launched with this launch profile. The default value is <code>DEACTIVATED</code>, which means that backups are deactivated. To allow backups, set this value to <code>AUTOMATIC</code>.</p>
      description: Configures how streaming sessions are backed up when launched from this launch profile.
    SessionPersistenceMode:
      type: string
      enum:
        - DEACTIVATED
        - ACTIVATED
    StreamConfigurationSessionStorage:
      type: object
      required:
        - mode
      properties:
        mode:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionStorageModeList"
            - description: Allows artists to upload files to their workstations. The only valid option is <code>UPLOAD</code>.
        root:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionStorageRoot"
            - description: The configuration for the upload storage root of the streaming session.
      description: The configuration for a streaming sessionâ€™s upload storage.
    StreamingImageIdList:
      type: array
      description: A list of streaming image IDs that users can select from when launching a streaming session with this launch profile.
      items:
        $ref: "#/components/schemas/StreamingImageId"
      minItems: 1
      maxItems: 20
    VolumeConfiguration:
      type: object
      properties:
        iops:
          allOf:
            - $ref: "#/components/schemas/VolumeIops"
            - description: The number of I/O operations per second for the root volume that is attached to streaming session.
        size:
          allOf:
            - $ref: "#/components/schemas/VolumeSizeInGiB"
            - description: The size of the root volume that is attached to the streaming session. The root volume size is measured in GiBs.
        throughput:
          allOf:
            - $ref: "#/components/schemas/VolumeThroughputInMiBs"
            - description: The throughput to provision for the root volume that is attached to the streaming session. The throughput is measured in MiB/s.
      description: <p>Custom volume configuration for the root volumes that are attached to streaming sessions.</p> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.</p>
    CreateStreamingImageResponse:
      type: object
      properties:
        streamingImage:
          allOf:
            - $ref: "#/components/schemas/StreamingImage"
            - description: The streaming image.
    CreateStreamingSessionResponse:
      type: object
      properties:
        session:
          allOf:
            - $ref: "#/components/schemas/StreamingSession"
            - description: The session.
    CreateStreamingSessionStreamResponse:
      type: object
      properties:
        stream:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionStream"
            - description: The stream.
    CreateStudioResponse:
      type: object
      properties:
        studio:
          allOf:
            - $ref: "#/components/schemas/Studio"
            - description: Information about a studio.
    StudioEncryptionConfigurationKeyArn:
      type: string
      pattern: ^arn:.*
      description: The Amazon Resource Name (ARN) for a KMS key that is used to encrypt studio data.
      minLength: 4
    StudioEncryptionConfigurationKeyType:
      type: string
      enum:
        - AWS_OWNED_KEY
        - CUSTOMER_MANAGED_KEY
      description: The type of KMS key that is used to encrypt studio data.
    CreateStudioComponentResponse:
      type: object
      properties:
        studioComponent:
          allOf:
            - $ref: "#/components/schemas/StudioComponent"
            - description: Information about the studio component.
    ActiveDirectoryConfiguration:
      type: object
      properties:
        computerAttributes:
          allOf:
            - $ref: "#/components/schemas/ActiveDirectoryComputerAttributeList"
            - description: A collection of custom attributes for an Active Directory computer.
        directoryId:
          allOf:
            - $ref: "#/components/schemas/DirectoryId"
            - description: The directory ID of the Directory Service for Microsoft Active Directory to access using this studio component.
        organizationalUnitDistinguishedName:
          allOf:
            - $ref: "#/components/schemas/ActiveDirectoryOrganizationalUnitDistinguishedName"
            - description: The distinguished name (DN) and organizational unit (OU) of an Active Directory computer.
      description: The configuration for a Directory Service for Microsoft Active Directory studio resource.
    ComputeFarmConfiguration:
      type: object
      properties:
        activeDirectoryUser:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of an Active Directory user that is used on ComputeFarm worker instances.
        endpoint:
          allOf:
            - $ref: "#/components/schemas/SensitiveString"
            - description: The endpoint of the ComputeFarm that is accessed by the studio component resource.
      description: The configuration for a render farm that is associated with a studio resource.
    LicenseServiceConfiguration:
      type: object
      properties:
        endpoint:
          allOf:
            - $ref: "#/components/schemas/SensitiveString"
            - description: The endpoint of the license service that is accessed by the studio component resource.
      description: The configuration for a license service that is associated with a studio resource.
    SharedFileSystemConfiguration:
      type: object
      properties:
        endpoint:
          allOf:
            - $ref: "#/components/schemas/SensitiveString"
            - description: The endpoint of the shared file system that is accessed by the studio component resource.
        fileSystemId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The unique identifier for a file system.
        linuxMountPoint:
          allOf:
            - $ref: "#/components/schemas/LinuxMountPoint"
            - description: The mount location for a shared file system on a Linux virtual workstation.
        shareName:
          allOf:
            - $ref: "#/components/schemas/SensitiveString"
            - description: The name of the file share.
        windowsMountDrive:
          allOf:
            - $ref: "#/components/schemas/WindowsMountDrive"
            - description: The mount location for a shared file system on a Windows virtual workstation.
      description: The configuration for a shared file storage system that is associated with a studio resource.
    SecurityGroupId:
      type: string
    StudioComponentInitializationScript:
      type: object
      properties:
        launchProfileProtocolVersion:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileProtocolVersion"
            - description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
        platform:
          allOf:
            - $ref: "#/components/schemas/LaunchProfilePlatform"
            - description: The platform of the initialization script, either Windows or Linux.
        runContext:
          allOf:
            - $ref: "#/components/schemas/StudioComponentInitializationScriptRunContext"
            - description: The method to use when running the initialization script.
        script:
          allOf:
            - $ref: "#/components/schemas/StudioComponentInitializationScriptContent"
            - description: The initialization script.
      description: Initialization scripts for studio components.
    ScriptParameterKeyValue:
      type: object
      properties:
        key:
          allOf:
            - $ref: "#/components/schemas/ScriptParameterKey"
            - description: A script parameter key.
        value:
          allOf:
            - $ref: "#/components/schemas/ScriptParameterValue"
            - description: A script parameter value.
      description: A parameter for a studio component script, in the form of a key-value pair.
    DeleteLaunchProfileResponse:
      type: object
      properties:
        launchProfile:
          allOf:
            - $ref: "#/components/schemas/LaunchProfile"
            - description: The launch profile.
    DeleteLaunchProfileMemberResponse:
      type: object
      properties: {}
    DeleteStreamingImageResponse:
      type: object
      properties:
        streamingImage:
          allOf:
            - $ref: "#/components/schemas/StreamingImage"
            - description: The streaming image.
    DeleteStreamingSessionResponse:
      type: object
      properties:
        session:
          allOf:
            - $ref: "#/components/schemas/StreamingSession"
            - description: The session.
    DeleteStudioResponse:
      type: object
      required:
        - studio
      properties:
        studio:
          allOf:
            - $ref: "#/components/schemas/Studio"
            - description: Information about a studio.
    DeleteStudioComponentResponse:
      type: object
      properties:
        studioComponent:
          allOf:
            - $ref: "#/components/schemas/StudioComponent"
            - description: Information about the studio component.
    DeleteStudioMemberResponse:
      type: object
      properties: {}
    GetEulaResponse:
      type: object
      properties:
        eula:
          allOf:
            - $ref: "#/components/schemas/Eula"
            - description: The EULA.
    GetLaunchProfileResponse:
      type: object
      properties:
        launchProfile:
          allOf:
            - $ref: "#/components/schemas/LaunchProfile"
            - description: The launch profile.
    GetLaunchProfileDetailsResponse:
      type: object
      properties:
        launchProfile:
          allOf:
            - $ref: "#/components/schemas/LaunchProfile"
            - description: The launch profile.
        streamingImages:
          allOf:
            - $ref: "#/components/schemas/StreamingImageList"
            - description: A collection of streaming images.
        studioComponentSummaries:
          allOf:
            - $ref: "#/components/schemas/StudioComponentSummaryList"
            - description: A collection of studio component summaries.
    GetLaunchProfileInitializationResponse:
      type: object
      properties:
        launchProfileInitialization:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileInitialization"
            - description: The launch profile initialization.
    GetLaunchProfileMemberResponse:
      type: object
      properties:
        member:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileMembership"
            - description: The member.
    GetStreamingImageResponse:
      type: object
      properties:
        streamingImage:
          allOf:
            - $ref: "#/components/schemas/StreamingImage"
            - description: The streaming image.
    GetStreamingSessionResponse:
      type: object
      properties:
        session:
          allOf:
            - $ref: "#/components/schemas/StreamingSession"
            - description: The session.
    GetStreamingSessionBackupResponse:
      type: object
      properties:
        streamingSessionBackup:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionBackup"
            - description: Information about the streaming session backup.
    GetStreamingSessionStreamResponse:
      type: object
      properties:
        stream:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionStream"
            - description: The stream.
    GetStudioResponse:
      type: object
      required:
        - studio
      properties:
        studio:
          allOf:
            - $ref: "#/components/schemas/Studio"
            - description: Information about a studio.
    GetStudioComponentResponse:
      type: object
      properties:
        studioComponent:
          allOf:
            - $ref: "#/components/schemas/StudioComponent"
            - description: Information about the studio component.
    GetStudioMemberResponse:
      type: object
      properties:
        member:
          allOf:
            - $ref: "#/components/schemas/StudioMembership"
            - description: The member.
    ListEulaAcceptancesResponse:
      type: object
      properties:
        eulaAcceptances:
          allOf:
            - $ref: "#/components/schemas/EulaAcceptanceList"
            - description: A collection of EULA acceptances.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
    ListEulasResponse:
      type: object
      properties:
        eulas:
          allOf:
            - $ref: "#/components/schemas/EulaList"
            - description: A collection of EULA resources.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
    ListLaunchProfileMembersResponse:
      type: object
      properties:
        members:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileMembershipList"
            - description: A list of members.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
    ListLaunchProfilesResponse:
      type: object
      properties:
        launchProfiles:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileList"
            - description: A collection of launch profiles.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
    LaunchProfileState:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - READY
        - UPDATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - DELETED
        - DELETE_FAILED
        - CREATE_FAILED
        - UPDATE_FAILED
    ListStreamingImagesResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        streamingImages:
          allOf:
            - $ref: "#/components/schemas/StreamingImageList"
            - description: A collection of streaming images.
    ListStreamingSessionBackupsResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        streamingSessionBackups:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionBackupList"
            - description: Information about the streaming session backups.
    ListStreamingSessionsResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        sessions:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionList"
            - description: A collection of streaming sessions.
    ListStudioComponentsResponse:
      type: object
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        studioComponents:
          allOf:
            - $ref: "#/components/schemas/StudioComponentList"
            - description: A collection of studio components.
    StudioComponentState:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - READY
        - UPDATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - DELETED
        - DELETE_FAILED
        - CREATE_FAILED
        - UPDATE_FAILED
      description: <p>The current state of the studio component resource.</p> <p>While a studio component is being created, modified, or deleted, its state will be <code>CREATE_IN_PROGRESS</code>, <code>UPDATE_IN_PROGRESS</code>, or <code>DELETE_IN_PROGRESS</code>.</p> <p>These are called <i>transition states</i>.</p> <p>No modifications may be made to the studio component while it is in a transition state.</p> <p>If creation of the resource fails, the state will change to <code>CREATE_FAILED</code>. The resource <code>StatusCode</code> and <code>StatusMessage</code> will provide more information of why creation failed. The resource in this state will automatically be deleted from your account after a period of time.</p> <p>If updating the resource fails, the state will change to <code>UPDATE_FAILED</code>. The resource <code>StatusCode</code> and <code>StatusMessage</code> will provide more information of why the update failed. The resource will be returned to the state it was in when the update request was invoked.</p> <p>If deleting the resource fails, the state will change to <code>DELETE_FAILED</code>. The resource <code>StatusCode</code> and <code>StatusMessage</code> will provide more information of why the update failed. The resource will be returned to the state it was in when the update request was invoked. After the resource is deleted successfully, it will change to the <code>DELETED</code> state. The resource will no longer count against service quotas and cannot be used or acted upon any futher. It will be removed from your account after a period of time.</p>
    StudioComponentType:
      type: string
      enum:
        - ACTIVE_DIRECTORY
        - SHARED_FILE_SYSTEM
        - COMPUTE_FARM
        - LICENSE_SERVICE
        - CUSTOM
    ListStudioMembersResponse:
      type: object
      properties:
        members:
          allOf:
            - $ref: "#/components/schemas/StudioMembershipList"
            - description: A list of admin members.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
    ListStudiosResponse:
      type: object
      required:
        - studios
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The token for the next set of results, or null if there are no more results.
        studios:
          allOf:
            - $ref: "#/components/schemas/StudioList"
            - description: A collection of studios.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
    PutLaunchProfileMembersResponse:
      type: object
      properties: {}
    NewLaunchProfileMember:
      type: object
      required:
        - persona
        - principalId
      properties:
        persona:
          allOf:
            - $ref: "#/components/schemas/LaunchProfilePersona"
            - description: The persona.
        principalId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The principal ID.
      description: A new member that is added to a launch profile.
    PutStudioMembersResponse:
      type: object
      properties: {}
    NewStudioMember:
      type: object
      required:
        - persona
        - principalId
      properties:
        persona:
          allOf:
            - $ref: "#/components/schemas/StudioPersona"
            - description: The persona.
        principalId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The principal ID.
      description: A new studio user's membership.
    StartStreamingSessionResponse:
      type: object
      properties:
        session:
          $ref: "#/components/schemas/StreamingSession"
    StartStudioSSOConfigurationRepairResponse:
      type: object
      required:
        - studio
      properties:
        studio:
          allOf:
            - $ref: "#/components/schemas/Studio"
            - description: Information about a studio.
    StopStreamingSessionResponse:
      type: object
      properties:
        session:
          $ref: "#/components/schemas/StreamingSession"
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateLaunchProfileResponse:
      type: object
      properties:
        launchProfile:
          allOf:
            - $ref: "#/components/schemas/LaunchProfile"
            - description: The launch profile.
    UpdateLaunchProfileMemberResponse:
      type: object
      properties:
        member:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileMembership"
            - description: "The updated member. "
    UpdateStreamingImageResponse:
      type: object
      properties:
        streamingImage:
          $ref: "#/components/schemas/StreamingImage"
    UpdateStudioResponse:
      type: object
      required:
        - studio
      properties:
        studio:
          allOf:
            - $ref: "#/components/schemas/Studio"
            - description: Information about a studio.
    UpdateStudioComponentResponse:
      type: object
      properties:
        studioComponent:
          allOf:
            - $ref: "#/components/schemas/StudioComponent"
            - description: Information about the studio component.
    ClientToken:
      type: string
      minLength: 1
      maxLength: 64
    EulaIdList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    AcceptEulasRequest:
      type: object
      title: AcceptEulasRequest
      properties:
        eulaIds:
          allOf:
            - $ref: "#/components/schemas/EulaIdList"
            - description: The EULA ID.
    EulaAcceptanceList:
      type: array
      items:
        $ref: "#/components/schemas/EulaAcceptance"
    ActiveDirectoryComputerAttributeName:
      type: string
      description: The name for the LDAP attribute.
      minLength: 1
      maxLength: 40
    ActiveDirectoryComputerAttributeValue:
      type: string
      description: The value for the LDAP attribute.
      minLength: 1
      maxLength: 64
    ActiveDirectoryComputerAttribute:
      type: object
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ActiveDirectoryComputerAttributeName"
            - description: The name for the LDAP attribute.
        value:
          allOf:
            - $ref: "#/components/schemas/ActiveDirectoryComputerAttributeValue"
            - description: The value for the LDAP attribute.
      description: An LDAP attribute of an Active Directory computer account, in the form of a name:value pair.
    ActiveDirectoryComputerAttributeList:
      type: array
      description: A collection of LDAP attributes to apply to Active Directory computer accounts that are created for streaming sessions.
      items:
        $ref: "#/components/schemas/ActiveDirectoryComputerAttribute"
      minItems: 0
      maxItems: 50
    DirectoryId:
      type: string
    ActiveDirectoryOrganizationalUnitDistinguishedName:
      type: string
      description: The fully-qualified distinguished name of the organizational unit to place the computer account in.
      minLength: 1
      maxLength: 2000
    ActiveDirectoryDnsIpAddress:
      type: string
    ActiveDirectoryDnsIpAddressList:
      type: array
      items:
        $ref: "#/components/schemas/ActiveDirectoryDnsIpAddress"
      minItems: 0
      maxItems: 10
    SensitiveString:
      type: string
      format: password
    LaunchProfileDescription:
      type: string
      description: A human-readable description of the launch profile.
      minLength: 0
      maxLength: 256
      format: password
    EC2SubnetIdList:
      type: array
      items:
        $ref: "#/components/schemas/EC2SubnetId"
      minItems: 0
      maxItems: 6
    LaunchProfileProtocolVersionList:
      type: array
      items:
        $ref: "#/components/schemas/LaunchProfileProtocolVersion"
    LaunchProfileName:
      type: string
      minLength: 1
      maxLength: 64
      format: password
    StreamConfigurationCreate:
      type: object
      required:
        - clipboardMode
        - ec2InstanceTypes
        - streamingImageIds
      properties:
        automaticTerminationMode:
          allOf:
            - $ref: "#/components/schemas/AutomaticTerminationMode"
            - description: <p>Indicates if a streaming session created from this launch profile should be terminated automatically or retained without termination after being in a <code>STOPPED</code> state.</p> <ul> <li> <p>When <code>ACTIVATED</code>, the streaming session is scheduled for termination after being in the <code>STOPPED</code> state for the time specified in <code>maxStoppedSessionLengthInMinutes</code>.</p> </li> <li> <p>When <code>DEACTIVATED</code>, the streaming session can remain in the <code>STOPPED</code> state indefinitely.</p> </li> </ul> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>. When allowed, the default value for this parameter is <code>DEACTIVATED</code>.</p>
        clipboardMode:
          allOf:
            - $ref: "#/components/schemas/StreamingClipboardMode"
            - description: Allows or deactivates the use of the system clipboard to copy and paste between the streaming session and streaming client.
        ec2InstanceTypes:
          allOf:
            - $ref: "#/components/schemas/StreamingInstanceTypeList"
            - description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.
        maxSessionLengthInMinutes:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes"
            - description: The length of time, in minutes, that a streaming session can be active before it is stopped or terminated. After this point, Nimble Studio automatically terminates or stops the session. The default length of time is 690 minutes, and the maximum length of time is 30 days.
        maxStoppedSessionLengthInMinutes:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationMaxStoppedSessionLengthInMinutes"
            - description: <p>Integer that determines if you can start and stop your sessions and how long a session can stay in the <code>STOPPED</code> state. The default value is 0. The maximum value is 5760.</p> <p>This field is allowed only when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code> and <code>automaticTerminationMode</code> is <code>ACTIVATED</code>.</p> <p>If the value is set to 0, your sessions canâ€™t be <code>STOPPED</code>. If you then call <code>StopStreamingSession</code>, the session fails. If the time that a session stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code> value, the session will automatically be terminated (instead of <code>STOPPED</code>).</p> <p>If the value is set to a positive number, the session can be stopped. You can call <code>StopStreamingSession</code> to stop sessions in the <code>READY</code> state. If the time that a session stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code> value, the session will automatically be stopped (instead of terminated).</p>
        sessionBackup:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationSessionBackup"
            - description: Configures how streaming sessions are backed up when launched from this launch profile.
        sessionPersistenceMode:
          allOf:
            - $ref: "#/components/schemas/SessionPersistenceMode"
            - description: Determine if a streaming session created from this launch profile can configure persistent storage. This means that <code>volumeConfiguration</code> and <code>automaticTerminationMode</code> are configured.
        sessionStorage:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationSessionStorage"
            - description: The upload storage for a streaming workstation that is created using this launch profile.
        streamingImageIds:
          allOf:
            - $ref: "#/components/schemas/StreamingImageIdList"
            - description: The streaming images that users can select from when launching a streaming session with this launch profile.
        volumeConfiguration:
          allOf:
            - $ref: "#/components/schemas/VolumeConfiguration"
            - description: <p>Custom volume configuration for the root volumes that are attached to streaming sessions.</p> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.</p>
      description: Configuration for streaming workstations created using this launch profile.
    LaunchProfileStudioComponentIdList:
      type: array
      items:
        $ref: "#/components/schemas/String"
      minItems: 1
      maxItems: 100
    Tags:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/String"
    CreateLaunchProfileRequest:
      type: object
      required:
        - ec2SubnetIds
        - launchProfileProtocolVersions
        - name
        - streamConfiguration
        - studioComponentIds
      title: CreateLaunchProfileRequest
      properties:
        description:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileDescription"
            - description: The description.
        ec2SubnetIds:
          allOf:
            - $ref: "#/components/schemas/EC2SubnetIdList"
            - description: "Specifies the IDs of the EC2 subnets where streaming sessions will be accessible from. These subnets must support the specified instance types. "
        launchProfileProtocolVersions:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileProtocolVersionList"
            - description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
        name:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileName"
            - description: The name for the launch profile.
        streamConfiguration:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationCreate"
            - description: A configuration for a streaming session.
        studioComponentIds:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileStudioComponentIdList"
            - description: Unique identifiers for a collection of studio components that can be used with this launch profile.
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
    LaunchProfile:
      type: object
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely identifies it. ARNs are unique across all Regions.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was created.
        createdBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that created the launch profile.
        description:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileDescription"
            - description: A human-readable description of the launch profile.
        ec2SubnetIds:
          allOf:
            - $ref: "#/components/schemas/EC2SubnetIdList"
            - description: Unique identifiers for a collection of EC2 subnets.
        launchProfileId:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileId"
            - description: The ID of the launch profile used to control access from the streaming session.
        launchProfileProtocolVersions:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileProtocolVersionList"
            - description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
        name:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileName"
            - description: A friendly name for the launch profile.
        state:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileState"
            - description: The current state.
        statusCode:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileStatusCode"
            - description: The status code.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The status message for the launch profile.
        streamConfiguration:
          allOf:
            - $ref: "#/components/schemas/StreamConfiguration"
            - description: A configuration for a streaming session.
        studioComponentIds:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileStudioComponentIdList"
            - description: Unique identifiers for a collection of studio components that can be used with this launch profile.
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
        updatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was updated.
        updatedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that most recently updated the resource.
        validationResults:
          allOf:
            - $ref: "#/components/schemas/ValidationResults"
            - description: The list of the latest validation results.
      description: <p>A launch profile controls your artist workforceâ€™s access to studio components, like compute farms, shared file systems, managed file systems, and license server configurations, as well as instance types and Amazon Machine Images (AMIs). </p> <p>Studio administrators create launch profiles in the Nimble Studio console. Artists can use their launch profiles to launch an instance from the Nimble Studio portal. Each userâ€™s launch profile defines how they can launch a streaming session. By default, studio admins can use all launch profiles.</p>
    StreamingImageDescription:
      type: string
      description: The description.
      minLength: 0
      maxLength: 256
      format: password
    EC2ImageId:
      type: string
      pattern: ^ami-[0-9A-z]+$
    StreamingImageName:
      type: string
      description: A friendly name for a streaming image resource.
      minLength: 0
      maxLength: 64
      format: password
    CreateStreamingImageRequest:
      type: object
      required:
        - ec2ImageId
        - name
      title: CreateStreamingImageRequest
      properties:
        description:
          allOf:
            - $ref: "#/components/schemas/StreamingImageDescription"
            - description: A human-readable description of the streaming image.
        ec2ImageId:
          allOf:
            - $ref: "#/components/schemas/EC2ImageId"
            - description: The ID of an EC2 machine image with which to create this streaming image.
        name:
          allOf:
            - $ref: "#/components/schemas/StreamingImageName"
            - description: A friendly name for a streaming image resource.
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
    StreamingImage:
      type: object
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely identifies it. ARNs are unique across all Regions.
        description:
          allOf:
            - $ref: "#/components/schemas/StreamingImageDescription"
            - description: A human-readable description of the streaming image.
        ec2ImageId:
          allOf:
            - $ref: "#/components/schemas/EC2ImageId"
            - description: The ID of an EC2 machine image with which to create the streaming image.
        encryptionConfiguration:
          allOf:
            - $ref: "#/components/schemas/StreamingImageEncryptionConfiguration"
            - description: The encryption configuration.
        eulaIds:
          allOf:
            - $ref: "#/components/schemas/EulaIdList"
            - description: The list of EULAs that must be accepted before a Streaming Session can be started using this streaming image.
        name:
          allOf:
            - $ref: "#/components/schemas/StreamingImageName"
            - description: A friendly name for a streaming image resource.
        owner:
          allOf:
            - $ref: "#/components/schemas/StreamingImageOwner"
            - description: The owner of the streaming image, either the <code>studioId</code> that contains the streaming image, or <code>amazon</code> for images that are provided by Amazon Nimble Studio.
        platform:
          allOf:
            - $ref: "#/components/schemas/StreamingImagePlatform"
            - description: The platform of the streaming image, either Windows or Linux.
        state:
          allOf:
            - $ref: "#/components/schemas/StreamingImageState"
            - description: The current state.
        statusCode:
          allOf:
            - $ref: "#/components/schemas/StreamingImageStatusCode"
            - description: The status code.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The status message for the streaming image.
        streamingImageId:
          allOf:
            - $ref: "#/components/schemas/StreamingImageId"
            - description: The ID of the streaming image.
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
      description: <p>Represents a streaming image resource.</p> <p>Streaming images are used by studio users to select which operating system and software they want to use in a Nimble Studio streaming session.</p> <p>Amazon provides a number of streaming images that include popular 3rd-party software.</p> <p>You can create your own streaming images using an Amazon EC2 machine image that you create for this purpose. You can also include software that your users require.</p>
    StreamingInstanceType:
      type: string
      enum:
        - g4dn.xlarge
        - g4dn.2xlarge
        - g4dn.4xlarge
        - g4dn.8xlarge
        - g4dn.12xlarge
        - g4dn.16xlarge
        - g3.4xlarge
        - g3s.xlarge
        - g5.xlarge
        - g5.2xlarge
        - g5.4xlarge
        - g5.8xlarge
        - g5.16xlarge
    StreamingImageId:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 0
      maxLength: 22
    CreateStreamingSessionRequest:
      type: object
      required:
        - launchProfileId
      title: CreateStreamingSessionRequest
      properties:
        ec2InstanceType:
          allOf:
            - $ref: "#/components/schemas/StreamingInstanceType"
            - description: The EC2 Instance type used for the streaming session.
        launchProfileId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the launch profile used to control access from the streaming session.
        ownedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that owns the streaming session. The user that owns the session will be logging into the session and interacting with the virtual workstation.
        streamingImageId:
          allOf:
            - $ref: "#/components/schemas/StreamingImageId"
            - description: The ID of the streaming image.
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
    StreamingSession:
      type: object
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely identifies it. ARNs are unique across all Regions.
        automaticTerminationMode:
          allOf:
            - $ref: "#/components/schemas/AutomaticTerminationMode"
            - description: <p>Indicates if a streaming session created from this launch profile should be terminated automatically or retained without termination after being in a <code>STOPPED</code> state.</p> <ul> <li> <p>When <code>ACTIVATED</code>, the streaming session is scheduled for termination after being in the <code>STOPPED</code> state for the time specified in <code>maxStoppedSessionLengthInMinutes</code>.</p> </li> <li> <p>When <code>DEACTIVATED</code>, the streaming session can remain in the <code>STOPPED</code> state indefinitely.</p> </li> </ul> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>. When allowed, the default value for this parameter is <code>DEACTIVATED</code>.</p>
        backupMode:
          allOf:
            - $ref: "#/components/schemas/SessionBackupMode"
            - description: Shows the current backup setting of the session.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was created.
        createdBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that created the streaming session.
        ec2InstanceType:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The EC2 Instance type used for the streaming session.
        launchProfileId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the launch profile used to control access from the streaming session.
        maxBackupsToRetain:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationMaxBackupsToRetain"
            - description: The maximum number of backups of a streaming session that you can have. When the maximum number of backups is reached, the oldest backup is deleted.
        ownedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that owns the streaming session. The user that owns the session will be logging into the session and interacting with the virtual workstation.
        sessionId:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionId"
            - description: The session ID.
        sessionPersistenceMode:
          allOf:
            - $ref: "#/components/schemas/SessionPersistenceMode"
            - description: Determine if a streaming session created from this launch profile can configure persistent storage. This means that <code>volumeConfiguration</code> and <code>automaticTerminationMode</code> are configured.
        startedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time the session entered <code>START_IN_PROGRESS</code> state.
        startedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that started the streaming session.
        startedFromBackupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The backup ID used to restore a streaming session.
        state:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionState"
            - description: The current state.
        statusCode:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionStatusCode"
            - description: The status code.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The status message for the streaming session.
        stopAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: "The time the streaming session will automatically be stopped if the user doesnâ€™t stop the session themselves. "
        stoppedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time the session entered <code>STOP_IN_PROGRESS</code> state.
        stoppedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that stopped the streaming session.
        streamingImageId:
          allOf:
            - $ref: "#/components/schemas/StreamingImageId"
            - description: The ID of the streaming image.
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
        terminateAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time the streaming session will automatically terminate if not terminated by the user.
        updatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was updated.
        updatedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that most recently updated the resource.
        volumeConfiguration:
          allOf:
            - $ref: "#/components/schemas/VolumeConfiguration"
            - description: <p>Custom volume configuration for the root volumes that are attached to streaming sessions.</p> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.</p>
        volumeRetentionMode:
          allOf:
            - $ref: "#/components/schemas/VolumeRetentionMode"
            - description: Determine if an EBS volume created from this streaming session will be backed up.
      description: A streaming session is a virtual workstation created using a particular launch profile.
    StreamingSessionStreamExpirationInSeconds:
      type: integer
      minimum: 60
      maximum: 3600
    CreateStreamingSessionStreamRequest:
      type: object
      title: CreateStreamingSessionStreamRequest
      properties:
        expirationInSeconds:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionStreamExpirationInSeconds"
            - description: The expiration time in seconds.
    StreamingSessionStream:
      type: object
      properties:
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was created.
        createdBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that created the streaming session stream.
        expiresAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource expires.
        ownedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that owns the streaming session. The user that owns the session will be logging into the session and interacting with the virtual workstation.
        state:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionStreamState"
            - description: The current state.
        statusCode:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionStreamStatusCode"
            - description: The streaming session stream status code.
        streamId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The stream ID.
        url:
          allOf:
            - $ref: "#/components/schemas/SensitiveString"
            - description: The URL to connect to this stream using the DCV client.
      description: A stream is an active connection to a streaming session, enabling a studio user to control the streaming session using a compatible client. Streaming session streams are compatible with the NICE DCV web client, included in the Nimble Studio portal, or the NICE DCV desktop client.
    StudioComponentConfiguration:
      type: object
      properties:
        activeDirectoryConfiguration:
          allOf:
            - $ref: "#/components/schemas/ActiveDirectoryConfiguration"
            - description: The configuration for a Directory Service for Microsoft Active Directory studio resource.
        computeFarmConfiguration:
          allOf:
            - $ref: "#/components/schemas/ComputeFarmConfiguration"
            - description: The configuration for a render farm that is associated with a studio resource.
        licenseServiceConfiguration:
          allOf:
            - $ref: "#/components/schemas/LicenseServiceConfiguration"
            - description: The configuration for a license service that is associated with a studio resource.
        sharedFileSystemConfiguration:
          allOf:
            - $ref: "#/components/schemas/SharedFileSystemConfiguration"
            - description: The configuration for a shared file storage system that is associated with a studio resource.
      description: The configuration of the studio component, based on component type.
    StudioComponentDescription:
      type: string
      minLength: 0
      maxLength: 256
      format: password
    StudioComponentSecurityGroupIdList:
      type: array
      items:
        $ref: "#/components/schemas/SecurityGroupId"
      minItems: 0
      maxItems: 30
    StudioComponentInitializationScriptList:
      type: array
      items:
        $ref: "#/components/schemas/StudioComponentInitializationScript"
    StudioComponentName:
      type: string
      minLength: 0
      maxLength: 64
      format: password
    RoleArn:
      type: string
      minLength: 0
      maxLength: 2048
    StudioComponentScriptParameterKeyValueList:
      type: array
      items:
        $ref: "#/components/schemas/ScriptParameterKeyValue"
      minItems: 0
      maxItems: 30
    StudioComponentSubtype:
      type: string
      enum:
        - AWS_MANAGED_MICROSOFT_AD
        - AMAZON_FSX_FOR_WINDOWS
        - AMAZON_FSX_FOR_LUSTRE
        - CUSTOM
    CreateStudioComponentRequest:
      type: object
      required:
        - name
        - type
      title: CreateStudioComponentRequest
      properties:
        configuration:
          allOf:
            - $ref: "#/components/schemas/StudioComponentConfiguration"
            - description: The configuration of the studio component, based on component type.
        description:
          allOf:
            - $ref: "#/components/schemas/StudioComponentDescription"
            - description: The description.
        ec2SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/StudioComponentSecurityGroupIdList"
            - description: The EC2 security groups that control access to the studio component.
        initializationScripts:
          allOf:
            - $ref: "#/components/schemas/StudioComponentInitializationScriptList"
            - description: Initialization scripts for studio components.
        name:
          allOf:
            - $ref: "#/components/schemas/StudioComponentName"
            - description: The name for the studio component.
        runtimeRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: "An IAM role attached to a Studio Component that gives the studio component access to Amazon Web Services resources at anytime while the instance is running. "
        scriptParameters:
          allOf:
            - $ref: "#/components/schemas/StudioComponentScriptParameterKeyValueList"
            - description: Parameters for the studio component scripts.
        secureInitializationRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: An IAM role attached to Studio Component when the system initialization script runs which give the studio component access to Amazon Web Services resources when the system initialization script runs.
        subtype:
          allOf:
            - $ref: "#/components/schemas/StudioComponentSubtype"
            - description: The specific subtype of a studio component.
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
        type:
          allOf:
            - $ref: "#/components/schemas/StudioComponentType"
            - description: The type of the studio component.
    StudioComponent:
      type: object
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely identifies it. ARNs are unique across all Regions.
        configuration:
          allOf:
            - $ref: "#/components/schemas/StudioComponentConfiguration"
            - description: The configuration of the studio component, based on component type.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was created.
        createdBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that created the studio component.
        description:
          allOf:
            - $ref: "#/components/schemas/StudioComponentDescription"
            - description: A human-readable description for the studio component resource.
        ec2SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/StudioComponentSecurityGroupIdList"
            - description: The EC2 security groups that control access to the studio component.
        initializationScripts:
          allOf:
            - $ref: "#/components/schemas/StudioComponentInitializationScriptList"
            - description: Initialization scripts for studio components.
        name:
          allOf:
            - $ref: "#/components/schemas/StudioComponentName"
            - description: A friendly name for the studio component resource.
        runtimeRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: "An IAM role attached to a Studio Component that gives the studio component access to Amazon Web Services resources at anytime while the instance is running. "
        scriptParameters:
          allOf:
            - $ref: "#/components/schemas/StudioComponentScriptParameterKeyValueList"
            - description: Parameters for the studio component scripts.
        secureInitializationRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: An IAM role attached to Studio Component when the system initialization script runs which give the studio component access to Amazon Web Services resources when the system initialization script runs.
        state:
          allOf:
            - $ref: "#/components/schemas/StudioComponentState"
            - description: The current state.
        statusCode:
          allOf:
            - $ref: "#/components/schemas/StudioComponentStatusCode"
            - description: The status code.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The status message for the studio component.
        studioComponentId:
          allOf:
            - $ref: "#/components/schemas/StudioComponentId"
            - description: The unique identifier for a studio component resource.
        subtype:
          allOf:
            - $ref: "#/components/schemas/StudioComponentSubtype"
            - description: The specific subtype of a studio component.
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
        type:
          allOf:
            - $ref: "#/components/schemas/StudioComponentType"
            - description: The type of the studio component.
        updatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was updated.
        updatedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that most recently updated the resource.
      description: "<p>A studio component represents a network resource to be used by a studio's users and workflows. A typical studio contains studio components for each of the following: render farm, Active Directory, licensing, and file system.</p> <p>Access to a studio component is managed by specifying security groups for the resource, as well as its endpoint.</p> <p>A studio component also has a set of initialization scripts that are returned by <code>GetLaunchProfileInitialization</code>. These initialization scripts run on streaming sessions when they start. They provide users with flexibility in controlling how the studio resources are configured on a streaming session.</p>"
    StudioDisplayName:
      type: string
      minLength: 0
      maxLength: 64
      format: password
    StudioEncryptionConfiguration:
      type: object
      required:
        - keyType
      properties:
        keyArn:
          allOf:
            - $ref: "#/components/schemas/StudioEncryptionConfigurationKeyArn"
            - description: The ARN for a KMS key that is used to encrypt studio data.
        keyType:
          allOf:
            - $ref: "#/components/schemas/StudioEncryptionConfigurationKeyType"
            - description: The type of KMS key that is used to encrypt studio data.
      description: Configuration of the encryption method that is used for the studio.
    StudioName:
      type: string
      pattern: ^[a-z0-9]*$
      minLength: 3
      maxLength: 64
    CreateStudioRequest:
      type: object
      required:
        - adminRoleArn
        - displayName
        - studioName
        - userRoleArn
      title: CreateStudioRequest
      properties:
        adminRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The IAM role that studio admins will assume when logging in to the Nimble Studio portal.
        displayName:
          allOf:
            - $ref: "#/components/schemas/StudioDisplayName"
            - description: A friendly name for the studio.
        studioEncryptionConfiguration:
          allOf:
            - $ref: "#/components/schemas/StudioEncryptionConfiguration"
            - description: The studio encryption configuration.
        studioName:
          allOf:
            - $ref: "#/components/schemas/StudioName"
            - description: The studio name that is used in the URL of the Nimble Studio portal when accessed by Nimble Studio users.
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
        userRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The IAM role that studio users will assume when logging in to the Nimble Studio portal.
    Studio:
      type: object
      properties:
        adminRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The IAM role that studio admins assume when logging in to the Nimble Studio portal.
        arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely identifies it. ARNs are unique across all Regions.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was created.
        displayName:
          allOf:
            - $ref: "#/components/schemas/StudioDisplayName"
            - description: A friendly name for the studio.
        homeRegion:
          allOf:
            - $ref: "#/components/schemas/Region"
            - description: The Amazon Web Services Region where the studio resource is located.
        ssoClientId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The IAM Identity Center application client ID used to integrate with IAM Identity Center. This ID allows IAM Identity Center users to log in to Nimble Studio portal.
        state:
          allOf:
            - $ref: "#/components/schemas/StudioState"
            - description: The current state of the studio resource.
        statusCode:
          allOf:
            - $ref: "#/components/schemas/StudioStatusCode"
            - description: Status codes that provide additional detail on the studio state.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Additional detail on the studio state.
        studioEncryptionConfiguration:
          allOf:
            - $ref: "#/components/schemas/StudioEncryptionConfiguration"
            - description: Configuration of the encryption method that is used for the studio.
        studioId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The unique identifier for a studio resource. In Nimble Studio, all other resources are contained in a studio resource.
        studioName:
          allOf:
            - $ref: "#/components/schemas/StudioName"
            - description: The name of the studio, as included in the URL when accessing it in the Nimble Studio portal.
        studioUrl:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The address of the web page for the studio.
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
        updatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was updated.
        userRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The IAM role that studio users assume when logging in to the Nimble Studio portal.
      description: <p>Represents a studio resource.</p> <p>A studio is the core resource used with Nimble Studio. You must create a studio first, before any other resource type can be created. All other resources you create and manage in Nimble Studio are contained within a studio.</p> <p>When creating a studio, you must provides two IAM roles for use with the Nimble Studio portal. These roles are assumed by your users when they log in to the Nimble Studio portal via IAM Identity Center and your identity source.</p> <p>The user role must have the <code>AmazonNimbleStudio-StudioUser</code> managed policy attached for the portal to function properly.</p> <p>The admin role must have the <code>AmazonNimbleStudio-StudioAdmin</code> managed policy attached for the portal to function properly.</p> <p>Your studio roles must trust the <code>identity.nimble.amazonaws.com</code> service principal to function properly.</p>
    DeleteLaunchProfileMemberRequest:
      type: object
      title: DeleteLaunchProfileMemberRequest
      properties: {}
    DeleteLaunchProfileRequest:
      type: object
      title: DeleteLaunchProfileRequest
      properties: {}
    DeleteStreamingImageRequest:
      type: object
      title: DeleteStreamingImageRequest
      properties: {}
    DeleteStreamingSessionRequest:
      type: object
      title: DeleteStreamingSessionRequest
      properties: {}
    DeleteStudioComponentRequest:
      type: object
      title: DeleteStudioComponentRequest
      properties: {}
    DeleteStudioMemberRequest:
      type: object
      title: DeleteStudioMemberRequest
      properties: {}
    DeleteStudioRequest:
      type: object
      title: DeleteStudioRequest
      properties: {}
    Timestamp:
      type: string
      format: date-time
    EulaId:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      description: Represents a EULA resource.
      minLength: 0
      maxLength: 22
    EulaName:
      type: string
      minLength: 0
      maxLength: 64
    Eula:
      type: object
      properties:
        content:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The EULA content.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was created.
        eulaId:
          allOf:
            - $ref: "#/components/schemas/EulaId"
            - description: The EULA ID.
        name:
          allOf:
            - $ref: "#/components/schemas/EulaName"
            - description: The name for the EULA.
        updatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was updated.
      description: Represents a EULA resource.
    EulaAcceptanceId:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      description: The EULA acceptance ID.
      minLength: 0
      maxLength: 22
    EulaAcceptance:
      type: object
      properties:
        acceptedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the EULA was accepted.
        acceptedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the person who accepted the EULA.
        accepteeId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the acceptee.
        eulaAcceptanceId:
          allOf:
            - $ref: "#/components/schemas/EulaAcceptanceId"
            - description: The EULA acceptance ID.
        eulaId:
          allOf:
            - $ref: "#/components/schemas/EulaId"
            - description: The EULA ID.
      description: The acceptance of a EULA, required to use Amazon-provided streaming images.
    EulaList:
      type: array
      items:
        $ref: "#/components/schemas/Eula"
    GetEulaRequest:
      type: object
      title: GetEulaRequest
      properties: {}
    GetLaunchProfileDetailsRequest:
      type: object
      title: GetLaunchProfileDetailsRequest
      properties: {}
    StreamingImageList:
      type: array
      items:
        $ref: "#/components/schemas/StreamingImage"
    StudioComponentSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/StudioComponentSummary"
    StringList:
      type: array
      items:
        $ref: "#/components/schemas/String"
    GetLaunchProfileInitializationRequest:
      type: object
      title: GetLaunchProfileInitializationRequest
      properties: {}
    LaunchProfileInitialization:
      type: object
      properties:
        activeDirectory:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileInitializationActiveDirectory"
            - description: A <code>LaunchProfileInitializationActiveDirectory</code> resource.
        ec2SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileSecurityGroupIdList"
            - description: The EC2 security groups that control access to the studio component.
        launchProfileId:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileId"
            - description: The ID of the launch profile used to control access from the streaming session.
        launchProfileProtocolVersion:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileProtocolVersion"
            - description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
        launchPurpose:
          allOf:
            - $ref: "#/components/schemas/LaunchPurpose"
            - description: The launch purpose.
        name:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileName"
            - description: The name for the launch profile.
        platform:
          allOf:
            - $ref: "#/components/schemas/LaunchProfilePlatform"
            - description: The platform of the launch platform, either Windows or Linux.
        systemInitializationScripts:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileInitializationScriptList"
            - description: The system initializtion scripts.
        userInitializationScripts:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileInitializationScriptList"
            - description: The user initializtion scripts.
      description: <p>A launch profile initialization contains information required for a workstation or server to connect to a launch profile.</p> <p>This includes scripts, endpoints, security groups, subnets, and other configuration.</p>
    GetLaunchProfileMemberRequest:
      type: object
      title: GetLaunchProfileMemberRequest
      properties: {}
    LaunchProfileMembership:
      type: object
      properties:
        identityStoreId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the identity store.
        persona:
          allOf:
            - $ref: "#/components/schemas/LaunchProfilePersona"
            - description: The persona.
        principalId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The principal ID.
        sid:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Active Directory Security Identifier for this user, if available.
      description: <p>Studio admins can use launch profile membership to delegate launch profile access to studio users in the Nimble Studio portal without writing or maintaining complex IAM policies. A launch profile member is a user association from your studio identity source who is granted permissions to a launch profile.</p> <p>A launch profile member (type USER) provides the following permissions to that launch profile:</p> <ul> <li> <p>GetLaunchProfile</p> </li> <li> <p>GetLaunchProfileInitialization</p> </li> <li> <p>GetLaunchProfileMembers</p> </li> <li> <p>GetLaunchProfileMember</p> </li> <li> <p>CreateStreamingSession</p> </li> <li> <p>GetLaunchProfileDetails</p> </li> </ul>
    GetLaunchProfileRequest:
      type: object
      title: GetLaunchProfileRequest
      properties: {}
    GetStreamingImageRequest:
      type: object
      title: GetStreamingImageRequest
      properties: {}
    GetStreamingSessionBackupRequest:
      type: object
      title: GetStreamingSessionBackupRequest
      properties: {}
    StreamingSessionBackup:
      type: object
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Amazon Resource Name (ARN) that is assigned to a studio resource and uniquely identifies it. ARNs are unique across all Regions.
        backupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the backup.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in for when the resource was created.
        launchProfileId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the launch profile which allowed the backups for the streaming session.
        ownedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that owns the streaming session.
        sessionId:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionId"
            - description: The streaming session ID for the <code>StreamingSessionBackup</code>.
        state:
          $ref: "#/components/schemas/StreamingSessionState"
        statusCode:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionStatusCode"
            - description: The status code.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The status message for the streaming session backup.
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
      description: Information about the streaming session backup.
    GetStreamingSessionRequest:
      type: object
      title: GetStreamingSessionRequest
      properties: {}
    GetStreamingSessionStreamRequest:
      type: object
      title: GetStreamingSessionStreamRequest
      properties: {}
    GetStudioComponentRequest:
      type: object
      title: GetStudioComponentRequest
      properties: {}
    GetStudioMemberRequest:
      type: object
      title: GetStudioMemberRequest
      properties: {}
    StudioMembership:
      type: object
      properties:
        identityStoreId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the identity store.
        persona:
          allOf:
            - $ref: "#/components/schemas/StudioPersona"
            - description: The persona.
        principalId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The principal ID.
        sid:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Active Directory Security Identifier for this user, if available.
      description: <p>A studio member is an association of a user from your studio identity source to elevated permissions that they are granted in the studio.</p> <p>When you add a user to your studio using the Nimble Studio console, they are given access to the studio's IAM Identity Center application and are given access to log in to the Nimble Studio portal. These users have the permissions provided by the studio's user IAM role and do not appear in the studio membership collection. Only studio admins appear in studio membership.</p> <p>When you add a user to studio membership with the ADMIN persona, upon logging in to the Nimble Studio portal, they are granted permissions specified by the Studio's Admin IAM role.</p>
    GetStudioRequest:
      type: object
      title: GetStudioRequest
      properties: {}
    LaunchProfileId:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 0
      maxLength: 22
    LaunchProfileStatusCode:
      type: string
      enum:
        - LAUNCH_PROFILE_CREATED
        - LAUNCH_PROFILE_UPDATED
        - LAUNCH_PROFILE_DELETED
        - LAUNCH_PROFILE_CREATE_IN_PROGRESS
        - LAUNCH_PROFILE_UPDATE_IN_PROGRESS
        - LAUNCH_PROFILE_DELETE_IN_PROGRESS
        - INTERNAL_ERROR
        - STREAMING_IMAGE_NOT_FOUND
        - STREAMING_IMAGE_NOT_READY
        - LAUNCH_PROFILE_WITH_STREAM_SESSIONS_NOT_DELETED
        - ENCRYPTION_KEY_ACCESS_DENIED
        - ENCRYPTION_KEY_NOT_FOUND
        - INVALID_SUBNETS_PROVIDED
        - INVALID_INSTANCE_TYPES_PROVIDED
        - INVALID_SUBNETS_COMBINATION
    StreamConfiguration:
      type: object
      required:
        - clipboardMode
        - ec2InstanceTypes
        - streamingImageIds
      properties:
        automaticTerminationMode:
          allOf:
            - $ref: "#/components/schemas/AutomaticTerminationMode"
            - description: <p>Indicates if a streaming session created from this launch profile should be terminated automatically or retained without termination after being in a <code>STOPPED</code> state.</p> <ul> <li> <p>When <code>ACTIVATED</code>, the streaming session is scheduled for termination after being in the <code>STOPPED</code> state for the time specified in <code>maxStoppedSessionLengthInMinutes</code>.</p> </li> <li> <p>When <code>DEACTIVATED</code>, the streaming session can remain in the <code>STOPPED</code> state indefinitely.</p> </li> </ul> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>. When allowed, the default value for this parameter is <code>DEACTIVATED</code>.</p>
        clipboardMode:
          allOf:
            - $ref: "#/components/schemas/StreamingClipboardMode"
            - description: Allows or deactivates the use of the system clipboard to copy and paste between the streaming session and streaming client.
        ec2InstanceTypes:
          allOf:
            - $ref: "#/components/schemas/StreamingInstanceTypeList"
            - description: The EC2 instance types that users can select from when launching a streaming session with this launch profile.
        maxSessionLengthInMinutes:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationMaxSessionLengthInMinutes"
            - description: The length of time, in minutes, that a streaming session can be active before it is stopped or terminated. After this point, Nimble Studio automatically terminates or stops the session. The default length of time is 690 minutes, and the maximum length of time is 30 days.
        maxStoppedSessionLengthInMinutes:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationMaxStoppedSessionLengthInMinutes"
            - description: <p>Integer that determines if you can start and stop your sessions and how long a session can stay in the <code>STOPPED</code> state. The default value is 0. The maximum value is 5760.</p> <p>This field is allowed only when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code> and <code>automaticTerminationMode</code> is <code>ACTIVATED</code>.</p> <p>If the value is set to 0, your sessions canâ€™t be <code>STOPPED</code>. If you then call <code>StopStreamingSession</code>, the session fails. If the time that a session stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code> value, the session will automatically be terminated (instead of <code>STOPPED</code>).</p> <p>If the value is set to a positive number, the session can be stopped. You can call <code>StopStreamingSession</code> to stop sessions in the <code>READY</code> state. If the time that a session stays in the <code>READY</code> state exceeds the <code>maxSessionLengthInMinutes</code> value, the session will automatically be stopped (instead of terminated).</p>
        sessionBackup:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationSessionBackup"
            - description: Information about the streaming session backup.
        sessionPersistenceMode:
          allOf:
            - $ref: "#/components/schemas/SessionPersistenceMode"
            - description: Determine if a streaming session created from this launch profile can configure persistent storage. This means that <code>volumeConfiguration</code> and <code>automaticTerminationMode</code> are configured.
        sessionStorage:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationSessionStorage"
            - description: The upload storage for a streaming session.
        streamingImageIds:
          allOf:
            - $ref: "#/components/schemas/StreamingImageIdList"
            - description: The streaming images that users can select from when launching a streaming session with this launch profile.
        volumeConfiguration:
          allOf:
            - $ref: "#/components/schemas/VolumeConfiguration"
            - description: <p>Custom volume configuration for the root volumes that are attached to streaming sessions.</p> <p>This parameter is only allowed when <code>sessionPersistenceMode</code> is <code>ACTIVATED</code>.</p>
      description: A configuration for a streaming session.
    ValidationResults:
      type: array
      items:
        $ref: "#/components/schemas/ValidationResult"
    LaunchProfileInitializationActiveDirectory:
      type: object
      properties:
        computerAttributes:
          allOf:
            - $ref: "#/components/schemas/ActiveDirectoryComputerAttributeList"
            - description: A collection of custom attributes for an Active Directory computer.
        directoryId:
          allOf:
            - $ref: "#/components/schemas/DirectoryId"
            - description: The directory ID of the Directory Service for Microsoft Active Directory to access using this launch profile.
        directoryName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The directory name.
        dnsIpAddresses:
          allOf:
            - $ref: "#/components/schemas/ActiveDirectoryDnsIpAddressList"
            - description: The DNS IP address.
        organizationalUnitDistinguishedName:
          allOf:
            - $ref: "#/components/schemas/ActiveDirectoryOrganizationalUnitDistinguishedName"
            - description: The name for the organizational unit distinguished name.
        studioComponentId:
          allOf:
            - $ref: "#/components/schemas/StudioComponentId"
            - description: The unique identifier for a studio component resource.
        studioComponentName:
          allOf:
            - $ref: "#/components/schemas/StudioComponentName"
            - description: The name for the studio component.
      description: The launch profile initialization Active Directory contains information required for the launch profile to connect to the Active Directory.
    LaunchProfileSecurityGroupIdList:
      type: array
      items:
        $ref: "#/components/schemas/SecurityGroupId"
      minItems: 1
    LaunchPurpose:
      type: string
      pattern: ^[A-Z0-9_]+$
      description: The launch purpose.
      minLength: 0
      maxLength: 64
    LaunchProfilePlatform:
      type: string
      enum:
        - LINUX
        - WINDOWS
    LaunchProfileInitializationScriptList:
      type: array
      items:
        $ref: "#/components/schemas/LaunchProfileInitializationScript"
    StudioComponentId:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 0
      maxLength: 22
    StudioComponentInitializationScriptContent:
      type: string
      minLength: 1
      maxLength: 5120
      format: password
    LaunchProfileInitializationScript:
      type: object
      properties:
        runtimeRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: "An IAM role attached to a Studio Component that gives the studio component access to Amazon Web Services resources at anytime while the instance is running. "
        script:
          allOf:
            - $ref: "#/components/schemas/StudioComponentInitializationScriptContent"
            - description: The initialization script.
        secureInitializationRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: An IAM role attached to Studio Component when the system initialization script runs which give the studio component access to Amazon Web Services resources when the system initialization script runs.
        studioComponentId:
          allOf:
            - $ref: "#/components/schemas/StudioComponentId"
            - description: The unique identifier for a studio component resource.
        studioComponentName:
          allOf:
            - $ref: "#/components/schemas/StudioComponentName"
            - description: The name for the studio component.
      description: The launch profile initialization script is used when start streaming session runs.
    LaunchProfileList:
      type: array
      items:
        $ref: "#/components/schemas/LaunchProfile"
    LaunchProfilePersona:
      type: string
      enum:
        - USER
    LaunchProfileMembershipList:
      type: array
      items:
        $ref: "#/components/schemas/LaunchProfileMembership"
      minItems: 0
      maxItems: 20
    LaunchProfileStateList:
      type: array
      items:
        $ref: "#/components/schemas/LaunchProfileState"
    LaunchProfileValidationState:
      type: string
      enum:
        - VALIDATION_NOT_STARTED
        - VALIDATION_IN_PROGRESS
        - VALIDATION_SUCCESS
        - VALIDATION_FAILED
        - VALIDATION_FAILED_INTERNAL_SERVER_ERROR
    LaunchProfileValidationStatusCode:
      type: string
      enum:
        - VALIDATION_NOT_STARTED
        - VALIDATION_IN_PROGRESS
        - VALIDATION_SUCCESS
        - VALIDATION_FAILED_INVALID_SUBNET_ROUTE_TABLE_ASSOCIATION
        - VALIDATION_FAILED_SUBNET_NOT_FOUND
        - VALIDATION_FAILED_INVALID_SECURITY_GROUP_ASSOCIATION
        - VALIDATION_FAILED_INVALID_ACTIVE_DIRECTORY
        - VALIDATION_FAILED_UNAUTHORIZED
        - VALIDATION_FAILED_INTERNAL_SERVER_ERROR
    LaunchProfileValidationStatusMessage:
      type: string
    LaunchProfileValidationType:
      type: string
      enum:
        - VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT
        - VALIDATE_SUBNET_ASSOCIATION
        - VALIDATE_NETWORK_ACL_ASSOCIATION
        - VALIDATE_SECURITY_GROUP_ASSOCIATION
    LinuxMountPoint:
      type: string
      pattern: ^(/?|(\$HOME)?(/[^/\n\s\\]+)*)$
      minLength: 0
      maxLength: 128
      format: password
    ListEulaAcceptancesRequest:
      type: object
      title: ListEulaAcceptancesRequest
      properties: {}
    ListEulasRequest:
      type: object
      title: ListEulasRequest
      properties: {}
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    ListLaunchProfileMembersRequest:
      type: object
      title: ListLaunchProfileMembersRequest
      properties: {}
    ListLaunchProfilesRequest:
      type: object
      title: ListLaunchProfilesRequest
      properties: {}
    ListStreamingImagesRequest:
      type: object
      title: ListStreamingImagesRequest
      properties: {}
    ListStreamingSessionBackupsRequest:
      type: object
      title: ListStreamingSessionBackupsRequest
      properties: {}
    StreamingSessionBackupList:
      type: array
      items:
        $ref: "#/components/schemas/StreamingSessionBackup"
    ListStreamingSessionsRequest:
      type: object
      title: ListStreamingSessionsRequest
      properties: {}
    StreamingSessionList:
      type: array
      items:
        $ref: "#/components/schemas/StreamingSession"
    StudioComponentStateList:
      type: array
      items:
        $ref: "#/components/schemas/StudioComponentState"
    StudioComponentTypeList:
      type: array
      items:
        $ref: "#/components/schemas/StudioComponentType"
    ListStudioComponentsRequest:
      type: object
      title: ListStudioComponentsRequest
      properties: {}
    StudioComponentList:
      type: array
      items:
        $ref: "#/components/schemas/StudioComponent"
      minItems: 0
      maxItems: 50
    ListStudioMembersRequest:
      type: object
      title: ListStudioMembersRequest
      properties: {}
    StudioMembershipList:
      type: array
      items:
        $ref: "#/components/schemas/StudioMembership"
      minItems: 0
      maxItems: 20
    ListStudiosRequest:
      type: object
      title: ListStudiosRequest
      properties: {}
    StudioList:
      type: array
      items:
        $ref: "#/components/schemas/Studio"
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    NewLaunchProfileMemberList:
      type: array
      items:
        $ref: "#/components/schemas/NewLaunchProfileMember"
      minItems: 1
      maxItems: 20
    StudioPersona:
      type: string
      enum:
        - ADMINISTRATOR
    NewStudioMemberList:
      type: array
      items:
        $ref: "#/components/schemas/NewStudioMember"
      minItems: 1
      maxItems: 20
    PutLaunchProfileMembersRequest:
      type: object
      required:
        - identityStoreId
        - members
      title: PutLaunchProfileMembersRequest
      properties:
        identityStoreId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the identity store.
        members:
          allOf:
            - $ref: "#/components/schemas/NewLaunchProfileMemberList"
            - description: A list of members.
    PutStudioMembersRequest:
      type: object
      required:
        - identityStoreId
        - members
      title: PutStudioMembersRequest
      properties:
        identityStoreId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the identity store.
        members:
          allOf:
            - $ref: "#/components/schemas/NewStudioMemberList"
            - description: A list of members.
    Region:
      type: string
      pattern: "[a-z]{2}-?(iso|gov)?-{1}[a-z]*-{1}[0-9]"
      minLength: 0
      maxLength: 50
    ScriptParameterKey:
      type: string
      pattern: ^[a-zA-Z_][a-zA-Z0-9_]+$
      description: A script parameter key.
      minLength: 1
      maxLength: 64
    ScriptParameterValue:
      type: string
      description: A script parameter value.
      minLength: 1
      maxLength: 256
    SessionBackupMode:
      type: string
      enum:
        - AUTOMATIC
        - DEACTIVATED
    WindowsMountDrive:
      type: string
      pattern: ^[A-Z]$
    StartStreamingSessionRequest:
      type: object
      title: StartStreamingSessionRequest
      properties:
        backupId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the backup.
    StartStudioSSOConfigurationRepairRequest:
      type: object
      title: StartStudioSSOConfigurationRepairRequest
      properties: {}
    VolumeRetentionMode:
      type: string
      enum:
        - RETAIN
        - DELETE
    StopStreamingSessionRequest:
      type: object
      title: StopStreamingSessionRequest
      properties:
        volumeRetentionMode:
          allOf:
            - $ref: "#/components/schemas/VolumeRetentionMode"
            - description: Adds additional instructions to a streaming session stop action to either retain the EBS volumes or delete the EBS volumes.
    StreamConfigurationMaxBackupsToRetain:
      type: integer
      minimum: 0
      maximum: 10
    StreamingSessionStorageModeList:
      type: array
      items:
        $ref: "#/components/schemas/StreamingSessionStorageMode"
      minItems: 1
    StreamingSessionStorageRoot:
      type: object
      properties:
        linux:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionStorageRootPathLinux"
            - description: The folder path in Linux workstations where files are uploaded.
        windows:
          allOf:
            - $ref: "#/components/schemas/StreamingSessionStorageRootPathWindows"
            - description: The folder path in Windows workstations where files are uploaded.
      description: The upload storage root location (folder) on streaming workstations where files are uploaded.
    StreamingImageEncryptionConfiguration:
      type: object
      required:
        - keyType
      properties:
        keyArn:
          allOf:
            - $ref: "#/components/schemas/StreamingImageEncryptionConfigurationKeyArn"
            - description: The ARN for a KMS key that is used to encrypt studio data.
        keyType:
          allOf:
            - $ref: "#/components/schemas/StreamingImageEncryptionConfigurationKeyType"
            - description: The type of KMS key that is used to encrypt studio data.
      description: Specifies how a streaming image is encrypted.
    StreamingImageOwner:
      type: string
      description: <p>StreamingImageOwner is the owner of a particular streaming image.</p> <p>This string is either the studioId that contains the streaming image, or the word <code>AMAZON</code> for images provided by Nimble Studio.</p>
    StreamingImagePlatform:
      type: string
      pattern: ^[a-zA-Z]*$
      description: The platform of this streaming image, either Windows or Linux.
    StreamingImageState:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - READY
        - DELETE_IN_PROGRESS
        - DELETED
        - UPDATE_IN_PROGRESS
        - UPDATE_FAILED
        - CREATE_FAILED
        - DELETE_FAILED
    StreamingImageStatusCode:
      type: string
      enum:
        - STREAMING_IMAGE_CREATE_IN_PROGRESS
        - STREAMING_IMAGE_READY
        - STREAMING_IMAGE_DELETE_IN_PROGRESS
        - STREAMING_IMAGE_DELETED
        - STREAMING_IMAGE_UPDATE_IN_PROGRESS
        - INTERNAL_ERROR
        - ACCESS_DENIED
      description: The status code.
    StreamingImageEncryptionConfigurationKeyArn:
      type: string
      pattern: ^arn:.*
      minLength: 4
    StreamingImageEncryptionConfigurationKeyType:
      type: string
      enum:
        - CUSTOMER_MANAGED_KEY
    StreamingSessionId:
      type: string
    StreamingSessionState:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - READY
        - DELETED
        - CREATE_FAILED
        - DELETE_FAILED
        - STOP_IN_PROGRESS
        - START_IN_PROGRESS
        - STOPPED
        - STOP_FAILED
        - START_FAILED
      description: The streaming session state.
    StreamingSessionStatusCode:
      type: string
      enum:
        - STREAMING_SESSION_READY
        - STREAMING_SESSION_DELETED
        - STREAMING_SESSION_CREATE_IN_PROGRESS
        - STREAMING_SESSION_DELETE_IN_PROGRESS
        - INTERNAL_ERROR
        - INSUFFICIENT_CAPACITY
        - ACTIVE_DIRECTORY_DOMAIN_JOIN_ERROR
        - NETWORK_CONNECTION_ERROR
        - INITIALIZATION_SCRIPT_ERROR
        - DECRYPT_STREAMING_IMAGE_ERROR
        - NETWORK_INTERFACE_ERROR
        - STREAMING_SESSION_STOPPED
        - STREAMING_SESSION_STARTED
        - STREAMING_SESSION_STOP_IN_PROGRESS
        - STREAMING_SESSION_START_IN_PROGRESS
        - AMI_VALIDATION_ERROR
    StreamingSessionStorageMode:
      type: string
      enum:
        - UPLOAD
    StreamingSessionStorageRootPathLinux:
      type: string
      pattern: ^(\$HOME|/)[/]?([A-Za-z0-9-_]+/)*([A-Za-z0-9_-]+)$
      minLength: 1
      maxLength: 128
      format: password
    StreamingSessionStorageRootPathWindows:
      type: string
      pattern: ^((\%HOMEPATH\%)|[a-zA-Z]:)[\\/](?:[a-zA-Z0-9_-]+[\\/])*[a-zA-Z0-9_-]+$
      minLength: 1
      maxLength: 128
      format: password
    StreamingSessionStreamState:
      type: string
      enum:
        - READY
        - CREATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - DELETED
        - CREATE_FAILED
        - DELETE_FAILED
    StreamingSessionStreamStatusCode:
      type: string
      enum:
        - STREAM_CREATE_IN_PROGRESS
        - STREAM_READY
        - STREAM_DELETE_IN_PROGRESS
        - STREAM_DELETED
        - INTERNAL_ERROR
        - NETWORK_CONNECTION_ERROR
    StudioState:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - READY
        - UPDATE_IN_PROGRESS
        - DELETE_IN_PROGRESS
        - DELETED
        - DELETE_FAILED
        - CREATE_FAILED
        - UPDATE_FAILED
    StudioStatusCode:
      type: string
      enum:
        - STUDIO_CREATED
        - STUDIO_DELETED
        - STUDIO_UPDATED
        - STUDIO_CREATE_IN_PROGRESS
        - STUDIO_UPDATE_IN_PROGRESS
        - STUDIO_DELETE_IN_PROGRESS
        - STUDIO_WITH_LAUNCH_PROFILES_NOT_DELETED
        - STUDIO_WITH_STUDIO_COMPONENTS_NOT_DELETED
        - STUDIO_WITH_STREAMING_IMAGES_NOT_DELETED
        - AWS_SSO_NOT_ENABLED
        - AWS_SSO_ACCESS_DENIED
        - ROLE_NOT_OWNED_BY_STUDIO_OWNER
        - ROLE_COULD_NOT_BE_ASSUMED
        - INTERNAL_ERROR
        - ENCRYPTION_KEY_NOT_FOUND
        - ENCRYPTION_KEY_ACCESS_DENIED
        - AWS_SSO_CONFIGURATION_REPAIRED
        - AWS_SSO_CONFIGURATION_REPAIR_IN_PROGRESS
        - AWS_STS_REGION_DISABLED
      description: The status code.
    StudioComponentStatusCode:
      type: string
      enum:
        - ACTIVE_DIRECTORY_ALREADY_EXISTS
        - STUDIO_COMPONENT_CREATED
        - STUDIO_COMPONENT_UPDATED
        - STUDIO_COMPONENT_DELETED
        - ENCRYPTION_KEY_ACCESS_DENIED
        - ENCRYPTION_KEY_NOT_FOUND
        - STUDIO_COMPONENT_CREATE_IN_PROGRESS
        - STUDIO_COMPONENT_UPDATE_IN_PROGRESS
        - STUDIO_COMPONENT_DELETE_IN_PROGRESS
        - INTERNAL_ERROR
      description: <p>The current status of the studio component resource.</p> <p>When the resource is in the <code>READY</code> state, the status code signals what the last mutation made to the resource was.</p> <p>When the resource is in a <code>CREATE_FAILED</code>, <code>UPDATE_FAILED</code>, or <code>DELETE_FAILED</code> state, the status code signals what went wrong and why the mutation failed.</p>
    StudioComponentInitializationScriptRunContext:
      type: string
      enum:
        - SYSTEM_INITIALIZATION
        - USER_INITIALIZATION
    StudioComponentSummary:
      type: object
      properties:
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was created.
        createdBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that created the studio component.
        description:
          allOf:
            - $ref: "#/components/schemas/StudioComponentDescription"
            - description: The description.
        name:
          allOf:
            - $ref: "#/components/schemas/StudioComponentName"
            - description: The name for the studio component.
        studioComponentId:
          allOf:
            - $ref: "#/components/schemas/StudioComponentId"
            - description: The unique identifier for a studio component resource.
        subtype:
          allOf:
            - $ref: "#/components/schemas/StudioComponentSubtype"
            - description: The specific subtype of a studio component.
        type:
          allOf:
            - $ref: "#/components/schemas/StudioComponentType"
            - description: The type of the studio component.
        updatedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The ISO timestamp in seconds for when the resource was updated.
        updatedBy:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The user ID of the user that most recently updated the resource.
      description: The studio component's summary.
    TagResourceRequest:
      type: object
      title: TagResourceRequest
      properties:
        tags:
          allOf:
            - $ref: "#/components/schemas/Tags"
            - description: A collection of labels, in the form of key-value pairs, that apply to this resource.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateLaunchProfileMemberRequest:
      type: object
      required:
        - persona
      title: UpdateLaunchProfileMemberRequest
      properties:
        persona:
          allOf:
            - $ref: "#/components/schemas/LaunchProfilePersona"
            - description: The persona.
    UpdateLaunchProfileRequest:
      type: object
      title: UpdateLaunchProfileRequest
      properties:
        description:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileDescription"
            - description: The description.
        launchProfileProtocolVersions:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileProtocolVersionList"
            - description: The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
        name:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileName"
            - description: The name for the launch profile.
        streamConfiguration:
          allOf:
            - $ref: "#/components/schemas/StreamConfigurationCreate"
            - description: A configuration for a streaming session.
        studioComponentIds:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileStudioComponentIdList"
            - description: Unique identifiers for a collection of studio components that can be used with this launch profile.
    UpdateStreamingImageRequest:
      type: object
      title: UpdateStreamingImageRequest
      properties:
        description:
          allOf:
            - $ref: "#/components/schemas/StreamingImageDescription"
            - description: The description.
        name:
          allOf:
            - $ref: "#/components/schemas/StreamingImageName"
            - description: The name for the streaming image.
    UpdateStudioComponentRequest:
      type: object
      title: UpdateStudioComponentRequest
      properties:
        configuration:
          allOf:
            - $ref: "#/components/schemas/StudioComponentConfiguration"
            - description: The configuration of the studio component, based on component type.
        description:
          allOf:
            - $ref: "#/components/schemas/StudioComponentDescription"
            - description: The description.
        ec2SecurityGroupIds:
          allOf:
            - $ref: "#/components/schemas/StudioComponentSecurityGroupIdList"
            - description: The EC2 security groups that control access to the studio component.
        initializationScripts:
          allOf:
            - $ref: "#/components/schemas/StudioComponentInitializationScriptList"
            - description: Initialization scripts for studio components.
        name:
          allOf:
            - $ref: "#/components/schemas/StudioComponentName"
            - description: The name for the studio component.
        runtimeRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: "An IAM role attached to a Studio Component that gives the studio component access to Amazon Web Services resources at anytime while the instance is running. "
        scriptParameters:
          allOf:
            - $ref: "#/components/schemas/StudioComponentScriptParameterKeyValueList"
            - description: Parameters for the studio component scripts.
        secureInitializationRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: An IAM role attached to Studio Component when the system initialization script runs which give the studio component access to Amazon Web Services resources when the system initialization script runs.
        subtype:
          allOf:
            - $ref: "#/components/schemas/StudioComponentSubtype"
            - description: The specific subtype of a studio component.
        type:
          allOf:
            - $ref: "#/components/schemas/StudioComponentType"
            - description: The type of the studio component.
    UpdateStudioRequest:
      type: object
      title: UpdateStudioRequest
      properties:
        adminRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The IAM role that Studio Admins will assume when logging in to the Nimble Studio portal.
        displayName:
          allOf:
            - $ref: "#/components/schemas/StudioDisplayName"
            - description: A friendly name for the studio.
        userRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The IAM role that Studio Users will assume when logging in to the Nimble Studio portal.
    ValidationResult:
      type: object
      required:
        - state
        - statusCode
        - statusMessage
        - type
      properties:
        state:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileValidationState"
            - description: The current state.
        statusCode:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileValidationStatusCode"
            - description: The status code. This will contain the failure reason if the state is <code>VALIDATION_FAILED</code>.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileValidationStatusMessage"
            - description: The status message for the validation result.
        type:
          allOf:
            - $ref: "#/components/schemas/LaunchProfileValidationType"
            - description: The type of the validation result.
      description: The launch profile validation result.
    VolumeIops:
      type: integer
      minimum: 3000
      maximum: 16000
    VolumeSizeInGiB:
      type: integer
      minimum: 100
      maximum: 16000
    VolumeThroughputInMiBs:
      type: integer
      minimum: 125
      maximum: 1000
security:
  - hmac: []
