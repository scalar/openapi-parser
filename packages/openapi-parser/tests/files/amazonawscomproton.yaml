openapi: 3.0.0
info:
  version: 2020-07-20
  x-release: v4
  title: AWS Proton
  description: <p>This is the Proton Service API Reference. It provides descriptions, syntax and usage examples for each of the <a href="https://docs.aws.amazon.com/proton/latest/APIReference/API_Operations.html">actions</a> and <a href="https://docs.aws.amazon.com/proton/latest/APIReference/API_Types.html">data types</a> for the Proton service.</p> <p>The documentation for each action shows the Query API request parameters and the XML response.</p> <p>Alternatively, you can use the Amazon Web Services CLI to access an API. For more information, see the <a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html">Amazon Web Services Command Line Interface User Guide</a>.</p> <p>The Proton service is a two-pronged automation framework. Administrators create service templates to provide standardized infrastructure and deployment tooling for serverless and container based applications. Developers, in turn, select from the available service templates to automate their application or service deployments.</p> <p>Because administrators define the infrastructure and tooling that Proton deploys and manages, they need permissions to use all of the listed API operations.</p> <p>When developers select a specific infrastructure and tooling set, Proton deploys their applications. To monitor their applications that are running on Proton, developers need permissions to the service <i>create</i>, <i>list</i>, <i>update</i> and <i>delete</i> API operations and the service instance <i>list</i> and <i>update</i> API operations.</p> <p>To learn more about Proton, see the <a href="https://docs.aws.amazon.com/proton/latest/userguide/Welcome.html">Proton User Guide</a>.</p> <p> <b>Ensuring Idempotency</b> </p> <p>When you make a mutating API request, the request typically returns a result before the asynchronous workflows of the operation are complete. Operations might also time out or encounter other server issues before they're complete, even if the request already returned a result. This might make it difficult to determine whether the request succeeded. Moreover, you might need to retry the request multiple times to ensure that the operation completes successfully. However, if the original request and the subsequent retries are successful, the operation occurs multiple times. This means that you might create more resources than you intended.</p> <p> <i>Idempotency</i> ensures that an API request action completes no more than one time. With an idempotent request, if the original request action completes successfully, any subsequent retries complete successfully without performing any further actions. However, the result might contain updated information, such as the current creation status.</p> <p>The following lists of APIs are grouped according to methods that ensure idempotency.</p> <p> <b>Idempotent create APIs with a client token</b> </p> <p>The API actions in this list support idempotency with the use of a <i>client token</i>. The corresponding Amazon Web Services CLI commands also support idempotency using a client token. A client token is a unique, case-sensitive string of up to 64 ASCII characters. To make an idempotent API request using one of these actions, specify a client token in the request. We recommend that you <i>don't</i> reuse the same client token for other API requests. If you donâ€™t provide a client token for these APIs, a default client token is automatically provided by SDKs.</p> <p>Given a request action that has succeeded:</p> <p>If you retry the request using the same client token and the same parameters, the retry succeeds without performing any further actions other than returning the original resource detail data in the response.</p> <p>If you retry the request using the same client token, but one or more of the parameters are different, the retry throws a <code>ValidationException</code> with an <code>IdempotentParameterMismatch</code> error.</p> <p>Client tokens expire eight hours after a request is made. If you retry the request with the expired token, a new resource is created.</p> <p>If the original resource is deleted and you retry the request, a new resource is created.</p> <p>Idempotent create APIs with a client token:</p> <ul> <li> <p>CreateEnvironmentTemplateVersion</p> </li> <li> <p>CreateServiceTemplateVersion</p> </li> <li> <p>CreateEnvironmentAccountConnection</p> </li> </ul> <p> <b>Idempotent create APIs</b> </p> <p>Given a request action that has succeeded:</p> <p>If you retry the request with an API from this group, and the original resource <i>hasn't</i> been modified, the retry succeeds without performing any further actions other than returning the original resource detail data in the response.</p> <p>If the original resource has been modified, the retry throws a <code>ConflictException</code>.</p> <p>If you retry with different input parameters, the retry throws a <code>ValidationException</code> with an <code>IdempotentParameterMismatch</code> error.</p> <p>Idempotent create APIs:</p> <ul> <li> <p>CreateEnvironmentTemplate</p> </li> <li> <p>CreateServiceTemplate</p> </li> <li> <p>CreateEnvironment</p> </li> <li> <p>CreateService</p> </li> </ul> <p> <b>Idempotent delete APIs</b> </p> <p>Given a request action that has succeeded:</p> <p>When you retry the request with an API from this group and the resource was deleted, its metadata is returned in the response.</p> <p>If you retry and the resource doesn't exist, the response is empty.</p> <p>In both cases, the retry succeeds.</p> <p>Idempotent delete APIs:</p> <ul> <li> <p>DeleteEnvironmentTemplate</p> </li> <li> <p>DeleteEnvironmentTemplateVersion</p> </li> <li> <p>DeleteServiceTemplate</p> </li> <li> <p>DeleteServiceTemplateVersion</p> </li> <li> <p>DeleteEnvironmentAccountConnection</p> </li> </ul> <p> <b>Asynchronous idempotent delete APIs</b> </p> <p>Given a request action that has succeeded:</p> <p>If you retry the request with an API from this group, if the original request delete operation status is <code>DELETE_IN_PROGRESS</code>, the retry returns the resource detail data in the response without performing any further actions.</p> <p>If the original request delete operation is complete, a retry returns an empty response.</p> <p>Asynchronous idempotent delete APIs:</p> <ul> <li> <p>DeleteEnvironment</p> </li> <li> <p>DeleteService</p> </li> </ul>
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: proton
  x-aws-signingName: proton
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/proton-2020-07-20.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/proton/
servers:
  - url: http://proton.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Proton multi-region endpoint
  - url: https://proton.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS Proton multi-region endpoint
  - url: http://proton.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Proton endpoint for China (Beijing) and China (Ningxia)
  - url: https://proton.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS Proton endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /#X-Amz-Target=AwsProton20200720.AcceptEnvironmentAccountConnection:
    post:
      operationId: AcceptEnvironmentAccountConnection
      description: <p>In a management account, an environment account connection request is accepted. When the environment account connection request is accepted, Proton can use the associated IAM role to provision environment infrastructure resources in the associated environment account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton User guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptEnvironmentAccountConnectionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptEnvironmentAccountConnectionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.AcceptEnvironmentAccountConnection
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CancelComponentDeployment:
    post:
      operationId: CancelComponentDeployment
      description: <p>Attempts to cancel a component deployment (for a component that is in the <code>IN_PROGRESS</code> deployment status).</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelComponentDeploymentOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelComponentDeploymentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CancelComponentDeployment
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CancelEnvironmentDeployment:
    post:
      operationId: CancelEnvironmentDeployment
      description: <p>Attempts to cancel an environment deployment on an <a>UpdateEnvironment</a> action, if the deployment is <code>IN_PROGRESS</code>. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-env-update.html">Update an environment</a> in the <i>Proton User guide</i>.</p> <p>The following list includes potential cancellation scenarios.</p> <ul> <li> <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p> </li> <li> <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p> </li> <li> <p>If the current <a>UpdateEnvironment</a> action succeeds before the cancellation attempt starts, the resulting deployment state is <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelEnvironmentDeploymentOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelEnvironmentDeploymentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CancelEnvironmentDeployment
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CancelServiceInstanceDeployment:
    post:
      operationId: CancelServiceInstanceDeployment
      description: <p>Attempts to cancel a service instance deployment on an <a>UpdateServiceInstance</a> action, if the deployment is <code>IN_PROGRESS</code>. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-svc-instance-update.html">Update a service instance</a> in the <i>Proton User guide</i>.</p> <p>The following list includes potential cancellation scenarios.</p> <ul> <li> <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p> </li> <li> <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p> </li> <li> <p>If the current <a>UpdateServiceInstance</a> action succeeds before the cancellation attempt starts, the resulting deployment state is <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelServiceInstanceDeploymentOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelServiceInstanceDeploymentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CancelServiceInstanceDeployment
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CancelServicePipelineDeployment:
    post:
      operationId: CancelServicePipelineDeployment
      description: <p>Attempts to cancel a service pipeline deployment on an <a>UpdateServicePipeline</a> action, if the deployment is <code>IN_PROGRESS</code>. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-svc-pipeline-update.html">Update a service pipeline</a> in the <i>Proton User guide</i>.</p> <p>The following list includes potential cancellation scenarios.</p> <ul> <li> <p>If the cancellation attempt succeeds, the resulting deployment state is <code>CANCELLED</code>.</p> </li> <li> <p>If the cancellation attempt fails, the resulting deployment state is <code>FAILED</code>.</p> </li> <li> <p>If the current <a>UpdateServicePipeline</a> action succeeds before the cancellation attempt starts, the resulting deployment state is <code>SUCCEEDED</code> and the cancellation attempt has no effect.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelServicePipelineDeploymentOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelServicePipelineDeploymentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CancelServicePipelineDeployment
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateComponent:
    post:
      operationId: CreateComponent
      description: <p>Create an Proton component. A component is an infrastructure extension for a service instance.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateComponentOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateComponentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateComponent
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateEnvironment:
    post:
      operationId: CreateEnvironment
      description: '<p>Deploy a new environment. An Proton environment is created from an environment template that defines infrastructure and resources that can be shared across services.</p> <p class="title"> <b>You can provision environments using the following methods:</b> </p> <ul> <li> <p>Amazon Web Services-managed provisioning: Proton makes direct calls to provision your resources.</p> </li> <li> <p>Self-managed provisioning: Proton makes pull requests on your repository to provide compiled infrastructure as code (IaC) files that your IaC engine uses to provision resources.</p> </li> </ul> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-environments.html">Environments</a> and <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-works-prov-methods.html">Provisioning methods</a> in the <i>Proton User Guide</i>.</p>'
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEnvironmentOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEnvironmentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateEnvironment
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateEnvironmentAccountConnection:
    post:
      operationId: CreateEnvironmentAccountConnection
      description: <p>Create an environment account connection in an environment account so that environment infrastructure resources can be provisioned in the environment account from a management account.</p> <p>An environment account connection is a secure bi-directional connection between a <i>management account</i> and an <i>environment account</i> that maintains authorization and permissions. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton User guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEnvironmentAccountConnectionOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEnvironmentAccountConnectionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateEnvironmentAccountConnection
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateEnvironmentTemplate:
    post:
      operationId: CreateEnvironmentTemplate
      description: <p>Create an environment template for Proton. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-templates.html">Environment Templates</a> in the <i>Proton User Guide</i>.</p> <p>You can create an environment template in one of the two following ways:</p> <ul> <li> <p>Register and publish a <i>standard</i> environment template that instructs Proton to deploy and manage environment infrastructure.</p> </li> <li> <p>Register and publish a <i>customer managed</i> environment template that connects Proton to your existing provisioned infrastructure that you manage. Proton <i>doesn't</i> manage your existing provisioned infrastructure. To create an environment template for customer provisioned and managed infrastructure, include the <code>provisioning</code> parameter and set the value to <code>CUSTOMER_MANAGED</code>. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/template-create.html">Register and publish an environment template</a> in the <i>Proton User Guide</i>.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEnvironmentTemplateOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEnvironmentTemplateInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateEnvironmentTemplate
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateEnvironmentTemplateVersion:
    post:
      operationId: CreateEnvironmentTemplateVersion
      description: Create a new major or minor version of an environment template. A major version of an environment template is a version that <i>isn't</i> backwards compatible. A minor version of an environment template is a version that's backwards compatible within its major version.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEnvironmentTemplateVersionOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEnvironmentTemplateVersionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateEnvironmentTemplateVersion
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateRepository:
    post:
      operationId: CreateRepository
      description: <p>Create and register a link to a repository. Proton uses the link to repeatedly access the repository, to either push to it (self-managed provisioning) or pull from it (template sync). You can share a linked repository across multiple resources (like environments using self-managed provisioning, or synced templates). When you create a repository link, Proton creates a <a href="https://docs.aws.amazon.com/proton/latest/userguide/using-service-linked-roles.html">service-linked role</a> for you.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-works-prov-methods.html#ag-works-prov-methods-self">Self-managed provisioning</a>, <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-template-authoring.html#ag-template-bundles">Template bundles</a>, and <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-template-sync-configs.html">Template sync configurations</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRepositoryOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRepositoryInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateRepository
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateService:
    post:
      operationId: CreateService
      description: Create an Proton service. An Proton service is an instantiation of a service template and often includes several service instances and pipeline. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-services.html">Services</a> in the <i>Proton User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServiceOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateService
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateServiceInstance:
    post:
      operationId: CreateServiceInstance
      description: Create a service instance.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServiceInstanceOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceInstanceInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateServiceInstance
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateServiceSyncConfig:
    post:
      operationId: CreateServiceSyncConfig
      description: Create the Proton Ops configuration file.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServiceSyncConfigOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceSyncConfigInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateServiceSyncConfig
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateServiceTemplate:
    post:
      operationId: CreateServiceTemplate
      description: Create a service template. The administrator creates a service template to define standardized infrastructure and an optional CI/CD service pipeline. Developers, in turn, select the service template from Proton. If the selected service template includes a service pipeline definition, they provide a link to their source code repository. Proton then deploys and manages the infrastructure defined by the selected service template. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-templates.html">Proton templates</a> in the <i>Proton User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServiceTemplateOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceTemplateInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateServiceTemplate
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateServiceTemplateVersion:
    post:
      operationId: CreateServiceTemplateVersion
      description: Create a new major or minor version of a service template. A major version of a service template is a version that <i>isn't</i> backward compatible. A minor version of a service template is a version that's backward compatible within its major version.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServiceTemplateVersionOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateServiceTemplateVersionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateServiceTemplateVersion
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.CreateTemplateSyncConfig:
    post:
      operationId: CreateTemplateSyncConfig
      description: <p>Set up a template to create new template versions automatically by tracking a linked repository. A linked repository is a repository that has been registered with Proton. For more information, see <a>CreateRepository</a>.</p> <p>When a commit is pushed to your linked repository, Proton checks for changes to your repository template bundles. If it detects a template bundle change, a new major or minor version of its template is created, if the version doesnâ€™t already exist. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-template-sync-configs.html">Template sync configurations</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTemplateSyncConfigOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTemplateSyncConfigInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.CreateTemplateSyncConfig
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.DeleteComponent:
    post:
      operationId: DeleteComponent
      description: <p>Delete an Proton component resource.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteComponentOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteComponentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteComponent
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironment:
    post:
      operationId: DeleteEnvironment
      description: Delete an environment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteEnvironmentOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteEnvironmentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteEnvironment
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironmentAccountConnection:
    post:
      operationId: DeleteEnvironmentAccountConnection
      description: <p>In an environment account, delete an environment account connection.</p> <p>After you delete an environment account connection thatâ€™s in use by an Proton environment, Proton <i>canâ€™t</i> manage the environment infrastructure resources until a new environment account connection is accepted for the environment account and associated environment. You're responsible for cleaning up provisioned resources that remain without an environment connection.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton User guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteEnvironmentAccountConnectionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteEnvironmentAccountConnectionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteEnvironmentAccountConnection
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironmentTemplate:
    post:
      operationId: DeleteEnvironmentTemplate
      description: If no other major or minor versions of an environment template exist, delete the environment template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteEnvironmentTemplateOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteEnvironmentTemplateInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteEnvironmentTemplate
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.DeleteEnvironmentTemplateVersion:
    post:
      operationId: DeleteEnvironmentTemplateVersion
      description: <p>If no other minor versions of an environment template exist, delete a major version of the environment template if it's not the <code>Recommended</code> version. Delete the <code>Recommended</code> version of the environment template if no other major versions or minor versions of the environment template exist. A major version of an environment template is a version that's not backward compatible.</p> <p>Delete a minor version of an environment template if it <i>isn't</i> the <code>Recommended</code> version. Delete a <code>Recommended</code> minor version of the environment template if no other minor versions of the environment template exist. A minor version of an environment template is a version that's backward compatible.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteEnvironmentTemplateVersionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteEnvironmentTemplateVersionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteEnvironmentTemplateVersion
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.DeleteRepository:
    post:
      operationId: DeleteRepository
      description: De-register and unlink your repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteRepositoryOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteRepositoryInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteRepository
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.DeleteService:
    post:
      operationId: DeleteService
      description: <p>Delete a service, with its instances and pipeline.</p> <note> <p>You can't delete a service if it has any service instances that have components attached to them.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteServiceOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteServiceInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteService
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.DeleteServiceSyncConfig:
    post:
      operationId: DeleteServiceSyncConfig
      description: Delete the Proton Ops file.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteServiceSyncConfigOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteServiceSyncConfigInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteServiceSyncConfig
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.DeleteServiceTemplate:
    post:
      operationId: DeleteServiceTemplate
      description: If no other major or minor versions of the service template exist, delete the service template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteServiceTemplateOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteServiceTemplateInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteServiceTemplate
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.DeleteServiceTemplateVersion:
    post:
      operationId: DeleteServiceTemplateVersion
      description: <p>If no other minor versions of a service template exist, delete a major version of the service template if it's not the <code>Recommended</code> version. Delete the <code>Recommended</code> version of the service template if no other major versions or minor versions of the service template exist. A major version of a service template is a version that <i>isn't</i> backwards compatible.</p> <p>Delete a minor version of a service template if it's not the <code>Recommended</code> version. Delete a <code>Recommended</code> minor version of the service template if no other minor versions of the service template exist. A minor version of a service template is a version that's backwards compatible.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteServiceTemplateVersionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteServiceTemplateVersionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteServiceTemplateVersion
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.DeleteTemplateSyncConfig:
    post:
      operationId: DeleteTemplateSyncConfig
      description: Delete a template sync configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteTemplateSyncConfigOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteTemplateSyncConfigInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.DeleteTemplateSyncConfig
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetAccountSettings:
    post:
      operationId: GetAccountSettings
      description: Get detail data for Proton account-wide settings.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetAccountSettingsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetAccountSettingsInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetAccountSettings
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetComponent:
    post:
      operationId: GetComponent
      description: <p>Get detailed data for a component.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetComponentOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetComponentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetComponent
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetEnvironment:
    post:
      operationId: GetEnvironment
      description: Get detailed data for an environment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEnvironmentOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetEnvironmentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetEnvironment
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetEnvironmentAccountConnection:
    post:
      operationId: GetEnvironmentAccountConnection
      description: <p>In an environment account, get the detailed data for an environment account connection.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton User guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEnvironmentAccountConnectionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetEnvironmentAccountConnectionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetEnvironmentAccountConnection
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetEnvironmentTemplate:
    post:
      operationId: GetEnvironmentTemplate
      description: Get detailed data for an environment template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEnvironmentTemplateOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetEnvironmentTemplateInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetEnvironmentTemplate
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetEnvironmentTemplateVersion:
    post:
      operationId: GetEnvironmentTemplateVersion
      description: Get detailed data for a major or minor version of an environment template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEnvironmentTemplateVersionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetEnvironmentTemplateVersionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetEnvironmentTemplateVersion
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetRepository:
    post:
      operationId: GetRepository
      description: Get detail data for a linked repository.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRepositoryOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRepositoryInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetRepository
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetRepositorySyncStatus:
    post:
      operationId: GetRepositorySyncStatus
      description: <p>Get the sync status of a repository used for Proton template sync. For more information about template sync, see .</p> <note> <p>A repository sync status isn't tied to the Proton Repository resource (or any other Proton resource). Therefore, tags on an Proton Repository resource have no effect on this action. Specifically, you can't use these tags to control access to this action using Attribute-based access control (ABAC).</p> <p>For more information about ABAC, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/security_iam_service-with-iam.html#security_iam_service-with-iam-tags">ABAC</a> in the <i>Proton User Guide</i>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRepositorySyncStatusOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetRepositorySyncStatusInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetRepositorySyncStatus
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetResourcesSummary:
    post:
      operationId: GetResourcesSummary
      description: <p>Get counts of Proton resources.</p> <p>For infrastructure-provisioning resources (environments, services, service instances, pipelines), the action returns staleness counts. A resource is stale when it's behind the recommended version of the Proton template that it uses and it needs an update to become current.</p> <p>The action returns staleness counts (counts of resources that are up-to-date, behind a template major version, or behind a template minor version), the total number of resources, and the number of resources that are in a failed state, grouped by resource type. Components, environments, and service templates return less information - see the <code>components</code>, <code>environments</code>, and <code>serviceTemplates</code> field descriptions.</p> <p>For context, the action also returns the total number of each type of Proton template in the Amazon Web Services account.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/monitoring-dashboard.html">Proton dashboard</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetResourcesSummaryOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetResourcesSummaryInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetResourcesSummary
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetService:
    post:
      operationId: GetService
      description: Get detailed data for a service.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetServiceInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetService
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetServiceInstance:
    post:
      operationId: GetServiceInstance
      description: Get detailed data for a service instance. A service instance is an instantiation of service template and it runs in a specific environment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceInstanceOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetServiceInstanceInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetServiceInstance
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetServiceInstanceSyncStatus:
    post:
      operationId: GetServiceInstanceSyncStatus
      description: Get the status of the synced service instance.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceInstanceSyncStatusOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetServiceInstanceSyncStatusInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetServiceInstanceSyncStatus
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetServiceSyncBlockerSummary:
    post:
      operationId: GetServiceSyncBlockerSummary
      description: Get detailed data for the service sync blocker summary.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceSyncBlockerSummaryOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetServiceSyncBlockerSummaryInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetServiceSyncBlockerSummary
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetServiceSyncConfig:
    post:
      operationId: GetServiceSyncConfig
      description: Get detailed information for the service sync configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceSyncConfigOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetServiceSyncConfigInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetServiceSyncConfig
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetServiceTemplate:
    post:
      operationId: GetServiceTemplate
      description: Get detailed data for a service template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceTemplateOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetServiceTemplateInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetServiceTemplate
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetServiceTemplateVersion:
    post:
      operationId: GetServiceTemplateVersion
      description: Get detailed data for a major or minor version of a service template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceTemplateVersionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetServiceTemplateVersionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetServiceTemplateVersion
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetTemplateSyncConfig:
    post:
      operationId: GetTemplateSyncConfig
      description: Get detail data for a template sync configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTemplateSyncConfigOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetTemplateSyncConfigInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetTemplateSyncConfig
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.GetTemplateSyncStatus:
    post:
      operationId: GetTemplateSyncStatus
      description: Get the status of a template sync.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTemplateSyncStatusOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetTemplateSyncStatusInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.GetTemplateSyncStatus
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListComponentOutputs:
    post:
      operationId: ListComponentOutputs
      description: <p>Get a list of component Infrastructure as Code (IaC) outputs.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListComponentOutputsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListComponentOutputsInput"
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListComponentOutputs
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListComponentProvisionedResources:
    post:
      operationId: ListComponentProvisionedResources
      description: <p>List provisioned resources for a component with details.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListComponentProvisionedResourcesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListComponentProvisionedResourcesInput"
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListComponentProvisionedResources
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListComponents:
    post:
      operationId: ListComponents
      description: <p>List components with summary data. You can filter the result list by environment, service, or a single service instance.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListComponentsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListComponentsInput"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListComponents
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentAccountConnections:
    post:
      operationId: ListEnvironmentAccountConnections
      description: <p>View a list of environment account connections.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton User guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEnvironmentAccountConnectionsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEnvironmentAccountConnectionsInput"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListEnvironmentAccountConnections
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentOutputs:
    post:
      operationId: ListEnvironmentOutputs
      description: List the infrastructure as code outputs for your environment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEnvironmentOutputsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEnvironmentOutputsInput"
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListEnvironmentOutputs
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentProvisionedResources:
    post:
      operationId: ListEnvironmentProvisionedResources
      description: List the provisioned resources for your environment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEnvironmentProvisionedResourcesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEnvironmentProvisionedResourcesInput"
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListEnvironmentProvisionedResources
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentTemplateVersions:
    post:
      operationId: ListEnvironmentTemplateVersions
      description: List major or minor versions of an environment template with detail data.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEnvironmentTemplateVersionsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEnvironmentTemplateVersionsInput"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListEnvironmentTemplateVersions
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListEnvironmentTemplates:
    post:
      operationId: ListEnvironmentTemplates
      description: List environment templates.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEnvironmentTemplatesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEnvironmentTemplatesInput"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListEnvironmentTemplates
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListEnvironments:
    post:
      operationId: ListEnvironments
      description: List environments with detail data summaries.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEnvironmentsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListEnvironmentsInput"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListEnvironments
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListRepositories:
    post:
      operationId: ListRepositories
      description: List linked repositories with detail data.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRepositoriesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListRepositoriesInput"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListRepositories
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListRepositorySyncDefinitions:
    post:
      operationId: ListRepositorySyncDefinitions
      description: List repository sync definitions with detail data.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRepositorySyncDefinitionsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListRepositorySyncDefinitionsInput"
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListRepositorySyncDefinitions
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListServiceInstanceOutputs:
    post:
      operationId: ListServiceInstanceOutputs
      description: Get a list service of instance Infrastructure as Code (IaC) outputs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceInstanceOutputsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServiceInstanceOutputsInput"
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServiceInstanceOutputs
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListServiceInstanceProvisionedResources:
    post:
      operationId: ListServiceInstanceProvisionedResources
      description: List provisioned resources for a service instance with details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceInstanceProvisionedResourcesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServiceInstanceProvisionedResourcesInput"
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServiceInstanceProvisionedResources
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListServiceInstances:
    post:
      operationId: ListServiceInstances
      description: List service instances with summary data. This action lists service instances of all services in the Amazon Web Services account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceInstancesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServiceInstancesInput"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServiceInstances
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListServicePipelineOutputs:
    post:
      operationId: ListServicePipelineOutputs
      description: Get a list of service pipeline Infrastructure as Code (IaC) outputs.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServicePipelineOutputsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServicePipelineOutputsInput"
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServicePipelineOutputs
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListServicePipelineProvisionedResources:
    post:
      operationId: ListServicePipelineProvisionedResources
      description: List provisioned resources for a service and pipeline with details.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServicePipelineProvisionedResourcesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServicePipelineProvisionedResourcesInput"
      parameters:
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServicePipelineProvisionedResources
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListServiceTemplateVersions:
    post:
      operationId: ListServiceTemplateVersions
      description: List major or minor versions of a service template with detail data.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceTemplateVersionsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServiceTemplateVersionsInput"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServiceTemplateVersions
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListServiceTemplates:
    post:
      operationId: ListServiceTemplates
      description: List service templates with detail data.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceTemplatesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServiceTemplatesInput"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServiceTemplates
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListServices:
    post:
      operationId: ListServices
      description: List services with summaries of detail data.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServicesOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListServicesInput"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListServices
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: List tags for a resource. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListTagsForResourceInput"
      parameters:
        - name: maxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: nextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.ListTagsForResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.NotifyResourceDeploymentStatusChange:
    post:
      operationId: NotifyResourceDeploymentStatusChange
      description: <p>Notify Proton of status changes to a provisioned resource when you use self-managed provisioning.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-works-prov-methods.html#ag-works-prov-methods-self">Self-managed provisioning</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotifyResourceDeploymentStatusChangeOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotifyResourceDeploymentStatusChangeInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.NotifyResourceDeploymentStatusChange
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.RejectEnvironmentAccountConnection:
    post:
      operationId: RejectEnvironmentAccountConnection
      description: <p>In a management account, reject an environment account connection from another environment account.</p> <p>After you reject an environment account connection request, you <i>can't</i> accept or use the rejected environment account connection.</p> <p>You <i>canâ€™t</i> reject an environment account connection that's connected to an environment.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton User guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RejectEnvironmentAccountConnectionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectEnvironmentAccountConnectionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.RejectEnvironmentAccountConnection
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.TagResource:
    post:
      operationId: TagResource
      description: <p>Tag a resource. A tag is a key-value pair of metadata that you associate with an Proton resource.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TagResourceInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.TagResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UntagResource:
    post:
      operationId: UntagResource
      description: <p>Remove a customer tag from a resource. A tag is a key-value pair of metadata associated with an Proton resource.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UntagResourceInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UntagResource
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateAccountSettings:
    post:
      operationId: UpdateAccountSettings
      description: Update Proton settings that are used for multiple services in the Amazon Web Services account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateAccountSettingsOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAccountSettingsInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateAccountSettings
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateComponent:
    post:
      operationId: UpdateComponent
      description: <p>Update a component.</p> <p>There are a few modes for updating a component. The <code>deploymentType</code> field defines the mode.</p> <note> <p>You can't update a component while its deployment status, or the deployment status of a service instance attached to it, is <code>IN_PROGRESS</code>.</p> </note> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateComponentOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateComponentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateComponent
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironment:
    post:
      operationId: UpdateEnvironment
      description: <p>Update an environment.</p> <p>If the environment is associated with an environment account connection, <i>don't</i> update or include the <code>protonServiceRoleArn</code> and <code>provisioningRepository</code> parameter to update or connect to an environment account connection.</p> <p>You can only update to a new environment account connection if that connection was created in the same environment account that the current environment account connection was created in. The account connection must also be associated with the current environment.</p> <p>If the environment <i>isn't</i> associated with an environment account connection, <i>don't</i> update or include the <code>environmentAccountConnectionId</code> parameter. You <i>can't</i> update or connect the environment to an environment account connection if it <i>isn't</i> already associated with an environment connection.</p> <p>You can update either the <code>environmentAccountConnectionId</code> or <code>protonServiceRoleArn</code> parameter and value. You canâ€™t update both.</p> <p>If the environment was configured for Amazon Web Services-managed provisioning, omit the <code>provisioningRepository</code> parameter.</p> <p>If the environment was configured for self-managed provisioning, specify the <code>provisioningRepository</code> parameter and omit the <code>protonServiceRoleArn</code> and <code>environmentAccountConnectionId</code> parameters.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-environments.html">Environments</a> and <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-works-prov-methods.html">Provisioning methods</a> in the <i>Proton User Guide</i>.</p> <p>There are four modes for updating an environment. The <code>deploymentType</code> field defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i> include minor or major version parameters when you use this <code>deployment-type</code>.</p> </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can also specify a different minor version of the current major version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can also specify a different major version that's higher than the major version in use and a minor version.</p> </dd> </dl>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateEnvironmentOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEnvironmentInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateEnvironment
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironmentAccountConnection:
    post:
      operationId: UpdateEnvironmentAccountConnection
      description: <p>In an environment account, update an environment account connection to use a new IAM role.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton User guide</i>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateEnvironmentAccountConnectionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEnvironmentAccountConnectionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateEnvironmentAccountConnection
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironmentTemplate:
    post:
      operationId: UpdateEnvironmentTemplate
      description: Update an environment template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateEnvironmentTemplateOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEnvironmentTemplateInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateEnvironmentTemplate
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateEnvironmentTemplateVersion:
    post:
      operationId: UpdateEnvironmentTemplateVersion
      description: Update a major or minor version of an environment template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateEnvironmentTemplateVersionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEnvironmentTemplateVersionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateEnvironmentTemplateVersion
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateService:
    post:
      operationId: UpdateService
      description: <p>Edit a service description or use a spec to add and delete service instances.</p> <note> <p>Existing service instances and the service pipeline <i>can't</i> be edited using this API. They can only be deleted.</p> </note> <p>Use the <code>description</code> parameter to modify the description.</p> <p>Edit the <code>spec</code> parameter to add or delete instances.</p> <note> <p>You can't delete a service instance (remove it from the spec) if it has an attached component.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateServiceOutput"
        "480":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateService
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateServiceInstance:
    post:
      operationId: UpdateServiceInstance
      description: <p>Update a service instance.</p> <p>There are a few modes for updating a service instance. The <code>deploymentType</code> field defines the mode.</p> <note> <p>You can't update a service instance while its deployment status, or the deployment status of a component attached to it, is <code>IN_PROGRESS</code>.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p> </note>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateServiceInstanceOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceInstanceInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateServiceInstance
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateServicePipeline:
    post:
      operationId: UpdateServicePipeline
      description: <p>Update the service pipeline.</p> <p>There are four modes for updating a service pipeline. The <code>deploymentType</code> field defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i> include major or minor version parameters when you use this <code>deployment-type</code>.</p> </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can specify a different minor version of the current major version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) major and minor version of the current template by default. You can specify a different major version that's higher than the major version in use and a minor version.</p> </dd> </dl>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateServicePipelineOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServicePipelineInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateServicePipeline
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateServiceSyncBlocker:
    post:
      operationId: UpdateServiceSyncBlocker
      description: Update the service sync blocker by resolving it.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateServiceSyncBlockerOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceSyncBlockerInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateServiceSyncBlocker
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateServiceSyncConfig:
    post:
      operationId: UpdateServiceSyncConfig
      description: Update the Proton Ops config file.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateServiceSyncConfigOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceSyncConfigInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateServiceSyncConfig
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateServiceTemplate:
    post:
      operationId: UpdateServiceTemplate
      description: Update a service template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateServiceTemplateOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceTemplateInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateServiceTemplate
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateServiceTemplateVersion:
    post:
      operationId: UpdateServiceTemplateVersion
      description: Update a major or minor version of a service template.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateServiceTemplateVersionOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateServiceTemplateVersionInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateServiceTemplateVersion
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /#X-Amz-Target=AwsProton20200720.UpdateTemplateSyncConfig:
    post:
      operationId: UpdateTemplateSyncConfig
      description: Update template sync configuration parameters, except for the <code>templateName</code> and <code>templateType</code>. Repository details (branch, name, and provider) should be of a linked repository. A linked repository is a repository that has been registered with Proton. For more information, see <a>CreateRepository</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTemplateSyncConfigOutput"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTemplateSyncConfigInput"
      parameters:
        - name: X-Amz-Target
          in: header
          required: true
          schema:
            type: string
            enum:
              - AwsProton20200720.UpdateTemplateSyncConfig
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptEnvironmentAccountConnectionOutput:
      type: object
      required:
        - environmentAccountConnection
      properties:
        environmentAccountConnection:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnection"
            - description: The environment account connection data that's returned by Proton.
    AcceptEnvironmentAccountConnectionInput:
      type: object
      required:
        - id
      title: AcceptEnvironmentAccountConnectionInput
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionId"
            - description: The ID of the environment account connection.
    ValidationException: {}
    AccessDeniedException: {}
    ThrottlingException: {}
    ConflictException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    CancelComponentDeploymentOutput:
      type: object
      required:
        - component
      properties:
        component:
          allOf:
            - $ref: "#/components/schemas/Component"
            - description: The detailed data of the component with the deployment that is being canceled.
    CancelComponentDeploymentInput:
      type: object
      required:
        - componentName
      title: CancelComponentDeploymentInput
      properties:
        componentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the component with the deployment to cancel.
    CancelEnvironmentDeploymentOutput:
      type: object
      required:
        - environment
      properties:
        environment:
          allOf:
            - $ref: "#/components/schemas/Environment"
            - description: The environment summary data that's returned by Proton.
    CancelEnvironmentDeploymentInput:
      type: object
      required:
        - environmentName
      title: CancelEnvironmentDeploymentInput
      properties:
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment with the deployment to cancel.
    CancelServiceInstanceDeploymentOutput:
      type: object
      required:
        - serviceInstance
      properties:
        serviceInstance:
          allOf:
            - $ref: "#/components/schemas/ServiceInstance"
            - description: The service instance summary data that's returned by Proton.
    CancelServiceInstanceDeploymentInput:
      type: object
      required:
        - serviceInstanceName
        - serviceName
      title: CancelServiceInstanceDeploymentInput
      properties:
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance with the deployment to cancel.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service with the service instance deployment to cancel.
    CancelServicePipelineDeploymentOutput:
      type: object
      required:
        - pipeline
      properties:
        pipeline:
          allOf:
            - $ref: "#/components/schemas/ServicePipeline"
            - description: The service pipeline detail data that's returned by Proton.
    CancelServicePipelineDeploymentInput:
      type: object
      required:
        - serviceName
      title: CancelServicePipelineDeploymentInput
      properties:
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service with the service pipeline deployment to cancel.
    CreateComponentOutput:
      type: object
      required:
        - component
      properties:
        component:
          allOf:
            - $ref: "#/components/schemas/Component"
            - description: The detailed data of the created component.
    CreateComponentInput:
      type: object
      required:
        - manifest
        - name
        - templateFile
      title: CreateComponentInput
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token for the created component.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: An optional customer-provided description of the component.
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the Proton environment that you want to associate this component with. You must specify this when you don't specify <code>serviceInstanceName</code> and <code>serviceName</code>.
        manifest:
          allOf:
            - $ref: "#/components/schemas/TemplateManifestContents"
            - description: A path to a manifest file that lists the Infrastructure as Code (IaC) file, template language, and rendering engine for infrastructure that a custom component provisions.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The customer-provided name of the component.
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance that you want to attach this component to. If you don't specify this, the component isn't attached to any service instance. Specify both <code>serviceInstanceName</code> and <code>serviceName</code> or neither of them.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that <code>serviceInstanceName</code> is associated with. If you don't specify this, the component isn't attached to any service instance. Specify both <code>serviceInstanceName</code> and <code>serviceName</code> or neither of them.
        serviceSpec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: The service spec that you want the component to use to access service inputs. Set this only when you attach the component to a service instance.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: <p>An optional list of metadata items that you can associate with the Proton component. A tag is a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
        templateFile:
          allOf:
            - $ref: "#/components/schemas/TemplateFileContents"
            - description: <p>A path to the Infrastructure as Code (IaC) file describing infrastructure that a custom component provisions.</p> <note> <p>Components support a single IaC file, even if you use Terraform as your template language.</p> </note>
    ServiceQuotaExceededException: {}
    CreateEnvironmentOutput:
      type: object
      required:
        - environment
      properties:
        environment:
          allOf:
            - $ref: "#/components/schemas/Environment"
            - description: The environment detail data that's returned by Proton.
    CreateEnvironmentInput:
      type: object
      required:
        - name
        - spec
        - templateMajorVersion
        - templateName
      title: CreateEnvironmentInput
      properties:
        codebuildRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: <p>The Amazon Resource Name (ARN) of the IAM service role that allows Proton to provision infrastructure using CodeBuild-based provisioning on your behalf.</p> <p>To use CodeBuild-based provisioning for the environment or for any service instance running in the environment, specify either the <code>environmentAccountConnectionId</code> or <code>codebuildRoleArn</code> parameter.</p>
        componentRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in this environment. It determines the scope of infrastructure that a component can provision.</p> <p>You must specify <code>componentRoleArn</code> to allow directly defined components to be associated with this environment.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the environment that's being created and deployed.
        environmentAccountConnectionId:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionId"
            - description: <p>The ID of the environment account connection that you provide if you're provisioning your environment infrastructure resources to an environment account. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-env-account-connections.html">Environment account connections</a> in the <i>Proton User guide</i>.</p> <p>To use Amazon Web Services-managed provisioning for the environment, specify either the <code>environmentAccountConnectionId</code> or <code>protonServiceRoleArn</code> parameter and omit the <code>provisioningRepository</code> parameter.</p>
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment.
        protonServiceRoleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: <p>The Amazon Resource Name (ARN) of the Proton service role that allows Proton to make calls to other services on your behalf.</p> <p>To use Amazon Web Services-managed provisioning for the environment, specify either the <code>environmentAccountConnectionId</code> or <code>protonServiceRoleArn</code> parameter and omit the <code>provisioningRepository</code> parameter.</p>
        provisioningRepository:
          allOf:
            - $ref: "#/components/schemas/RepositoryBranchInput"
            - description: <p>The linked repository that you use to host your rendered infrastructure templates for self-managed provisioning. A linked repository is a repository that has been registered with Proton. For more information, see <a>CreateRepository</a>.</p> <p>To use self-managed provisioning for the environment, specify this parameter and omit the <code>environmentAccountConnectionId</code> and <code>protonServiceRoleArn</code> parameters.</p>
        spec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: A YAML formatted string that provides inputs as defined in the environment template bundle schema file. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-environments.html">Environments</a> in the <i>Proton User Guide</i>.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: <p>An optional list of metadata items that you can associate with the Proton environment. A tag is a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
        templateMajorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The major version of the environment template.
        templateMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of the environment template.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-templates.html">Environment Templates</a> in the <i>Proton User Guide</i>.
    CreateEnvironmentAccountConnectionOutput:
      type: object
      required:
        - environmentAccountConnection
      properties:
        environmentAccountConnection:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnection"
            - description: The environment account connection detail data that's returned by Proton.
    CreateEnvironmentAccountConnectionInput:
      type: object
      required:
        - environmentName
        - managementAccountId
      title: CreateEnvironmentAccountConnectionInput
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: When included, if two identical requests are made with the same client token, Proton returns the environment account connection that the first request created.
        codebuildRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of an IAM service role in the environment account. Proton uses this role to provision infrastructure resources using CodeBuild-based provisioning in the associated environment account.
        componentRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p> <p>You must specify <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in this account.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the Proton environment that's created in the associated management account.
        managementAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The ID of the management account that accepts or rejects the environment account connection. You create and manage the Proton environment in this account. If the management account accepts the environment account connection, Proton can use the associated IAM role to provision environment infrastructure resources in the associated environment account.
        roleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of the IAM service role that's created in the environment account. Proton uses this role to provision infrastructure resources in the associated environment account.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: <p>An optional list of metadata items that you can associate with the Proton environment account connection. A tag is a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    CreateEnvironmentTemplateOutput:
      type: object
      required:
        - environmentTemplate
      properties:
        environmentTemplate:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplate"
            - description: The environment template detail data that's returned by Proton.
    CreateEnvironmentTemplateInput:
      type: object
      required:
        - name
      title: CreateEnvironmentTemplateInput
      properties:
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the environment template.
        displayName:
          allOf:
            - $ref: "#/components/schemas/DisplayName"
            - description: The environment template name as displayed in the developer interface.
        encryptionKey:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: A customer provided encryption key that Proton uses to encrypt data.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template.
        provisioning:
          allOf:
            - $ref: "#/components/schemas/Provisioning"
            - description: When included, indicates that the environment template is for customer provisioned and managed infrastructure.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: <p>An optional list of metadata items that you can associate with the Proton environment template. A tag is a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    CreateEnvironmentTemplateVersionOutput:
      type: object
      required:
        - environmentTemplateVersion
      properties:
        environmentTemplateVersion:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplateVersion"
            - description: The environment template detail data that's returned by Proton.
    CreateEnvironmentTemplateVersionInput:
      type: object
      required:
        - source
        - templateName
      title: CreateEnvironmentTemplateVersionInput
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: When included, if two identical requests are made with the same client token, Proton returns the environment template version that the first request created.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the new version of an environment template.
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: <p>To create a new minor version of the environment template, include <code>major Version</code>.</p> <p>To create a new major and minor version of the environment template, exclude <code>major Version</code>.</p>
        source:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionSourceInput"
            - description: An object that includes the template bundle S3 bucket path and name for the new version of an template.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: <p>An optional list of metadata items that you can associate with the Proton environment template version. A tag is a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template.
    CreateRepositoryOutput:
      type: object
      required:
        - repository
      properties:
        repository:
          allOf:
            - $ref: "#/components/schemas/Repository"
            - description: The repository link's detail data that's returned by Proton.
    CreateRepositoryInput:
      type: object
      required:
        - connectionArn
        - name
        - provider
      title: CreateRepositoryInput
      properties:
        connectionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of your AWS CodeStar connection that connects Proton to your repository provider account. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/setting-up-for-service.html">Setting up for Proton</a> in the <i>Proton User Guide</i>.
        encryptionKey:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The ARN of your customer Amazon Web Services Key Management Service (Amazon Web Services KMS) key.
        name:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name (for example, <code>myrepos/myrepo</code>).
        provider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: <p>An optional list of metadata items that you can associate with the Proton repository. A tag is a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    CreateServiceOutput:
      type: object
      required:
        - service
      properties:
        service:
          allOf:
            - $ref: "#/components/schemas/Service"
            - description: The service detail data that's returned by Proton.
    CreateServiceInput:
      type: object
      required:
        - name
        - spec
        - templateMajorVersion
        - templateName
      title: CreateServiceInput
      properties:
        branchName:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The name of the code repository branch that holds the code that's deployed in Proton. <i>Don't</i> include this parameter if your service template <i>doesn't</i> include a service pipeline.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the Proton service.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The service name.
        repositoryConnectionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the repository connection. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/setting-up-for-service.html#setting-up-vcontrol">Setting up an AWS CodeStar connection</a> in the <i>Proton User Guide</i>. <i>Don't</i> include this parameter if your service template <i>doesn't</i> include a service pipeline.
        repositoryId:
          allOf:
            - $ref: "#/components/schemas/RepositoryId"
            - description: The ID of the code repository. <i>Don't</i> include this parameter if your service template <i>doesn't</i> include a service pipeline.
        spec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: A link to a spec file that provides inputs as defined in the service template bundle schema file. The spec file is in YAML format. <i>Donâ€™t</i> include pipeline inputs in the spec if your service template <i>doesnâ€™t</i> include a service pipeline. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-create-svc.html">Create a service</a> in the <i>Proton User Guide</i>.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: <p>An optional list of metadata items that you can associate with the Proton service. A tag is a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
        templateMajorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The major version of the service template that was used to create the service.
        templateMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of the service template that was used to create the service.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template that's used to create the service.
    CreateServiceInstanceOutput:
      type: object
      required:
        - serviceInstance
      properties:
        serviceInstance:
          allOf:
            - $ref: "#/components/schemas/ServiceInstance"
            - description: The detailed data of the service instance being created.
    CreateServiceInstanceInput:
      type: object
      required:
        - name
        - serviceName
        - spec
      title: CreateServiceInstanceInput
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token of the service instance to create.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance to create.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service the service instance is added to.
        spec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: The spec for the service instance you want to create.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: <p>An optional list of metadata items that you can associate with the Proton service instance. A tag is a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
        templateMajorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: To create a new major and minor version of the service template, <i>exclude</i> <code>major Version</code>.
        templateMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: To create a new minor version of the service template, include a <code>major Version</code>.
    CreateServiceSyncConfigOutput:
      type: object
      properties:
        serviceSyncConfig:
          allOf:
            - $ref: "#/components/schemas/ServiceSyncConfig"
            - description: The detailed data of the Proton Ops file.
    CreateServiceSyncConfigInput:
      type: object
      required:
        - branch
        - filePath
        - repositoryName
        - repositoryProvider
        - serviceName
      title: CreateServiceSyncConfigInput
      properties:
        branch:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The repository branch for your Proton Ops file.
        filePath:
          allOf:
            - $ref: "#/components/schemas/OpsFilePath"
            - description: The path to the Proton Ops file.
        repositoryName:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name.
        repositoryProvider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The provider type for your repository.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service the Proton Ops file is for.
    CreateServiceTemplateOutput:
      type: object
      required:
        - serviceTemplate
      properties:
        serviceTemplate:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplate"
            - description: The service template detail data that's returned by Proton.
    CreateServiceTemplateInput:
      type: object
      required:
        - name
      title: CreateServiceTemplateInput
      properties:
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the service template.
        displayName:
          allOf:
            - $ref: "#/components/schemas/DisplayName"
            - description: The name of the service template as displayed in the developer interface.
        encryptionKey:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: A customer provided encryption key that's used to encrypt data.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template.
        pipelineProvisioning:
          allOf:
            - $ref: "#/components/schemas/Provisioning"
            - description: By default, Proton provides a service pipeline for your service. When this parameter is included, it indicates that an Proton service pipeline <i>isn't</i> provided for your service. After it's included, it <i>can't</i> be changed. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-template-authoring.html#ag-template-bundles">Template bundles</a> in the <i>Proton User Guide</i>.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: <p>An optional list of metadata items that you can associate with the Proton service template. A tag is a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
    CreateServiceTemplateVersionOutput:
      type: object
      required:
        - serviceTemplateVersion
      properties:
        serviceTemplateVersion:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateVersion"
            - description: The service template version summary of detail data that's returned by Proton.
    CreateServiceTemplateVersionInput:
      type: object
      required:
        - compatibleEnvironmentTemplates
        - source
        - templateName
      title: CreateServiceTemplateVersionInput
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: When included, if two identical requests are made with the same client token, Proton returns the service template version that the first request created.
        compatibleEnvironmentTemplates:
          allOf:
            - $ref: "#/components/schemas/CompatibleEnvironmentTemplateInputList"
            - description: An array of environment template objects that are compatible with the new service template version. A service instance based on this service template version can run in environments based on compatible templates.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the new version of a service template.
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: <p>To create a new minor version of the service template, include a <code>major Version</code>.</p> <p>To create a new major and minor version of the service template, <i>exclude</i> <code>major Version</code>.</p>
        source:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionSourceInput"
            - description: An object that includes the template bundle S3 bucket path and name for the new version of a service template.
        supportedComponentSources:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateSupportedComponentSourceInputList"
            - description: <p>An array of supported component sources. Components with supported sources can be attached to service instances based on this service template version.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: <p>An optional list of metadata items that you can associate with the Proton service template version. A tag is a key-value pair.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/resources.html">Proton resources and tagging</a> in the <i>Proton User Guide</i>.</p>
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template.
    CreateTemplateSyncConfigOutput:
      type: object
      properties:
        templateSyncConfig:
          allOf:
            - $ref: "#/components/schemas/TemplateSyncConfig"
            - description: The template sync configuration detail data that's returned by Proton.
    CreateTemplateSyncConfigInput:
      type: object
      required:
        - branch
        - repositoryName
        - repositoryProvider
        - templateName
        - templateType
      title: CreateTemplateSyncConfigInput
      properties:
        branch:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The repository branch for your template.
        repositoryName:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name (for example, <code>myrepos/myrepo</code>).
        repositoryProvider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The provider type for your repository.
        subdirectory:
          allOf:
            - $ref: "#/components/schemas/Subdirectory"
            - description: A repository subdirectory path to your template bundle directory. When included, Proton limits the template bundle search to this repository directory.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of your registered template.
        templateType:
          allOf:
            - $ref: "#/components/schemas/TemplateType"
            - description: The type of the registered template.
    DeleteComponentOutput:
      type: object
      properties:
        component:
          allOf:
            - $ref: "#/components/schemas/Component"
            - description: The detailed data of the component being deleted.
    DeleteComponentInput:
      type: object
      required:
        - name
      title: DeleteComponentInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the component to delete.
    DeleteEnvironmentOutput:
      type: object
      properties:
        environment:
          allOf:
            - $ref: "#/components/schemas/Environment"
            - description: The detailed data of the environment being deleted.
    DeleteEnvironmentInput:
      type: object
      required:
        - name
      title: DeleteEnvironmentInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment to delete.
    DeleteEnvironmentAccountConnectionOutput:
      type: object
      properties:
        environmentAccountConnection:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnection"
            - description: The detailed data of the environment account connection being deleted.
    DeleteEnvironmentAccountConnectionInput:
      type: object
      required:
        - id
      title: DeleteEnvironmentAccountConnectionInput
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionId"
            - description: The ID of the environment account connection to delete.
    DeleteEnvironmentTemplateOutput:
      type: object
      properties:
        environmentTemplate:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplate"
            - description: The detailed data of the environment template being deleted.
    DeleteEnvironmentTemplateInput:
      type: object
      required:
        - name
      title: DeleteEnvironmentTemplateInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template to delete.
    DeleteEnvironmentTemplateVersionOutput:
      type: object
      properties:
        environmentTemplateVersion:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplateVersion"
            - description: The detailed data of the environment template version being deleted.
    DeleteEnvironmentTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: DeleteEnvironmentTemplateVersionInput
      properties:
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The environment template major version to delete.
        minorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The environment template minor version to delete.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template.
    DeleteRepositoryOutput:
      type: object
      properties:
        repository:
          allOf:
            - $ref: "#/components/schemas/Repository"
            - description: The deleted repository link's detail data that's returned by Proton.
    DeleteRepositoryInput:
      type: object
      required:
        - name
        - provider
      title: DeleteRepositoryInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name.
        provider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
    DeleteServiceOutput:
      type: object
      properties:
        service:
          allOf:
            - $ref: "#/components/schemas/Service"
            - description: The detailed data of the service being deleted.
    DeleteServiceInput:
      type: object
      required:
        - name
      title: DeleteServiceInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service to delete.
    DeleteServiceSyncConfigOutput:
      type: object
      properties:
        serviceSyncConfig:
          allOf:
            - $ref: "#/components/schemas/ServiceSyncConfig"
            - description: The detailed data for the service sync config.
    DeleteServiceSyncConfigInput:
      type: object
      required:
        - serviceName
      title: DeleteServiceSyncConfigInput
      properties:
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that you want to delete the service sync configuration for.
    DeleteServiceTemplateOutput:
      type: object
      properties:
        serviceTemplate:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplate"
            - description: The detailed data of the service template being deleted.
    DeleteServiceTemplateInput:
      type: object
      required:
        - name
      title: DeleteServiceTemplateInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template to delete.
    DeleteServiceTemplateVersionOutput:
      type: object
      properties:
        serviceTemplateVersion:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateVersion"
            - description: The detailed data of the service template version being deleted.
    DeleteServiceTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: DeleteServiceTemplateVersionInput
      properties:
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The service template major version to delete.
        minorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The service template minor version to delete.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template.
    DeleteTemplateSyncConfigOutput:
      type: object
      properties:
        templateSyncConfig:
          allOf:
            - $ref: "#/components/schemas/TemplateSyncConfig"
            - description: The template sync configuration detail data that's returned by Proton.
    DeleteTemplateSyncConfigInput:
      type: object
      required:
        - templateName
        - templateType
      title: DeleteTemplateSyncConfigInput
      properties:
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The template name.
        templateType:
          allOf:
            - $ref: "#/components/schemas/TemplateType"
            - description: The template type.
    GetAccountSettingsOutput:
      type: object
      properties:
        accountSettings:
          allOf:
            - $ref: "#/components/schemas/AccountSettings"
            - description: The Proton pipeline service role detail data that's returned by Proton.
    GetAccountSettingsInput:
      type: object
      title: GetAccountSettingsInput
      properties: {}
    GetComponentOutput:
      type: object
      properties:
        component:
          allOf:
            - $ref: "#/components/schemas/Component"
            - description: The detailed data of the requested component.
    GetComponentInput:
      type: object
      required:
        - name
      title: GetComponentInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the component that you want to get the detailed data for.
    GetEnvironmentOutput:
      type: object
      required:
        - environment
      properties:
        environment:
          allOf:
            - $ref: "#/components/schemas/Environment"
            - description: The detailed data of the requested environment.
    GetEnvironmentInput:
      type: object
      required:
        - name
      title: GetEnvironmentInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment that you want to get the detailed data for.
    GetEnvironmentAccountConnectionOutput:
      type: object
      required:
        - environmentAccountConnection
      properties:
        environmentAccountConnection:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnection"
            - description: The detailed data of the requested environment account connection.
    GetEnvironmentAccountConnectionInput:
      type: object
      required:
        - id
      title: GetEnvironmentAccountConnectionInput
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionId"
            - description: The ID of the environment account connection that you want to get the detailed data for.
    GetEnvironmentTemplateOutput:
      type: object
      required:
        - environmentTemplate
      properties:
        environmentTemplate:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplate"
            - description: The detailed data of the requested environment template.
    GetEnvironmentTemplateInput:
      type: object
      required:
        - name
      title: GetEnvironmentTemplateInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template that you want to get the detailed data for.
    GetEnvironmentTemplateVersionOutput:
      type: object
      required:
        - environmentTemplateVersion
      properties:
        environmentTemplateVersion:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplateVersion"
            - description: The detailed data of the requested environment template version.
    GetEnvironmentTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: GetEnvironmentTemplateVersionInput
      properties:
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: To get environment template major version detail data, include <code>major Version</code>.
        minorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: To get environment template minor version detail data, include <code>minorVersion</code>.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template a version of which you want to get detailed data for.
    GetRepositoryOutput:
      type: object
      required:
        - repository
      properties:
        repository:
          allOf:
            - $ref: "#/components/schemas/Repository"
            - description: The repository link's detail data that's returned by Proton.
    GetRepositoryInput:
      type: object
      required:
        - name
        - provider
      title: GetRepositoryInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name, for example <code>myrepos/myrepo</code>.
        provider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
    GetRepositorySyncStatusOutput:
      type: object
      properties:
        latestSync:
          allOf:
            - $ref: "#/components/schemas/RepositorySyncAttempt"
            - description: The repository sync status detail data that's returned by Proton.
    GetRepositorySyncStatusInput:
      type: object
      required:
        - branch
        - repositoryName
        - repositoryProvider
        - syncType
      title: GetRepositorySyncStatusInput
      properties:
        branch:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The repository branch.
        repositoryName:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name.
        repositoryProvider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
        syncType:
          allOf:
            - $ref: "#/components/schemas/SyncType"
            - description: The repository sync type.
    GetResourcesSummaryOutput:
      type: object
      required:
        - counts
      properties:
        counts:
          allOf:
            - $ref: "#/components/schemas/CountsSummary"
            - description: Summary counts of each Proton resource type.
    GetResourcesSummaryInput:
      type: object
      title: GetResourcesSummaryInput
      properties: {}
    GetServiceOutput:
      type: object
      properties:
        service:
          allOf:
            - $ref: "#/components/schemas/Service"
            - description: The detailed data of the requested service.
    GetServiceInput:
      type: object
      required:
        - name
      title: GetServiceInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that you want to get the detailed data for.
    GetServiceInstanceOutput:
      type: object
      required:
        - serviceInstance
      properties:
        serviceInstance:
          allOf:
            - $ref: "#/components/schemas/ServiceInstance"
            - description: The detailed data of the requested service instance.
    GetServiceInstanceInput:
      type: object
      required:
        - name
        - serviceName
      title: GetServiceInstanceInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of a service instance that you want to get the detailed data for.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that you want the service instance input for.
    GetServiceInstanceSyncStatusOutput:
      type: object
      properties:
        desiredState:
          allOf:
            - $ref: "#/components/schemas/Revision"
            - description: The service instance sync desired state that's returned by Proton
        latestSuccessfulSync:
          allOf:
            - $ref: "#/components/schemas/ResourceSyncAttempt"
            - description: The detailed data of the latest successful sync with the service instance.
        latestSync:
          allOf:
            - $ref: "#/components/schemas/ResourceSyncAttempt"
            - description: The detailed data of the latest sync with the service instance.
    GetServiceInstanceSyncStatusInput:
      type: object
      required:
        - serviceInstanceName
        - serviceName
      title: GetServiceInstanceSyncStatusInput
      properties:
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance that you want the sync status input for.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that the service instance belongs to.
    GetServiceSyncBlockerSummaryOutput:
      type: object
      properties:
        serviceSyncBlockerSummary:
          allOf:
            - $ref: "#/components/schemas/ServiceSyncBlockerSummary"
            - description: The detailed data of the requested service sync blocker summary.
    GetServiceSyncBlockerSummaryInput:
      type: object
      required:
        - serviceName
      title: GetServiceSyncBlockerSummaryInput
      properties:
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance that you want to get the service sync blocker summary for. If given bothe the instance name and the service name, only the instance is blocked.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that you want to get the service sync blocker summary for. If given only the service name, all instances are blocked.
    GetServiceSyncConfigOutput:
      type: object
      properties:
        serviceSyncConfig:
          allOf:
            - $ref: "#/components/schemas/ServiceSyncConfig"
            - description: The detailed data of the requested service sync configuration.
    GetServiceSyncConfigInput:
      type: object
      required:
        - serviceName
      title: GetServiceSyncConfigInput
      properties:
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that you want to get the service sync configuration for.
    GetServiceTemplateOutput:
      type: object
      required:
        - serviceTemplate
      properties:
        serviceTemplate:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplate"
            - description: The detailed data of the requested service template.
    GetServiceTemplateInput:
      type: object
      required:
        - name
      title: GetServiceTemplateInput
      properties:
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template that you want to get detailed data for.
    GetServiceTemplateVersionOutput:
      type: object
      required:
        - serviceTemplateVersion
      properties:
        serviceTemplateVersion:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateVersion"
            - description: The detailed data of the requested service template version.
    GetServiceTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: GetServiceTemplateVersionInput
      properties:
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: To get service template major version detail data, include <code>major Version</code>.
        minorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: To get service template minor version detail data, include <code>minorVersion</code>.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template a version of which you want to get detailed data for.
    GetTemplateSyncConfigOutput:
      type: object
      properties:
        templateSyncConfig:
          allOf:
            - $ref: "#/components/schemas/TemplateSyncConfig"
            - description: The template sync configuration detail data that's returned by Proton.
    GetTemplateSyncConfigInput:
      type: object
      required:
        - templateName
        - templateType
      title: GetTemplateSyncConfigInput
      properties:
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The template name.
        templateType:
          allOf:
            - $ref: "#/components/schemas/TemplateType"
            - description: The template type.
    GetTemplateSyncStatusOutput:
      type: object
      properties:
        desiredState:
          allOf:
            - $ref: "#/components/schemas/Revision"
            - description: The template sync desired state that's returned by Proton.
        latestSuccessfulSync:
          allOf:
            - $ref: "#/components/schemas/ResourceSyncAttempt"
            - description: The details of the last successful sync that's returned by Proton.
        latestSync:
          allOf:
            - $ref: "#/components/schemas/ResourceSyncAttempt"
            - description: The details of the last sync that's returned by Proton.
    GetTemplateSyncStatusInput:
      type: object
      required:
        - templateName
        - templateType
        - templateVersion
      title: GetTemplateSyncStatusInput
      properties:
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The template name.
        templateType:
          allOf:
            - $ref: "#/components/schemas/TemplateType"
            - description: The template type.
        templateVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The template major version.
    ListComponentOutputsOutput:
      type: object
      required:
        - outputs
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.
        outputs:
          allOf:
            - $ref: "#/components/schemas/OutputsList"
            - description: An array of component Infrastructure as Code (IaC) outputs.
    ListComponentOutputsInput:
      type: object
      required:
        - componentName
      title: ListComponentOutputsInput
      properties:
        componentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the component whose outputs you want.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.
    ListComponentProvisionedResourcesOutput:
      type: object
      required:
        - provisionedResources
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of provisioned resources.
        provisionedResources:
          allOf:
            - $ref: "#/components/schemas/ProvisionedResourceList"
            - description: An array of provisioned resources for a component.
    ListComponentProvisionedResourcesInput:
      type: object
      required:
        - componentName
      title: ListComponentProvisionedResourcesInput
      properties:
        componentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the component whose provisioned resources you want.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the list of provisioned resources that was previously requested.
    ListComponentsOutput:
      type: object
      required:
        - components
      properties:
        components:
          allOf:
            - $ref: "#/components/schemas/ComponentSummaryList"
            - description: An array of components with summary data.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next component in the array of components, after the current requested list of components.
    ListComponentsInput:
      type: object
      title: ListComponentsInput
      properties:
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of an environment for result list filtering. Proton returns components associated with the environment or attached to service instances running in it.
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxPageResults"
            - description: The maximum number of components to list.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next component in the array of components, after the list of components that was previously requested.
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of a service instance for result list filtering. Proton returns the component attached to the service instance, if any.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of a service for result list filtering. Proton returns components attached to service instances of the service.
    ListEnvironmentAccountConnectionsOutput:
      type: object
      required:
        - environmentAccountConnections
      properties:
        environmentAccountConnections:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionSummaryList"
            - description: "An array of environment account connections with details that's returned by Proton. "
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next environment account connection in the array of environment account connections, after the current requested list of environment account connections.
    ListEnvironmentAccountConnectionsInput:
      type: object
      required:
        - requestedBy
      title: ListEnvironmentAccountConnectionsInput
      properties:
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The environment name that's associated with each listed environment account connection.
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxPageResults"
            - description: The maximum number of environment account connections to list.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next environment account connection in the array of environment account connections, after the list of environment account connections that was previously requested.
        requestedBy:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionRequesterAccountType"
            - description: The type of account making the <code>ListEnvironmentAccountConnections</code> request.
        statuses:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionStatusList"
            - description: The status details for each listed environment account connection.
    ListEnvironmentOutputsOutput:
      type: object
      required:
        - outputs
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next environment output in the array of environment outputs, after the current requested list of environment outputs.
        outputs:
          allOf:
            - $ref: "#/components/schemas/OutputsList"
            - description: An array of environment outputs with detail data.
    ListEnvironmentOutputsInput:
      type: object
      required:
        - environmentName
      title: ListEnvironmentOutputsInput
      properties:
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The environment name.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next environment output in the array of environment outputs, after the list of environment outputs that was previously requested.
    ListEnvironmentProvisionedResourcesOutput:
      type: object
      required:
        - provisionedResources
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next environment provisioned resource in the array of provisioned resources, after the current requested list of environment provisioned resources.
        provisionedResources:
          allOf:
            - $ref: "#/components/schemas/ProvisionedResourceList"
            - description: An array of environment provisioned resources.
    ListEnvironmentProvisionedResourcesInput:
      type: object
      required:
        - environmentName
      title: ListEnvironmentProvisionedResourcesInput
      properties:
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The environment name.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next environment provisioned resource in the array of environment provisioned resources, after the list of environment provisioned resources that was previously requested.
    ListEnvironmentTemplateVersionsOutput:
      type: object
      required:
        - templateVersions
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next major or minor version in the array of major or minor versions of an environment template, after the list of major or minor versions that was previously requested.
        templateVersions:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplateVersionSummaryList"
            - description: An array of major or minor versions of an environment template detail data.
    ListEnvironmentTemplateVersionsInput:
      type: object
      required:
        - templateName
      title: ListEnvironmentTemplateVersionsInput
      properties:
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: <p>To view a list of minor of versions under a major version of an environment template, include <code>major Version</code>.</p> <p>To view a list of major versions of an environment template, <i>exclude</i> <code>major Version</code>.</p>
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxPageResults"
            - description: The maximum number of major or minor versions of an environment template to list.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next major or minor version in the array of major or minor versions of an environment template, after the list of major or minor versions that was previously requested.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template.
    ListEnvironmentTemplatesOutput:
      type: object
      required:
        - templates
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next environment template in the array of environment templates, after the current requested list of environment templates.
        templates:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplateSummaryList"
            - description: An array of environment templates with detail data.
    ListEnvironmentTemplatesInput:
      type: object
      title: ListEnvironmentTemplatesInput
      properties:
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxPageResults"
            - description: The maximum number of environment templates to list.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next environment template in the array of environment templates, after the list of environment templates that was previously requested.
    ListEnvironmentsOutput:
      type: object
      required:
        - environments
      properties:
        environments:
          allOf:
            - $ref: "#/components/schemas/EnvironmentSummaryList"
            - description: An array of environment detail data summaries.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next environment in the array of environments, after the current requested list of environments.
    ListEnvironmentsInput:
      type: object
      title: ListEnvironmentsInput
      properties:
        environmentTemplates:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplateFilterList"
            - description: An array of the versions of the environment template.
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxPageResults"
            - description: The maximum number of environments to list.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next environment in the array of environments, after the list of environments that was previously requested.
    ListRepositoriesOutput:
      type: object
      required:
        - repositories
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: "A token that indicates the location of the next repository in the array of repositories, after the current requested list of repositories. "
        repositories:
          allOf:
            - $ref: "#/components/schemas/RepositorySummaryList"
            - description: An array of repository links.
    ListRepositoriesInput:
      type: object
      title: ListRepositoriesInput
      properties:
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxPageResults"
            - description: The maximum number of repositories to list.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next repository in the array of repositories, after the list of repositories previously requested.
    ListRepositorySyncDefinitionsOutput:
      type: object
      required:
        - syncDefinitions
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next repository sync definition in the array of repository sync definitions, after the current requested list of repository sync definitions.
        syncDefinitions:
          allOf:
            - $ref: "#/components/schemas/RepositorySyncDefinitionList"
            - description: An array of repository sync definitions.
    ListRepositorySyncDefinitionsInput:
      type: object
      required:
        - repositoryName
        - repositoryProvider
        - syncType
      title: ListRepositorySyncDefinitionsInput
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next repository sync definition in the array of repository sync definitions, after the list of repository sync definitions previously requested.
        repositoryName:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name.
        repositoryProvider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
        syncType:
          allOf:
            - $ref: "#/components/schemas/SyncType"
            - description: The sync type. The only supported value is <code>TEMPLATE_SYNC</code>.
    ListServiceInstanceOutputsOutput:
      type: object
      required:
        - outputs
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next output in the array of outputs, after the current requested list of outputs.
        outputs:
          allOf:
            - $ref: "#/components/schemas/OutputsList"
            - description: An array of service instance Infrastructure as Code (IaC) outputs.
    ListServiceInstanceOutputsInput:
      type: object
      required:
        - serviceInstanceName
        - serviceName
      title: ListServiceInstanceOutputsInput
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance whose outputs you want.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that <code>serviceInstanceName</code> is associated to.
    ListServiceInstanceProvisionedResourcesOutput:
      type: object
      required:
        - provisionedResources
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of provisioned resources.
        provisionedResources:
          allOf:
            - $ref: "#/components/schemas/ProvisionedResourceList"
            - description: An array of provisioned resources for a service instance.
    ListServiceInstanceProvisionedResourcesInput:
      type: object
      required:
        - serviceInstanceName
        - serviceName
      title: ListServiceInstanceProvisionedResourcesInput
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the list of provisioned resources that was previously requested.
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance whose provisioned resources you want.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that <code>serviceInstanceName</code> is associated to.
    ListServiceInstancesOutput:
      type: object
      required:
        - serviceInstances
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next service instance in the array of service instances, after the current requested list of service instances.
        serviceInstances:
          allOf:
            - $ref: "#/components/schemas/ServiceInstanceSummaryList"
            - description: An array of service instances with summary data.
    ListServiceInstancesInput:
      type: object
      title: ListServiceInstancesInput
      properties:
        filters:
          allOf:
            - $ref: "#/components/schemas/ListServiceInstancesFilterList"
            - description: An array of filtering criteria that scope down the result list. By default, all service instances in the Amazon Web Services account are returned.
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxPageResults"
            - description: The maximum number of service instances to list.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next service in the array of service instances, after the list of service instances that was previously requested.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that the service instance belongs to.
        sortBy:
          allOf:
            - $ref: "#/components/schemas/ListServiceInstancesSortBy"
            - description: "<p>The field that the result list is sorted by.</p> <p>When you choose to sort by <code>serviceName</code>, service instances within each service are sorted by service instance name.</p> <p>Default: <code>serviceName</code> </p>"
        sortOrder:
          allOf:
            - $ref: "#/components/schemas/SortOrder"
            - description: "<p>Result list sort order.</p> <p>Default: <code>ASCENDING</code> </p>"
    ListServicePipelineOutputsOutput:
      type: object
      required:
        - outputs
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next output in the array of outputs, after the current requested list of outputs.
        outputs:
          allOf:
            - $ref: "#/components/schemas/OutputsList"
            - description: An array of service pipeline Infrastructure as Code (IaC) outputs.
    ListServicePipelineOutputsInput:
      type: object
      required:
        - serviceName
      title: ListServicePipelineOutputsInput
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next output in the array of outputs, after the list of outputs that was previously requested.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service whose pipeline's outputs you want.
    ListServicePipelineProvisionedResourcesOutput:
      type: object
      required:
        - provisionedResources
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the current requested list of provisioned resources.
        provisionedResources:
          allOf:
            - $ref: "#/components/schemas/ProvisionedResourceList"
            - description: An array of provisioned resources for a service and pipeline.
    ListServicePipelineProvisionedResourcesInput:
      type: object
      required:
        - serviceName
      title: ListServicePipelineProvisionedResourcesInput
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/EmptyNextToken"
            - description: A token that indicates the location of the next provisioned resource in the array of provisioned resources, after the list of provisioned resources that was previously requested.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service whose pipeline's provisioned resources you want.
    ListServiceTemplateVersionsOutput:
      type: object
      required:
        - templateVersions
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next major or minor version in the array of major or minor versions of a service template, after the current requested list of service major or minor versions.
        templateVersions:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateVersionSummaryList"
            - description: An array of major or minor versions of a service template with detail data.
    ListServiceTemplateVersionsInput:
      type: object
      required:
        - templateName
      title: ListServiceTemplateVersionsInput
      properties:
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: <p>To view a list of minor of versions under a major version of a service template, include <code>major Version</code>.</p> <p>To view a list of major versions of a service template, <i>exclude</i> <code>major Version</code>.</p>
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxPageResults"
            - description: The maximum number of major or minor versions of a service template to list.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next major or minor version in the array of major or minor versions of a service template, after the list of major or minor versions that was previously requested.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template.
    ListServiceTemplatesOutput:
      type: object
      required:
        - templates
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next service template in the array of service templates, after the current requested list of service templates.
        templates:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateSummaryList"
            - description: An array of service templates with detail data.
    ListServiceTemplatesInput:
      type: object
      title: ListServiceTemplatesInput
      properties:
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxPageResults"
            - description: The maximum number of service templates to list.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next service template in the array of service templates, after the list of service templates previously requested.
    ListServicesOutput:
      type: object
      required:
        - services
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next service in the array of services, after the current requested list of services.
        services:
          allOf:
            - $ref: "#/components/schemas/ServiceSummaryList"
            - description: An array of services with summaries of detail data.
    ListServicesInput:
      type: object
      title: ListServicesInput
      properties:
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxPageResults"
            - description: The maximum number of services to list.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: A token that indicates the location of the next service in the array of services, after the list of services that was previously requested.
    ListTagsForResourceOutput:
      type: object
      required:
        - tags
      properties:
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A token that indicates the location of the next resource tag in the array of resource tags, after the current requested list of resource tags.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: A list of resource tags with detail data.
    ListTagsForResourceInput:
      type: object
      required:
        - resourceArn
      title: ListTagsForResourceInput
      properties:
        maxResults:
          allOf:
            - $ref: "#/components/schemas/MaxPageResults"
            - description: The maximum number of tags to list.
        nextToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A token that indicates the location of the next resource tag in the array of resource tags, after the list of resource tags that was previously requested.
        resourceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource for the listed tags.
    NotifyResourceDeploymentStatusChangeOutput:
      type: object
      properties: {}
    NotifyResourceDeploymentStatusChangeInput:
      type: object
      required:
        - resourceArn
      title: NotifyResourceDeploymentStatusChangeInput
      properties:
        deploymentId:
          allOf:
            - $ref: "#/components/schemas/DeploymentId"
            - description: The deployment ID for your provisioned resource.
        outputs:
          allOf:
            - $ref: "#/components/schemas/NotifyResourceDeploymentStatusChangeInputOutputsList"
            - description: The provisioned resource state change detail data that's returned by Proton.
        resourceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The provisioned resource Amazon Resource Name (ARN).
        status:
          allOf:
            - $ref: "#/components/schemas/ResourceDeploymentStatus"
            - description: The status of your provisioned resource.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/NotifyResourceDeploymentStatusChangeInputStatusMessageString"
            - description: The deployment status message for your provisioned resource.
    RejectEnvironmentAccountConnectionOutput:
      type: object
      required:
        - environmentAccountConnection
      properties:
        environmentAccountConnection:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnection"
            - description: The environment connection account detail data that's returned by Proton.
    RejectEnvironmentAccountConnectionInput:
      type: object
      required:
        - id
      title: RejectEnvironmentAccountConnectionInput
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionId"
            - description: The ID of the environment account connection to reject.
    TagResourceOutput:
      type: object
      properties: {}
    TagResourceInput:
      type: object
      required:
        - resourceArn
        - tags
      title: TagResourceInput
      properties:
        resourceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the Proton resource to apply customer tags to.
        tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: A list of customer tags to apply to the Proton resource.
    UntagResourceOutput:
      type: object
      properties: {}
    UntagResourceInput:
      type: object
      required:
        - resourceArn
        - tagKeys
      title: UntagResourceInput
      properties:
        resourceArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the resource to remove customer tags from.
        tagKeys:
          allOf:
            - $ref: "#/components/schemas/TagKeyList"
            - description: A list of customer tag keys that indicate the customer tags to be removed from the resource.
    UpdateAccountSettingsOutput:
      type: object
      required:
        - accountSettings
      properties:
        accountSettings:
          allOf:
            - $ref: "#/components/schemas/AccountSettings"
            - description: The Proton pipeline service role and repository data shared across the Amazon Web Services account.
    UpdateAccountSettingsInput:
      type: object
      title: UpdateAccountSettingsInput
      properties:
        deletePipelineProvisioningRepository:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Set to <code>true</code> to remove a configured pipeline repository from the account settings. Don't set this field if you are updating the configured pipeline repository.
        pipelineCodebuildRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArnOrEmptyString"
            - description: The Amazon Resource Name (ARN) of the service role you want to use for provisioning pipelines. Proton assumes this role for CodeBuild-based provisioning.
        pipelineProvisioningRepository:
          allOf:
            - $ref: "#/components/schemas/RepositoryBranchInput"
            - description: <p>A linked repository for pipeline provisioning. Specify it if you have environments configured for self-managed provisioning with services that include pipelines. A linked repository is a repository that has been registered with Proton. For more information, see <a>CreateRepository</a>.</p> <p>To remove a previously configured repository, set <code>deletePipelineProvisioningRepository</code> to <code>true</code>, and don't set <code>pipelineProvisioningRepository</code>.</p>
        pipelineServiceRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArnOrEmptyString"
            - description: <p>The Amazon Resource Name (ARN) of the service role you want to use for provisioning pipelines. Assumed by Proton for Amazon Web Services-managed provisioning, and by customer-owned automation for self-managed provisioning.</p> <p>To remove a previously configured ARN, specify an empty string.</p>
    UpdateComponentOutput:
      type: object
      required:
        - component
      properties:
        component:
          allOf:
            - $ref: "#/components/schemas/Component"
            - description: The detailed data of the updated component.
    UpdateComponentInput:
      type: object
      required:
        - deploymentType
        - name
      title: UpdateComponentInput
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token for the updated component.
        deploymentType:
          allOf:
            - $ref: "#/components/schemas/ComponentDeploymentUpdateType"
            - description: <p>The deployment type. It defines the mode for updating a component, as follows:</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated. You can only specify <code>description</code> in this mode.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the component is deployed and updated with the new <code>serviceSpec</code>, <code>templateSource</code>, and/or <code>type</code> that you provide. Only requested parameters are updated.</p> </dd> </dl>
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: An optional customer-provided description of the component.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the component to update.
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/ResourceNameOrEmpty"
            - description: The name of the service instance that you want to attach this component to. Don't specify to keep the component's current service instance attachment. Specify an empty string to detach the component from the service instance it's attached to. Specify non-empty values for both <code>serviceInstanceName</code> and <code>serviceName</code> or for neither of them.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceNameOrEmpty"
            - description: The name of the service that <code>serviceInstanceName</code> is associated with. Don't specify to keep the component's current service instance attachment. Specify an empty string to detach the component from the service instance it's attached to. Specify non-empty values for both <code>serviceInstanceName</code> and <code>serviceName</code> or for neither of them.
        serviceSpec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: The service spec that you want the component to use to access service inputs. Set this only when the component is attached to a service instance.
        templateFile:
          allOf:
            - $ref: "#/components/schemas/TemplateFileContents"
            - description: <p>A path to the Infrastructure as Code (IaC) file describing infrastructure that a custom component provisions.</p> <note> <p>Components support a single IaC file, even if you use Terraform as your template language.</p> </note>
    UpdateEnvironmentOutput:
      type: object
      required:
        - environment
      properties:
        environment:
          allOf:
            - $ref: "#/components/schemas/Environment"
            - description: The environment detail data that's returned by Proton.
    UpdateEnvironmentInput:
      type: object
      required:
        - deploymentType
        - name
      title: UpdateEnvironmentInput
      properties:
        codebuildRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of the IAM service role that allows Proton to provision infrastructure using CodeBuild-based provisioning on your behalf.
        componentRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in this environment. It determines the scope of infrastructure that a component can provision.</p> <p>The environment must have a <code>componentRoleArn</code> to allow directly defined components to be associated with the environment.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
        deploymentType:
          allOf:
            - $ref: "#/components/schemas/DeploymentUpdateType"
            - description: <p>There are four modes for updating an environment. The <code>deploymentType</code> field defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i> include major or minor version parameters when you use this <code>deployment-type</code>.</p> </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can also specify a different minor version of the current major version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the environment is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can also specify a different major version that is higher than the major version in use and a minor version (optional).</p> </dd> </dl>
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the environment update.
        environmentAccountConnectionId:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionId"
            - description: <p>The ID of the environment account connection.</p> <p>You can only update to a new environment account connection if it was created in the same environment account that the current environment account connection was created in and is associated with the current environment.</p>
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment to update.
        protonServiceRoleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the Proton service role that allows Proton to make API calls to other services your behalf.
        provisioningRepository:
          allOf:
            - $ref: "#/components/schemas/RepositoryBranchInput"
            - description: The linked repository that you use to host your rendered infrastructure templates for self-managed provisioning. A linked repository is a repository that has been registered with Proton. For more information, see <a>CreateRepository</a>.
        spec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: The formatted specification that defines the update.
        templateMajorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The major version of the environment to update.
        templateMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of the environment to update.
    UpdateEnvironmentAccountConnectionOutput:
      type: object
      required:
        - environmentAccountConnection
      properties:
        environmentAccountConnection:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnection"
            - description: The environment account connection detail data that's returned by Proton.
    UpdateEnvironmentAccountConnectionInput:
      type: object
      required:
        - id
      title: UpdateEnvironmentAccountConnectionInput
      properties:
        codebuildRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of an IAM service role in the environment account. Proton uses this role to provision infrastructure resources using CodeBuild-based provisioning in the associated environment account.
        componentRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p> <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
        id:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionId"
            - description: The ID of the environment account connection to update.
        roleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of the IAM service role that's associated with the environment account connection to update.
    UpdateEnvironmentTemplateOutput:
      type: object
      required:
        - environmentTemplate
      properties:
        environmentTemplate:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplate"
            - description: The environment template detail data that's returned by Proton.
    UpdateEnvironmentTemplateInput:
      type: object
      required:
        - name
      title: UpdateEnvironmentTemplateInput
      properties:
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the environment template update.
        displayName:
          allOf:
            - $ref: "#/components/schemas/DisplayName"
            - description: The name of the environment template to update as displayed in the developer interface.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template to update.
    UpdateEnvironmentTemplateVersionOutput:
      type: object
      required:
        - environmentTemplateVersion
      properties:
        environmentTemplateVersion:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplateVersion"
            - description: The environment template version detail data that's returned by Proton.
    UpdateEnvironmentTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: UpdateEnvironmentTemplateVersionInput
      properties:
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of environment template version to update.
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: To update a major version of an environment template, include <code>major Version</code>.
        minorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: To update a minor version of an environment template, include <code>minorVersion</code>.
        status:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionStatus"
            - description: The status of the environment template minor version to update.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template.
    UpdateServiceOutput:
      type: object
      required:
        - service
      properties:
        service:
          allOf:
            - $ref: "#/components/schemas/Service"
            - description: The service detail data that's returned by Proton.
    UpdateServiceInput:
      type: object
      required:
        - name
      title: UpdateServiceInput
      properties:
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The edited service description.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service to edit.
        spec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: Lists the service instances to add and the existing service instances to remain. Omit the existing service instances to delete from the list. <i>Don't</i> include edits to the existing service instances or pipeline. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-svc-update.html">Edit a service</a> in the <i>Proton User Guide</i>.
    UpdateServiceInstanceOutput:
      type: object
      required:
        - serviceInstance
      properties:
        serviceInstance:
          allOf:
            - $ref: "#/components/schemas/ServiceInstance"
            - description: The service instance summary data that's returned by Proton.
    UpdateServiceInstanceInput:
      type: object
      required:
        - deploymentType
        - name
        - serviceName
      title: UpdateServiceInstanceInput
      properties:
        clientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token of the service instance to update.
        deploymentType:
          allOf:
            - $ref: "#/components/schemas/DeploymentUpdateType"
            - description: <p>The deployment type. It defines the mode for updating a service instance, as follows:</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the service instance is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i> include major or minor version parameters when you use this deployment type.</p> </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the service instance is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can also specify a different minor version of the current major version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the service instance is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can specify a different major version that's higher than the major version in use and a minor version.</p> </dd> </dl>
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance to update.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that the service instance belongs to.
        spec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: The formatted specification that defines the service instance update.
        templateMajorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The major version of the service template to update.
        templateMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of the service template to update.
    UpdateServicePipelineOutput:
      type: object
      required:
        - pipeline
      properties:
        pipeline:
          allOf:
            - $ref: "#/components/schemas/ServicePipeline"
            - description: The pipeline details that are returned by Proton.
    UpdateServicePipelineInput:
      type: object
      required:
        - deploymentType
        - serviceName
        - spec
      title: UpdateServicePipelineInput
      properties:
        deploymentType:
          allOf:
            - $ref: "#/components/schemas/DeploymentUpdateType"
            - description: <p>The deployment type.</p> <p>There are four modes for updating a service pipeline. The <code>deploymentType</code> field defines the mode.</p> <dl> <dt/> <dd> <p> <code>NONE</code> </p> <p>In this mode, a deployment <i>doesn't</i> occur. Only the requested metadata parameters are updated.</p> </dd> <dt/> <dd> <p> <code>CURRENT_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the new spec that you provide. Only requested parameters are updated. <i>Donâ€™t</i> include major or minor version parameters when you use this <code>deployment-type</code>.</p> </dd> <dt/> <dd> <p> <code>MINOR_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) minor version of the current major version in use, by default. You can specify a different minor version of the current major version in use.</p> </dd> <dt/> <dd> <p> <code>MAJOR_VERSION</code> </p> <p>In this mode, the service pipeline is deployed and updated with the published, recommended (latest) major and minor version of the current template, by default. You can specify a different major version that's higher than the major version in use and a minor version.</p> </dd> </dl>
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service to that the pipeline is associated with.
        spec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: The spec for the service pipeline to update.
        templateMajorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The major version of the service template that was used to create the service that the pipeline is associated with.
        templateMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of the service template that was used to create the service that the pipeline is associated with.
    UpdateServiceSyncBlockerOutput:
      type: object
      required:
        - serviceName
        - serviceSyncBlocker
      properties:
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance that you want to update the service sync blocker for.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that you want to update the service sync blocker for.
        serviceSyncBlocker:
          allOf:
            - $ref: "#/components/schemas/SyncBlocker"
            - description: The detailed data on the service sync blocker that was updated.
    UpdateServiceSyncBlockerInput:
      type: object
      required:
        - id
        - resolvedReason
      title: UpdateServiceSyncBlockerInput
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the service sync blocker.
        resolvedReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The reason the service sync blocker was resolved.
    UpdateServiceSyncConfigOutput:
      type: object
      properties:
        serviceSyncConfig:
          allOf:
            - $ref: "#/components/schemas/ServiceSyncConfig"
            - description: The detailed data of the Proton Ops file.
    UpdateServiceSyncConfigInput:
      type: object
      required:
        - branch
        - filePath
        - repositoryName
        - repositoryProvider
        - serviceName
      title: UpdateServiceSyncConfigInput
      properties:
        branch:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The name of the code repository branch where the Proton Ops file is found.
        filePath:
          allOf:
            - $ref: "#/components/schemas/OpsFilePath"
            - description: The path to the Proton Ops file.
        repositoryName:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The name of the repository where the Proton Ops file is found.
        repositoryProvider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The name of the repository provider where the Proton Ops file is found.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service the Proton Ops file is for.
    UpdateServiceTemplateOutput:
      type: object
      required:
        - serviceTemplate
      properties:
        serviceTemplate:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplate"
            - description: The service template detail data that's returned by Proton.
    UpdateServiceTemplateInput:
      type: object
      required:
        - name
      title: UpdateServiceTemplateInput
      properties:
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the service template update.
        displayName:
          allOf:
            - $ref: "#/components/schemas/DisplayName"
            - description: The name of the service template to update that's displayed in the developer interface.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template to update.
    UpdateServiceTemplateVersionOutput:
      type: object
      required:
        - serviceTemplateVersion
      properties:
        serviceTemplateVersion:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateVersion"
            - description: The service template version detail data that's returned by Proton.
    UpdateServiceTemplateVersionInput:
      type: object
      required:
        - majorVersion
        - minorVersion
        - templateName
      title: UpdateServiceTemplateVersionInput
      properties:
        compatibleEnvironmentTemplates:
          allOf:
            - $ref: "#/components/schemas/CompatibleEnvironmentTemplateInputList"
            - description: An array of environment template objects that are compatible with this service template version. A service instance based on this service template version can run in environments based on compatible templates.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of a service template version to update.
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: To update a major version of a service template, include <code>major Version</code>.
        minorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: To update a minor version of a service template, include <code>minorVersion</code>.
        status:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionStatus"
            - description: The status of the service template minor version to update.
        supportedComponentSources:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateSupportedComponentSourceInputList"
            - description: <p>An array of supported component sources. Components with supported sources can be attached to service instances based on this service template version.</p> <note> <p>A change to <code>supportedComponentSources</code> doesn't impact existing component attachments to instances based on this template version. A change only affects later associations.</p> </note> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template.
    UpdateTemplateSyncConfigOutput:
      type: object
      properties:
        templateSyncConfig:
          allOf:
            - $ref: "#/components/schemas/TemplateSyncConfig"
            - description: The template sync configuration detail data that's returned by Proton.
    UpdateTemplateSyncConfigInput:
      type: object
      required:
        - branch
        - repositoryName
        - repositoryProvider
        - templateName
        - templateType
      title: UpdateTemplateSyncConfigInput
      properties:
        branch:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The repository branch for your template.
        repositoryName:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name (for example, <code>myrepos/myrepo</code>).
        repositoryProvider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
        subdirectory:
          allOf:
            - $ref: "#/components/schemas/Subdirectory"
            - description: A subdirectory path to your template bundle version. When included, limits the template bundle search to this repository directory.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The synced template name.
        templateType:
          allOf:
            - $ref: "#/components/schemas/TemplateType"
            - description: The synced template type.
    EnvironmentAccountConnectionId:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
    EnvironmentAccountConnection:
      type: object
      required:
        - arn
        - environmentAccountId
        - environmentName
        - id
        - lastModifiedAt
        - managementAccountId
        - requestedAt
        - roleArn
        - status
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionArn"
            - description: The Amazon Resource Name (ARN) of the environment account connection.
        codebuildRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of an IAM service role in the environment account. Proton uses this role to provision infrastructure resources using CodeBuild-based provisioning in the associated environment account.
        componentRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p> <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
        environmentAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The environment account that's connected to the environment account connection.
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment that's associated with the environment account connection.
        id:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionId"
            - description: The ID of the environment account connection.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment account connection was last modified.
        managementAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The ID of the management account that's connected to the environment account connection.
        requestedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment account connection request was made.
        roleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The IAM service role that's associated with the environment account connection.
        status:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionStatus"
            - description: The status of the environment account connection.
      description: Detailed data of an Proton environment account connection resource.
    RoleArnOrEmptyString:
      type: string
      pattern: (^$)|(^arn:(aws|aws-cn|aws-us-gov):iam::\d{12}:role/([\w+=,.@-]{1,512}[/:])*([\w+=,.@-]{1,64})$)
      minLength: 0
      maxLength: 2048
    RepositoryBranch:
      type: object
      required:
        - arn
        - branch
        - name
        - provider
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/RepositoryArn"
            - description: The Amazon Resource Name (ARN) of the linked repository.
        branch:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The repository branch.
        name:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name.
        provider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
      description: Detail data for a linked repository branch.
    AccountSettings:
      type: object
      properties:
        pipelineCodebuildRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArnOrEmptyString"
            - description: The Amazon Resource Name (ARN) of the service role that Proton uses for provisioning pipelines. Proton assumes this role for CodeBuild-based provisioning.
        pipelineProvisioningRepository:
          allOf:
            - $ref: "#/components/schemas/RepositoryBranch"
            - description: The linked repository for pipeline provisioning. Required if you have environments configured for self-managed provisioning with services that include pipelines. A linked repository is a repository that has been registered with Proton. For more information, see <a>CreateRepository</a>.
        pipelineServiceRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArnOrEmptyString"
            - description: The Amazon Resource Name (ARN) of the service role you want to use for provisioning pipelines. Assumed by Proton for Amazon Web Services-managed provisioning, and by customer-owned automation for self-managed provisioning.
      description: Proton settings that are used for multiple services in the Amazon Web Services account.
    Arn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov):[a-zA-Z0-9-]+:[a-zA-Z0-9-]*:\d{12}:([\w+=,.@-]+[/:])*[\w+=,.@-]+$
      minLength: 1
      maxLength: 200
    AwsAccountId:
      type: string
      pattern: ^\d{12}$
    BlockerStatus:
      type: string
      enum:
        - ACTIVE
        - RESOLVED
    BlockerType:
      type: string
      enum:
        - AUTOMATED
    Boolean:
      type: boolean
    ResourceName:
      type: string
      pattern: ^[0-9A-Za-z]+[0-9A-Za-z_\-]*$
      minLength: 1
      maxLength: 100
    Component:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - environmentName
        - lastModifiedAt
        - name
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/ComponentArn"
            - description: The Amazon Resource Name (ARN) of the component.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the component was created.
        deploymentStatus:
          allOf:
            - $ref: "#/components/schemas/DeploymentStatus"
            - description: The component deployment status.
        deploymentStatusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: The message associated with the component deployment status.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the component.
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the Proton environment that this component is associated with.
        lastClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The last token the client requested.
        lastDeploymentAttemptedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when a deployment of the component was last attempted.
        lastDeploymentSucceededAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the component was last deployed successfully.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the component was last modified.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the component.
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance that this component is attached to. Provided when a component is attached to a service instance.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that <code>serviceInstanceName</code> is associated with. Provided when a component is attached to a service instance.
        serviceSpec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: The service spec that the component uses to access service inputs. Provided when a component is attached to a service instance.
      description: <p>Detailed data of an Proton component resource.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    Environment:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - lastDeploymentAttemptedAt
        - lastDeploymentSucceededAt
        - name
        - templateMajorVersion
        - templateMinorVersion
        - templateName
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/EnvironmentArn"
            - description: The Amazon Resource Name (ARN) of the environment.
        codebuildRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The Amazon Resource Name (ARN) of the IAM service role that allows Proton to provision infrastructure using CodeBuild-based provisioning on your behalf.
        componentRoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in this environment. It determines the scope of infrastructure that a component can provision.</p> <p>The environment must have a <code>componentRoleArn</code> to allow directly defined components to be associated with the environment.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment was created.
        deploymentStatus:
          allOf:
            - $ref: "#/components/schemas/DeploymentStatus"
            - description: The environment deployment status.
        deploymentStatusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: An environment deployment status message.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the environment.
        environmentAccountConnectionId:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionId"
            - description: The ID of the environment account connection that's used to provision infrastructure resources in an environment account.
        environmentAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The ID of the environment account that the environment infrastructure resources are provisioned in.
        lastDeploymentAttemptedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when a deployment of the environment was last attempted.
        lastDeploymentSucceededAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment was last deployed successfully.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment.
        protonServiceRoleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the Proton service role that allows Proton to make calls to other services on your behalf.
        provisioning:
          allOf:
            - $ref: "#/components/schemas/Provisioning"
            - description: When included, indicates that the environment template is for customer provisioned and managed infrastructure.
        provisioningRepository:
          allOf:
            - $ref: "#/components/schemas/RepositoryBranch"
            - description: The linked repository that you use to host your rendered infrastructure templates for self-managed provisioning. A linked repository is a repository that has been registered with Proton. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/APIReference/API_CreateRepository.html">CreateRepository</a>.
        spec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: The environment spec.
        templateMajorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The major version of the environment template.
        templateMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of the environment template.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The Amazon Resource Name (ARN) of the environment template.
      description: Detailed data of an Proton environment resource. An Proton environment is a set of resources shared across Proton services.
    ServiceInstance:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - environmentName
        - lastDeploymentAttemptedAt
        - lastDeploymentSucceededAt
        - name
        - serviceName
        - templateMajorVersion
        - templateMinorVersion
        - templateName
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/ServiceInstanceArn"
            - description: The Amazon Resource Name (ARN) of the service instance.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service instance was created.
        deploymentStatus:
          allOf:
            - $ref: "#/components/schemas/DeploymentStatus"
            - description: The service instance deployment status.
        deploymentStatusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: The message associated with the service instance deployment status.
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment that the service instance was deployed into.
        lastClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The last client request token received.
        lastDeploymentAttemptedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when a deployment of the service instance was last attempted.
        lastDeploymentSucceededAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service instance was last deployed successfully.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that the service instance belongs to.
        spec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: The service spec that was used to create the service instance.
        templateMajorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The major version of the service template that was used to create the service instance.
        templateMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of the service template that was used to create the service instance.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template that was used to create the service instance.
      description: Detailed data of an Proton service instance resource.
    ServicePipeline:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - lastDeploymentAttemptedAt
        - lastDeploymentSucceededAt
        - templateMajorVersion
        - templateMinorVersion
        - templateName
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the service pipeline.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service pipeline was created.
        deploymentStatus:
          allOf:
            - $ref: "#/components/schemas/DeploymentStatus"
            - description: The deployment status of the service pipeline.
        deploymentStatusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: A service pipeline deployment status message.
        lastDeploymentAttemptedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when a deployment of the service pipeline was last attempted.
        lastDeploymentSucceededAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service pipeline was last deployed successfully.
        spec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: The service spec that was used to create the service pipeline.
        templateMajorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The major version of the service template that was used to create the service pipeline.
        templateMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of the service template that was used to create the service pipeline.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template that was used to create the service pipeline.
      description: Detailed data of an Proton service instance pipeline resource.
    ClientToken:
      type: string
      pattern: ^[!-~]*$
      minLength: 0
      maxLength: 64
    TemplateVersionPart:
      type: string
      pattern: ^(0|([1-9]{1}\d*))$
      minLength: 1
      maxLength: 20
    CompatibleEnvironmentTemplate:
      type: object
      required:
        - majorVersion
        - templateName
      properties:
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The major version of the compatible environment template.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The compatible environment template name.
      description: Compatible environment template data.
    CompatibleEnvironmentTemplateInput:
      type: object
      required:
        - majorVersion
        - templateName
      properties:
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The major version of the compatible environment template.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The compatible environment template name.
      description: Compatible environment template data.
    CompatibleEnvironmentTemplateInputList:
      type: array
      items:
        $ref: "#/components/schemas/CompatibleEnvironmentTemplateInput"
      minItems: 1
      maxItems: 10
    CompatibleEnvironmentTemplateList:
      type: array
      items:
        $ref: "#/components/schemas/CompatibleEnvironmentTemplate"
    ComponentArn:
      type: string
    Timestamp:
      type: string
      format: date-time
    DeploymentStatus:
      type: string
      enum:
        - IN_PROGRESS
        - FAILED
        - SUCCEEDED
        - DELETE_IN_PROGRESS
        - DELETE_FAILED
        - DELETE_COMPLETE
        - CANCELLING
        - CANCELLED
    StatusMessage:
      type: string
      format: password
    Description:
      type: string
      minLength: 0
      maxLength: 500
      format: password
    String:
      type: string
    SpecContents:
      type: string
      minLength: 1
      maxLength: 51200
      format: password
    ComponentDeploymentUpdateType:
      type: string
      enum:
        - NONE
        - CURRENT_VERSION
    ComponentSummary:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - environmentName
        - lastModifiedAt
        - name
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/ComponentArn"
            - description: The Amazon Resource Name (ARN) of the component.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the component was created.
        deploymentStatus:
          allOf:
            - $ref: "#/components/schemas/DeploymentStatus"
            - description: The component deployment status.
        deploymentStatusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: The message associated with the component deployment status.
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the Proton environment that this component is associated with.
        lastDeploymentAttemptedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when a deployment of the component was last attempted.
        lastDeploymentSucceededAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the component was last deployed successfully.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the component was last modified.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the component.
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance that this component is attached to. Provided when a component is attached to a service instance.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that <code>serviceInstanceName</code> is associated with. Provided when a component is attached to a service instance.
      description: <p>Summary data of an Proton component resource.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
    ComponentSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ComponentSummary"
    ResourceCountsSummary:
      type: object
      required:
        - total
      properties:
        behindMajor:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of resources of this type in the Amazon Web Services account that need a major template version update.
        behindMinor:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of resources of this type in the Amazon Web Services account that need a minor template version update.
        failed:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of resources of this type in the Amazon Web Services account that failed to deploy.
        total:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The total number of resources of this type in the Amazon Web Services account.
        upToDate:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of resources of this type in the Amazon Web Services account that are up-to-date with their template.
      description: Summary counts of each Proton resource types.
    CountsSummary:
      type: object
      properties:
        components:
          allOf:
            - $ref: "#/components/schemas/ResourceCountsSummary"
            - description: <p>The total number of components in the Amazon Web Services account.</p> <p>The semantics of the <code>components</code> field are different from the semantics of results for other infrastructure-provisioning resources. That's because at this time components don't have associated templates, therefore they don't have the concept of staleness. The <code>components</code> object will only contain <code>total</code> and <code>failed</code> members.</p>
        environmentTemplates:
          allOf:
            - $ref: "#/components/schemas/ResourceCountsSummary"
            - description: The total number of environment templates in the Amazon Web Services account. The <code>environmentTemplates</code> object will only contain <code>total</code> members.
        environments:
          allOf:
            - $ref: "#/components/schemas/ResourceCountsSummary"
            - description: The staleness counts for Proton environments in the Amazon Web Services account. The <code>environments</code> object will only contain <code>total</code> members.
        pipelines:
          allOf:
            - $ref: "#/components/schemas/ResourceCountsSummary"
            - description: The staleness counts for Proton pipelines in the Amazon Web Services account.
        serviceInstances:
          allOf:
            - $ref: "#/components/schemas/ResourceCountsSummary"
            - description: The staleness counts for Proton service instances in the Amazon Web Services account.
        serviceTemplates:
          allOf:
            - $ref: "#/components/schemas/ResourceCountsSummary"
            - description: The total number of service templates in the Amazon Web Services account. The <code>serviceTemplates</code> object will only contain <code>total</code> members.
        services:
          allOf:
            - $ref: "#/components/schemas/ResourceCountsSummary"
            - description: The staleness counts for Proton services in the Amazon Web Services account.
      description: Summary counts of each Proton resource type.
    TemplateManifestContents:
      type: string
      minLength: 1
      maxLength: 1024
      format: password
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 0
      maxItems: 50
    TemplateFileContents:
      type: string
      minLength: 1
      maxLength: 51200
      format: password
    RoleArn:
      type: string
      pattern: ^arn:(aws|aws-cn|aws-us-gov):iam::\d{12}:role/([\w+=,.@-]{1,512}[/:])*([\w+=,.@-]{1,64})$
      minLength: 1
      maxLength: 2048
    RepositoryBranchInput:
      type: object
      required:
        - branch
        - name
        - provider
      properties:
        branch:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The repository branch.
        name:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name.
        provider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
      description: Detail input data for a linked repository branch.
    DisplayName:
      type: string
      minLength: 1
      maxLength: 100
      format: password
    Provisioning:
      type: string
      enum:
        - CUSTOMER_MANAGED
    EnvironmentTemplate:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplateArn"
            - description: The Amazon Resource Name (ARN) of the environment template.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment template was created.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the environment template.
        displayName:
          allOf:
            - $ref: "#/components/schemas/DisplayName"
            - description: The name of the environment template as displayed in the developer interface.
        encryptionKey:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The customer provided encryption key for the environment template.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment template was last modified.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template.
        provisioning:
          allOf:
            - $ref: "#/components/schemas/Provisioning"
            - description: When included, indicates that the environment template is for customer provisioned and managed infrastructure.
        recommendedVersion:
          allOf:
            - $ref: "#/components/schemas/FullTemplateVersionNumber"
            - description: The ID of the recommended version of the environment template.
      description: The environment template data.
    TemplateVersionSourceInput:
      type: object
      properties:
        s3:
          allOf:
            - $ref: "#/components/schemas/S3ObjectSource"
            - description: An S3 source object that includes the template bundle S3 path and name for a template minor version.
      description: Template version source data.
    EnvironmentTemplateVersion:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - majorVersion
        - minorVersion
        - status
        - templateName
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplateVersionArn"
            - description: The Amazon Resource Name (ARN) of the version of an environment template.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the version of an environment template was created.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the minor version of an environment template.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the version of an environment template was last modified.
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The latest major version that's associated with the version of an environment template.
        minorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of an environment template.
        recommendedMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The recommended minor version of the environment template.
        schema:
          allOf:
            - $ref: "#/components/schemas/TemplateSchema"
            - description: The schema of the version of an environment template.
        status:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionStatus"
            - description: The status of the version of an environment template.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: The status message of the version of an environment template.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the version of an environment template.
      description: The environment template version data.
    RepositoryName:
      type: string
      pattern: "[A-Za-z0-9_.-].*/[A-Za-z0-9_.-].*"
      minLength: 1
      maxLength: 100
    RepositoryProvider:
      type: string
      enum:
        - GITHUB
        - GITHUB_ENTERPRISE
        - BITBUCKET
    Repository:
      type: object
      required:
        - arn
        - connectionArn
        - name
        - provider
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/RepositoryArn"
            - description: The Amazon Resource Name (ARN) of the linked repository.
        connectionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of your AWS CodeStar connection that connects Proton to your repository provider account.
        encryptionKey:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: Your customer Amazon Web Services KMS encryption key.
        name:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name.
        provider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
      description: Detailed data of a linked repositoryâ€”a repository that has been registered with Proton.
    GitBranchName:
      type: string
      minLength: 1
      maxLength: 200
    RepositoryId:
      type: string
      minLength: 1
      maxLength: 200
    Service:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
        - spec
        - status
        - templateName
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/ServiceArn"
            - description: The Amazon Resource Name (ARN) of the service.
        branchName:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The name of the code repository branch that holds the code that's deployed in Proton.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service was created.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the service.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service was last modified.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service.
        pipeline:
          allOf:
            - $ref: "#/components/schemas/ServicePipeline"
            - description: The service pipeline detail data.
        repositoryConnectionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the repository connection. For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/setting-up-for-service.html#setting-up-vcontrol">Setting up an AWS CodeStar connection</a> in the <i>Proton User Guide</i>.
        repositoryId:
          allOf:
            - $ref: "#/components/schemas/RepositoryId"
            - description: The ID of the source code repository.
        spec:
          allOf:
            - $ref: "#/components/schemas/SpecContents"
            - description: The formatted specification that defines the service.
        status:
          allOf:
            - $ref: "#/components/schemas/ServiceStatus"
            - description: The status of the service.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: A service status message.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template.
      description: Detailed data of an Proton service resource.
    OpsFilePath:
      type: string
      minLength: 1
      maxLength: 4096
    ServiceSyncConfig:
      type: object
      required:
        - branch
        - filePath
        - repositoryName
        - repositoryProvider
        - serviceName
      properties:
        branch:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The name of the code repository branch that holds the service code Proton will sync with.
        filePath:
          allOf:
            - $ref: "#/components/schemas/OpsFilePath"
            - description: The file path to the service sync configuration file.
        repositoryName:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The name of the code repository that holds the service code Proton will sync with.
        repositoryProvider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The name of the repository provider that holds the repository Proton will sync with.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that the service instance is added to.
      description: Detailed data of the service sync configuration.
    ServiceTemplate:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateArn"
            - description: The Amazon Resource Name (ARN) of the service template.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service template was created.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the service template.
        displayName:
          allOf:
            - $ref: "#/components/schemas/DisplayName"
            - description: The service template name as displayed in the developer interface.
        encryptionKey:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The customer provided service template encryption key that's used to encrypt data.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service template was last modified.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template.
        pipelineProvisioning:
          allOf:
            - $ref: "#/components/schemas/Provisioning"
            - description: If <code>pipelineProvisioning</code> is <code>true</code>, a service pipeline is included in the service template. Otherwise, a service pipeline <i>isn't</i> included in the service template.
        recommendedVersion:
          allOf:
            - $ref: "#/components/schemas/FullTemplateVersionNumber"
            - description: The recommended version of the service template.
      description: Detailed data of an Proton service template resource.
    ServiceTemplateSupportedComponentSourceInputList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceTemplateSupportedComponentSourceType"
    ServiceTemplateVersion:
      type: object
      required:
        - arn
        - compatibleEnvironmentTemplates
        - createdAt
        - lastModifiedAt
        - majorVersion
        - minorVersion
        - status
        - templateName
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateVersionArn"
            - description: The Amazon Resource Name (ARN) of the version of a service template.
        compatibleEnvironmentTemplates:
          allOf:
            - $ref: "#/components/schemas/CompatibleEnvironmentTemplateList"
            - description: An array of compatible environment template names for the major version of a service template.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the version of a service template was created.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the version of a service template.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the version of a service template was last modified.
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The latest major version that's associated with the version of a service template.
        minorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of a service template.
        recommendedMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The recommended minor version of the service template.
        schema:
          allOf:
            - $ref: "#/components/schemas/TemplateSchema"
            - description: The schema of the version of a service template.
        status:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionStatus"
            - description: The service template version status.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: A service template version status message.
        supportedComponentSources:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateSupportedComponentSourceInputList"
            - description: <p>An array of supported component sources. Components with supported sources can be attached to service instances based on this service template version.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the version of a service template.
      description: Detailed data of an Proton service template version resource.
    Subdirectory:
      type: string
      minLength: 1
      maxLength: 4096
    TemplateType:
      type: string
      enum:
        - ENVIRONMENT
        - SERVICE
    TemplateSyncConfig:
      type: object
      required:
        - branch
        - repositoryName
        - repositoryProvider
        - templateName
        - templateType
      properties:
        branch:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The repository branch.
        repositoryName:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name (for example, <code>myrepos/myrepo</code>).
        repositoryProvider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
        subdirectory:
          allOf:
            - $ref: "#/components/schemas/Subdirectory"
            - description: A subdirectory path to your template bundle version.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The template name.
        templateType:
          allOf:
            - $ref: "#/components/schemas/TemplateType"
            - description: The template type.
      description: The detail data for a template sync configuration.
    DeploymentId:
      type: string
      pattern: ^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$
    DeploymentUpdateType:
      type: string
      enum:
        - NONE
        - CURRENT_VERSION
        - MINOR_VERSION
        - MAJOR_VERSION
    EmptyNextToken:
      type: string
      minLength: 0
      maxLength: 0
    EnvironmentArn:
      type: string
    EnvironmentAccountConnectionArn:
      type: string
    EnvironmentAccountConnectionStatus:
      type: string
      enum:
        - PENDING
        - CONNECTED
        - REJECTED
    EnvironmentAccountConnectionRequesterAccountType:
      type: string
      enum:
        - MANAGEMENT_ACCOUNT
        - ENVIRONMENT_ACCOUNT
    EnvironmentAccountConnectionStatusList:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentAccountConnectionStatus"
    EnvironmentAccountConnectionSummary:
      type: object
      required:
        - arn
        - environmentAccountId
        - environmentName
        - id
        - lastModifiedAt
        - managementAccountId
        - requestedAt
        - roleArn
        - status
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionArn"
            - description: The Amazon Resource Name (ARN) of the environment account connection.
        componentRoleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in the associated environment account. It determines the scope of infrastructure that a component can provision in the account.</p> <p>The environment account connection must have a <code>componentRoleArn</code> to allow directly defined components to be associated with any environments running in the account.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
        environmentAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The ID of the environment account that's connected to the environment account connection.
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment that's associated with the environment account connection.
        id:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionId"
            - description: The ID of the environment account connection.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment account connection was last modified.
        managementAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The ID of the management account that's connected to the environment account connection.
        requestedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment account connection request was made.
        roleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The IAM service role that's associated with the environment account connection.
        status:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionStatus"
            - description: The status of the environment account connection.
      description: Summary data of an Proton environment account connection resource.
    EnvironmentAccountConnectionSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentAccountConnectionSummary"
    EnvironmentSummary:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - lastDeploymentAttemptedAt
        - lastDeploymentSucceededAt
        - name
        - templateMajorVersion
        - templateMinorVersion
        - templateName
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/EnvironmentArn"
            - description: The Amazon Resource Name (ARN) of the environment.
        componentRoleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: <p>The Amazon Resource Name (ARN) of the IAM service role that Proton uses when provisioning directly defined components in this environment. It determines the scope of infrastructure that a component can provision.</p> <p>The environment must have a <code>componentRoleArn</code> to allow directly defined components to be associated with the environment.</p> <p>For more information about components, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-components.html">Proton components</a> in the <i>Proton User Guide</i>.</p>
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment was created.
        deploymentStatus:
          allOf:
            - $ref: "#/components/schemas/DeploymentStatus"
            - description: The environment deployment status.
        deploymentStatusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: An environment deployment status message.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the environment.
        environmentAccountConnectionId:
          allOf:
            - $ref: "#/components/schemas/EnvironmentAccountConnectionId"
            - description: The ID of the environment account connection that the environment is associated with.
        environmentAccountId:
          allOf:
            - $ref: "#/components/schemas/AwsAccountId"
            - description: The ID of the environment account that the environment infrastructure resources are provisioned in.
        lastDeploymentAttemptedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when a deployment of the environment was last attempted.
        lastDeploymentSucceededAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment was last deployed successfully.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment.
        protonServiceRoleArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the Proton service role that allows Proton to make calls to other services on your behalf.
        provisioning:
          allOf:
            - $ref: "#/components/schemas/Provisioning"
            - description: When included, indicates that the environment template is for customer provisioned and managed infrastructure.
        templateMajorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The major version of the environment template.
        templateMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of the environment template.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template.
      description: Summary data of an Proton environment resource. An Proton environment is a set of resources shared across Proton services.
    EnvironmentSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentSummary"
    EnvironmentTemplateArn:
      type: string
    FullTemplateVersionNumber:
      type: string
      pattern: ^(0|([1-9]{1}\d*)).(0|([1-9]{1}\d*))$
      minLength: 1
      maxLength: 10
    EnvironmentTemplateFilter:
      type: object
      required:
        - majorVersion
        - templateName
      properties:
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: Include <code>majorVersion</code> to filter search for a major version.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: Include <code>templateName</code> to filter search for a template name.
      description: A search filter for environment templates.
    EnvironmentTemplateFilterList:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentTemplateFilter"
    EnvironmentTemplateSummary:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplateArn"
            - description: The Amazon Resource Name (ARN) of the environment template.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment template was created.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the environment template.
        displayName:
          allOf:
            - $ref: "#/components/schemas/DisplayName"
            - description: The name of the environment template as displayed in the developer interface.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the environment template was last modified.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template.
        provisioning:
          allOf:
            - $ref: "#/components/schemas/Provisioning"
            - description: When included, indicates that the environment template is for customer provisioned and managed infrastructure.
        recommendedVersion:
          allOf:
            - $ref: "#/components/schemas/FullTemplateVersionNumber"
            - description: The recommended version of the environment template.
      description: The environment template data.
    EnvironmentTemplateSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentTemplateSummary"
    EnvironmentTemplateVersionArn:
      type: string
    TemplateSchema:
      type: string
      minLength: 1
      maxLength: 51200
      format: password
    TemplateVersionStatus:
      type: string
      enum:
        - REGISTRATION_IN_PROGRESS
        - REGISTRATION_FAILED
        - DRAFT
        - PUBLISHED
    EnvironmentTemplateVersionSummary:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - majorVersion
        - minorVersion
        - status
        - templateName
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/EnvironmentTemplateVersionArn"
            - description: The Amazon Resource Name (ARN) of the version of an environment template.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the version of an environment template was created.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the version of an environment template.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the version of an environment template was last modified.
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The latest major version that's associated with the version of an environment template.
        minorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The version of an environment template.
        recommendedMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The recommended minor version of the environment template.
        status:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionStatus"
            - description: The status of the version of an environment template.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: The status message of the version of an environment template.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment template.
      description: A summary of the version of an environment template detail data.
    EnvironmentTemplateVersionSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/EnvironmentTemplateVersionSummary"
    SyncType:
      type: string
      enum:
        - TEMPLATE_SYNC
        - SERVICE_SYNC
    RepositorySyncAttempt:
      type: object
      required:
        - events
        - startedAt
        - status
      properties:
        events:
          allOf:
            - $ref: "#/components/schemas/RepositorySyncEvents"
            - description: Detail data for sync attempt events.
        startedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the sync attempt started.
        status:
          allOf:
            - $ref: "#/components/schemas/RepositorySyncStatus"
            - description: The sync attempt status.
      description: Detail data for a repository sync attempt activated by a push to a repository.
    Revision:
      type: object
      required:
        - branch
        - directory
        - repositoryName
        - repositoryProvider
        - sha
      properties:
        branch:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The repository branch.
        directory:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The repository directory changed by a commit and push that activated the sync attempt.
        repositoryName:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name.
        repositoryProvider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
        sha:
          allOf:
            - $ref: "#/components/schemas/SHA"
            - description: The secure hash algorithm (SHA) hash for the revision.
      description: Revision detail data for a commit and push that activates a sync attempt
    ResourceSyncAttempt:
      type: object
      required:
        - events
        - initialRevision
        - startedAt
        - status
        - target
        - targetRevision
      properties:
        events:
          allOf:
            - $ref: "#/components/schemas/ResourceSyncEvents"
            - description: An array of events with detail data.
        initialRevision:
          allOf:
            - $ref: "#/components/schemas/Revision"
            - description: Detail data for the initial repository commit, path and push.
        startedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the sync attempt started.
        status:
          allOf:
            - $ref: "#/components/schemas/ResourceSyncStatus"
            - description: The status of the sync attempt.
        target:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The resource that is synced to.
        targetRevision:
          allOf:
            - $ref: "#/components/schemas/Revision"
            - description: Detail data for the target revision.
      description: Detail data for a resource sync attempt activated by a push to a repository.
    ServiceSyncBlockerSummary:
      type: object
      required:
        - serviceName
      properties:
        latestBlockers:
          allOf:
            - $ref: "#/components/schemas/LatestSyncBlockers"
            - description: The latest active blockers for the synced service.
        serviceInstanceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The name of the service instance that you want sync your service configuration with.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: <p>The name of the service that you want to get the sync blocker summary for. If given a service instance name and a service name, it will return the blockers only applying to the instance that is blocked.</p> <p>If given only a service name, it will return the blockers that apply to all of the instances. In order to get the blockers for a single instance, you will need to make two distinct calls, one to get the sync blocker summary for the service and the other to get the sync blocker for the service instance.</p>
      description: <p>If a service instance is manually updated, Proton wants to prevent accidentally overriding a manual change.</p> <p>A blocker is created because of the manual update or deletion of a service instance. The summary describes the blocker as being active or resolved.</p>
    Integer:
      type: integer
    SyncBlocker:
      type: object
      required:
        - createdAt
        - createdReason
        - id
        - status
        - type
      properties:
        contexts:
          allOf:
            - $ref: "#/components/schemas/SyncBlockerContexts"
            - description: The contexts for the sync blocker.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the sync blocker was created.
        createdReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The reason why the sync blocker was created.
        id:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The ID of the sync blocker.
        resolvedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time the sync blocker was resolved.
        resolvedReason:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The reason the sync blocker was resolved.
        status:
          allOf:
            - $ref: "#/components/schemas/BlockerStatus"
            - description: The status of the sync blocker.
        type:
          allOf:
            - $ref: "#/components/schemas/BlockerType"
            - description: The type of the sync blocker.
      description: Detailed data of the sync blocker.
    LatestSyncBlockers:
      type: array
      items:
        $ref: "#/components/schemas/SyncBlocker"
    OutputsList:
      type: array
      items:
        $ref: "#/components/schemas/Output"
    ProvisionedResourceList:
      type: array
      items:
        $ref: "#/components/schemas/ProvisionedResource"
    MaxPageResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      pattern: ^[A-Za-z0-9+=/]+$
    RepositorySummaryList:
      type: array
      items:
        $ref: "#/components/schemas/RepositorySummary"
    RepositorySyncDefinitionList:
      type: array
      items:
        $ref: "#/components/schemas/RepositorySyncDefinition"
    ListServiceInstancesFilterBy:
      type: string
      enum:
        - name
        - deploymentStatus
        - templateName
        - serviceName
        - deployedTemplateVersionStatus
        - environmentName
        - lastDeploymentAttemptedAtBefore
        - lastDeploymentAttemptedAtAfter
        - createdAtBefore
        - createdAtAfter
    ListServiceInstancesFilterValue:
      type: string
    ListServiceInstancesFilter:
      type: object
      properties:
        key:
          allOf:
            - $ref: "#/components/schemas/ListServiceInstancesFilterBy"
            - description: The name of a filtering criterion.
        value:
          allOf:
            - $ref: "#/components/schemas/ListServiceInstancesFilterValue"
            - description: <p>A value to filter by.</p> <p>With the date/time keys (<code>*At{Before,After}</code>), the value is a valid <a href="https://datatracker.ietf.org/doc/html/rfc3339.html">RFC 3339</a> string with no UTC offset and with an optional fractional precision (for example, <code>1985-04-12T23:20:50.52Z</code>).</p>
      description: A filtering criterion to scope down the result list of the <a>ListServiceInstances</a> action.
    ListServiceInstancesFilterList:
      type: array
      items:
        $ref: "#/components/schemas/ListServiceInstancesFilter"
    ListServiceInstancesSortBy:
      type: string
      enum:
        - name
        - deploymentStatus
        - templateName
        - serviceName
        - environmentName
        - lastDeploymentAttemptedAt
        - createdAt
    SortOrder:
      type: string
      enum:
        - ASCENDING
        - DESCENDING
    ServiceInstanceSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceInstanceSummary"
    ServiceTemplateVersionSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceTemplateVersionSummary"
    ServiceTemplateSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceTemplateSummary"
    ServiceSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceSummary"
    NotifyResourceDeploymentStatusChangeInputOutputsList:
      type: array
      items:
        $ref: "#/components/schemas/Output"
      minItems: 0
      maxItems: 50
    ResourceDeploymentStatus:
      type: string
      enum:
        - IN_PROGRESS
        - FAILED
        - SUCCEEDED
      description: The state that a PR-based deployment can be updated to.
    NotifyResourceDeploymentStatusChangeInputStatusMessageString:
      type: string
      minLength: 0
      maxLength: 5000
      format: password
    Output:
      type: object
      properties:
        key:
          allOf:
            - $ref: "#/components/schemas/OutputKey"
            - description: The output key.
        valueString:
          allOf:
            - $ref: "#/components/schemas/OutputValueString"
            - description: The output value.
      description: An infrastructure as code defined resource output.
    OutputKey:
      type: string
      minLength: 1
      maxLength: 1024
    OutputValueString:
      type: string
      minLength: 1
      maxLength: 1024
    ProvisionedResourceIdentifier:
      type: string
      minLength: 1
      maxLength: 200
    ProvisionedResourceName:
      type: string
      minLength: 1
      maxLength: 200
    ProvisionedResourceEngine:
      type: string
      enum:
        - CLOUDFORMATION
        - TERRAFORM
      description: List of provisioning engines
    ProvisionedResource:
      type: object
      properties:
        identifier:
          allOf:
            - $ref: "#/components/schemas/ProvisionedResourceIdentifier"
            - description: The provisioned resource identifier.
        name:
          allOf:
            - $ref: "#/components/schemas/ProvisionedResourceName"
            - description: The provisioned resource name.
        provisioningEngine:
          allOf:
            - $ref: "#/components/schemas/ProvisionedResourceEngine"
            - description: <p>The resource provisioning engine. At this time, <code>CLOUDFORMATION</code> can be used for Amazon Web Services-managed provisioning, and <code>TERRAFORM</code> can be used for self-managed provisioning.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/proton/latest/userguide/ag-works-prov-methods.html#ag-works-prov-methods-self">Self-managed provisioning</a> in the <i>Proton User Guide</i>.</p>
      description: Detail data for a provisioned resource.
    RepositoryArn:
      type: string
    RepositorySummary:
      type: object
      required:
        - arn
        - connectionArn
        - name
        - provider
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/RepositoryArn"
            - description: The Amazon Resource Name (ARN) of the linked repository.
        connectionArn:
          allOf:
            - $ref: "#/components/schemas/Arn"
            - description: The Amazon Resource Name (ARN) of the of your connection that connects Proton to your repository.
        name:
          allOf:
            - $ref: "#/components/schemas/RepositoryName"
            - description: The repository name.
        provider:
          allOf:
            - $ref: "#/components/schemas/RepositoryProvider"
            - description: The repository provider.
      description: Summary data of a linked repositoryâ€”a repository that has been registered with Proton.
    RepositorySyncEvents:
      type: array
      items:
        $ref: "#/components/schemas/RepositorySyncEvent"
    RepositorySyncStatus:
      type: string
      enum:
        - INITIATED
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
        - QUEUED
    RepositorySyncDefinition:
      type: object
      required:
        - branch
        - directory
        - parent
        - target
      properties:
        branch:
          allOf:
            - $ref: "#/components/schemas/GitBranchName"
            - description: The repository branch.
        directory:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The directory in the repository.
        parent:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The resource that is synced from.
        target:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The resource that is synced to.
      description: A repository sync definition.
    RepositorySyncEvent:
      type: object
      required:
        - event
        - time
        - type
      properties:
        event:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: Event detail for a repository sync attempt.
        externalId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The external ID of the sync event.
        time:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time that the sync event occurred.
        type:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The type of event.
      description: Repository sync event detail data for a sync attempt.
    ResourceNameOrEmpty:
      type: string
      pattern: (^$)|^[0-9A-Za-z]+[0-9A-Za-z_\-]*$
      minLength: 0
      maxLength: 100
    ResourceSyncEvents:
      type: array
      items:
        $ref: "#/components/schemas/ResourceSyncEvent"
    ResourceSyncStatus:
      type: string
      enum:
        - INITIATED
        - IN_PROGRESS
        - SUCCEEDED
        - FAILED
    ResourceSyncEvent:
      type: object
      required:
        - event
        - time
        - type
      properties:
        event:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: A resource sync event.
        externalId:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The external ID for the event.
        time:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the event occurred.
        type:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The type of event.
      description: Detail data for a resource sync event.
    SHA:
      type: string
      minLength: 1
      maxLength: 255
    S3Bucket:
      type: string
      pattern: ^[a-z0-9]+[a-z0-9-\.]+[a-z0-9]+$
      minLength: 3
      maxLength: 63
    S3Key:
      type: string
      minLength: 1
      maxLength: 1024
    S3ObjectSource:
      type: object
      required:
        - bucket
        - key
      properties:
        bucket:
          allOf:
            - $ref: "#/components/schemas/S3Bucket"
            - description: The name of the S3 bucket that contains a template bundle.
        key:
          allOf:
            - $ref: "#/components/schemas/S3Key"
            - description: The path to the S3 bucket that contains a template bundle.
      description: Template bundle S3 bucket data.
    ServiceArn:
      type: string
    ServiceStatus:
      type: string
      enum:
        - CREATE_IN_PROGRESS
        - CREATE_FAILED_CLEANUP_IN_PROGRESS
        - CREATE_FAILED_CLEANUP_COMPLETE
        - CREATE_FAILED_CLEANUP_FAILED
        - CREATE_FAILED
        - ACTIVE
        - DELETE_IN_PROGRESS
        - DELETE_FAILED
        - UPDATE_IN_PROGRESS
        - UPDATE_FAILED_CLEANUP_IN_PROGRESS
        - UPDATE_FAILED_CLEANUP_COMPLETE
        - UPDATE_FAILED_CLEANUP_FAILED
        - UPDATE_FAILED
        - UPDATE_COMPLETE_CLEANUP_FAILED
    ServiceInstanceArn:
      type: string
    ServiceInstanceSummary:
      type: object
      required:
        - arn
        - createdAt
        - deploymentStatus
        - environmentName
        - lastDeploymentAttemptedAt
        - lastDeploymentSucceededAt
        - name
        - serviceName
        - templateMajorVersion
        - templateMinorVersion
        - templateName
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/ServiceInstanceArn"
            - description: The Amazon Resource Name (ARN) of the service instance.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service instance was created.
        deploymentStatus:
          allOf:
            - $ref: "#/components/schemas/DeploymentStatus"
            - description: The service instance deployment status.
        deploymentStatusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: A service instance deployment status message.
        environmentName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the environment that the service instance was deployed into.
        lastDeploymentAttemptedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when a deployment of the service was last attempted.
        lastDeploymentSucceededAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service was last deployed successfully.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service instance.
        serviceName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service that the service instance belongs to.
        templateMajorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The service instance template major version.
        templateMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The service instance template minor version.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template.
      description: Summary data of an Proton service instance resource.
    ServiceSummary:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
        - status
        - templateName
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/ServiceArn"
            - description: The Amazon Resource Name (ARN) of the service.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service was created.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the service.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service was last modified.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service.
        status:
          allOf:
            - $ref: "#/components/schemas/ServiceStatus"
            - description: The status of the service.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: A service status message.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template.
      description: Summary data of an Proton service resource.
    ServiceTemplateArn:
      type: string
    ServiceTemplateSummary:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - name
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateArn"
            - description: The Amazon Resource Name (ARN) of the service template.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service template was created.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the service template.
        displayName:
          allOf:
            - $ref: "#/components/schemas/DisplayName"
            - description: The service template name as displayed in the developer interface.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the service template was last modified.
        name:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template.
        pipelineProvisioning:
          allOf:
            - $ref: "#/components/schemas/Provisioning"
            - description: If <code>pipelineProvisioning</code> is <code>true</code>, a service pipeline is included in the service template, otherwise a service pipeline <i>isn't</i> included in the service template.
        recommendedVersion:
          allOf:
            - $ref: "#/components/schemas/FullTemplateVersionNumber"
            - description: The recommended version of the service template.
      description: Summary data of an Proton service template resource.
    ServiceTemplateSupportedComponentSourceType:
      type: string
      enum:
        - DIRECTLY_DEFINED
    ServiceTemplateVersionArn:
      type: string
    ServiceTemplateVersionSummary:
      type: object
      required:
        - arn
        - createdAt
        - lastModifiedAt
        - majorVersion
        - minorVersion
        - status
        - templateName
      properties:
        arn:
          allOf:
            - $ref: "#/components/schemas/ServiceTemplateVersionArn"
            - description: The Amazon Resource Name (ARN) of the version of a service template.
        createdAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the version of a service template was created.
        description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A description of the version of a service template.
        lastModifiedAt:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time when the version of a service template was last modified.
        majorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The latest major version that's associated with the version of a service template.
        minorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The minor version of a service template.
        recommendedMinorVersion:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionPart"
            - description: The recommended minor version of the service template.
        status:
          allOf:
            - $ref: "#/components/schemas/TemplateVersionStatus"
            - description: The service template minor version status.
        statusMessage:
          allOf:
            - $ref: "#/components/schemas/StatusMessage"
            - description: A service template minor version status message.
        templateName:
          allOf:
            - $ref: "#/components/schemas/ResourceName"
            - description: The name of the service template.
      description: Summary data of an Proton service template version resource.
    SyncBlockerContexts:
      type: array
      items:
        $ref: "#/components/schemas/SyncBlockerContext"
    SyncBlockerContext:
      type: object
      required:
        - key
        - value
      properties:
        key:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The key for the sync blocker context.
        value:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The value of the sync blocker context.
      description: Detailed data of the context of the sync blocker.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tag:
      type: object
      required:
        - key
        - value
      properties:
        key:
          allOf:
            - $ref: "#/components/schemas/TagKey"
            - description: The key of the resource tag.
        value:
          allOf:
            - $ref: "#/components/schemas/TagValue"
            - description: The value of the resource tag.
      description: A description of a resource tag.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 0
      maxItems: 50
security:
  - hmac: []
