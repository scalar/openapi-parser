openapi: 3.0.0
info:
  version: 2019-07-05
  x-release: v4
  title: AWS Network Manager
  description: Amazon Web Services enables you to centrally manage your Amazon Web Services Cloud WAN core network and your Transit Gateway network across Amazon Web Services accounts, Regions, and on-premises locations.
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: networkmanager
  x-aws-signingName: networkmanager
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/networkmanager-2019-07-05.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/networkmanager/
servers:
  - url: http://networkmanager.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The NetworkManager multi-region endpoint
  - url: https://networkmanager.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The NetworkManager multi-region endpoint
  - url: http://networkmanager.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The NetworkManager endpoint for China (Beijing) and China (Ningxia)
  - url: https://networkmanager.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The NetworkManager endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  "/attachments/{attachmentId}/accept":
    post:
      operationId: AcceptAttachment
      description: <p>Accepts a core network attachment request. </p> <p>Once the attachment request is accepted by a core network owner, the attachment is created and connected to a core network.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AcceptAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: attachmentId
          in: path
          required: true
          description: "The ID of the attachment. "
          schema:
            type: string
            pattern: ^attachment-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/connect-peer-associations":
    post:
      operationId: AssociateConnectPeer
      description: <p>Associates a core network Connect peer with a device and optionally, with a link. </p> <p>If you specify a link, it must be associated with the specified device. You can only associate core network Connect peers that have been created on a core network Connect attachment on a core network. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateConnectPeerResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of your global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ConnectPeerId
                - DeviceId
              properties:
                ConnectPeerId:
                  description: The ID of the Connect peer.
                  type: string
                  pattern: ^connect-peer-([0-9a-f]{8,17})$
                  minLength: 0
                  maxLength: 50
                DeviceId:
                  description: The ID of the device.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                LinkId:
                  description: The ID of the link.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetConnectPeerAssociations
      description: Returns information about a core network Connect peer associations.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConnectPeerAssociationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: connectPeerIds
          in: query
          required: false
          description: The IDs of the Connect peers.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ConnectPeerId"
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  "/global-networks/{globalNetworkId}/customer-gateway-associations":
    post:
      operationId: AssociateCustomerGateway
      description: <p>Associates a customer gateway with a device and optionally, with a link. If you specify a link, it must be associated with the specified device. </p> <p>You can only associate customer gateways that are connected to a VPN attachment on a transit gateway or core network registered in your global network. When you register a transit gateway or core network, customer gateways that are connected to the transit gateway are automatically included in the global network. To list customer gateways that are connected to a transit gateway, use the <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html">DescribeVpnConnections</a> EC2 API and filter by <code>transit-gateway-id</code>.</p> <p>You cannot associate a customer gateway with more than one device and link. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateCustomerGatewayResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CustomerGatewayArn
                - DeviceId
              properties:
                CustomerGatewayArn:
                  description: The Amazon Resource Name (ARN) of the customer gateway.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 500
                DeviceId:
                  description: The ID of the device.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                LinkId:
                  description: The ID of the link.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetCustomerGatewayAssociations
      description: Gets the association information for customer gateways that are associated with devices and links in your global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCustomerGatewayAssociationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: customerGatewayArns
          in: query
          required: false
          description: One or more customer gateway Amazon Resource Names (ARNs). The maximum is 10.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/CustomerGatewayArn"
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  "/global-networks/{globalNetworkId}/link-associations":
    post:
      operationId: AssociateLink
      description: Associates a link to a device. A device can be associated to multiple links and a link can be associated to multiple devices. The device and link must be in the same global network and the same site.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateLinkResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DeviceId
                - LinkId
              properties:
                DeviceId:
                  description: The ID of the device.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                LinkId:
                  description: The ID of the link.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetLinkAssociations
      description: Gets the link associations for a device or a link. Either the device ID or the link ID must be specified.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLinkAssociationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: deviceId
          in: query
          required: false
          description: The ID of the device.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: linkId
          in: query
          required: false
          description: The ID of the link.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  "/global-networks/{globalNetworkId}/transit-gateway-connect-peer-associations":
    post:
      operationId: AssociateTransitGatewayConnectPeer
      description: <p>Associates a transit gateway Connect peer with a device, and optionally, with a link. If you specify a link, it must be associated with the specified device. </p> <p>You can only associate transit gateway Connect peers that have been created on a transit gateway that's registered in your global network.</p> <p>You cannot associate a transit gateway Connect peer with more than one device and link. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateTransitGatewayConnectPeerResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TransitGatewayConnectPeerArn
                - DeviceId
              properties:
                TransitGatewayConnectPeerArn:
                  description: The Amazon Resource Name (ARN) of the Connect peer.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 500
                DeviceId:
                  description: The ID of the device.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                LinkId:
                  description: The ID of the link.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetTransitGatewayConnectPeerAssociations
      description: Gets information about one or more of your transit gateway Connect peer associations in a global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTransitGatewayConnectPeerAssociationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: transitGatewayConnectPeerArns
          in: query
          required: false
          description: One or more transit gateway Connect peer Amazon Resource Names (ARNs).
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TransitGatewayConnectPeerArn"
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /connect-attachments:
    post:
      operationId: CreateConnectAttachment
      description: <p>Creates a core network Connect attachment from a specified core network attachment. </p> <p>A core network Connect attachment is a GRE-based tunnel attachment that you can use to establish a connection between a core network and an appliance. A core network Connect attachment uses an existing VPC attachment as the underlying transport mechanism.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateConnectAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CoreNetworkId
                - EdgeLocation
                - TransportAttachmentId
                - Options
              properties:
                CoreNetworkId:
                  description: "The ID of a core network where you want to create the attachment. "
                  type: string
                  pattern: ^core-network-([0-9a-f]{8,17})$
                  minLength: 0
                  maxLength: 50
                EdgeLocation:
                  description: The Region where the edge is located.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 1
                  maxLength: 63
                TransportAttachmentId:
                  description: The ID of the attachment between the two connections.
                  type: string
                  pattern: ^attachment-([0-9a-f]{8,17})$
                  minLength: 0
                  maxLength: 50
                Options:
                  description: Describes a core network Connect attachment options.
                  type: object
                  properties:
                    Protocol:
                      allOf:
                        - $ref: "#/components/schemas/TunnelProtocol"
                        - description: The protocol used for the attachment connection.
                Tags:
                  description: The list of key-value tags associated with the request.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                ClientToken:
                  description: The client token associated with the request.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /connect-peers:
    post:
      operationId: CreateConnectPeer
      description: Creates a core network Connect peer for a specified core network connect attachment between a core network and an appliance. The peer address and transit gateway address must be the same IP address family (IPv4 or IPv6).
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateConnectPeerResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ConnectAttachmentId
                - PeerAddress
                - InsideCidrBlocks
              properties:
                ConnectAttachmentId:
                  description: The ID of the connection attachment.
                  type: string
                  pattern: ^attachment-([0-9a-f]{8,17})$
                  minLength: 0
                  maxLength: 50
                CoreNetworkAddress:
                  description: A Connect peer core network address.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 1
                  maxLength: 50
                PeerAddress:
                  description: The Connect peer address.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 1
                  maxLength: 50
                BgpOptions:
                  description: Describes the BGP options.
                  type: object
                  properties:
                    PeerAsn:
                      allOf:
                        - $ref: "#/components/schemas/Long"
                        - description: The Peer ASN of the BGP.
                InsideCidrBlocks:
                  description: The inside IP addresses used for BGP peering.
                  type: array
                  items:
                    $ref: "#/components/schemas/ConstrainedString"
                Tags:
                  description: The tags associated with the peer request.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                ClientToken:
                  description: The client token associated with the request.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListConnectPeers
      description: Returns a list of core network Connect peers.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConnectPeersResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: coreNetworkId
          in: query
          required: false
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: connectAttachmentId
          in: query
          required: false
          description: The ID of the attachment.
          schema:
            type: string
            pattern: ^attachment-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  "/global-networks/{globalNetworkId}/connections":
    post:
      operationId: CreateConnection
      description: Creates a connection between two devices. The devices can be a physical or virtual appliance that connects to a third-party appliance in a VPC, or a physical appliance that connects to another physical appliance in an on-premises network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateConnectionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DeviceId
                - ConnectedDeviceId
              properties:
                DeviceId:
                  description: The ID of the first device in the connection.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                ConnectedDeviceId:
                  description: The ID of the second device in the connection.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                LinkId:
                  description: The ID of the link for the first device.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                ConnectedLinkId:
                  description: The ID of the link for the second device.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                Description:
                  description: "<p>A description of the connection.</p> <p>Length Constraints: Maximum length of 256 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Tags:
                  description: The tags to apply to the resource during creation.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetConnections
      description: Gets information about one or more of your connections in a global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConnectionsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: connectionIds
          in: query
          required: false
          description: One or more connection IDs.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ConnectionId"
        - name: deviceId
          in: query
          required: false
          description: The ID of the device.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /core-networks:
    post:
      operationId: CreateCoreNetwork
      description: Creates a core network as part of your global network, and optionally, with a core network policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateCoreNetworkResponse"
        "480":
          description: CoreNetworkPolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreNetworkPolicyException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - GlobalNetworkId
              properties:
                GlobalNetworkId:
                  description: "The ID of the global network that a core network will be a part of. "
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                Description:
                  description: The description of a core network.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Tags:
                  description: Key-value tags associated with a core network request.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                PolicyDocument:
                  description: The policy document for creating a core network.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 10000000
                ClientToken:
                  description: The client token associated with a core network request.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListCoreNetworks
      description: Returns a list of owned and shared core networks.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCoreNetworksResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  "/global-networks/{globalNetworkId}/devices":
    post:
      operationId: CreateDevice
      description: Creates a new device in a global network. If you specify both a site ID and a location, the location of the site is used for visualization in the Network Manager console.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDeviceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AWSLocation:
                  description: Specifies a location in Amazon Web Services.
                  type: object
                  properties:
                    Zone:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
                    SubnetArn:
                      allOf:
                        - $ref: "#/components/schemas/SubnetArn"
                        - description: The Amazon Resource Name (ARN) of the subnet that the device is located in.
                Description:
                  description: "<p>A description of the device.</p> <p>Constraints: Maximum length of 256 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Type:
                  description: The type of the device.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Vendor:
                  description: "<p>The vendor of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Model:
                  description: "<p>The model of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                SerialNumber:
                  description: "<p>The serial number of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Location:
                  description: Describes a location.
                  type: object
                  properties:
                    Address:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The physical address.
                    Latitude:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The latitude.
                    Longitude:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The longitude.
                SiteId:
                  description: The ID of the site.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                Tags:
                  description: The tags to apply to the resource during creation.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetDevices
      description: Gets information about one or more of your devices in a global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDevicesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: deviceIds
          in: query
          required: false
          description: One or more device IDs. The maximum is 10.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/DeviceId"
        - name: siteId
          in: query
          required: false
          description: The ID of the site.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /global-networks:
    post:
      operationId: CreateGlobalNetwork
      description: Creates a new, empty global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateGlobalNetworkResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: "<p>A description of the global network.</p> <p>Constraints: Maximum length of 256 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Tags:
                  description: The tags to apply to the resource during creation.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: DescribeGlobalNetworks
      description: Describes one or more global networks. By default, all global networks are described. To describe the objects in your global network, you must use the appropriate <code>Get*</code> action. For example, to list the transit gateways in your global network, use <a>GetTransitGatewayRegistrations</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeGlobalNetworksResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkIds
          in: query
          required: false
          description: The IDs of one or more global networks. The maximum is 10.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/GlobalNetworkId"
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  "/global-networks/{globalNetworkId}/links":
    post:
      operationId: CreateLink
      description: Creates a new link for a specified site.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLinkResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Bandwidth
                - SiteId
              properties:
                Description:
                  description: "<p>A description of the link.</p> <p>Constraints: Maximum length of 256 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Type:
                  description: "<p>The type of the link.</p> <p>Constraints: Maximum length of 128 characters. Cannot include the following characters: | \\ ^</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Bandwidth:
                  description: Describes bandwidth information.
                  type: object
                  properties:
                    UploadSpeed:
                      allOf:
                        - $ref: "#/components/schemas/Integer"
                        - description: Upload speed in Mbps.
                    DownloadSpeed:
                      allOf:
                        - $ref: "#/components/schemas/Integer"
                        - description: Download speed in Mbps.
                Provider:
                  description: "<p>The provider of the link.</p> <p>Constraints: Maximum length of 128 characters. Cannot include the following characters: | \\ ^</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                SiteId:
                  description: The ID of the site.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                Tags:
                  description: The tags to apply to the resource during creation.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetLinks
      description: <p>Gets information about one or more links in a specified global network.</p> <p>If you specify the site ID, you cannot specify the type or provider in the same request. You can specify the type and provider in the same request.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLinksResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: linkIds
          in: query
          required: false
          description: One or more link IDs. The maximum is 10.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/LinkId"
        - name: siteId
          in: query
          required: false
          description: The ID of the site.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: type
          in: query
          required: false
          description: The link type.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 256
        - name: provider
          in: query
          required: false
          description: The link provider.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 256
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  "/global-networks/{globalNetworkId}/sites":
    post:
      operationId: CreateSite
      description: Creates a new site in a global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSiteResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: "<p>A description of your site.</p> <p>Constraints: Maximum length of 256 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Location:
                  description: Describes a location.
                  type: object
                  properties:
                    Address:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The physical address.
                    Latitude:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The latitude.
                    Longitude:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The longitude.
                Tags:
                  description: The tags to apply to the resource during creation.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetSites
      description: Gets information about one or more of your sites in a global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSitesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: siteIds
          in: query
          required: false
          description: One or more site IDs. The maximum is 10.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/SiteId"
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /site-to-site-vpn-attachments:
    post:
      operationId: CreateSiteToSiteVpnAttachment
      description: Creates an Amazon Web Services site-to-site VPN attachment on an edge location of a core network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSiteToSiteVpnAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CoreNetworkId
                - VpnConnectionArn
              properties:
                CoreNetworkId:
                  description: The ID of a core network where you're creating a site-to-site VPN attachment.
                  type: string
                  pattern: ^core-network-([0-9a-f]{8,17})$
                  minLength: 0
                  maxLength: 50
                VpnConnectionArn:
                  description: The ARN identifying the VPN attachment.
                  type: string
                  pattern: ^arn:[^:]{1,63}:ec2:[^:]{0,63}:[^:]{0,63}:vpn-connection\/vpn-[0-9a-f]{8,17}$
                  minLength: 0
                  maxLength: 500
                Tags:
                  description: The tags associated with the request.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                ClientToken:
                  description: The client token associated with the request.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /transit-gateway-peerings:
    post:
      operationId: CreateTransitGatewayPeering
      description: Creates a transit gateway peering connection.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTransitGatewayPeeringResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CoreNetworkId
                - TransitGatewayArn
              properties:
                CoreNetworkId:
                  description: The ID of a core network.
                  type: string
                  pattern: ^core-network-([0-9a-f]{8,17})$
                  minLength: 0
                  maxLength: 50
                TransitGatewayArn:
                  description: The ARN of the transit gateway for the peering request.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 500
                Tags:
                  description: The list of key-value tags associated with the request.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                ClientToken:
                  description: The client token associated with the request.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /transit-gateway-route-table-attachments:
    post:
      operationId: CreateTransitGatewayRouteTableAttachment
      description: Creates a transit gateway route table attachment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateTransitGatewayRouteTableAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PeeringId
                - TransitGatewayRouteTableArn
              properties:
                PeeringId:
                  description: "The ID of the peer for the "
                  type: string
                  pattern: ^peering-([0-9a-f]{8,17})$
                  minLength: 0
                  maxLength: 50
                TransitGatewayRouteTableArn:
                  description: 'The ARN of the transit gateway route table for the attachment request. For example, <code>"TransitGatewayRouteTableArn": "arn:aws:ec2:us-west-2:123456789012:transit-gateway-route-table/tgw-rtb-9876543210123456"</code>.'
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 500
                Tags:
                  description: The list of key-value tags associated with the request.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                ClientToken:
                  description: The client token associated with the request.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /vpc-attachments:
    post:
      operationId: CreateVpcAttachment
      description: Creates a VPC attachment on an edge location of a core network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateVpcAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CoreNetworkId
                - VpcArn
                - SubnetArns
              properties:
                CoreNetworkId:
                  description: The ID of a core network for the VPC attachment.
                  type: string
                  pattern: ^core-network-([0-9a-f]{8,17})$
                  minLength: 0
                  maxLength: 50
                VpcArn:
                  description: The ARN of the VPC.
                  type: string
                  pattern: ^arn:[^:]{1,63}:ec2:[^:]{0,63}:[^:]{0,63}:vpc\/vpc-[0-9a-f]{8,17}$
                  minLength: 0
                  maxLength: 500
                SubnetArns:
                  description: The subnet ARN of the VPC attachment.
                  type: array
                  items:
                    $ref: "#/components/schemas/SubnetArn"
                Options:
                  description: Describes the VPC options.
                  type: object
                  properties:
                    Ipv6Support:
                      allOf:
                        - $ref: "#/components/schemas/Boolean"
                        - description: Indicates whether IPv6 is supported.
                    ApplianceModeSupport:
                      allOf:
                        - $ref: "#/components/schemas/Boolean"
                        - description: Indicates whether appliance mode is supported. If enabled, traffic flow between a source and destination use the same Availability Zone for the VPC attachment for the lifetime of that flow. The default value is <code>false</code>.
                Tags:
                  description: The key-value tags associated with the request.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                ClientToken:
                  description: The client token associated with the request.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/attachments/{attachmentId}":
    delete:
      operationId: DeleteAttachment
      description: Deletes an attachment. Supports all attachment types.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: attachmentId
          in: path
          required: true
          description: The ID of the attachment to delete.
          schema:
            type: string
            pattern: ^attachment-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/connect-peers/{connectPeerId}":
    delete:
      operationId: DeleteConnectPeer
      description: Deletes a Connect peer.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteConnectPeerResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: connectPeerId
          in: path
          required: true
          description: The ID of the deleted Connect peer.
          schema:
            type: string
            pattern: ^connect-peer-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetConnectPeer
      description: Returns information about a core network Connect peer.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConnectPeerResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: connectPeerId
          in: path
          required: true
          description: The ID of the Connect peer.
          schema:
            type: string
            pattern: ^connect-peer-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
  "/global-networks/{globalNetworkId}/connections/{connectionId}":
    delete:
      operationId: DeleteConnection
      description: Deletes the specified connection in your global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteConnectionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: connectionId
          in: path
          required: true
          description: The ID of the connection.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateConnection
      description: Updates the information for an existing connection. To remove information for any of the parameters, specify an empty string.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateConnectionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: connectionId
          in: path
          required: true
          description: The ID of the connection.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LinkId:
                  description: The ID of the link for the first device in the connection.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                ConnectedLinkId:
                  description: The ID of the link for the second device in the connection.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
                Description:
                  description: "<p>A description of the connection.</p> <p>Length Constraints: Maximum length of 256 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
  "/core-networks/{coreNetworkId}":
    delete:
      operationId: DeleteCoreNetwork
      description: Deletes a core network along with all core network policies. This can only be done if there are no attachments on a core network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCoreNetworkResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: coreNetworkId
          in: path
          required: true
          description: The network ID of the deleted core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetCoreNetwork
      description: Returns information about the LIVE policy for a core network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCoreNetworkResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: coreNetworkId
          in: path
          required: true
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    patch:
      operationId: UpdateCoreNetwork
      description: Updates the description of a core network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateCoreNetworkResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: coreNetworkId
          in: path
          required: true
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: The description of the update.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
  "/core-networks/{coreNetworkId}/core-network-policy-versions/{policyVersionId}":
    delete:
      operationId: DeleteCoreNetworkPolicyVersion
      description: Deletes a policy version from a core network. You can't delete the current LIVE policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteCoreNetworkPolicyVersionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
      parameters:
        - name: coreNetworkId
          in: path
          required: true
          description: The ID of a core network for the deleted policy.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: policyVersionId
          in: path
          required: true
          description: The version ID of the deleted policy.
          schema:
            type: integer
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/devices/{deviceId}":
    delete:
      operationId: DeleteDevice
      description: Deletes an existing device. You must first disassociate the device from any links and customer gateways.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDeviceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: deviceId
          in: path
          required: true
          description: The ID of the device.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateDevice
      description: Updates the details for an existing device. To remove information for any of the parameters, specify an empty string.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDeviceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: deviceId
          in: path
          required: true
          description: The ID of the device.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AWSLocation:
                  description: Specifies a location in Amazon Web Services.
                  type: object
                  properties:
                    Zone:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
                    SubnetArn:
                      allOf:
                        - $ref: "#/components/schemas/SubnetArn"
                        - description: The Amazon Resource Name (ARN) of the subnet that the device is located in.
                Description:
                  description: "<p>A description of the device.</p> <p>Constraints: Maximum length of 256 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Type:
                  description: The type of the device.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Vendor:
                  description: "<p>The vendor of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Model:
                  description: "<p>The model of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                SerialNumber:
                  description: "<p>The serial number of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Location:
                  description: Describes a location.
                  type: object
                  properties:
                    Address:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The physical address.
                    Latitude:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The latitude.
                    Longitude:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The longitude.
                SiteId:
                  description: The ID of the site.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 50
  "/global-networks/{globalNetworkId}":
    delete:
      operationId: DeleteGlobalNetwork
      description: Deletes an existing global network. You must first delete all global network objects (devices, links, and sites), deregister all transit gateways, and delete any core networks.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteGlobalNetworkResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateGlobalNetwork
      description: Updates an existing global network. To remove information for any of the parameters, specify an empty string.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateGlobalNetworkResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of your global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: "<p>A description of the global network.</p> <p>Constraints: Maximum length of 256 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
  "/global-networks/{globalNetworkId}/links/{linkId}":
    delete:
      operationId: DeleteLink
      description: Deletes an existing link. You must first disassociate the link from any devices and customer gateways.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteLinkResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: linkId
          in: path
          required: true
          description: The ID of the link.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateLink
      description: Updates the details for an existing link. To remove information for any of the parameters, specify an empty string.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLinkResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: linkId
          in: path
          required: true
          description: The ID of the link.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: "<p>A description of the link.</p> <p>Constraints: Maximum length of 256 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Type:
                  description: "<p>The type of the link.</p> <p>Constraints: Maximum length of 128 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Bandwidth:
                  description: Describes bandwidth information.
                  type: object
                  properties:
                    UploadSpeed:
                      allOf:
                        - $ref: "#/components/schemas/Integer"
                        - description: Upload speed in Mbps.
                    DownloadSpeed:
                      allOf:
                        - $ref: "#/components/schemas/Integer"
                        - description: Download speed in Mbps.
                Provider:
                  description: "<p>The provider of the link.</p> <p>Constraints: Maximum length of 128 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
  "/peerings/{peeringId}":
    delete:
      operationId: DeletePeering
      description: Deletes an existing peering connection.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletePeeringResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: peeringId
          in: path
          required: true
          description: The ID of the peering connection to delete.
          schema:
            type: string
            pattern: ^peering-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/resource-policy/{resourceArn}":
    delete:
      operationId: DeleteResourcePolicy
      description: Deletes a resource policy for the specified resource. This revokes the access of the principals specified in the resource policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResourcePolicyResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the policy to delete.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetResourcePolicy
      description: Returns information about a resource policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetResourcePolicyResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
    post:
      operationId: PutResourcePolicy
      description: Creates or updates a resource policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutResourcePolicyResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: "The ARN of the resource policy. "
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PolicyDocument
              properties:
                PolicyDocument:
                  description: The JSON resource policy document.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 10000000
  "/global-networks/{globalNetworkId}/sites/{siteId}":
    delete:
      operationId: DeleteSite
      description: Deletes an existing site. The site cannot be associated with any device or link.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSiteResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: siteId
          in: path
          required: true
          description: The ID of the site.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateSite
      description: Updates the information for an existing site. To remove information for any of the parameters, specify an empty string.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSiteResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: siteId
          in: path
          required: true
          description: The ID of your site.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  description: "<p>A description of your site.</p> <p>Constraints: Maximum length of 256 characters.</p>"
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                Location:
                  description: Describes a location.
                  type: object
                  properties:
                    Address:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The physical address.
                    Latitude:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The latitude.
                    Longitude:
                      allOf:
                        - $ref: "#/components/schemas/ConstrainedString"
                        - description: The longitude.
  "/global-networks/{globalNetworkId}/transit-gateway-registrations/{transitGatewayArn}":
    delete:
      operationId: DeregisterTransitGateway
      description: Deregisters a transit gateway from your global network. This action does not delete your transit gateway, or modify any of its attachments. This action removes any customer gateway associations.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterTransitGatewayResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: transitGatewayArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the transit gateway.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 500
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/connect-peer-associations/{connectPeerId}":
    delete:
      operationId: DisassociateConnectPeer
      description: "Disassociates a core network Connect peer from a device and a link. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateConnectPeerResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: connectPeerId
          in: path
          required: true
          description: The ID of the Connect peer to disassociate from a device.
          schema:
            type: string
            pattern: ^connect-peer-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/customer-gateway-associations/{customerGatewayArn}":
    delete:
      operationId: DisassociateCustomerGateway
      description: Disassociates a customer gateway from a device and a link.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateCustomerGatewayResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: customerGatewayArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the customer gateway.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 500
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/link-associations#deviceId&linkId":
    delete:
      operationId: DisassociateLink
      description: Disassociates an existing device from a link. You must first disassociate any customer gateways that are associated with the link.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateLinkResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: deviceId
          in: query
          required: true
          description: The ID of the device.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: linkId
          in: query
          required: true
          description: The ID of the link.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/transit-gateway-connect-peer-associations/{transitGatewayConnectPeerArn}":
    delete:
      operationId: DisassociateTransitGatewayConnectPeer
      description: Disassociates a transit gateway Connect peer from a device and link.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateTransitGatewayConnectPeerResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: transitGatewayConnectPeerArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the transit gateway Connect peer.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 500
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/core-networks/{coreNetworkId}/core-network-change-sets/{policyVersionId}/execute":
    post:
      operationId: ExecuteCoreNetworkChangeSet
      description: Executes a change set on your core network. Deploys changes globally based on the policy submitted..
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecuteCoreNetworkChangeSetResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
      parameters:
        - name: coreNetworkId
          in: path
          required: true
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: policyVersionId
          in: path
          required: true
          description: The ID of the policy version.
          schema:
            type: integer
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/connect-attachments/{attachmentId}":
    get:
      operationId: GetConnectAttachment
      description: Returns information about a core network Connect attachment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConnectAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: attachmentId
          in: path
          required: true
          description: The ID of the attachment.
          schema:
            type: string
            pattern: ^attachment-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/core-networks/{coreNetworkId}/core-network-change-events/{policyVersionId}":
    get:
      operationId: GetCoreNetworkChangeEvents
      description: Returns information about a core network change event.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCoreNetworkChangeEventsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: coreNetworkId
          in: path
          required: true
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: policyVersionId
          in: path
          required: true
          description: The ID of the policy version.
          schema:
            type: integer
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/core-networks/{coreNetworkId}/core-network-change-sets/{policyVersionId}":
    get:
      operationId: GetCoreNetworkChangeSet
      description: Returns a change set between the LIVE core network policy and a submitted policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCoreNetworkChangeSetResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: coreNetworkId
          in: path
          required: true
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: policyVersionId
          in: path
          required: true
          description: The ID of the policy version.
          schema:
            type: integer
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/core-networks/{coreNetworkId}/core-network-policy":
    get:
      operationId: GetCoreNetworkPolicy
      description: Returns details about a core network policy. You can get details about your current live policy or any previous policy version.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetCoreNetworkPolicyResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: coreNetworkId
          in: path
          required: true
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: policyVersionId
          in: query
          required: false
          description: The ID of a core network policy version.
          schema:
            type: integer
        - name: alias
          in: query
          required: false
          description: "The alias of a core network policy "
          schema:
            type: string
            enum:
              - LIVE
              - LATEST
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: PutCoreNetworkPolicy
      description: Creates a new, immutable version of a core network policy. A subsequent change set is created showing the differences between the LIVE policy and the submitted policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutCoreNetworkPolicyResponse"
        "480":
          description: CoreNetworkPolicyException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CoreNetworkPolicyException"
        "481":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "486":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
      parameters:
        - name: coreNetworkId
          in: path
          required: true
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PolicyDocument
              properties:
                PolicyDocument:
                  description: The policy document.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 10000000
                Description:
                  description: a core network policy description.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
                LatestVersionId:
                  description: "The ID of a core network policy. "
                  type: integer
                ClientToken:
                  description: The client token associated with the request.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 256
  "/global-networks/{globalNetworkId}/network-resource-count":
    get:
      operationId: GetNetworkResourceCounts
      description: Gets the count of network resources, by resource type, for the specified global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNetworkResourceCountsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: resourceType
          in: query
          required: false
          description: <p>The resource type.</p> <p>The following are the supported resource types for Direct Connect:</p> <ul> <li> <p> <code>dxcon</code> </p> </li> <li> <p> <code>dx-gateway</code> </p> </li> <li> <p> <code>dx-vif</code> </p> </li> </ul> <p>The following are the supported resource types for Network Manager:</p> <ul> <li> <p> <code>connection</code> </p> </li> <li> <p> <code>device</code> </p> </li> <li> <p> <code>link</code> </p> </li> <li> <p> <code>site</code> </p> </li> </ul> <p>The following are the supported resource types for Amazon VPC:</p> <ul> <li> <p> <code>customer-gateway</code> </p> </li> <li> <p> <code>transit-gateway</code> </p> </li> <li> <p> <code>transit-gateway-attachment</code> </p> </li> <li> <p> <code>transit-gateway-connect-peer</code> </p> </li> <li> <p> <code>transit-gateway-route-table</code> </p> </li> <li> <p> <code>vpn-connection</code> </p> </li> </ul>
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 256
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/network-resource-relationships":
    get:
      operationId: GetNetworkResourceRelationships
      description: Gets the network resource relationships for the specified global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNetworkResourceRelationshipsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: coreNetworkId
          in: query
          required: false
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: registeredGatewayArn
          in: query
          required: false
          description: The ARN of the registered gateway.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
        - name: awsRegion
          in: query
          required: false
          description: The Amazon Web Services Region.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 1
            maxLength: 63
        - name: accountId
          in: query
          required: false
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 12
            maxLength: 12
        - name: resourceType
          in: query
          required: false
          description: <p>The resource type.</p> <p>The following are the supported resource types for Direct Connect:</p> <ul> <li> <p> <code>dxcon</code> </p> </li> <li> <p> <code>dx-gateway</code> </p> </li> <li> <p> <code>dx-vif</code> </p> </li> </ul> <p>The following are the supported resource types for Network Manager:</p> <ul> <li> <p> <code>connection</code> </p> </li> <li> <p> <code>device</code> </p> </li> <li> <p> <code>link</code> </p> </li> <li> <p> <code>site</code> </p> </li> </ul> <p>The following are the supported resource types for Amazon VPC:</p> <ul> <li> <p> <code>customer-gateway</code> </p> </li> <li> <p> <code>transit-gateway</code> </p> </li> <li> <p> <code>transit-gateway-attachment</code> </p> </li> <li> <p> <code>transit-gateway-connect-peer</code> </p> </li> <li> <p> <code>transit-gateway-route-table</code> </p> </li> <li> <p> <code>vpn-connection</code> </p> </li> </ul>
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 256
        - name: resourceArn
          in: query
          required: false
          description: The ARN of the gateway.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/network-resources":
    get:
      operationId: GetNetworkResources
      description: <p>Describes the network resources for the specified global network.</p> <p>The results include information from the corresponding Describe call for the resource, minus any sensitive information such as pre-shared keys.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNetworkResourcesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: coreNetworkId
          in: query
          required: false
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: registeredGatewayArn
          in: query
          required: false
          description: The ARN of the gateway.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
        - name: awsRegion
          in: query
          required: false
          description: The Amazon Web Services Region.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 1
            maxLength: 63
        - name: accountId
          in: query
          required: false
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 12
            maxLength: 12
        - name: resourceType
          in: query
          required: false
          description: <p>The resource type.</p> <p>The following are the supported resource types for Direct Connect:</p> <ul> <li> <p> <code>dxcon</code> - The definition model is <a href="https://docs.aws.amazon.com/directconnect/latest/APIReference/API_Connection.html">Connection</a>.</p> </li> <li> <p> <code>dx-gateway</code> - The definition model is <a href="https://docs.aws.amazon.com/directconnect/latest/APIReference/API_DirectConnectGateway.html">DirectConnectGateway</a>.</p> </li> <li> <p> <code>dx-vif</code> - The definition model is <a href="https://docs.aws.amazon.com/directconnect/latest/APIReference/API_VirtualInterface.html">VirtualInterface</a>.</p> </li> </ul> <p>The following are the supported resource types for Network Manager:</p> <ul> <li> <p> <code>connection</code> - The definition model is <a href="https://docs.aws.amazon.com/networkmanager/latest/APIReference/API_Connection.html">Connection</a>.</p> </li> <li> <p> <code>device</code> - The definition model is <a href="https://docs.aws.amazon.com/networkmanager/latest/APIReference/API_Device.html">Device</a>.</p> </li> <li> <p> <code>link</code> - The definition model is <a href="https://docs.aws.amazon.com/networkmanager/latest/APIReference/API_Link.html">Link</a>.</p> </li> <li> <p> <code>site</code> - The definition model is <a href="https://docs.aws.amazon.com/networkmanager/latest/APIReference/API_Site.html">Site</a>.</p> </li> </ul> <p>The following are the supported resource types for Amazon VPC:</p> <ul> <li> <p> <code>customer-gateway</code> - The definition model is <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CustomerGateway.html">CustomerGateway</a>.</p> </li> <li> <p> <code>transit-gateway</code> - The definition model is <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TransitGateway.html">TransitGateway</a>.</p> </li> <li> <p> <code>transit-gateway-attachment</code> - The definition model is <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TransitGatewayAttachment.html">TransitGatewayAttachment</a>.</p> </li> <li> <p> <code>transit-gateway-connect-peer</code> - The definition model is <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TransitGatewayConnectPeer.html">TransitGatewayConnectPeer</a>.</p> </li> <li> <p> <code>transit-gateway-route-table</code> - The definition model is <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_TransitGatewayRouteTable.html">TransitGatewayRouteTable</a>.</p> </li> <li> <p> <code>vpn-connection</code> - The definition model is <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_VpnConnection.html">VpnConnection</a>.</p> </li> </ul>
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 256
        - name: resourceArn
          in: query
          required: false
          description: The ARN of the resource.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/network-routes":
    post:
      operationId: GetNetworkRoutes
      description: Gets the network routes of the specified global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNetworkRoutesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - RouteTableIdentifier
              properties:
                RouteTableIdentifier:
                  description: Describes a route table.
                  type: object
                  properties:
                    TransitGatewayRouteTableArn:
                      allOf:
                        - $ref: "#/components/schemas/TransitGatewayRouteTableArn"
                        - description: The ARN of the transit gateway route table.
                    CoreNetworkSegmentEdge:
                      allOf:
                        - $ref: "#/components/schemas/CoreNetworkSegmentEdgeIdentifier"
                        - description: The segment edge in a core network.
                ExactCidrMatches:
                  description: An exact CIDR block.
                  type: array
                  items:
                    $ref: "#/components/schemas/ConstrainedString"
                LongestPrefixMatches:
                  description: The most specific route that matches the traffic (longest prefix match).
                  type: array
                  items:
                    $ref: "#/components/schemas/ConstrainedString"
                SubnetOfMatches:
                  description: The routes with a subnet that match the specified CIDR filter.
                  type: array
                  items:
                    $ref: "#/components/schemas/ConstrainedString"
                SupernetOfMatches:
                  description: "The routes with a CIDR that encompasses the CIDR filter. Example: If you specify 10.0.1.0/30, then the result returns 10.0.1.0/29."
                  type: array
                  items:
                    $ref: "#/components/schemas/ConstrainedString"
                PrefixListIds:
                  description: The IDs of the prefix lists.
                  type: array
                  items:
                    $ref: "#/components/schemas/ConstrainedString"
                States:
                  description: The route states.
                  type: array
                  items:
                    $ref: "#/components/schemas/RouteState"
                Types:
                  description: The route types.
                  type: array
                  items:
                    $ref: "#/components/schemas/RouteType"
                DestinationFilters:
                  description: "Filter by route table destination. Possible Values: TRANSIT_GATEWAY_ATTACHMENT_ID, RESOURCE_ID, or RESOURCE_TYPE."
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/FilterValues"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/network-telemetry":
    get:
      operationId: GetNetworkTelemetry
      description: Gets the network telemetry of the specified global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNetworkTelemetryResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: coreNetworkId
          in: query
          required: false
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: registeredGatewayArn
          in: query
          required: false
          description: The ARN of the gateway.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
        - name: awsRegion
          in: query
          required: false
          description: The Amazon Web Services Region.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 1
            maxLength: 63
        - name: accountId
          in: query
          required: false
          description: The Amazon Web Services account ID.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 12
            maxLength: 12
        - name: resourceType
          in: query
          required: false
          description: <p>The resource type.</p> <p>The following are the supported resource types for Direct Connect:</p> <ul> <li> <p> <code>dxcon</code> </p> </li> <li> <p> <code>dx-gateway</code> </p> </li> <li> <p> <code>dx-vif</code> </p> </li> </ul> <p>The following are the supported resource types for Network Manager:</p> <ul> <li> <p> <code>connection</code> </p> </li> <li> <p> <code>device</code> </p> </li> <li> <p> <code>link</code> </p> </li> <li> <p> <code>site</code> </p> </li> </ul> <p>The following are the supported resource types for Amazon VPC:</p> <ul> <li> <p> <code>customer-gateway</code> </p> </li> <li> <p> <code>transit-gateway</code> </p> </li> <li> <p> <code>transit-gateway-attachment</code> </p> </li> <li> <p> <code>transit-gateway-connect-peer</code> </p> </li> <li> <p> <code>transit-gateway-route-table</code> </p> </li> <li> <p> <code>vpn-connection</code> </p> </li> </ul>
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 256
        - name: resourceArn
          in: query
          required: false
          description: The ARN of the resource.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/route-analyses/{routeAnalysisId}":
    get:
      operationId: GetRouteAnalysis
      description: Gets information about the specified route analysis.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetRouteAnalysisResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: routeAnalysisId
          in: path
          required: true
          description: The ID of the route analysis.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/site-to-site-vpn-attachments/{attachmentId}":
    get:
      operationId: GetSiteToSiteVpnAttachment
      description: Returns information about a site-to-site VPN attachment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSiteToSiteVpnAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: attachmentId
          in: path
          required: true
          description: The ID of the attachment.
          schema:
            type: string
            pattern: ^attachment-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/transit-gateway-peerings/{peeringId}":
    get:
      operationId: GetTransitGatewayPeering
      description: Returns information about a transit gateway peer.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTransitGatewayPeeringResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: peeringId
          in: path
          required: true
          description: The ID of the peering request.
          schema:
            type: string
            pattern: ^peering-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/transit-gateway-registrations":
    get:
      operationId: GetTransitGatewayRegistrations
      description: Gets information about the transit gateway registrations in a specified global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTransitGatewayRegistrationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: transitGatewayArns
          in: query
          required: false
          description: The Amazon Resource Names (ARNs) of one or more transit gateways. The maximum is 10.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TransitGatewayArn"
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: RegisterTransitGateway
      description: Registers a transit gateway in your global network. Not all Regions support transit gateways for global networks. For a list of the supported Regions, see <a href="https://docs.aws.amazon.com/network-manager/latest/tgwnm/what-are-global-networks.html#nm-available-regions">Region Availability</a> in the <i>Amazon Web Services Transit Gateways for Global Networks User Guide</i>. The transit gateway can be in any of the supported Amazon Web Services Regions, but it must be owned by the same Amazon Web Services account that owns the global network. You cannot register a transit gateway in more than one global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterTransitGatewayResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TransitGatewayArn
              properties:
                TransitGatewayArn:
                  description: The Amazon Resource Name (ARN) of the transit gateway.
                  type: string
                  pattern: "[\\s\\S]*"
                  minLength: 0
                  maxLength: 500
  "/transit-gateway-route-table-attachments/{attachmentId}":
    get:
      operationId: GetTransitGatewayRouteTableAttachment
      description: Returns information about a transit gateway route table attachment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTransitGatewayRouteTableAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: attachmentId
          in: path
          required: true
          description: The ID of the transit gateway route table attachment.
          schema:
            type: string
            pattern: ^attachment-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/vpc-attachments/{attachmentId}":
    get:
      operationId: GetVpcAttachment
      description: Returns information about a VPC attachment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetVpcAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: attachmentId
          in: path
          required: true
          description: The ID of the attachment.
          schema:
            type: string
            pattern: ^attachment-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateVpcAttachment
      description: Updates a VPC attachment.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateVpcAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: attachmentId
          in: path
          required: true
          description: The ID of the attachment.
          schema:
            type: string
            pattern: ^attachment-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AddSubnetArns:
                  description: Adds a subnet ARN to the VPC attachment.
                  type: array
                  items:
                    $ref: "#/components/schemas/SubnetArn"
                RemoveSubnetArns:
                  description: Removes a subnet ARN from the attachment.
                  type: array
                  items:
                    $ref: "#/components/schemas/SubnetArn"
                Options:
                  description: Describes the VPC options.
                  type: object
                  properties:
                    Ipv6Support:
                      allOf:
                        - $ref: "#/components/schemas/Boolean"
                        - description: Indicates whether IPv6 is supported.
                    ApplianceModeSupport:
                      allOf:
                        - $ref: "#/components/schemas/Boolean"
                        - description: Indicates whether appliance mode is supported. If enabled, traffic flow between a source and destination use the same Availability Zone for the VPC attachment for the lifetime of that flow. The default value is <code>false</code>.
  /attachments:
    get:
      operationId: ListAttachments
      description: Returns a list of core network attachments.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAttachmentsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: coreNetworkId
          in: query
          required: false
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: attachmentType
          in: query
          required: false
          description: The type of attachment.
          schema:
            type: string
            enum:
              - CONNECT
              - SITE_TO_SITE_VPN
              - VPC
              - TRANSIT_GATEWAY_ROUTE_TABLE
        - name: edgeLocation
          in: query
          required: false
          description: The Region where the edge is located.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 1
            maxLength: 63
        - name: state
          in: query
          required: false
          description: The state of the attachment.
          schema:
            type: string
            enum:
              - REJECTED
              - PENDING_ATTACHMENT_ACCEPTANCE
              - CREATING
              - FAILED
              - AVAILABLE
              - UPDATING
              - PENDING_NETWORK_UPDATE
              - PENDING_TAG_ACCEPTANCE
              - DELETING
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/core-networks/{coreNetworkId}/core-network-policy-versions":
    get:
      operationId: ListCoreNetworkPolicyVersions
      description: Returns a list of core network policy versions.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCoreNetworkPolicyVersionsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: coreNetworkId
          in: path
          required: true
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /organizations/service-access:
    get:
      operationId: ListOrganizationServiceAccessStatus
      description: Gets the status of the Service Linked Role (SLR) deployment for the accounts in a given Amazon Web Services Organization.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOrganizationServiceAccessStatusResponse"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: StartOrganizationServiceAccessUpdate
      description: "Enables the Network Manager service for an Amazon Web Services Organization. This can only be called by a management account within the organization. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartOrganizationServiceAccessUpdateResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Action
              properties:
                Action:
                  description: The action to take for the update request. This can be either <code>ENABLE</code> or <code>DISABLE</code>.
                  type: string
                  minLength: 0
                  maxLength: 50
  /peerings:
    get:
      operationId: ListPeerings
      description: Lists the peerings for a core network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPeeringsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: coreNetworkId
          in: query
          required: false
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: peeringType
          in: query
          required: false
          description: Returns a list of a peering requests.
          schema:
            type: string
            enum:
              - TRANSIT_GATEWAY
        - name: edgeLocation
          in: query
          required: false
          description: "Returns a list edge locations for the "
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 1
            maxLength: 63
        - name: state
          in: query
          required: false
          description: Returns a list of the peering request states.
          schema:
            type: string
            enum:
              - CREATING
              - FAILED
              - AVAILABLE
              - DELETING
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return.
          schema:
            type: integer
            minimum: 1
            maximum: 500
        - name: nextToken
          in: query
          required: false
          description: The token for the next page of results.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 2048
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{resourceArn}":
    get:
      operationId: ListTagsForResource
      description: Lists the tags for a specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: Tags a specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ServiceQuotaExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceQuotaExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "486":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tags to apply to the specified resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
  "/attachments/{attachmentId}/reject":
    post:
      operationId: RejectAttachment
      description: Rejects a core network attachment request.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RejectAttachmentResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: attachmentId
          in: path
          required: true
          description: The ID of the attachment.
          schema:
            type: string
            pattern: ^attachment-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/core-networks/{coreNetworkId}/core-network-policy-versions/{policyVersionId}/restore":
    post:
      operationId: RestoreCoreNetworkPolicyVersion
      description: Restores a previous policy version as a new, immutable version of a core network policy. A subsequent change set is created showing the differences between the LIVE policy and restored policy.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RestoreCoreNetworkPolicyVersionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
      parameters:
        - name: coreNetworkId
          in: path
          required: true
          description: The ID of a core network.
          schema:
            type: string
            pattern: ^core-network-([0-9a-f]{8,17})$
            minLength: 0
            maxLength: 50
        - name: policyVersionId
          in: path
          required: true
          description: The ID of the policy version to restore.
          schema:
            type: integer
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/route-analyses":
    post:
      operationId: StartRouteAnalysis
      description: Starts analyzing the routing path between the specified source and destination. For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/tgw/route-analyzer.html">Route Analyzer</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartRouteAnalysisResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Source
                - Destination
              properties:
                Source:
                  description: Describes a source or a destination.
                  type: object
                  properties:
                    TransitGatewayAttachmentArn:
                      allOf:
                        - $ref: "#/components/schemas/TransitGatewayAttachmentArn"
                        - description: The ARN of the transit gateway attachment.
                    IpAddress:
                      allOf:
                        - $ref: "#/components/schemas/IPAddress"
                        - description: The IP address.
                Destination:
                  description: Describes a source or a destination.
                  type: object
                  properties:
                    TransitGatewayAttachmentArn:
                      allOf:
                        - $ref: "#/components/schemas/TransitGatewayAttachmentArn"
                        - description: The ARN of the transit gateway attachment.
                    IpAddress:
                      allOf:
                        - $ref: "#/components/schemas/IPAddress"
                        - description: The IP address.
                IncludeReturnPath:
                  description: Indicates whether to analyze the return path. The default is <code>false</code>.
                  type: boolean
                UseMiddleboxes:
                  description: Indicates whether to include the location of middlebox appliances in the route analysis. The default is <code>false</code>.
                  type: boolean
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{resourceArn}#tagKeys":
    delete:
      operationId: UntagResource
      description: Removes tags from a specified resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: resourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
        - name: tagKeys
          in: query
          required: true
          description: The tag keys to remove from the specified resource.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TagKey"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/global-networks/{globalNetworkId}/network-resources/{resourceArn}/metadata":
    patch:
      operationId: UpdateNetworkResourceMetadata
      description: Updates the resource metadata for the specified global network.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNetworkResourceMetadataResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: globalNetworkId
          in: path
          required: true
          description: The ID of the global network.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 50
        - name: resourceArn
          in: path
          required: true
          description: The ARN of the resource.
          schema:
            type: string
            pattern: "[\\s\\S]*"
            minLength: 0
            maxLength: 1500
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Metadata
              properties:
                Metadata:
                  description: The resource metadata.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/ConstrainedString"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AcceptAttachmentResponse:
      type: object
      properties:
        Attachment:
          allOf:
            - $ref: "#/components/schemas/Attachment"
            - description: "The response to the attachment request. "
    ValidationException: {}
    AccessDeniedException: {}
    ResourceNotFoundException: {}
    ConflictException: {}
    ThrottlingException: {}
    InternalServerException: {}
    AssociateConnectPeerResponse:
      type: object
      properties:
        ConnectPeerAssociation:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerAssociation"
            - description: The response to the Connect peer request.
    ServiceQuotaExceededException: {}
    AssociateCustomerGatewayResponse:
      type: object
      properties:
        CustomerGatewayAssociation:
          allOf:
            - $ref: "#/components/schemas/CustomerGatewayAssociation"
            - description: The customer gateway association.
    AssociateLinkResponse:
      type: object
      properties:
        LinkAssociation:
          allOf:
            - $ref: "#/components/schemas/LinkAssociation"
            - description: The link association.
    AssociateTransitGatewayConnectPeerResponse:
      type: object
      properties:
        TransitGatewayConnectPeerAssociation:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerAssociation"
            - description: The transit gateway Connect peer association.
    CreateConnectAttachmentResponse:
      type: object
      properties:
        ConnectAttachment:
          allOf:
            - $ref: "#/components/schemas/ConnectAttachment"
            - description: The response to a Connect attachment request.
    TunnelProtocol:
      type: string
      enum:
        - GRE
    Tag:
      type: object
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/TagKey"
            - description: "<p>The tag key.</p> <p>Constraints: Maximum length of 128 characters.</p>"
        Value:
          allOf:
            - $ref: "#/components/schemas/TagValue"
            - description: "<p>The tag value.</p> <p>Constraints: Maximum length of 256 characters.</p>"
      description: Describes a tag.
    CreateConnectPeerResponse:
      type: object
      properties:
        ConnectPeer:
          allOf:
            - $ref: "#/components/schemas/ConnectPeer"
            - description: The response to the request.
    Long:
      type: integer
    ConstrainedString:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 256
    CreateConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
            - $ref: "#/components/schemas/Connection"
            - description: Information about the connection.
    CreateCoreNetworkResponse:
      type: object
      properties:
        CoreNetwork:
          allOf:
            - $ref: "#/components/schemas/CoreNetwork"
            - description: Returns details about a core network.
    CoreNetworkPolicyException: {}
    CreateDeviceResponse:
      type: object
      properties:
        Device:
          allOf:
            - $ref: "#/components/schemas/Device"
            - description: Information about the device.
    SubnetArn:
      type: string
      pattern: ^arn:[^:]{1,63}:ec2:[^:]{0,63}:[^:]{0,63}:subnet\/subnet-[0-9a-f]{8,17}$|^$
      minLength: 0
      maxLength: 500
    CreateGlobalNetworkResponse:
      type: object
      properties:
        GlobalNetwork:
          allOf:
            - $ref: "#/components/schemas/GlobalNetwork"
            - description: Information about the global network object.
    CreateLinkResponse:
      type: object
      properties:
        Link:
          allOf:
            - $ref: "#/components/schemas/Link"
            - description: Information about the link.
    Integer:
      type: integer
    CreateSiteResponse:
      type: object
      properties:
        Site:
          allOf:
            - $ref: "#/components/schemas/Site"
            - description: Information about the site.
    CreateSiteToSiteVpnAttachmentResponse:
      type: object
      properties:
        SiteToSiteVpnAttachment:
          allOf:
            - $ref: "#/components/schemas/SiteToSiteVpnAttachment"
            - description: Details about a site-to-site VPN attachment.
    CreateTransitGatewayPeeringResponse:
      type: object
      properties:
        TransitGatewayPeering:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPeering"
            - description: Returns information about the transit gateway peering connection request.
    CreateTransitGatewayRouteTableAttachmentResponse:
      type: object
      properties:
        TransitGatewayRouteTableAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableAttachment"
            - description: The route table associated with the create transit gateway route table attachment request.
    CreateVpcAttachmentResponse:
      type: object
      properties:
        VpcAttachment:
          allOf:
            - $ref: "#/components/schemas/VpcAttachment"
            - description: Provides details about the VPC attachment.
    Boolean:
      type: boolean
    DeleteAttachmentResponse:
      type: object
      properties:
        Attachment:
          allOf:
            - $ref: "#/components/schemas/Attachment"
            - description: Information about the deleted attachment.
    DeleteConnectPeerResponse:
      type: object
      properties:
        ConnectPeer:
          allOf:
            - $ref: "#/components/schemas/ConnectPeer"
            - description: Information about the deleted Connect peer.
    DeleteConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
            - $ref: "#/components/schemas/Connection"
            - description: Information about the connection.
    DeleteCoreNetworkResponse:
      type: object
      properties:
        CoreNetwork:
          allOf:
            - $ref: "#/components/schemas/CoreNetwork"
            - description: Information about the deleted core network.
    DeleteCoreNetworkPolicyVersionResponse:
      type: object
      properties:
        CoreNetworkPolicy:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkPolicy"
            - description: "Returns information about the deleted policy version. "
    DeleteDeviceResponse:
      type: object
      properties:
        Device:
          allOf:
            - $ref: "#/components/schemas/Device"
            - description: Information about the device.
    DeleteGlobalNetworkResponse:
      type: object
      properties:
        GlobalNetwork:
          allOf:
            - $ref: "#/components/schemas/GlobalNetwork"
            - description: Information about the global network.
    DeleteLinkResponse:
      type: object
      properties:
        Link:
          allOf:
            - $ref: "#/components/schemas/Link"
            - description: Information about the link.
    DeletePeeringResponse:
      type: object
      properties:
        Peering:
          allOf:
            - $ref: "#/components/schemas/Peering"
            - description: Information about a deleted peering connection.
    DeleteResourcePolicyResponse:
      type: object
      properties: {}
    DeleteSiteResponse:
      type: object
      properties:
        Site:
          allOf:
            - $ref: "#/components/schemas/Site"
            - description: Information about the site.
    DeregisterTransitGatewayResponse:
      type: object
      properties:
        TransitGatewayRegistration:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRegistration"
            - description: The transit gateway registration information.
    DescribeGlobalNetworksResponse:
      type: object
      properties:
        GlobalNetworks:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkList"
            - description: Information about the global networks.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    GlobalNetworkId:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 50
    DisassociateConnectPeerResponse:
      type: object
      properties:
        ConnectPeerAssociation:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerAssociation"
            - description: Describes the Connect peer association.
    DisassociateCustomerGatewayResponse:
      type: object
      properties:
        CustomerGatewayAssociation:
          allOf:
            - $ref: "#/components/schemas/CustomerGatewayAssociation"
            - description: Information about the customer gateway association.
    DisassociateLinkResponse:
      type: object
      properties:
        LinkAssociation:
          allOf:
            - $ref: "#/components/schemas/LinkAssociation"
            - description: Information about the link association.
    DisassociateTransitGatewayConnectPeerResponse:
      type: object
      properties:
        TransitGatewayConnectPeerAssociation:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerAssociation"
            - description: The transit gateway Connect peer association.
    ExecuteCoreNetworkChangeSetResponse:
      type: object
      properties: {}
    GetConnectAttachmentResponse:
      type: object
      properties:
        ConnectAttachment:
          allOf:
            - $ref: "#/components/schemas/ConnectAttachment"
            - description: Details about the Connect attachment.
    GetConnectPeerResponse:
      type: object
      properties:
        ConnectPeer:
          allOf:
            - $ref: "#/components/schemas/ConnectPeer"
            - description: Returns information about a core network Connect peer.
    GetConnectPeerAssociationsResponse:
      type: object
      properties:
        ConnectPeerAssociations:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerAssociationList"
            - description: Displays a list of Connect peer associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    ConnectPeerId:
      type: string
      pattern: ^connect-peer-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    GetConnectionsResponse:
      type: object
      properties:
        Connections:
          allOf:
            - $ref: "#/components/schemas/ConnectionList"
            - description: Information about the connections.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use for the next page of results.
    ConnectionId:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 50
    GetCoreNetworkResponse:
      type: object
      properties:
        CoreNetwork:
          allOf:
            - $ref: "#/components/schemas/CoreNetwork"
            - description: Details about a core network.
    GetCoreNetworkChangeEventsResponse:
      type: object
      properties:
        CoreNetworkChangeEvents:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkChangeEventList"
            - description: The response to <code>GetCoreNetworkChangeEventsRequest</code>.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    GetCoreNetworkChangeSetResponse:
      type: object
      properties:
        CoreNetworkChanges:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkChangeList"
            - description: Describes a core network changes.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    GetCoreNetworkPolicyResponse:
      type: object
      properties:
        CoreNetworkPolicy:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkPolicy"
            - description: The details about a core network policy.
    GetCustomerGatewayAssociationsResponse:
      type: object
      properties:
        CustomerGatewayAssociations:
          allOf:
            - $ref: "#/components/schemas/CustomerGatewayAssociationList"
            - description: The customer gateway associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    CustomerGatewayArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 500
    GetDevicesResponse:
      type: object
      properties:
        Devices:
          allOf:
            - $ref: "#/components/schemas/DeviceList"
            - description: The devices.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    DeviceId:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 50
    GetLinkAssociationsResponse:
      type: object
      properties:
        LinkAssociations:
          allOf:
            - $ref: "#/components/schemas/LinkAssociationList"
            - description: The link associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    GetLinksResponse:
      type: object
      properties:
        Links:
          allOf:
            - $ref: "#/components/schemas/LinkList"
            - description: The links.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    LinkId:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 50
    GetNetworkResourceCountsResponse:
      type: object
      properties:
        NetworkResourceCounts:
          allOf:
            - $ref: "#/components/schemas/NetworkResourceCountList"
            - description: The count of resources.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    GetNetworkResourceRelationshipsResponse:
      type: object
      properties:
        Relationships:
          allOf:
            - $ref: "#/components/schemas/RelationshipList"
            - description: The resource relationships.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    GetNetworkResourcesResponse:
      type: object
      properties:
        NetworkResources:
          allOf:
            - $ref: "#/components/schemas/NetworkResourceList"
            - description: The network resources.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    GetNetworkRoutesResponse:
      type: object
      properties:
        RouteTableArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the route table.
        CoreNetworkSegmentEdge:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkSegmentEdgeIdentifier"
            - description: Describes a core network segment edge.
        RouteTableType:
          allOf:
            - $ref: "#/components/schemas/RouteTableType"
            - description: The route table type.
        RouteTableTimestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The route table creation time.
        NetworkRoutes:
          allOf:
            - $ref: "#/components/schemas/NetworkRouteList"
            - description: The network routes.
    TransitGatewayRouteTableArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 500
    CoreNetworkSegmentEdgeIdentifier:
      type: object
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network.
        SegmentName:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The name of the segment edge.
        EdgeLocation:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCode"
            - description: The Region where the segment edge is located.
      description: Returns details about a core network edge.
    RouteState:
      type: string
      enum:
        - ACTIVE
        - BLACKHOLE
    RouteType:
      type: string
      enum:
        - PROPAGATED
        - STATIC
    FilterValues:
      type: array
      items:
        $ref: "#/components/schemas/FilterValue"
    GetNetworkTelemetryResponse:
      type: object
      properties:
        NetworkTelemetry:
          allOf:
            - $ref: "#/components/schemas/NetworkTelemetryList"
            - description: The network telemetry.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    GetResourcePolicyResponse:
      type: object
      properties:
        PolicyDocument:
          allOf:
            - $ref: "#/components/schemas/ResourcePolicyDocument"
            - description: The resource policy document.
    GetRouteAnalysisResponse:
      type: object
      properties:
        RouteAnalysis:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysis"
            - description: The route analysis.
    GetSiteToSiteVpnAttachmentResponse:
      type: object
      properties:
        SiteToSiteVpnAttachment:
          allOf:
            - $ref: "#/components/schemas/SiteToSiteVpnAttachment"
            - description: Describes the site-to-site attachment.
    GetSitesResponse:
      type: object
      properties:
        Sites:
          allOf:
            - $ref: "#/components/schemas/SiteList"
            - description: The sites.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    SiteId:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 50
    GetTransitGatewayConnectPeerAssociationsResponse:
      type: object
      properties:
        TransitGatewayConnectPeerAssociations:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerAssociationList"
            - description: Information about the transit gateway Connect peer associations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use for the next page of results.
    TransitGatewayConnectPeerArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 500
    GetTransitGatewayPeeringResponse:
      type: object
      properties:
        TransitGatewayPeering:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPeering"
            - description: "Returns information about a transit gateway peering. "
    GetTransitGatewayRegistrationsResponse:
      type: object
      properties:
        TransitGatewayRegistrations:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRegistrationList"
            - description: The transit gateway registrations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    TransitGatewayArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 500
    GetTransitGatewayRouteTableAttachmentResponse:
      type: object
      properties:
        TransitGatewayRouteTableAttachment:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableAttachment"
            - description: Returns information about the transit gateway route table attachment.
    GetVpcAttachmentResponse:
      type: object
      properties:
        VpcAttachment:
          allOf:
            - $ref: "#/components/schemas/VpcAttachment"
            - description: Returns details about a VPC attachment.
    ListAttachmentsResponse:
      type: object
      properties:
        Attachments:
          allOf:
            - $ref: "#/components/schemas/AttachmentList"
            - description: Describes the list of attachments.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    ListConnectPeersResponse:
      type: object
      properties:
        ConnectPeers:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerSummaryList"
            - description: Describes the Connect peers.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    ListCoreNetworkPolicyVersionsResponse:
      type: object
      properties:
        CoreNetworkPolicyVersions:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkPolicyVersionList"
            - description: Describes core network policy versions.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    ListCoreNetworksResponse:
      type: object
      properties:
        CoreNetworks:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkSummaryList"
            - description: Describes the list of core networks.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    ListOrganizationServiceAccessStatusResponse:
      type: object
      properties:
        OrganizationStatus:
          allOf:
            - $ref: "#/components/schemas/OrganizationStatus"
            - description: Displays the status of an Amazon Web Services Organization.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    ListPeeringsResponse:
      type: object
      properties:
        Peerings:
          allOf:
            - $ref: "#/components/schemas/PeeringList"
            - description: Lists the transit gateway peerings for the <code>ListPeerings</code> request.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token for the next page of results.
    ListTagsForResourceResponse:
      type: object
      properties:
        TagList:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The list of tags.
    PutCoreNetworkPolicyResponse:
      type: object
      properties:
        CoreNetworkPolicy:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkPolicy"
            - description: Describes the changed core network policy.
    PutResourcePolicyResponse:
      type: object
      properties: {}
    RegisterTransitGatewayResponse:
      type: object
      properties:
        TransitGatewayRegistration:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRegistration"
            - description: Information about the transit gateway registration.
    RejectAttachmentResponse:
      type: object
      properties:
        Attachment:
          allOf:
            - $ref: "#/components/schemas/Attachment"
            - description: Describes the rejected attachment request.
    RestoreCoreNetworkPolicyVersionResponse:
      type: object
      properties:
        CoreNetworkPolicy:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkPolicy"
            - description: Describes the restored core network policy.
    StartOrganizationServiceAccessUpdateResponse:
      type: object
      properties:
        OrganizationStatus:
          allOf:
            - $ref: "#/components/schemas/OrganizationStatus"
            - description: The status of the service access update request for an Amazon Web Services Organization.
    StartRouteAnalysisResponse:
      type: object
      properties:
        RouteAnalysis:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysis"
            - description: The route analysis.
    TransitGatewayAttachmentArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 500
    IPAddress:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 1
      maxLength: 50
    TagResourceResponse:
      type: object
      properties: {}
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 10000000
    UpdateConnectionResponse:
      type: object
      properties:
        Connection:
          allOf:
            - $ref: "#/components/schemas/Connection"
            - description: Information about the connection.
    UpdateCoreNetworkResponse:
      type: object
      properties:
        CoreNetwork:
          allOf:
            - $ref: "#/components/schemas/CoreNetwork"
            - description: Returns information about a core network update.
    UpdateDeviceResponse:
      type: object
      properties:
        Device:
          allOf:
            - $ref: "#/components/schemas/Device"
            - description: Information about the device.
    UpdateGlobalNetworkResponse:
      type: object
      properties:
        GlobalNetwork:
          allOf:
            - $ref: "#/components/schemas/GlobalNetwork"
            - description: Information about the global network object.
    UpdateLinkResponse:
      type: object
      properties:
        Link:
          allOf:
            - $ref: "#/components/schemas/Link"
            - description: Information about the link.
    UpdateNetworkResourceMetadataResponse:
      type: object
      properties:
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the resource.
        Metadata:
          allOf:
            - $ref: "#/components/schemas/NetworkResourceMetadataMap"
            - description: The updated resource metadata.
    UpdateSiteResponse:
      type: object
      properties:
        Site:
          allOf:
            - $ref: "#/components/schemas/Site"
            - description: Information about the site.
    UpdateVpcAttachmentResponse:
      type: object
      properties:
        VpcAttachment:
          allOf:
            - $ref: "#/components/schemas/VpcAttachment"
            - description: Describes the updated VPC attachment.
    AWSAccountId:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 12
      maxLength: 12
    AWSLocation:
      type: object
      properties:
        Zone:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
        SubnetArn:
          allOf:
            - $ref: "#/components/schemas/SubnetArn"
            - description: The Amazon Resource Name (ARN) of the subnet that the device is located in.
      description: Specifies a location in Amazon Web Services.
    AttachmentId:
      type: string
      pattern: ^attachment-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    AcceptAttachmentRequest:
      type: object
      title: AcceptAttachmentRequest
      properties: {}
    Attachment:
      type: object
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network.
        CoreNetworkArn:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkArn"
            - description: The ARN of a core network.
        AttachmentId:
          allOf:
            - $ref: "#/components/schemas/AttachmentId"
            - description: The ID of the attachment.
        OwnerAccountId:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The ID of the attachment account owner.
        AttachmentType:
          allOf:
            - $ref: "#/components/schemas/AttachmentType"
            - description: The type of attachment.
        State:
          allOf:
            - $ref: "#/components/schemas/AttachmentState"
            - description: The state of the attachment.
        EdgeLocation:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCode"
            - description: The Region where the edge is located.
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The attachment resource ARN.
        AttachmentPolicyRuleNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The policy rule number associated with the attachment.
        SegmentName:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The name of the segment attachment.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags associated with the attachment.
        ProposedSegmentChange:
          allOf:
            - $ref: "#/components/schemas/ProposedSegmentChange"
            - description: The attachment to move from one segment to another.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The timestamp when the attachment was created.
        UpdatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The timestamp when the attachment was last updated.
      description: Describes a core network attachment.
    AccountId:
      type: string
      minLength: 0
      maxLength: 50
    SLRDeploymentStatus:
      type: string
      minLength: 0
      maxLength: 50
    AccountStatus:
      type: object
      properties:
        AccountId:
          allOf:
            - $ref: "#/components/schemas/AccountId"
            - description: The ID of an account within the Amazon Web Services Organization.
        SLRDeploymentStatus:
          allOf:
            - $ref: "#/components/schemas/SLRDeploymentStatus"
            - description: The status of SLR deployment for the account.
      description: Describes the current status of an account within an Amazon Web Services Organization, including service-linked roles (SLRs).
    AccountStatusList:
      type: array
      items:
        $ref: "#/components/schemas/AccountStatus"
    Action:
      type: string
      minLength: 0
      maxLength: 50
    AssociateConnectPeerRequest:
      type: object
      required:
        - ConnectPeerId
        - DeviceId
      title: AssociateConnectPeerRequest
      properties:
        ConnectPeerId:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerId"
            - description: The ID of the Connect peer.
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the device.
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link.
    ConnectPeerAssociation:
      type: object
      properties:
        ConnectPeerId:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerId"
            - description: The ID of the Connect peer.
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The ID of the global network.
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the device to connect to.
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link.
        State:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerAssociationState"
            - description: The state of the Connect peer association.
      description: Describes a core network Connect peer association.
    AssociateCustomerGatewayRequest:
      type: object
      required:
        - CustomerGatewayArn
        - DeviceId
      title: AssociateCustomerGatewayRequest
      properties:
        CustomerGatewayArn:
          allOf:
            - $ref: "#/components/schemas/CustomerGatewayArn"
            - description: The Amazon Resource Name (ARN) of the customer gateway.
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the device.
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link.
    CustomerGatewayAssociation:
      type: object
      properties:
        CustomerGatewayArn:
          allOf:
            - $ref: "#/components/schemas/CustomerGatewayArn"
            - description: The Amazon Resource Name (ARN) of the customer gateway.
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The ID of the global network.
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the device.
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link.
        State:
          allOf:
            - $ref: "#/components/schemas/CustomerGatewayAssociationState"
            - description: The association state.
      description: Describes the association between a customer gateway, a device, and a link.
    AssociateLinkRequest:
      type: object
      required:
        - DeviceId
        - LinkId
      title: AssociateLinkRequest
      properties:
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the device.
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link.
    LinkAssociation:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The ID of the global network.
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The device ID for the link association.
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link.
        LinkAssociationState:
          allOf:
            - $ref: "#/components/schemas/LinkAssociationState"
            - description: The state of the association.
      description: Describes the association between a device and a link.
    AssociateTransitGatewayConnectPeerRequest:
      type: object
      required:
        - TransitGatewayConnectPeerArn
        - DeviceId
      title: AssociateTransitGatewayConnectPeerRequest
      properties:
        TransitGatewayConnectPeerArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerArn"
            - description: The Amazon Resource Name (ARN) of the Connect peer.
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the device.
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link.
    TransitGatewayConnectPeerAssociation:
      type: object
      properties:
        TransitGatewayConnectPeerArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerArn"
            - description: The Amazon Resource Name (ARN) of the transit gateway Connect peer.
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The ID of the global network.
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the device.
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayConnectPeerAssociationState"
            - description: The state of the association.
      description: Describes a transit gateway Connect peer association.
    CoreNetworkId:
      type: string
      pattern: ^core-network-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    CoreNetworkArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 500
    AttachmentType:
      type: string
      enum:
        - CONNECT
        - SITE_TO_SITE_VPN
        - VPC
        - TRANSIT_GATEWAY_ROUTE_TABLE
    AttachmentState:
      type: string
      enum:
        - REJECTED
        - PENDING_ATTACHMENT_ACCEPTANCE
        - CREATING
        - FAILED
        - AVAILABLE
        - UPDATING
        - PENDING_NETWORK_UPDATE
        - PENDING_TAG_ACCEPTANCE
        - DELETING
    ExternalRegionCode:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 1
      maxLength: 63
    ResourceArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 1500
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
    ProposedSegmentChange:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The list of key-value tags that changed for the segment.
        AttachmentPolicyRuleNumber:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The rule number in the policy document that applies to this change.
        SegmentName:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The name of the segment to change.
      description: "Describes a proposed segment change. In some cases, the segment change must first be evaluated and accepted. "
    DateTime:
      type: string
      format: date-time
    AttachmentList:
      type: array
      items:
        $ref: "#/components/schemas/Attachment"
    Bandwidth:
      type: object
      properties:
        UploadSpeed:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Upload speed in Mbps.
        DownloadSpeed:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: Download speed in Mbps.
      description: Describes bandwidth information.
    BgpOptions:
      type: object
      properties:
        PeerAsn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The Peer ASN of the BGP.
      description: Describes the BGP options.
    ChangeAction:
      type: string
      enum:
        - ADD
        - MODIFY
        - REMOVE
    ChangeSetState:
      type: string
      enum:
        - PENDING_GENERATION
        - FAILED_GENERATION
        - READY_TO_EXECUTE
        - EXECUTING
        - EXECUTION_SUCCEEDED
        - OUT_OF_DATE
    ChangeStatus:
      type: string
      enum:
        - NOT_STARTED
        - IN_PROGRESS
        - COMPLETE
        - FAILED
    ChangeType:
      type: string
      enum:
        - CORE_NETWORK_SEGMENT
        - CORE_NETWORK_EDGE
        - ATTACHMENT_MAPPING
        - ATTACHMENT_ROUTE_PROPAGATION
        - ATTACHMENT_ROUTE_STATIC
        - CORE_NETWORK_CONFIGURATION
        - SEGMENTS_CONFIGURATION
        - SEGMENT_ACTIONS_CONFIGURATION
        - ATTACHMENT_POLICIES_CONFIGURATION
    ClientToken:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 256
    ConnectAttachmentOptions:
      type: object
      properties:
        Protocol:
          allOf:
            - $ref: "#/components/schemas/TunnelProtocol"
            - description: The protocol used for the attachment connection.
      description: Describes a core network Connect attachment options.
    ConnectAttachment:
      type: object
      properties:
        Attachment:
          allOf:
            - $ref: "#/components/schemas/Attachment"
            - description: The attachment details.
        TransportAttachmentId:
          allOf:
            - $ref: "#/components/schemas/AttachmentId"
            - description: The ID of the transport attachment.
        Options:
          allOf:
            - $ref: "#/components/schemas/ConnectAttachmentOptions"
            - description: Options for connecting an attachment.
      description: Describes a core network Connect attachment.
    ConnectPeerState:
      type: string
      enum:
        - CREATING
        - FAILED
        - AVAILABLE
        - DELETING
    ConnectPeerConfiguration:
      type: object
      properties:
        CoreNetworkAddress:
          allOf:
            - $ref: "#/components/schemas/IPAddress"
            - description: The IP address of a core network.
        PeerAddress:
          allOf:
            - $ref: "#/components/schemas/IPAddress"
            - description: The IP address of the Connect peer.
        InsideCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/ConstrainedStringList"
            - description: The inside IP addresses used for a Connect peer configuration.
        Protocol:
          allOf:
            - $ref: "#/components/schemas/TunnelProtocol"
            - description: The protocol used for a Connect peer configuration.
        BgpConfigurations:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerBgpConfigurationList"
            - description: The Connect peer BGP configurations.
      description: Describes a core network Connect peer configuration.
    ConnectPeer:
      type: object
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network.
        ConnectAttachmentId:
          allOf:
            - $ref: "#/components/schemas/AttachmentId"
            - description: The ID of the attachment to connect.
        ConnectPeerId:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerId"
            - description: The ID of the Connect peer.
        EdgeLocation:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCode"
            - description: The Connect peer Regions where edges are located.
        State:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerState"
            - description: The state of the Connect peer.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The timestamp when the Connect peer was created.
        Configuration:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerConfiguration"
            - description: The configuration of the Connect peer.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The list of key-value tags associated with the Connect peer.
      description: Describes a core network Connect peer.
    ConnectPeerAssociationState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - DELETING
        - DELETED
    ConnectPeerAssociationList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectPeerAssociation"
    ConnectPeerBgpConfiguration:
      type: object
      properties:
        CoreNetworkAsn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The ASN of the Coret Network.
        PeerAsn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The ASN of the Connect peer.
        CoreNetworkAddress:
          allOf:
            - $ref: "#/components/schemas/IPAddress"
            - description: The address of a core network.
        PeerAddress:
          allOf:
            - $ref: "#/components/schemas/IPAddress"
            - description: The address of a core network Connect peer.
      description: Describes a core network BGP configuration.
    ConnectPeerBgpConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectPeerBgpConfiguration"
    ConstrainedStringList:
      type: array
      items:
        $ref: "#/components/schemas/ConstrainedString"
    ConnectPeerIdList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectPeerId"
    ConnectPeerSummary:
      type: object
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network.
        ConnectAttachmentId:
          allOf:
            - $ref: "#/components/schemas/AttachmentId"
            - description: The ID of a Connect peer attachment.
        ConnectPeerId:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerId"
            - description: The ID of a Connect peer.
        EdgeLocation:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCode"
            - description: The Region where the edge is located.
        ConnectPeerState:
          allOf:
            - $ref: "#/components/schemas/ConnectPeerState"
            - description: The state of a Connect peer.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The timestamp when a Connect peer was created.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The list of key-value tags associated with the Connect peer summary.
      description: Summary description of a Connect peer.
    ConnectPeerSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectPeerSummary"
    ConnectionArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 500
    ConnectionState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - DELETING
        - UPDATING
    Connection:
      type: object
      properties:
        ConnectionId:
          allOf:
            - $ref: "#/components/schemas/ConnectionId"
            - description: The ID of the connection.
        ConnectionArn:
          allOf:
            - $ref: "#/components/schemas/ConnectionArn"
            - description: The Amazon Resource Name (ARN) of the connection.
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The ID of the global network.
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the first device in the connection.
        ConnectedDeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the second device in the connection.
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link for the first device in the connection.
        ConnectedLinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link for the second device in the connection.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The description of the connection.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The date and time that the connection was created.
        State:
          allOf:
            - $ref: "#/components/schemas/ConnectionState"
            - description: The state of the connection.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags for the connection.
      description: Describes a connection.
    ConnectionType:
      type: string
      enum:
        - BGP
        - IPSEC
    ConnectionStatus:
      type: string
      enum:
        - UP
        - DOWN
    ConnectionHealth:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/ConnectionType"
            - description: The connection type.
        Status:
          allOf:
            - $ref: "#/components/schemas/ConnectionStatus"
            - description: The connection status.
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The time the status was last updated.
      description: Describes connection health.
    ConnectionIdList:
      type: array
      items:
        $ref: "#/components/schemas/ConnectionId"
    ConnectionList:
      type: array
      items:
        $ref: "#/components/schemas/Connection"
    CoreNetworkState:
      type: string
      enum:
        - CREATING
        - UPDATING
        - AVAILABLE
        - DELETING
    CoreNetworkSegmentList:
      type: array
      items:
        $ref: "#/components/schemas/CoreNetworkSegment"
    CoreNetworkEdgeList:
      type: array
      items:
        $ref: "#/components/schemas/CoreNetworkEdge"
    CoreNetwork:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: "The ID of the global network that your core network is a part of. "
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network.
        CoreNetworkArn:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkArn"
            - description: The ARN of a core network.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The description of a core network.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The timestamp when a core network was created.
        State:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkState"
            - description: The current state of a core network.
        Segments:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkSegmentList"
            - description: The segments within a core network.
        Edges:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkEdgeList"
            - description: The edges within a core network.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The list of key-value tags associated with a core network.
      description: Describes a core network.
    CoreNetworkChangeValues:
      type: object
      properties:
        SegmentName:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The names of the segments in a core network.
        EdgeLocations:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCodeList"
            - description: "The Regions where edges are located in a core network. "
        Asn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The ASN of a core network.
        Cidr:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The IP addresses used for a core network.
        DestinationIdentifier:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The ID of the destination.
        InsideCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/ConstrainedStringList"
            - description: The inside IP addresses used for core network change values.
        SharedSegments:
          allOf:
            - $ref: "#/components/schemas/ConstrainedStringList"
            - description: "The shared segments for a core network change value. "
      description: Describes a core network change.
    CoreNetworkChange:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/ChangeType"
            - description: The type of change.
        Action:
          allOf:
            - $ref: "#/components/schemas/ChangeAction"
            - description: The action to take for a core network.
        Identifier:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The resource identifier.
        PreviousValues:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkChangeValues"
            - description: The previous values for a core network.
        NewValues:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkChangeValues"
            - description: The new value for a core network
        IdentifierPath:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: Uniquely identifies the path for a change within the changeset. For example, the <code>IdentifierPath</code> for a core network segment change might be <code>"CORE_NETWORK_SEGMENT/us-east-1/devsegment"</code>.
      description: Details describing a core network change.
    CoreNetworkChangeEventValues:
      type: object
      properties:
        EdgeLocation:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCode"
            - description: The edge location for the core network change event.
        SegmentName:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The segment name if the change event is associated with a segment.
        AttachmentId:
          allOf:
            - $ref: "#/components/schemas/AttachmentId"
            - description: "The ID of the attachment if the change event is associated with an attachment. "
        Cidr:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: For a <code>STATIC_ROUTE</code> event, this is the IP address.
      description: Describes a core network change event.
    CoreNetworkChangeEvent:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/ChangeType"
            - description: "Describes the type of change event. "
        Action:
          allOf:
            - $ref: "#/components/schemas/ChangeAction"
            - description: The action taken for the change event.
        IdentifierPath:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: Uniquely identifies the path for a change within the changeset. For example, the <code>IdentifierPath</code> for a core network segment change might be <code>"CORE_NETWORK_SEGMENT/us-east-1/devsegment"</code>.
        EventTime:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The timestamp for an event change in status.
        Status:
          allOf:
            - $ref: "#/components/schemas/ChangeStatus"
            - description: The status of the core network change event.
        Values:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkChangeEventValues"
            - description: Details of the change event.
      description: Describes a core network change event. This can be a change to a segment, attachment, route, etc.
    CoreNetworkChangeEventList:
      type: array
      items:
        $ref: "#/components/schemas/CoreNetworkChangeEvent"
    CoreNetworkChangeList:
      type: array
      items:
        $ref: "#/components/schemas/CoreNetworkChange"
    ExternalRegionCodeList:
      type: array
      items:
        $ref: "#/components/schemas/ExternalRegionCode"
    CoreNetworkEdge:
      type: object
      properties:
        EdgeLocation:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCode"
            - description: The Region where a core network edge is located.
        Asn:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The ASN of a core network edge.
        InsideCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/ConstrainedStringList"
            - description: The inside IP addresses used for core network edges.
      description: Describes a core network edge.
    CoreNetworkPolicyAlias:
      type: string
      enum:
        - LIVE
        - LATEST
    CoreNetworkPolicyErrorList:
      type: array
      items:
        $ref: "#/components/schemas/CoreNetworkPolicyError"
    CoreNetworkPolicyDocument:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 10000000
    CoreNetworkPolicy:
      type: object
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network.
        PolicyVersionId:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The ID of the policy version.
        Alias:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkPolicyAlias"
            - description: Whether a core network policy is the current LIVE policy or the most recently submitted policy.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The description of a core network policy.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The timestamp when a core network policy was created.
        ChangeSetState:
          allOf:
            - $ref: "#/components/schemas/ChangeSetState"
            - description: The state of a core network policy.
        PolicyErrors:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkPolicyErrorList"
            - description: Describes any errors in a core network policy.
        PolicyDocument:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkPolicyDocument"
            - description: Describes a core network policy.
      description: Describes a core network policy. You can have only one LIVE Core Policy.
    ServerSideString:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 10000000
    CoreNetworkPolicyError:
      type: object
      required:
        - ErrorCode
        - Message
      properties:
        ErrorCode:
          allOf:
            - $ref: "#/components/schemas/ServerSideString"
            - description: The error code associated with a core network policy error.
        Message:
          allOf:
            - $ref: "#/components/schemas/ServerSideString"
            - description: The message associated with a core network policy error code.
        Path:
          allOf:
            - $ref: "#/components/schemas/ServerSideString"
            - description: The JSON path where the error was discovered in the policy document.
      description: Provides details about an error in a core network policy.
    CoreNetworkPolicyVersion:
      type: object
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network.
        PolicyVersionId:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The ID of the policy version.
        Alias:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkPolicyAlias"
            - description: Whether a core network policy is the current policy or the most recently submitted policy.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The description of a core network policy version.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The timestamp when a core network policy version was created.
        ChangeSetState:
          allOf:
            - $ref: "#/components/schemas/ChangeSetState"
            - description: The status of the policy version change set.
      description: Describes a core network policy version.
    CoreNetworkPolicyVersionList:
      type: array
      items:
        $ref: "#/components/schemas/CoreNetworkPolicyVersion"
    CoreNetworkSegment:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The name of a core network segment.
        EdgeLocations:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCodeList"
            - description: The Regions where the edges are located.
        SharedSegments:
          allOf:
            - $ref: "#/components/schemas/ConstrainedStringList"
            - description: The shared segments of a core network.
      description: Describes a core network segment, which are dedicated routes. Only attachments within this segment can communicate with each other.
    CoreNetworkSummary:
      type: object
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network.
        CoreNetworkArn:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkArn"
            - description: a core network ARN.
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The global network ID.
        OwnerAccountId:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The ID of the account owner.
        State:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkState"
            - description: The state of a core network.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The description of a core network.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The key-value tags associated with a core network summary.
      description: Returns summary information about a core network.
    CoreNetworkSummaryList:
      type: array
      items:
        $ref: "#/components/schemas/CoreNetworkSummary"
    CreateConnectAttachmentRequest:
      type: object
      required:
        - CoreNetworkId
        - EdgeLocation
        - TransportAttachmentId
        - Options
      title: CreateConnectAttachmentRequest
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: "The ID of a core network where you want to create the attachment. "
        EdgeLocation:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCode"
            - description: The Region where the edge is located.
        TransportAttachmentId:
          allOf:
            - $ref: "#/components/schemas/AttachmentId"
            - description: The ID of the attachment between the two connections.
        Options:
          allOf:
            - $ref: "#/components/schemas/ConnectAttachmentOptions"
            - description: Options for creating an attachment.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The list of key-value tags associated with the request.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token associated with the request.
    CreateConnectPeerRequest:
      type: object
      required:
        - ConnectAttachmentId
        - PeerAddress
        - InsideCidrBlocks
      title: CreateConnectPeerRequest
      properties:
        ConnectAttachmentId:
          allOf:
            - $ref: "#/components/schemas/AttachmentId"
            - description: The ID of the connection attachment.
        CoreNetworkAddress:
          allOf:
            - $ref: "#/components/schemas/IPAddress"
            - description: A Connect peer core network address.
        PeerAddress:
          allOf:
            - $ref: "#/components/schemas/IPAddress"
            - description: The Connect peer address.
        BgpOptions:
          allOf:
            - $ref: "#/components/schemas/BgpOptions"
            - description: The Connect peer BGP options.
        InsideCidrBlocks:
          allOf:
            - $ref: "#/components/schemas/ConstrainedStringList"
            - description: The inside IP addresses used for BGP peering.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags associated with the peer request.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token associated with the request.
    CreateConnectionRequest:
      type: object
      required:
        - DeviceId
        - ConnectedDeviceId
      title: CreateConnectionRequest
      properties:
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the first device in the connection.
        ConnectedDeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the second device in the connection.
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link for the first device.
        ConnectedLinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link for the second device.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>A description of the connection.</p> <p>Length Constraints: Maximum length of 256 characters.</p>"
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to apply to the resource during creation.
    CreateCoreNetworkRequest:
      type: object
      required:
        - GlobalNetworkId
      title: CreateCoreNetworkRequest
      properties:
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: "The ID of the global network that a core network will be a part of. "
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The description of a core network.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: Key-value tags associated with a core network request.
        PolicyDocument:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkPolicyDocument"
            - description: The policy document for creating a core network.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token associated with a core network request.
    Location:
      type: object
      properties:
        Address:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The physical address.
        Latitude:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The latitude.
        Longitude:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The longitude.
      description: Describes a location.
    CreateDeviceRequest:
      type: object
      title: CreateDeviceRequest
      properties:
        AWSLocation:
          allOf:
            - $ref: "#/components/schemas/AWSLocation"
            - description: The Amazon Web Services location of the device, if applicable. For an on-premises device, you can omit this parameter.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>A description of the device.</p> <p>Constraints: Maximum length of 256 characters.</p>"
        Type:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The type of the device.
        Vendor:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>The vendor of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
        Model:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>The model of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
        SerialNumber:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>The serial number of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
        Location:
          allOf:
            - $ref: "#/components/schemas/Location"
            - description: The location of the device.
        SiteId:
          allOf:
            - $ref: "#/components/schemas/SiteId"
            - description: The ID of the site.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to apply to the resource during creation.
    Device:
      type: object
      properties:
        DeviceId:
          allOf:
            - $ref: "#/components/schemas/DeviceId"
            - description: The ID of the device.
        DeviceArn:
          allOf:
            - $ref: "#/components/schemas/DeviceArn"
            - description: The Amazon Resource Name (ARN) of the device.
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The ID of the global network.
        AWSLocation:
          allOf:
            - $ref: "#/components/schemas/AWSLocation"
            - description: The Amazon Web Services location of the device.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The description of the device.
        Type:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The device type.
        Vendor:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The device vendor.
        Model:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The device model.
        SerialNumber:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The device serial number.
        Location:
          allOf:
            - $ref: "#/components/schemas/Location"
            - description: The site location.
        SiteId:
          allOf:
            - $ref: "#/components/schemas/SiteId"
            - description: The site ID.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The date and time that the site was created.
        State:
          allOf:
            - $ref: "#/components/schemas/DeviceState"
            - description: The device state.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags for the device.
      description: Describes a device.
    CreateGlobalNetworkRequest:
      type: object
      title: CreateGlobalNetworkRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>A description of the global network.</p> <p>Constraints: Maximum length of 256 characters.</p>"
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to apply to the resource during creation.
    GlobalNetwork:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The ID of the global network.
        GlobalNetworkArn:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkArn"
            - description: The Amazon Resource Name (ARN) of the global network.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The description of the global network.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The date and time that the global network was created.
        State:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkState"
            - description: The state of the global network.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags for the global network.
      description: Describes a global network. This is a single private network acting as a high-level container for your network objects, including an Amazon Web Services-managed Core Network.
    CreateLinkRequest:
      type: object
      required:
        - Bandwidth
        - SiteId
      title: CreateLinkRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>A description of the link.</p> <p>Constraints: Maximum length of 256 characters.</p>"
        Type:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>The type of the link.</p> <p>Constraints: Maximum length of 128 characters. Cannot include the following characters: | \\ ^</p>"
        Bandwidth:
          allOf:
            - $ref: "#/components/schemas/Bandwidth"
            - description: " The upload speed and download speed in Mbps. "
        Provider:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>The provider of the link.</p> <p>Constraints: Maximum length of 128 characters. Cannot include the following characters: | \\ ^</p>"
        SiteId:
          allOf:
            - $ref: "#/components/schemas/SiteId"
            - description: The ID of the site.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to apply to the resource during creation.
    Link:
      type: object
      properties:
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link.
        LinkArn:
          allOf:
            - $ref: "#/components/schemas/LinkArn"
            - description: The Amazon Resource Name (ARN) of the link.
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The ID of the global network.
        SiteId:
          allOf:
            - $ref: "#/components/schemas/SiteId"
            - description: The ID of the site.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The description of the link.
        Type:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The type of the link.
        Bandwidth:
          allOf:
            - $ref: "#/components/schemas/Bandwidth"
            - description: The bandwidth for the link.
        Provider:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The provider of the link.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The date and time that the link was created.
        State:
          allOf:
            - $ref: "#/components/schemas/LinkState"
            - description: The state of the link.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags for the link.
      description: Describes a link.
    CreateSiteRequest:
      type: object
      title: CreateSiteRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>A description of your site.</p> <p>Constraints: Maximum length of 256 characters.</p>"
        Location:
          allOf:
            - $ref: "#/components/schemas/Location"
            - description: "<p>The site location. This information is used for visualization in the Network Manager console. If you specify the address, the latitude and longitude are automatically calculated.</p> <ul> <li> <p> <code>Address</code>: The physical address of the site.</p> </li> <li> <p> <code>Latitude</code>: The latitude of the site. </p> </li> <li> <p> <code>Longitude</code>: The longitude of the site.</p> </li> </ul>"
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to apply to the resource during creation.
    Site:
      type: object
      properties:
        SiteId:
          allOf:
            - $ref: "#/components/schemas/SiteId"
            - description: The ID of the site.
        SiteArn:
          allOf:
            - $ref: "#/components/schemas/SiteArn"
            - description: The Amazon Resource Name (ARN) of the site.
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The ID of the global network.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The description of the site.
        Location:
          allOf:
            - $ref: "#/components/schemas/Location"
            - description: The location of the site.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The date and time that the site was created.
        State:
          allOf:
            - $ref: "#/components/schemas/SiteState"
            - description: The state of the site.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags for the site.
      description: Describes a site.
    VpnConnectionArn:
      type: string
      pattern: ^arn:[^:]{1,63}:ec2:[^:]{0,63}:[^:]{0,63}:vpn-connection\/vpn-[0-9a-f]{8,17}$
      minLength: 0
      maxLength: 500
    CreateSiteToSiteVpnAttachmentRequest:
      type: object
      required:
        - CoreNetworkId
        - VpnConnectionArn
      title: CreateSiteToSiteVpnAttachmentRequest
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network where you're creating a site-to-site VPN attachment.
        VpnConnectionArn:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionArn"
            - description: The ARN identifying the VPN attachment.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags associated with the request.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token associated with the request.
    SiteToSiteVpnAttachment:
      type: object
      properties:
        Attachment:
          allOf:
            - $ref: "#/components/schemas/Attachment"
            - description: Provides details about a site-to-site VPN attachment.
        VpnConnectionArn:
          allOf:
            - $ref: "#/components/schemas/VpnConnectionArn"
            - description: "The ARN of the site-to-site VPN attachment. "
      description: Creates a site-to-site VPN attachment.
    CreateTransitGatewayPeeringRequest:
      type: object
      required:
        - CoreNetworkId
        - TransitGatewayArn
      title: CreateTransitGatewayPeeringRequest
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network.
        TransitGatewayArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayArn"
            - description: The ARN of the transit gateway for the peering request.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The list of key-value tags associated with the request.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token associated with the request.
    TransitGatewayPeering:
      type: object
      properties:
        Peering:
          allOf:
            - $ref: "#/components/schemas/Peering"
            - description: Describes a transit gateway peer connection.
        TransitGatewayArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayArn"
            - description: The ARN of the transit gateway.
        TransitGatewayPeeringAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayPeeringAttachmentId"
            - description: The ID of the transit gateway peering attachment.
      description: Describes a transit gateway peering attachment.
    PeeringId:
      type: string
      pattern: ^peering-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    CreateTransitGatewayRouteTableAttachmentRequest:
      type: object
      required:
        - PeeringId
        - TransitGatewayRouteTableArn
      title: CreateTransitGatewayRouteTableAttachmentRequest
      properties:
        PeeringId:
          allOf:
            - $ref: "#/components/schemas/PeeringId"
            - description: "The ID of the peer for the "
        TransitGatewayRouteTableArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableArn"
            - description: 'The ARN of the transit gateway route table for the attachment request. For example, <code>"TransitGatewayRouteTableArn": "arn:aws:ec2:us-west-2:123456789012:transit-gateway-route-table/tgw-rtb-9876543210123456"</code>.'
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The list of key-value tags associated with the request.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token associated with the request.
    TransitGatewayRouteTableAttachment:
      type: object
      properties:
        Attachment:
          $ref: "#/components/schemas/Attachment"
        PeeringId:
          allOf:
            - $ref: "#/components/schemas/PeeringId"
            - description: The ID of the peering attachment.
        TransitGatewayRouteTableArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableArn"
            - description: 'The ARN of the transit gateway attachment route table. For example, <code>"TransitGatewayRouteTableArn": "arn:aws:ec2:us-west-2:123456789012:transit-gateway-route-table/tgw-rtb-9876543210123456"</code>.'
      description: Describes a transit gateway route table attachment.
    VpcArn:
      type: string
      pattern: ^arn:[^:]{1,63}:ec2:[^:]{0,63}:[^:]{0,63}:vpc\/vpc-[0-9a-f]{8,17}$
      minLength: 0
      maxLength: 500
    SubnetArnList:
      type: array
      items:
        $ref: "#/components/schemas/SubnetArn"
    VpcOptions:
      type: object
      properties:
        Ipv6Support:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether IPv6 is supported.
        ApplianceModeSupport:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether appliance mode is supported. If enabled, traffic flow between a source and destination use the same Availability Zone for the VPC attachment for the lifetime of that flow. The default value is <code>false</code>.
      description: Describes the VPC options.
    CreateVpcAttachmentRequest:
      type: object
      required:
        - CoreNetworkId
        - VpcArn
        - SubnetArns
      title: CreateVpcAttachmentRequest
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network for the VPC attachment.
        VpcArn:
          allOf:
            - $ref: "#/components/schemas/VpcArn"
            - description: The ARN of the VPC.
        SubnetArns:
          allOf:
            - $ref: "#/components/schemas/SubnetArnList"
            - description: The subnet ARN of the VPC attachment.
        Options:
          allOf:
            - $ref: "#/components/schemas/VpcOptions"
            - description: Options for the VPC attachment.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The key-value tags associated with the request.
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token associated with the request.
    VpcAttachment:
      type: object
      properties:
        Attachment:
          allOf:
            - $ref: "#/components/schemas/Attachment"
            - description: Provides details about the VPC attachment.
        SubnetArns:
          allOf:
            - $ref: "#/components/schemas/SubnetArnList"
            - description: The subnet ARNs.
        Options:
          allOf:
            - $ref: "#/components/schemas/VpcOptions"
            - description: Provides details about the VPC attachment.
      description: Describes a VPC attachment.
    CustomerGatewayArnList:
      type: array
      items:
        $ref: "#/components/schemas/CustomerGatewayArn"
    CustomerGatewayAssociationState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - DELETING
        - DELETED
    CustomerGatewayAssociationList:
      type: array
      items:
        $ref: "#/components/schemas/CustomerGatewayAssociation"
    DeleteAttachmentRequest:
      type: object
      title: DeleteAttachmentRequest
      properties: {}
    DeleteConnectPeerRequest:
      type: object
      title: DeleteConnectPeerRequest
      properties: {}
    DeleteConnectionRequest:
      type: object
      title: DeleteConnectionRequest
      properties: {}
    DeleteCoreNetworkPolicyVersionRequest:
      type: object
      title: DeleteCoreNetworkPolicyVersionRequest
      properties: {}
    DeleteCoreNetworkRequest:
      type: object
      title: DeleteCoreNetworkRequest
      properties: {}
    DeleteDeviceRequest:
      type: object
      title: DeleteDeviceRequest
      properties: {}
    DeleteGlobalNetworkRequest:
      type: object
      title: DeleteGlobalNetworkRequest
      properties: {}
    DeleteLinkRequest:
      type: object
      title: DeleteLinkRequest
      properties: {}
    DeletePeeringRequest:
      type: object
      title: DeletePeeringRequest
      properties: {}
    Peering:
      type: object
      properties:
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of the core network for the peering request.
        CoreNetworkArn:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkArn"
            - description: The ARN of a core network.
        PeeringId:
          allOf:
            - $ref: "#/components/schemas/PeeringId"
            - description: "The ID of the peering attachment. "
        OwnerAccountId:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The ID of the account owner.
        PeeringType:
          allOf:
            - $ref: "#/components/schemas/PeeringType"
            - description: The type of peering. This will be <code>TRANSIT_GATEWAY</code>.
        State:
          allOf:
            - $ref: "#/components/schemas/PeeringState"
            - description: "The current state of the peering connection. "
        EdgeLocation:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCode"
            - description: The edge location for the peer.
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The resource ARN of the peer.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The list of key-value tags associated with the peering.
        CreatedAt:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The timestamp when the attachment peer was created.
      description: Describes a peering connection.
    DeleteResourcePolicyRequest:
      type: object
      title: DeleteResourcePolicyRequest
      properties: {}
    DeleteSiteRequest:
      type: object
      title: DeleteSiteRequest
      properties: {}
    DeregisterTransitGatewayRequest:
      type: object
      title: DeregisterTransitGatewayRequest
      properties: {}
    TransitGatewayRegistration:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The ID of the global network.
        TransitGatewayArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayArn"
            - description: The Amazon Resource Name (ARN) of the transit gateway.
        State:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRegistrationStateReason"
            - description: The state of the transit gateway registration.
      description: Describes the registration of a transit gateway to a global network.
    GlobalNetworkIdList:
      type: array
      items:
        $ref: "#/components/schemas/GlobalNetworkId"
    MaxResults:
      type: integer
      minimum: 1
      maximum: 500
    NextToken:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 2048
    DescribeGlobalNetworksRequest:
      type: object
      title: DescribeGlobalNetworksRequest
      properties: {}
    GlobalNetworkList:
      type: array
      items:
        $ref: "#/components/schemas/GlobalNetwork"
    DeviceArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 500
    DeviceState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - DELETING
        - UPDATING
    DeviceIdList:
      type: array
      items:
        $ref: "#/components/schemas/DeviceId"
    DeviceList:
      type: array
      items:
        $ref: "#/components/schemas/Device"
    DisassociateConnectPeerRequest:
      type: object
      title: DisassociateConnectPeerRequest
      properties: {}
    DisassociateCustomerGatewayRequest:
      type: object
      title: DisassociateCustomerGatewayRequest
      properties: {}
    DisassociateLinkRequest:
      type: object
      title: DisassociateLinkRequest
      properties: {}
    DisassociateTransitGatewayConnectPeerRequest:
      type: object
      title: DisassociateTransitGatewayConnectPeerRequest
      properties: {}
    ExecuteCoreNetworkChangeSetRequest:
      type: object
      title: ExecuteCoreNetworkChangeSetRequest
      properties: {}
    FilterMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/FilterValues"
    FilterName:
      type: string
      pattern: ^[0-9a-zA-Z\.-]*$
      maxLength: 128
    FilterValue:
      type: string
      pattern: ^[0-9a-zA-Z\*\.\\/\?-]*$
      maxLength: 255
    GetConnectAttachmentRequest:
      type: object
      title: GetConnectAttachmentRequest
      properties: {}
    GetConnectPeerAssociationsRequest:
      type: object
      title: GetConnectPeerAssociationsRequest
      properties: {}
    GetConnectPeerRequest:
      type: object
      title: GetConnectPeerRequest
      properties: {}
    GetConnectionsRequest:
      type: object
      title: GetConnectionsRequest
      properties: {}
    GetCoreNetworkChangeEventsRequest:
      type: object
      title: GetCoreNetworkChangeEventsRequest
      properties: {}
    GetCoreNetworkChangeSetRequest:
      type: object
      title: GetCoreNetworkChangeSetRequest
      properties: {}
    GetCoreNetworkPolicyRequest:
      type: object
      title: GetCoreNetworkPolicyRequest
      properties: {}
    GetCoreNetworkRequest:
      type: object
      title: GetCoreNetworkRequest
      properties: {}
    GetCustomerGatewayAssociationsRequest:
      type: object
      title: GetCustomerGatewayAssociationsRequest
      properties: {}
    GetDevicesRequest:
      type: object
      title: GetDevicesRequest
      properties: {}
    GetLinkAssociationsRequest:
      type: object
      title: GetLinkAssociationsRequest
      properties: {}
    LinkAssociationList:
      type: array
      items:
        $ref: "#/components/schemas/LinkAssociation"
    LinkIdList:
      type: array
      items:
        $ref: "#/components/schemas/LinkId"
    GetLinksRequest:
      type: object
      title: GetLinksRequest
      properties: {}
    LinkList:
      type: array
      items:
        $ref: "#/components/schemas/Link"
    GetNetworkResourceCountsRequest:
      type: object
      title: GetNetworkResourceCountsRequest
      properties: {}
    NetworkResourceCountList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkResourceCount"
    GetNetworkResourceRelationshipsRequest:
      type: object
      title: GetNetworkResourceRelationshipsRequest
      properties: {}
    RelationshipList:
      type: array
      items:
        $ref: "#/components/schemas/Relationship"
    GetNetworkResourcesRequest:
      type: object
      title: GetNetworkResourcesRequest
      properties: {}
    NetworkResourceList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkResource"
    RouteTableIdentifier:
      type: object
      properties:
        TransitGatewayRouteTableArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRouteTableArn"
            - description: The ARN of the transit gateway route table.
        CoreNetworkSegmentEdge:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkSegmentEdgeIdentifier"
            - description: The segment edge in a core network.
      description: Describes a route table.
    RouteStateList:
      type: array
      items:
        $ref: "#/components/schemas/RouteState"
    RouteTypeList:
      type: array
      items:
        $ref: "#/components/schemas/RouteType"
    GetNetworkRoutesRequest:
      type: object
      required:
        - RouteTableIdentifier
      title: GetNetworkRoutesRequest
      properties:
        RouteTableIdentifier:
          allOf:
            - $ref: "#/components/schemas/RouteTableIdentifier"
            - description: The ID of the route table.
        ExactCidrMatches:
          allOf:
            - $ref: "#/components/schemas/ConstrainedStringList"
            - description: An exact CIDR block.
        LongestPrefixMatches:
          allOf:
            - $ref: "#/components/schemas/ConstrainedStringList"
            - description: The most specific route that matches the traffic (longest prefix match).
        SubnetOfMatches:
          allOf:
            - $ref: "#/components/schemas/ConstrainedStringList"
            - description: The routes with a subnet that match the specified CIDR filter.
        SupernetOfMatches:
          allOf:
            - $ref: "#/components/schemas/ConstrainedStringList"
            - description: "The routes with a CIDR that encompasses the CIDR filter. Example: If you specify 10.0.1.0/30, then the result returns 10.0.1.0/29."
        PrefixListIds:
          allOf:
            - $ref: "#/components/schemas/ConstrainedStringList"
            - description: The IDs of the prefix lists.
        States:
          allOf:
            - $ref: "#/components/schemas/RouteStateList"
            - description: The route states.
        Types:
          allOf:
            - $ref: "#/components/schemas/RouteTypeList"
            - description: The route types.
        DestinationFilters:
          allOf:
            - $ref: "#/components/schemas/FilterMap"
            - description: "Filter by route table destination. Possible Values: TRANSIT_GATEWAY_ATTACHMENT_ID, RESOURCE_ID, or RESOURCE_TYPE."
    RouteTableType:
      type: string
      enum:
        - TRANSIT_GATEWAY_ROUTE_TABLE
        - CORE_NETWORK_SEGMENT
    NetworkRouteList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkRoute"
    GetNetworkTelemetryRequest:
      type: object
      title: GetNetworkTelemetryRequest
      properties: {}
    NetworkTelemetryList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkTelemetry"
    GetResourcePolicyRequest:
      type: object
      title: GetResourcePolicyRequest
      properties: {}
    ResourcePolicyDocument:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 10000000
    GetRouteAnalysisRequest:
      type: object
      title: GetRouteAnalysisRequest
      properties: {}
    RouteAnalysis:
      type: object
      properties:
        GlobalNetworkId:
          allOf:
            - $ref: "#/components/schemas/GlobalNetworkId"
            - description: The ID of the global network.
        OwnerAccountId:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The ID of the AWS account that created the route analysis.
        RouteAnalysisId:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The ID of the route analysis.
        StartTimestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The time that the analysis started.
        Status:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysisStatus"
            - description: The status of the route analysis.
        Source:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysisEndpointOptions"
            - description: The source.
        Destination:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysisEndpointOptions"
            - description: The destination.
        IncludeReturnPath:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to analyze the return path. The return path is not analyzed if the forward path analysis does not succeed.
        UseMiddleboxes:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to include the location of middlebox appliances in the route analysis.
        ForwardPath:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysisPath"
            - description: The forward path.
        ReturnPath:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysisPath"
            - description: The return path.
      description: Describes a route analysis.
    GetSiteToSiteVpnAttachmentRequest:
      type: object
      title: GetSiteToSiteVpnAttachmentRequest
      properties: {}
    SiteIdList:
      type: array
      items:
        $ref: "#/components/schemas/SiteId"
    GetSitesRequest:
      type: object
      title: GetSitesRequest
      properties: {}
    SiteList:
      type: array
      items:
        $ref: "#/components/schemas/Site"
    TransitGatewayConnectPeerArnList:
      type: array
      items:
        $ref: "#/components/schemas/TransitGatewayConnectPeerArn"
    GetTransitGatewayConnectPeerAssociationsRequest:
      type: object
      title: GetTransitGatewayConnectPeerAssociationsRequest
      properties: {}
    TransitGatewayConnectPeerAssociationList:
      type: array
      items:
        $ref: "#/components/schemas/TransitGatewayConnectPeerAssociation"
    GetTransitGatewayPeeringRequest:
      type: object
      title: GetTransitGatewayPeeringRequest
      properties: {}
    TransitGatewayArnList:
      type: array
      items:
        $ref: "#/components/schemas/TransitGatewayArn"
    GetTransitGatewayRegistrationsRequest:
      type: object
      title: GetTransitGatewayRegistrationsRequest
      properties: {}
    TransitGatewayRegistrationList:
      type: array
      items:
        $ref: "#/components/schemas/TransitGatewayRegistration"
    GetTransitGatewayRouteTableAttachmentRequest:
      type: object
      title: GetTransitGatewayRouteTableAttachmentRequest
      properties: {}
    GetVpcAttachmentRequest:
      type: object
      title: GetVpcAttachmentRequest
      properties: {}
    GlobalNetworkArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 500
    GlobalNetworkState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - DELETING
        - UPDATING
    LinkArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 500
    LinkState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - DELETING
        - UPDATING
    LinkAssociationState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - DELETING
        - DELETED
    ListAttachmentsRequest:
      type: object
      title: ListAttachmentsRequest
      properties: {}
    ListConnectPeersRequest:
      type: object
      title: ListConnectPeersRequest
      properties: {}
    ListCoreNetworkPolicyVersionsRequest:
      type: object
      title: ListCoreNetworkPolicyVersionsRequest
      properties: {}
    ListCoreNetworksRequest:
      type: object
      title: ListCoreNetworksRequest
      properties: {}
    ListOrganizationServiceAccessStatusRequest:
      type: object
      title: ListOrganizationServiceAccessStatusRequest
      properties: {}
    OrganizationStatus:
      type: object
      properties:
        OrganizationId:
          allOf:
            - $ref: "#/components/schemas/OrganizationId"
            - description: The ID of an Amazon Web Services Organization.
        OrganizationAwsServiceAccessStatus:
          allOf:
            - $ref: "#/components/schemas/OrganizationAwsServiceAccessStatus"
            - description: The status of the organization's AWS service access. This will be <code>ENABLED</code> or <code>DISABLED</code>.
        SLRDeploymentStatus:
          allOf:
            - $ref: "#/components/schemas/SLRDeploymentStatus"
            - description: The status of the SLR deployment for the account. This will be either <code>SUCCEEDED</code> or <code>IN_PROGRESS</code>.
        AccountStatusList:
          allOf:
            - $ref: "#/components/schemas/AccountStatusList"
            - description: The current service-linked role (SLR) deployment status for an Amazon Web Services Organization's accounts. This will be either <code>SUCCEEDED</code> or <code>IN_PROGRESS</code>.
      description: The status of an Amazon Web Services Organization and the accounts within that organization.
    PeeringType:
      type: string
      enum:
        - TRANSIT_GATEWAY
    PeeringState:
      type: string
      enum:
        - CREATING
        - FAILED
        - AVAILABLE
        - DELETING
    ListPeeringsRequest:
      type: object
      title: ListPeeringsRequest
      properties: {}
    PeeringList:
      type: array
      items:
        $ref: "#/components/schemas/Peering"
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    NetworkResourceMetadataMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ConstrainedString"
    NetworkResource:
      type: object
      properties:
        RegisteredGatewayArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the gateway.
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network.
        AwsRegion:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCode"
            - description: The Amazon Web Services Region.
        AccountId:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The Amazon Web Services account ID.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: <p>The resource type.</p> <p>The following are the supported resource types for Direct Connect:</p> <ul> <li> <p> <code>dxcon</code> </p> </li> <li> <p> <code>dx-gateway</code> </p> </li> <li> <p> <code>dx-vif</code> </p> </li> </ul> <p>The following are the supported resource types for Network Manager:</p> <ul> <li> <p> <code>connection</code> </p> </li> <li> <p> <code>device</code> </p> </li> <li> <p> <code>link</code> </p> </li> <li> <p> <code>site</code> </p> </li> </ul> <p>The following are the supported resource types for Amazon VPC:</p> <ul> <li> <p> <code>customer-gateway</code> </p> </li> <li> <p> <code>transit-gateway</code> </p> </li> <li> <p> <code>transit-gateway-attachment</code> </p> </li> <li> <p> <code>transit-gateway-connect-peer</code> </p> </li> <li> <p> <code>transit-gateway-route-table</code> </p> </li> <li> <p> <code>vpn-connection</code> </p> </li> </ul>
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The ID of the resource.
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the resource.
        Definition:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: Information about the resource, in JSON format. Network Manager gets this information by describing the resource using its Describe API call.
        DefinitionTimestamp:
          allOf:
            - $ref: "#/components/schemas/DateTime"
            - description: The time that the resource definition was retrieved.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags.
        Metadata:
          allOf:
            - $ref: "#/components/schemas/NetworkResourceMetadataMap"
            - description: The resource metadata.
      description: Describes a network resource.
    NetworkResourceCount:
      type: object
      properties:
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The resource type.
        Count:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The resource count.
      description: Describes a resource count.
    NetworkResourceSummary:
      type: object
      properties:
        RegisteredGatewayArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the gateway.
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the resource.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The resource type.
        Definition:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: Information about the resource, in JSON format. Network Manager gets this information by describing the resource using its Describe API call.
        NameTag:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The value for the Name tag.
        IsMiddlebox:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether this is a middlebox appliance.
      description: Describes a network resource.
    NetworkRouteDestinationList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkRouteDestination"
    NetworkRoute:
      type: object
      properties:
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: A unique identifier for the route, such as a CIDR block.
        Destinations:
          allOf:
            - $ref: "#/components/schemas/NetworkRouteDestinationList"
            - description: The destinations.
        PrefixListId:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The ID of the prefix list.
        State:
          allOf:
            - $ref: "#/components/schemas/RouteState"
            - description: The route state. The possible values are <code>active</code> and <code>blackhole</code>.
        Type:
          allOf:
            - $ref: "#/components/schemas/RouteType"
            - description: The route type. The possible values are <code>propagated</code> and <code>static</code>.
      description: Describes a network route.
    TransitGatewayAttachmentId:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 50
    NetworkRouteDestination:
      type: object
      properties:
        CoreNetworkAttachmentId:
          allOf:
            - $ref: "#/components/schemas/AttachmentId"
            - description: The ID of a core network attachment.
        TransitGatewayAttachmentId:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentId"
            - description: The ID of the transit gateway attachment.
        SegmentName:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The name of the segment.
        EdgeLocation:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCode"
            - description: The edge location for the network destination.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The resource type.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The ID of the resource.
      description: Describes the destination of a network route.
    NetworkTelemetry:
      type: object
      properties:
        RegisteredGatewayArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the gateway.
        CoreNetworkId:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkId"
            - description: The ID of a core network.
        AwsRegion:
          allOf:
            - $ref: "#/components/schemas/ExternalRegionCode"
            - description: The Amazon Web Services Region.
        AccountId:
          allOf:
            - $ref: "#/components/schemas/AWSAccountId"
            - description: The Amazon Web Services account ID.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The resource type.
        ResourceId:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The ID of the resource.
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/ResourceArn"
            - description: The ARN of the resource.
        Address:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The address.
        Health:
          allOf:
            - $ref: "#/components/schemas/ConnectionHealth"
            - description: The connection health.
      description: Describes the telemetry information for a resource.
    OrganizationAwsServiceAccessStatus:
      type: string
      minLength: 0
      maxLength: 50
    OrganizationId:
      type: string
      pattern: ^o-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    PathComponent:
      type: object
      properties:
        Sequence:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The sequence number in the path. The destination is 0.
        Resource:
          allOf:
            - $ref: "#/components/schemas/NetworkResourceSummary"
            - description: The resource.
        DestinationCidrBlock:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The destination CIDR block in the route table.
      description: Describes a path component.
    PathComponentList:
      type: array
      items:
        $ref: "#/components/schemas/PathComponent"
    PutCoreNetworkPolicyRequest:
      type: object
      required:
        - PolicyDocument
      title: PutCoreNetworkPolicyRequest
      properties:
        PolicyDocument:
          allOf:
            - $ref: "#/components/schemas/CoreNetworkPolicyDocument"
            - description: The policy document.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: a core network policy description.
        LatestVersionId:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: "The ID of a core network policy. "
        ClientToken:
          allOf:
            - $ref: "#/components/schemas/ClientToken"
            - description: The client token associated with the request.
    PutResourcePolicyRequest:
      type: object
      required:
        - PolicyDocument
      title: PutResourcePolicyRequest
      properties:
        PolicyDocument:
          allOf:
            - $ref: "#/components/schemas/ResourcePolicyDocument"
            - description: The JSON resource policy document.
    ReasonContextKey:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 10000000
    ReasonContextValue:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 10000000
    ReasonContextMap:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/ReasonContextValue"
    RegisterTransitGatewayRequest:
      type: object
      required:
        - TransitGatewayArn
      title: RegisterTransitGatewayRequest
      properties:
        TransitGatewayArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayArn"
            - description: The Amazon Resource Name (ARN) of the transit gateway.
    RejectAttachmentRequest:
      type: object
      title: RejectAttachmentRequest
      properties: {}
    Relationship:
      type: object
      properties:
        From:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The ARN of the resource.
        To:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The ARN of the resource.
      description: Describes a resource relationship.
    RestoreCoreNetworkPolicyVersionRequest:
      type: object
      title: RestoreCoreNetworkPolicyVersionRequest
      properties: {}
    RouteAnalysisStatus:
      type: string
      enum:
        - RUNNING
        - COMPLETED
        - FAILED
    RouteAnalysisEndpointOptions:
      type: object
      properties:
        TransitGatewayAttachmentArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentArn"
            - description: The ARN of the transit gateway attachment.
        TransitGatewayArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayArn"
            - description: The ARN of the transit gateway.
        IpAddress:
          allOf:
            - $ref: "#/components/schemas/IPAddress"
            - description: The IP address.
      description: Describes a source or a destination.
    RouteAnalysisPath:
      type: object
      properties:
        CompletionStatus:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysisCompletion"
            - description: The status of the analysis at completion.
        Path:
          allOf:
            - $ref: "#/components/schemas/PathComponentList"
            - description: The route analysis path.
      description: Describes a route analysis path.
    RouteAnalysisCompletionResultCode:
      type: string
      enum:
        - CONNECTED
        - NOT_CONNECTED
    RouteAnalysisCompletionReasonCode:
      type: string
      enum:
        - TRANSIT_GATEWAY_ATTACHMENT_NOT_FOUND
        - TRANSIT_GATEWAY_ATTACHMENT_NOT_IN_TRANSIT_GATEWAY
        - CYCLIC_PATH_DETECTED
        - TRANSIT_GATEWAY_ATTACHMENT_STABLE_ROUTE_TABLE_NOT_FOUND
        - ROUTE_NOT_FOUND
        - BLACKHOLE_ROUTE_FOR_DESTINATION_FOUND
        - INACTIVE_ROUTE_FOR_DESTINATION_FOUND
        - TRANSIT_GATEWAY_ATTACHMENT_ATTACH_ARN_NO_MATCH
        - MAX_HOPS_EXCEEDED
        - POSSIBLE_MIDDLEBOX
        - NO_DESTINATION_ARN_PROVIDED
    RouteAnalysisCompletion:
      type: object
      properties:
        ResultCode:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysisCompletionResultCode"
            - description: The result of the analysis. If the status is <code>NOT_CONNECTED</code>, check the reason code.
        ReasonCode:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysisCompletionReasonCode"
            - description: <p>The reason code. Available only if a connection is not found.</p> <ul> <li> <p> <code>BLACKHOLE_ROUTE_FOR_DESTINATION_FOUND</code> - Found a black hole route with the destination CIDR block.</p> </li> <li> <p> <code>CYCLIC_PATH_DETECTED</code> - Found the same resource multiple times while traversing the path.</p> </li> <li> <p> <code>INACTIVE_ROUTE_FOR_DESTINATION_FOUND</code> - Found an inactive route with the destination CIDR block.</p> </li> <li> <p> <code>MAX_HOPS_EXCEEDED</code> - Analysis exceeded 64 hops without finding the destination.</p> </li> <li> <p> <code>ROUTE_NOT_FOUND</code> - Cannot find a route table with the destination CIDR block.</p> </li> <li> <p> <code>TGW_ATTACH_ARN_NO_MATCH</code> - Found an attachment, but not with the correct destination ARN.</p> </li> <li> <p> <code>TGW_ATTACH_NOT_FOUND</code> - Cannot find an attachment.</p> </li> <li> <p> <code>TGW_ATTACH_NOT_IN_TGW</code> - Found an attachment, but not to the correct transit gateway.</p> </li> <li> <p> <code>TGW_ATTACH_STABLE_ROUTE_TABLE_NOT_FOUND</code> - The state of the route table association is not associated.</p> </li> </ul>
        ReasonContext:
          allOf:
            - $ref: "#/components/schemas/ReasonContextMap"
            - description: Additional information about the path. Available only if a connection is not found.
      description: Describes the status of an analysis at completion.
    RouteAnalysisEndpointOptionsSpecification:
      type: object
      properties:
        TransitGatewayAttachmentArn:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayAttachmentArn"
            - description: The ARN of the transit gateway attachment.
        IpAddress:
          allOf:
            - $ref: "#/components/schemas/IPAddress"
            - description: The IP address.
      description: Describes a source or a destination.
    SiteArn:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 500
    SiteState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - DELETING
        - UPDATING
    StartOrganizationServiceAccessUpdateRequest:
      type: object
      required:
        - Action
      title: StartOrganizationServiceAccessUpdateRequest
      properties:
        Action:
          allOf:
            - $ref: "#/components/schemas/Action"
            - description: The action to take for the update request. This can be either <code>ENABLE</code> or <code>DISABLE</code>.
    StartRouteAnalysisRequest:
      type: object
      required:
        - Source
        - Destination
      title: StartRouteAnalysisRequest
      properties:
        Source:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysisEndpointOptionsSpecification"
            - description: The source from which traffic originates.
        Destination:
          allOf:
            - $ref: "#/components/schemas/RouteAnalysisEndpointOptionsSpecification"
            - description: The destination.
        IncludeReturnPath:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to analyze the return path. The default is <code>false</code>.
        UseMiddleboxes:
          allOf:
            - $ref: "#/components/schemas/Boolean"
            - description: Indicates whether to include the location of middlebox appliances in the route analysis. The default is <code>false</code>.
    TagValue:
      type: string
      pattern: "[\\s\\S]*"
      minLength: 0
      maxLength: 10000000
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to apply to the specified resource.
    TransitGatewayConnectPeerAssociationState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - DELETING
        - DELETED
    TransitGatewayPeeringAttachmentId:
      type: string
      pattern: ^tgw-attach-([0-9a-f]{8,17})$
      minLength: 0
      maxLength: 50
    TransitGatewayRegistrationStateReason:
      type: object
      properties:
        Code:
          allOf:
            - $ref: "#/components/schemas/TransitGatewayRegistrationState"
            - description: The code for the state reason.
        Message:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The message for the state reason.
      description: Describes the status of a transit gateway registration.
    TransitGatewayRegistrationState:
      type: string
      enum:
        - PENDING
        - AVAILABLE
        - DELETING
        - DELETED
        - FAILED
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateConnectionRequest:
      type: object
      title: UpdateConnectionRequest
      properties:
        LinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link for the first device in the connection.
        ConnectedLinkId:
          allOf:
            - $ref: "#/components/schemas/LinkId"
            - description: The ID of the link for the second device in the connection.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>A description of the connection.</p> <p>Length Constraints: Maximum length of 256 characters.</p>"
    UpdateCoreNetworkRequest:
      type: object
      title: UpdateCoreNetworkRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The description of the update.
    UpdateDeviceRequest:
      type: object
      title: UpdateDeviceRequest
      properties:
        AWSLocation:
          allOf:
            - $ref: "#/components/schemas/AWSLocation"
            - description: The Amazon Web Services location of the device, if applicable. For an on-premises device, you can omit this parameter.
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>A description of the device.</p> <p>Constraints: Maximum length of 256 characters.</p>"
        Type:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: The type of the device.
        Vendor:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>The vendor of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
        Model:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>The model of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
        SerialNumber:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>The serial number of the device.</p> <p>Constraints: Maximum length of 128 characters.</p>"
        Location:
          $ref: "#/components/schemas/Location"
        SiteId:
          allOf:
            - $ref: "#/components/schemas/SiteId"
            - description: The ID of the site.
    UpdateGlobalNetworkRequest:
      type: object
      title: UpdateGlobalNetworkRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>A description of the global network.</p> <p>Constraints: Maximum length of 256 characters.</p>"
    UpdateLinkRequest:
      type: object
      title: UpdateLinkRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>A description of the link.</p> <p>Constraints: Maximum length of 256 characters.</p>"
        Type:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>The type of the link.</p> <p>Constraints: Maximum length of 128 characters.</p>"
        Bandwidth:
          allOf:
            - $ref: "#/components/schemas/Bandwidth"
            - description: "The upload and download speed in Mbps. "
        Provider:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>The provider of the link.</p> <p>Constraints: Maximum length of 128 characters.</p>"
    UpdateNetworkResourceMetadataRequest:
      type: object
      required:
        - Metadata
      title: UpdateNetworkResourceMetadataRequest
      properties:
        Metadata:
          allOf:
            - $ref: "#/components/schemas/NetworkResourceMetadataMap"
            - description: The resource metadata.
    UpdateSiteRequest:
      type: object
      title: UpdateSiteRequest
      properties:
        Description:
          allOf:
            - $ref: "#/components/schemas/ConstrainedString"
            - description: "<p>A description of your site.</p> <p>Constraints: Maximum length of 256 characters.</p>"
        Location:
          allOf:
            - $ref: "#/components/schemas/Location"
            - description: "<p>The site location:</p> <ul> <li> <p> <code>Address</code>: The physical address of the site.</p> </li> <li> <p> <code>Latitude</code>: The latitude of the site. </p> </li> <li> <p> <code>Longitude</code>: The longitude of the site.</p> </li> </ul>"
    UpdateVpcAttachmentRequest:
      type: object
      title: UpdateVpcAttachmentRequest
      properties:
        AddSubnetArns:
          allOf:
            - $ref: "#/components/schemas/SubnetArnList"
            - description: Adds a subnet ARN to the VPC attachment.
        RemoveSubnetArns:
          allOf:
            - $ref: "#/components/schemas/SubnetArnList"
            - description: Removes a subnet ARN from the attachment.
        Options:
          allOf:
            - $ref: "#/components/schemas/VpcOptions"
            - description: "Additional options for updating the VPC attachment. "
security:
  - hmac: []
