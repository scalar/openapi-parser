openapi: 3.0.0
info:
  version: 2020-11-22
  x-release: v4
  title: AWS IoT Wireless
  description: <p>AWS IoT Wireless provides bi-directional communication between internet-connected wireless devices and the AWS Cloud. To onboard both LoRaWAN and Sidewalk devices to AWS IoT, use the IoT Wireless API. These wireless devices use the Low Power Wide Area Networking (LPWAN) communication protocol to communicate with AWS IoT.</p> <p>Using the API, you can perform create, read, update, and delete operations for your wireless devices, gateways, destinations, and profiles. After onboarding your devices, you can use the API operations to set log levels and monitor your devices with CloudWatch.</p> <p>You can also use the API operations to create multicast groups and schedule a multicast session for sending a downlink message to devices in the group. By using Firmware Updates Over-The-Air (FUOTA) API operations, you can create a FUOTA task and schedule a session to update the firmware of individual devices or an entire group of devices in a multicast group.</p>
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: iotwireless
  x-aws-signingName: iotwireless
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/iotwireless-2020-11-22.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/iotwireless/
servers:
  - url: http://api.iotwireless.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT Wireless multi-region endpoint
  - url: https://api.iotwireless.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The AWS IoT Wireless multi-region endpoint
  - url: http://api.iotwireless.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Wireless endpoint for China (Beijing) and China (Ningxia)
  - url: https://api.iotwireless.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The AWS IoT Wireless endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /partner-accounts:
    post:
      operationId: AssociateAwsAccountWithPartnerAccount
      description: Associates a partner account with your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateAwsAccountWithPartnerAccountResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Sidewalk
              properties:
                Sidewalk:
                  description: Information about a Sidewalk account.
                  type: object
                  properties:
                    AmazonId:
                      allOf:
                        - $ref: "#/components/schemas/AmazonId"
                        - description: The Sidewalk Amazon ID.
                    AppServerPrivateKey:
                      allOf:
                        - $ref: "#/components/schemas/AppServerPrivateKey"
                        - description: The Sidewalk application server private key.
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListPartnerAccounts
      description: Lists the partner accounts associated with your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPartnerAccountsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
  "/fuota-tasks/{Id}/multicast-group":
    put:
      operationId: AssociateMulticastGroupWithFuotaTask
      description: Associate a multicast group with a FUOTA task.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateMulticastGroupWithFuotaTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of a FUOTA task.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - MulticastGroupId
              properties:
                MulticastGroupId:
                  description: The ID of the multicast group.
                  type: string
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/fuota-tasks/{Id}/wireless-device":
    put:
      operationId: AssociateWirelessDeviceWithFuotaTask
      description: Associate a wireless device with a FUOTA task.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateWirelessDeviceWithFuotaTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of a FUOTA task.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - WirelessDeviceId
              properties:
                WirelessDeviceId:
                  description: The ID of the wireless device.
                  type: string
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/multicast-groups/{Id}/wireless-device":
    put:
      operationId: AssociateWirelessDeviceWithMulticastGroup
      description: Associates a wireless device with a multicast group.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateWirelessDeviceWithMulticastGroupResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - WirelessDeviceId
              properties:
                WirelessDeviceId:
                  description: The ID of the wireless device.
                  type: string
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/wireless-devices/{Id}/thing":
    put:
      operationId: AssociateWirelessDeviceWithThing
      description: Associates a wireless device with a thing.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateWirelessDeviceWithThingResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            description: The ID of the wireless device.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ThingArn
              properties:
                ThingArn:
                  description: The ARN of the thing to associate with the wireless device.
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DisassociateWirelessDeviceFromThing
      description: Disassociates a wireless device from its currently associated thing.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateWirelessDeviceFromThingResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            description: The ID of the wireless device.
            maxLength: 256
  "/wireless-gateways/{Id}/certificate":
    put:
      operationId: AssociateWirelessGatewayWithCertificate
      description: Associates a wireless gateway with a certificate.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateWirelessGatewayWithCertificateResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - IotCertificateId
              properties:
                IotCertificateId:
                  description: The ID of the certificate to associate with the wireless gateway.
                  type: string
                  minLength: 1
                  maxLength: 4096
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DisassociateWirelessGatewayFromCertificate
      description: Disassociates a wireless gateway from its currently associated certificate.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateWirelessGatewayFromCertificateResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
    get:
      operationId: GetWirelessGatewayCertificate
      description: Gets the ID of the certificate that is currently associated with a wireless gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWirelessGatewayCertificateResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            maxLength: 256
  "/wireless-gateways/{Id}/thing":
    put:
      operationId: AssociateWirelessGatewayWithThing
      description: Associates a wireless gateway with a thing.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssociateWirelessGatewayWithThingResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ThingArn
              properties:
                ThingArn:
                  description: The ARN of the thing to associate with the wireless gateway.
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DisassociateWirelessGatewayFromThing
      description: Disassociates a wireless gateway from its currently associated thing.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateWirelessGatewayFromThingResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
  "/multicast-groups/{Id}/session":
    delete:
      operationId: CancelMulticastGroupSession
      description: Cancels an existing multicast group session.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CancelMulticastGroupSessionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetMulticastGroupSession
      description: Gets information about a multicast group session.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMulticastGroupSessionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
    put:
      operationId: StartMulticastGroupSession
      description: Starts a multicast group session.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartMulticastGroupSessionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LoRaWAN
              properties:
                LoRaWAN:
                  description: The LoRaWAN information used with the multicast session.
                  type: object
                  properties:
                    DlDr:
                      $ref: "#/components/schemas/DlDr"
                    DlFreq:
                      $ref: "#/components/schemas/DlFreq"
                    SessionStartTime:
                      $ref: "#/components/schemas/SessionStartTimeTimestamp"
                    SessionTimeout:
                      $ref: "#/components/schemas/SessionTimeout"
                    PingSlotPeriod:
                      allOf:
                        - $ref: "#/components/schemas/PingSlotPeriod"
                        - description: The PingSlotPeriod value.
  /destinations:
    post:
      operationId: CreateDestination
      description: Creates a new destination that maps a device message to an AWS IoT rule.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDestinationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
                - ExpressionType
                - Expression
                - RoleArn
              properties:
                Name:
                  description: The name of the new resource.
                  type: string
                  pattern: "[a-zA-Z0-9-_]+"
                  maxLength: 128
                ExpressionType:
                  description: The type of value in <code>Expression</code>.
                  type: string
                  enum:
                    - RuleName
                    - MqttTopic
                Expression:
                  description: The rule name or topic rule to send messages to.
                  type: string
                  maxLength: 2048
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                RoleArn:
                  description: The ARN of the IAM Role that authorizes the destination.
                  type: string
                  minLength: 20
                  maxLength: 2048
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListDestinations
      description: Lists the destinations registered to your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDestinationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /device-profiles:
    post:
      operationId: CreateDeviceProfile
      description: Creates a new device profile.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateDeviceProfileResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the new resource.
                  type: string
                  maxLength: 256
                LoRaWAN:
                  description: LoRaWANDeviceProfile object.
                  type: object
                  properties:
                    SupportsClassB:
                      allOf:
                        - $ref: "#/components/schemas/SupportsClassB"
                        - description: The SupportsClassB value.
                    ClassBTimeout:
                      allOf:
                        - $ref: "#/components/schemas/ClassBTimeout"
                        - description: The ClassBTimeout value.
                    PingSlotPeriod:
                      allOf:
                        - $ref: "#/components/schemas/PingSlotPeriod"
                        - description: The PingSlotPeriod value.
                    PingSlotDr:
                      allOf:
                        - $ref: "#/components/schemas/PingSlotDr"
                        - description: The PingSlotDR value.
                    PingSlotFreq:
                      allOf:
                        - $ref: "#/components/schemas/PingSlotFreq"
                        - description: The PingSlotFreq value.
                    SupportsClassC:
                      allOf:
                        - $ref: "#/components/schemas/SupportsClassC"
                        - description: The SupportsClassC value.
                    ClassCTimeout:
                      allOf:
                        - $ref: "#/components/schemas/ClassCTimeout"
                        - description: The ClassCTimeout value.
                    MacVersion:
                      allOf:
                        - $ref: "#/components/schemas/MacVersion"
                        - description: The MAC version (such as OTAA 1.1 or OTAA 1.0.3) to use with this device profile.
                    RegParamsRevision:
                      allOf:
                        - $ref: "#/components/schemas/RegParamsRevision"
                        - description: The version of regional parameters.
                    RxDelay1:
                      allOf:
                        - $ref: "#/components/schemas/RxDelay1"
                        - description: The RXDelay1 value.
                    RxDrOffset1:
                      allOf:
                        - $ref: "#/components/schemas/RxDrOffset1"
                        - description: The RXDROffset1 value.
                    RxDataRate2:
                      allOf:
                        - $ref: "#/components/schemas/RxDataRate2"
                        - description: The RXDataRate2 value.
                    RxFreq2:
                      allOf:
                        - $ref: "#/components/schemas/RxFreq2"
                        - description: The RXFreq2 value.
                    FactoryPresetFreqsList:
                      allOf:
                        - $ref: "#/components/schemas/FactoryPresetFreqsList"
                        - description: The list of values that make up the FactoryPresetFreqs value.
                    MaxEirp:
                      allOf:
                        - $ref: "#/components/schemas/MaxEirp"
                        - description: The MaxEIRP value.
                    MaxDutyCycle:
                      allOf:
                        - $ref: "#/components/schemas/MaxDutyCycle"
                        - description: The MaxDutyCycle value.
                    RfRegion:
                      allOf:
                        - $ref: "#/components/schemas/RfRegion"
                        - description: The frequency band (RFRegion) value.
                    SupportsJoin:
                      allOf:
                        - $ref: "#/components/schemas/SupportsJoin"
                        - description: The SupportsJoin value.
                    Supports32BitFCnt:
                      allOf:
                        - $ref: "#/components/schemas/Supports32BitFCnt"
                        - description: The Supports32BitFCnt value.
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
                Sidewalk:
                  description: Sidewalk object for creating a device profile.
                  type: object
                  properties: {}
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListDeviceProfiles
      description: Lists the device profiles registered to your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeviceProfilesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: deviceProfileType
          in: query
          required: false
          description: A filter to list only device profiles that use this type, which can be <code>LoRaWAN</code> or <code>Sidewalk</code>.
          schema:
            type: string
            enum:
              - Sidewalk
              - LoRaWAN
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /fuota-tasks:
    post:
      operationId: CreateFuotaTask
      description: Creates a FUOTA task.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateFuotaTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - FirmwareUpdateImage
                - FirmwareUpdateRole
              properties:
                Name:
                  description: The name of a FUOTA task.
                  type: string
                  maxLength: 256
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
                LoRaWAN:
                  description: The LoRaWAN information used with a FUOTA task.
                  type: object
                  properties:
                    RfRegion:
                      $ref: "#/components/schemas/SupportedRfRegion"
                FirmwareUpdateImage:
                  description: The S3 URI points to a firmware update image that is to be used with a FUOTA task.
                  type: string
                  minLength: 1
                  maxLength: 4096
                FirmwareUpdateRole:
                  description: The firmware update role that is to be used with a FUOTA task.
                  type: string
                  minLength: 1
                  maxLength: 2048
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
                RedundancyPercent:
                  description: The percentage of added redundant fragments. For example, if firmware file is 100 bytes and fragment size is 10 bytes, with <code>RedundancyPercent</code> set to 50(%), the final number of encoded fragments is (100 / 10) + (100 / 10 * 50%) = 15.
                  type: integer
                  minimum: 0
                  maximum: 100
                FragmentSizeBytes:
                  description: The size of each fragment in bytes. Currently only supported in fuota tasks with multicast groups.
                  type: integer
                  minimum: 1
                FragmentIntervalMS:
                  description: The interval of sending fragments in milliseconds. Currently the interval will be rounded to the nearest second. Note that this interval only controls the timing when the cloud sends the fragments down. The actual delay of receiving fragments at device side depends on the device's class and the communication delay with the cloud.
                  type: integer
                  minimum: 1
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListFuotaTasks
      description: Lists the FUOTA tasks registered to your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFuotaTasksResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /multicast-groups:
    post:
      operationId: CreateMulticastGroup
      description: Creates a multicast group.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateMulticastGroupResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LoRaWAN
              properties:
                Name:
                  description: The name of the multicast group.
                  type: string
                  maxLength: 256
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
                LoRaWAN:
                  description: The LoRaWAN information that is to be used with the multicast group.
                  type: object
                  properties:
                    RfRegion:
                      $ref: "#/components/schemas/SupportedRfRegion"
                    DlClass:
                      $ref: "#/components/schemas/DlClass"
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListMulticastGroups
      description: Lists the multicast groups registered to your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMulticastGroupsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /network-analyzer-configurations:
    post:
      operationId: CreateNetworkAnalyzerConfiguration
      description: Creates a new network analyzer configuration.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateNetworkAnalyzerConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                Name:
                  description: Name of the network analyzer configuration.
                  type: string
                  pattern: "[a-zA-Z0-9-_]+"
                  minLength: 1
                  maxLength: 1024
                TraceContent:
                  description: Trace content for your wireless gateway and wireless device resources.
                  type: object
                  properties:
                    WirelessDeviceFrameInfo:
                      $ref: "#/components/schemas/WirelessDeviceFrameInfo"
                    LogLevel:
                      $ref: "#/components/schemas/LogLevel"
                WirelessDevices:
                  description: Wireless device resources to add to the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resource to add in the input array.
                  type: array
                  items:
                    $ref: "#/components/schemas/WirelessDeviceId"
                  minItems: 0
                  maxItems: 250
                WirelessGateways:
                  description: Wireless gateway resources to add to the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resource to add in the input array.
                  type: array
                  items:
                    $ref: "#/components/schemas/WirelessGatewayId"
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListNetworkAnalyzerConfigurations
      description: Lists the network analyzer configurations.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNetworkAnalyzerConfigurationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /service-profiles:
    post:
      operationId: CreateServiceProfile
      description: Creates a new service profile.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateServiceProfileResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the new resource.
                  type: string
                  maxLength: 256
                LoRaWAN:
                  description: LoRaWANServiceProfile object.
                  type: object
                  properties:
                    AddGwMetadata:
                      allOf:
                        - $ref: "#/components/schemas/AddGwMetadata"
                        - description: The AddGWMetaData value.
                    DrMin:
                      allOf:
                        - $ref: "#/components/schemas/DrMinBox"
                        - description: The DrMin value.
                    DrMax:
                      allOf:
                        - $ref: "#/components/schemas/DrMaxBox"
                        - description: The DrMax value.
                    PrAllowed:
                      allOf:
                        - $ref: "#/components/schemas/PrAllowed"
                        - description: The PRAllowed value that describes whether passive roaming is allowed.
                    RaAllowed:
                      allOf:
                        - $ref: "#/components/schemas/RaAllowed"
                        - description: The RAAllowed value that describes whether roaming activation is allowed.
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListServiceProfiles
      description: Lists the service profiles registered to your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListServiceProfilesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /wireless-devices:
    post:
      operationId: CreateWirelessDevice
      description: Provisions a wireless device.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWirelessDeviceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Type
                - DestinationName
              properties:
                Type:
                  description: The wireless device type.
                  type: string
                  enum:
                    - Sidewalk
                    - LoRaWAN
                Name:
                  description: The name of the new resource.
                  type: string
                  maxLength: 256
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                DestinationName:
                  description: The name of the destination to assign to the new wireless device.
                  type: string
                  pattern: "[a-zA-Z0-9-_]+"
                  maxLength: 128
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
                LoRaWAN:
                  description: LoRaWAN object for create functions.
                  type: object
                  properties:
                    DevEui:
                      allOf:
                        - $ref: "#/components/schemas/DevEui"
                        - description: The DevEUI value.
                    DeviceProfileId:
                      allOf:
                        - $ref: "#/components/schemas/DeviceProfileId"
                        - description: The ID of the device profile for the new wireless device.
                    ServiceProfileId:
                      allOf:
                        - $ref: "#/components/schemas/ServiceProfileId"
                        - description: The ID of the service profile.
                    OtaaV1_1:
                      allOf:
                        - $ref: "#/components/schemas/OtaaV1_1"
                        - description: OTAA device object for v1.1 for create APIs
                    OtaaV1_0_x:
                      allOf:
                        - $ref: "#/components/schemas/OtaaV1_0_x"
                        - description: OTAA device object for create APIs for v1.0.x
                    AbpV1_1:
                      allOf:
                        - $ref: "#/components/schemas/AbpV1_1"
                        - description: ABP device object for create APIs for v1.1
                    AbpV1_0_x:
                      allOf:
                        - $ref: "#/components/schemas/AbpV1_0_x"
                        - description: LoRaWAN object for create APIs
                    FPorts:
                      $ref: "#/components/schemas/FPorts"
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
                Positioning:
                  description: FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
                  type: string
                  enum:
                    - Enabled
                    - Disabled
                Sidewalk:
                  description: Sidewalk object for creating a wireless device.
                  type: object
                  properties:
                    DeviceProfileId:
                      allOf:
                        - $ref: "#/components/schemas/DeviceProfileId"
                        - description: The ID of the Sidewalk device profile.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListWirelessDevices
      description: Lists the wireless devices registered to your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWirelessDevicesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: destinationName
          in: query
          required: false
          description: A filter to list only the wireless devices that use this destination.
          schema:
            type: string
            pattern: "[a-zA-Z0-9-_]+"
            maxLength: 128
        - name: deviceProfileId
          in: query
          required: false
          description: A filter to list only the wireless devices that use this device profile.
          schema:
            type: string
            maxLength: 256
        - name: serviceProfileId
          in: query
          required: false
          description: A filter to list only the wireless devices that use this service profile.
          schema:
            type: string
            maxLength: 256
        - name: wirelessDeviceType
          in: query
          required: false
          description: A filter to list only the wireless devices that use this wireless device type.
          schema:
            type: string
            enum:
              - Sidewalk
              - LoRaWAN
        - name: fuotaTaskId
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: The ID of a FUOTA task.
            maxLength: 256
        - name: multicastGroupId
          in: query
          required: false
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  /wireless-gateways:
    post:
      operationId: CreateWirelessGateway
      description: Provisions a wireless gateway.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWirelessGatewayResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LoRaWAN
              properties:
                Name:
                  description: The name of the new resource.
                  type: string
                  maxLength: 256
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                LoRaWAN:
                  description: LoRaWANGateway object.
                  type: object
                  properties:
                    GatewayEui:
                      allOf:
                        - $ref: "#/components/schemas/GatewayEui"
                        - description: The gateway's EUI value.
                    RfRegion:
                      allOf:
                        - $ref: "#/components/schemas/RfRegion"
                        - description: The frequency band (RFRegion) value.
                    JoinEuiFilters:
                      $ref: "#/components/schemas/JoinEuiFilters"
                    NetIdFilters:
                      $ref: "#/components/schemas/NetIdFilters"
                    SubBands:
                      $ref: "#/components/schemas/SubBands"
                    Beaconing:
                      allOf:
                        - $ref: "#/components/schemas/Beaconing"
                        - description: Beaconing object information, which consists of the data rate and frequency parameters.
                    MaxEirp:
                      allOf:
                        - $ref: "#/components/schemas/GatewayMaxEirp"
                        - description: The MaxEIRP value.
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListWirelessGateways
      description: Lists the wireless gateways registered to your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWirelessGatewaysResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
  "/wireless-gateways/{Id}/tasks":
    post:
      operationId: CreateWirelessGatewayTask
      description: Creates a task for a wireless gateway.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWirelessGatewayTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - WirelessGatewayTaskDefinitionId
              properties:
                WirelessGatewayTaskDefinitionId:
                  description: The ID of the WirelessGatewayTaskDefinition.
                  type: string
                  pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
                  maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteWirelessGatewayTask
      description: Deletes a wireless gateway task.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWirelessGatewayTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            maxLength: 256
    get:
      operationId: GetWirelessGatewayTask
      description: Gets information about a wireless gateway task.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWirelessGatewayTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            maxLength: 256
  /wireless-gateway-task-definitions:
    post:
      operationId: CreateWirelessGatewayTaskDefinition
      description: Creates a gateway task definition.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateWirelessGatewayTaskDefinitionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - AutoCreateTasks
              properties:
                AutoCreateTasks:
                  description: Whether to automatically create tasks using this task definition for all gateways with the specified current version. If <code>false</code>, the task must me created by calling <code>CreateWirelessGatewayTask</code>.
                  type: boolean
                Name:
                  description: The name of the new resource.
                  type: string
                  minLength: 1
                  maxLength: 2048
                Update:
                  description: UpdateWirelessGatewayTaskCreate object.
                  type: object
                  properties:
                    UpdateDataSource:
                      allOf:
                        - $ref: "#/components/schemas/UpdateDataSource"
                        - description: The link to the S3 bucket.
                    UpdateDataRole:
                      allOf:
                        - $ref: "#/components/schemas/UpdateDataSource"
                        - description: The IAM role used to read data from the S3 bucket.
                    LoRaWAN:
                      allOf:
                        - $ref: "#/components/schemas/LoRaWANUpdateGatewayTaskCreate"
                        - description: The properties that relate to the LoRaWAN wireless gateway.
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: ListWirelessGatewayTaskDefinitions
      description: List the wireless gateway tasks definitions registered to your AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWirelessGatewayTaskDefinitionsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: taskDefinitionType
          in: query
          required: false
          description: A filter to list only the wireless gateway task definitions that use this task definition type.
          schema:
            type: string
            enum:
              - UPDATE
  "/destinations/{Name}":
    delete:
      operationId: DeleteDestination
      description: Deletes a destination.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDestinationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the resource to delete.
          schema:
            type: string
            pattern: "[a-zA-Z0-9-_]+"
            maxLength: 128
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetDestination
      description: Gets information about a destination.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDestinationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the resource to get.
          schema:
            type: string
            pattern: "[a-zA-Z0-9-_]+"
            maxLength: 128
    patch:
      operationId: UpdateDestination
      description: Updates properties of a destination.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDestinationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Name
          in: path
          required: true
          description: The new name of the resource.
          schema:
            type: string
            pattern: "[a-zA-Z0-9-_]+"
            maxLength: 128
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExpressionType:
                  description: The type of value in <code>Expression</code>.
                  type: string
                  enum:
                    - RuleName
                    - MqttTopic
                Expression:
                  description: The new rule name or topic rule to send messages to.
                  type: string
                  maxLength: 2048
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                RoleArn:
                  description: The ARN of the IAM Role that authorizes the destination.
                  type: string
                  minLength: 20
                  maxLength: 2048
  "/device-profiles/{Id}":
    delete:
      operationId: DeleteDeviceProfile
      description: Deletes a device profile.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDeviceProfileResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetDeviceProfile
      description: Gets information about a device profile.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDeviceProfileResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            maxLength: 256
  "/fuota-tasks/{Id}":
    delete:
      operationId: DeleteFuotaTask
      description: Deletes a FUOTA task.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteFuotaTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of a FUOTA task.
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetFuotaTask
      description: Gets information about a FUOTA task.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetFuotaTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of a FUOTA task.
            maxLength: 256
    put:
      operationId: StartFuotaTask
      description: Starts a FUOTA task.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartFuotaTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of a FUOTA task.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LoRaWAN:
                  description: The LoRaWAN information used to start a FUOTA task.
                  type: object
                  properties:
                    StartTime:
                      $ref: "#/components/schemas/StartTime"
    patch:
      operationId: UpdateFuotaTask
      description: Updates properties of a FUOTA task.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateFuotaTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of a FUOTA task.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of a FUOTA task.
                  type: string
                  maxLength: 256
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                LoRaWAN:
                  description: The LoRaWAN information used with a FUOTA task.
                  type: object
                  properties:
                    RfRegion:
                      $ref: "#/components/schemas/SupportedRfRegion"
                FirmwareUpdateImage:
                  description: The S3 URI points to a firmware update image that is to be used with a FUOTA task.
                  type: string
                  minLength: 1
                  maxLength: 4096
                FirmwareUpdateRole:
                  description: The firmware update role that is to be used with a FUOTA task.
                  type: string
                  minLength: 1
                  maxLength: 2048
                RedundancyPercent:
                  description: The percentage of added redundant fragments. For example, if firmware file is 100 bytes and fragment size is 10 bytes, with <code>RedundancyPercent</code> set to 50(%), the final number of encoded fragments is (100 / 10) + (100 / 10 * 50%) = 15.
                  type: integer
                  minimum: 0
                  maximum: 100
                FragmentSizeBytes:
                  description: The size of each fragment in bytes. Currently only supported in fuota tasks with multicast groups.
                  type: integer
                  minimum: 1
                FragmentIntervalMS:
                  description: The interval of sending fragments in milliseconds. Currently the interval will be rounded to the nearest second. Note that this interval only controls the timing when the cloud sends the fragments down. The actual delay of receiving fragments at device side depends on the device's class and the communication delay with the cloud.
                  type: integer
                  minimum: 1
  "/multicast-groups/{Id}":
    delete:
      operationId: DeleteMulticastGroup
      description: Deletes a multicast group if it is not in use by a fuota task.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteMulticastGroupResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetMulticastGroup
      description: Gets information about a multicast group.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetMulticastGroupResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
    patch:
      operationId: UpdateMulticastGroup
      description: Updates properties of a multicast group session.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateMulticastGroupResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The name of the multicast group.
                  type: string
                  maxLength: 256
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                LoRaWAN:
                  description: The LoRaWAN information that is to be used with the multicast group.
                  type: object
                  properties:
                    RfRegion:
                      $ref: "#/components/schemas/SupportedRfRegion"
                    DlClass:
                      $ref: "#/components/schemas/DlClass"
  "/network-analyzer-configurations/{ConfigurationName}":
    delete:
      operationId: DeleteNetworkAnalyzerConfiguration
      description: Deletes a network analyzer configuration.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteNetworkAnalyzerConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: ConfigurationName
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[a-zA-Z0-9-_]+"
            description: Name of the network analyzer configuration.
            minLength: 1
            maxLength: 1024
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetNetworkAnalyzerConfiguration
      description: Get network analyzer configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetNetworkAnalyzerConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: ConfigurationName
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[a-zA-Z0-9-_]+"
            description: Name of the network analyzer configuration.
            minLength: 1
            maxLength: 1024
    patch:
      operationId: UpdateNetworkAnalyzerConfiguration
      description: Update network analyzer configuration.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNetworkAnalyzerConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: ConfigurationName
          in: path
          required: true
          description: ""
          schema:
            type: string
            pattern: "[a-zA-Z0-9-_]+"
            description: Name of the network analyzer configuration.
            minLength: 1
            maxLength: 1024
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TraceContent:
                  description: Trace content for your wireless gateway and wireless device resources.
                  type: object
                  properties:
                    WirelessDeviceFrameInfo:
                      $ref: "#/components/schemas/WirelessDeviceFrameInfo"
                    LogLevel:
                      $ref: "#/components/schemas/LogLevel"
                WirelessDevicesToAdd:
                  description: Wireless device resources to add to the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resource to add in the input array.
                  type: array
                  items:
                    $ref: "#/components/schemas/WirelessDeviceId"
                  minItems: 0
                  maxItems: 250
                WirelessDevicesToRemove:
                  description: Wireless device resources to remove from the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resources to remove in the input array.
                  type: array
                  items:
                    $ref: "#/components/schemas/WirelessDeviceId"
                  minItems: 0
                  maxItems: 250
                WirelessGatewaysToAdd:
                  description: Wireless gateway resources to add to the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resource to add in the input array.
                  type: array
                  items:
                    $ref: "#/components/schemas/WirelessGatewayId"
                WirelessGatewaysToRemove:
                  description: Wireless gateway resources to remove from the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resources to remove in the input array.
                  type: array
                  items:
                    $ref: "#/components/schemas/WirelessGatewayId"
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
  "/wireless-devices/{Id}/data#messageId":
    delete:
      operationId: DeleteQueuedMessages
      description: Remove queued messages from the downlink queue.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteQueuedMessagesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of a given wireless device for which downlink messages will be deleted.
          schema:
            type: string
            description: The ID of the wireless device.
            maxLength: 256
        - name: messageId
          in: query
          required: true
          description: If message ID is <code>"*"</code>, it cleares the entire downlink queue for a given device, specified by the wireless device ID. Otherwise, the downlink message with the specified message ID will be deleted.
          schema:
            type: string
        - name: WirelessDeviceType
          in: query
          required: false
          description: The wireless device type, which can be either Sidewalk or LoRaWAN.
          schema:
            type: string
            enum:
              - Sidewalk
              - LoRaWAN
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/service-profiles/{Id}":
    delete:
      operationId: DeleteServiceProfile
      description: Deletes a service profile.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteServiceProfileResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetServiceProfile
      description: Gets information about a service profile.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceProfileResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            maxLength: 256
  "/wireless-devices/{Id}":
    delete:
      operationId: DeleteWirelessDevice
      description: Deletes a wireless device.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWirelessDeviceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            description: The ID of the wireless device.
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateWirelessDevice
      description: Updates properties of a wireless device.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateWirelessDeviceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            description: The ID of the wireless device.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DestinationName:
                  description: The name of the new destination for the device.
                  type: string
                  pattern: "[a-zA-Z0-9-_]+"
                  maxLength: 128
                Name:
                  description: The new name of the resource.
                  type: string
                  maxLength: 256
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                LoRaWAN:
                  description: LoRaWAN object for update functions.
                  type: object
                  properties:
                    DeviceProfileId:
                      allOf:
                        - $ref: "#/components/schemas/DeviceProfileId"
                        - description: The ID of the device profile for the wireless device.
                    ServiceProfileId:
                      allOf:
                        - $ref: "#/components/schemas/ServiceProfileId"
                        - description: The ID of the service profile.
                    AbpV1_1:
                      allOf:
                        - $ref: "#/components/schemas/UpdateAbpV1_1"
                        - description: ABP device object for update APIs for v1.1
                    AbpV1_0_x:
                      allOf:
                        - $ref: "#/components/schemas/UpdateAbpV1_0_x"
                        - description: ABP device object for update APIs for v1.0.x
                    FPorts:
                      allOf:
                        - $ref: "#/components/schemas/UpdateFPorts"
                        - description: FPorts object for the positioning information of the device.
                Positioning:
                  description: FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
                  type: string
                  enum:
                    - Enabled
                    - Disabled
  "/wireless_device_import_task/{Id}":
    delete:
      operationId: DeleteWirelessDeviceImportTask
      description: Delete an import task.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWirelessDeviceImportTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The unique identifier of the import task to be deleted.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetWirelessDeviceImportTask
      description: Get information about an import task and count of device onboarding summary information for the import task.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWirelessDeviceImportTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the import task for which information is requested.
          schema:
            type: string
            maxLength: 256
    patch:
      operationId: UpdateWirelessDeviceImportTask
      description: Update an import task to add more devices to the task.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateWirelessDeviceImportTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The identifier of the import task to be updated.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Sidewalk
              properties:
                Sidewalk:
                  description: Sidewalk object information for updating an import task.
                  type: object
                  properties:
                    DeviceCreationFile:
                      allOf:
                        - $ref: "#/components/schemas/DeviceCreationFile"
                        - description: The CSV file contained in an S3 bucket that's used for appending devices to an existing import task.
  "/wireless-gateways/{Id}":
    delete:
      operationId: DeleteWirelessGateway
      description: Deletes a wireless gateway.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWirelessGatewayResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateWirelessGateway
      description: Updates properties of a wireless gateway.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateWirelessGatewayResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to update.
          schema:
            type: string
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  description: The new name of the resource.
                  type: string
                  maxLength: 256
                Description:
                  description: The description of the new resource.
                  type: string
                  maxLength: 2048
                JoinEuiFilters:
                  description: A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.
                  type: array
                  items:
                    $ref: "#/components/schemas/JoinEuiRange"
                  minItems: 0
                  maxItems: 3
                NetIdFilters:
                  description: A list of NetId values that are used by LoRa gateways to filter the uplink frames.
                  type: array
                  items:
                    $ref: "#/components/schemas/NetId"
                  minItems: 0
                  maxItems: 10
                MaxEirp:
                  description: The MaxEIRP value.
                  type: number
                  format: float
                  minimum: 0
                  maximum: 30
  "/wireless-gateway-task-definitions/{Id}":
    delete:
      operationId: DeleteWirelessGatewayTaskDefinition
      description: Deletes a wireless gateway task definition. Deleting this task definition does not affect tasks that are currently in progress.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteWirelessGatewayTaskDefinitionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to delete.
          schema:
            type: string
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            maxLength: 36
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetWirelessGatewayTaskDefinition
      description: Gets information about a wireless gateway task definition.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWirelessGatewayTaskDefinitionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            maxLength: 36
  "/wireless-devices/{Identifier}/deregister":
    patch:
      operationId: DeregisterWirelessDevice
      description: Deregister a wireless device from AWS IoT Wireless.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeregisterWirelessDeviceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Identifier
          in: path
          required: true
          description: The identifier of the wireless device to deregister from AWS IoT Wireless.
          schema:
            type: string
            maxLength: 256
        - name: WirelessDeviceType
          in: query
          required: false
          description: The type of wireless device to deregister from AWS IoT Wireless, which can be <code>LoRaWAN</code> or <code>Sidewalk</code>.
          schema:
            type: string
            enum:
              - Sidewalk
              - LoRaWAN
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/partner-accounts/{PartnerAccountId}#partnerType":
    delete:
      operationId: DisassociateAwsAccountFromPartnerAccount
      description: Disassociates your AWS account from a partner account. If <code>PartnerAccountId</code> and <code>PartnerType</code> are <code>null</code>, disassociates your AWS account from all partner accounts.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateAwsAccountFromPartnerAccountResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: PartnerAccountId
          in: path
          required: true
          description: The partner account ID to disassociate from the AWS account.
          schema:
            type: string
            maxLength: 256
        - name: partnerType
          in: query
          required: true
          description: The partner type.
          schema:
            type: string
            enum:
              - Sidewalk
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetPartnerAccount
      description: Gets information about a partner account. If <code>PartnerAccountId</code> and <code>PartnerType</code> are <code>null</code>, returns all partner accounts.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPartnerAccountResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: PartnerAccountId
          in: path
          required: true
          description: The partner account ID to disassociate from the AWS account.
          schema:
            type: string
            maxLength: 256
        - name: partnerType
          in: query
          required: true
          description: The partner type.
          schema:
            type: string
            enum:
              - Sidewalk
    patch:
      operationId: UpdatePartnerAccount
      description: Updates properties of a partner account.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePartnerAccountResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: PartnerAccountId
          in: path
          required: true
          description: The ID of the partner account to update.
          schema:
            type: string
            maxLength: 256
        - name: partnerType
          in: query
          required: true
          description: The partner type.
          schema:
            type: string
            enum:
              - Sidewalk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Sidewalk
              properties:
                Sidewalk:
                  description: Sidewalk update.
                  type: object
                  properties:
                    AppServerPrivateKey:
                      allOf:
                        - $ref: "#/components/schemas/AppServerPrivateKey"
                        - description: The new Sidewalk application server private key.
  "/fuota-tasks/{Id}/multicast-groups/{MulticastGroupId}":
    delete:
      operationId: DisassociateMulticastGroupFromFuotaTask
      description: Disassociates a multicast group from a fuota task.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateMulticastGroupFromFuotaTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of a FUOTA task.
            maxLength: 256
        - name: MulticastGroupId
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/fuota-tasks/{Id}/wireless-devices/{WirelessDeviceId}":
    delete:
      operationId: DisassociateWirelessDeviceFromFuotaTask
      description: Disassociates a wireless device from a FUOTA task.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateWirelessDeviceFromFuotaTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of a FUOTA task.
            maxLength: 256
        - name: WirelessDeviceId
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the wireless device.
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/multicast-groups/{Id}/wireless-devices/{WirelessDeviceId}":
    delete:
      operationId: DisassociateWirelessDeviceFromMulticastGroup
      description: Disassociates a wireless device from a multicast group.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DisassociateWirelessDeviceFromMulticastGroupResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
        - name: WirelessDeviceId
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the wireless device.
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /event-configurations-resource-types:
    get:
      operationId: GetEventConfigurationByResourceTypes
      description: Get the event configuration based on resource types.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEventConfigurationByResourceTypesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateEventConfigurationByResourceTypes
      description: Update the event configuration based on resource types.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateEventConfigurationByResourceTypesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceRegistrationState:
                  description: Device registration state resource type event configuration object for enabling or disabling topic.
                  type: object
                  properties:
                    Sidewalk:
                      allOf:
                        - $ref: "#/components/schemas/SidewalkResourceTypeEventConfiguration"
                        - description: Device registration resource type state event configuration object for enabling or disabling Sidewalk related event topics.
                Proximity:
                  description: Proximity resource type event configuration object for enabling or disabling topic.
                  type: object
                  properties:
                    Sidewalk:
                      allOf:
                        - $ref: "#/components/schemas/SidewalkResourceTypeEventConfiguration"
                        - description: Proximity resource type event configuration object for enabling and disabling wireless device topic.
                Join:
                  description: Join resource type event configuration object for enabling or disabling topic.
                  type: object
                  properties:
                    LoRaWAN:
                      allOf:
                        - $ref: "#/components/schemas/LoRaWANJoinResourceTypeEventConfiguration"
                        - description: Join resource type event configuration object for enabling or disabling LoRaWAN related event topics.
                ConnectionStatus:
                  description: Connection status resource type event configuration object for enabling or disabling topic.
                  type: object
                  properties:
                    LoRaWAN:
                      allOf:
                        - $ref: "#/components/schemas/LoRaWANConnectionStatusResourceTypeEventConfiguration"
                        - description: Connection status resource type event configuration object for enabling or disabling LoRaWAN related event topics.
                MessageDeliveryStatus:
                  description: Message delivery status resource type event configuration object for enabling or disabling relevant topic.
                  type: object
                  properties:
                    Sidewalk:
                      $ref: "#/components/schemas/SidewalkResourceTypeEventConfiguration"
  /log-levels:
    get:
      operationId: GetLogLevelsByResourceTypes
      description: Returns current default log levels or log levels by resource types. Based on resource types, log levels can be for wireless device log options or wireless gateway log options.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetLogLevelsByResourceTypesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters: []
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: ResetAllResourceLogLevels
      description: Removes the log-level overrides for all resources; both wireless devices and wireless gateways.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResetAllResourceLogLevelsResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters: []
    post:
      operationId: UpdateLogLevelsByResourceTypes
      description: Set default log level, or log levels by resource types. This can be for wireless device log options or wireless gateways log options and is used to control the log messages that'll be displayed in CloudWatch.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLogLevelsByResourceTypesResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DefaultLogLevel:
                  description: The log level for a log message. The log levels can be disabled, or set to <code>ERROR</code> to display less verbose logs containing only error information, or to <code>INFO</code> for more detailed logs.
                  type: string
                  enum:
                    - INFO
                    - ERROR
                    - DISABLED
                WirelessDeviceLogOptions:
                  description: The list of wireless device log options.
                  type: array
                  items:
                    $ref: "#/components/schemas/WirelessDeviceLogOption"
                WirelessGatewayLogOptions:
                  description: The list of wireless gateway log options.
                  type: array
                  items:
                    $ref: "#/components/schemas/WirelessGatewayLogOption"
  "/positions/{ResourceIdentifier}#resourceType":
    get:
      deprecated: true
      operationId: GetPosition
      description: <p>Get the position information for a given resource.</p> <important> <p>This action is no longer supported. Calls to retrieve the position information should use the <a href="https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourcePosition.html">GetResourcePosition</a> API operation instead.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPositionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: Resource identifier used to retrieve the position information.
          schema:
            type: string
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        - name: resourceType
          in: query
          required: true
          description: Resource type of the resource for which position information is retrieved.
          schema:
            type: string
            enum:
              - WirelessDevice
              - WirelessGateway
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      deprecated: true
      operationId: UpdatePosition
      description: <p>Update the position information of a resource.</p> <important> <p>This action is no longer supported. Calls to update the position information should use the <a href="https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateResourcePosition.html">UpdateResourcePosition</a> API operation instead.</p> </important>
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePositionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: Resource identifier of the resource for which position is updated.
          schema:
            type: string
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        - name: resourceType
          in: query
          required: true
          description: Resource type of the resource for which position is updated.
          schema:
            type: string
            enum:
              - WirelessDevice
              - WirelessGateway
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Position
              properties:
                Position:
                  description: The position information of the resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/PositionCoordinateValue"
  "/position-configurations/{ResourceIdentifier}#resourceType":
    get:
      deprecated: true
      operationId: GetPositionConfiguration
      description: <p>Get position configuration for a given resource.</p> <important> <p>This action is no longer supported. Calls to retrieve the position configuration should use the <a href="https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourcePosition.html">GetResourcePosition</a> API operation instead.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPositionConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: Resource identifier used in a position configuration.
          schema:
            type: string
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        - name: resourceType
          in: query
          required: true
          description: Resource type of the resource for which position configuration is retrieved.
          schema:
            type: string
            enum:
              - WirelessDevice
              - WirelessGateway
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      deprecated: true
      operationId: PutPositionConfiguration
      description: <p>Put position configuration for a given resource.</p> <important> <p>This action is no longer supported. Calls to update the position configuration should use the <a href="https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_UpdateResourcePosition.html">UpdateResourcePosition</a> API operation instead.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutPositionConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: Resource identifier used to update the position configuration.
          schema:
            type: string
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        - name: resourceType
          in: query
          required: true
          description: Resource type of the resource for which you want to update the position configuration.
          schema:
            type: string
            enum:
              - WirelessDevice
              - WirelessGateway
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Solvers:
                  description: The wrapper for position solver configurations.
                  type: object
                  properties:
                    SemtechGnss:
                      allOf:
                        - $ref: "#/components/schemas/SemtechGnssConfiguration"
                        - description: The Semtech GNSS solver configuration object.
                Destination:
                  description: The position data destination that describes the AWS IoT rule that processes the device's position data for use by AWS IoT Core for LoRaWAN.
                  type: string
                  pattern: "[a-zA-Z0-9-_]+"
                  maxLength: 128
  /position-estimate:
    post:
      operationId: GetPositionEstimate
      description: Get estimated position information as a payload in GeoJSON format. The payload measurement data is resolved using solvers that are provided by third-party vendors.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPositionEstimateResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WiFiAccessPoints:
                  description: Retrieves an estimated device position by resolving WLAN measurement data. The position is resolved using HERE's Wi-Fi based solver.
                  type: array
                  items:
                    $ref: "#/components/schemas/WiFiAccessPoint"
                CellTowers:
                  description: The cell towers that were used to perform the measurements.
                  type: object
                  properties:
                    Gsm:
                      allOf:
                        - $ref: "#/components/schemas/GsmList"
                        - description: GSM object information.
                    Wcdma:
                      allOf:
                        - $ref: "#/components/schemas/WcdmaList"
                        - description: WCDMA object information.
                    Tdscdma:
                      allOf:
                        - $ref: "#/components/schemas/TdscdmaList"
                        - description: TD-SCDMA object information.
                    Lte:
                      allOf:
                        - $ref: "#/components/schemas/LteList"
                        - description: LTE object information.
                    Cdma:
                      allOf:
                        - $ref: "#/components/schemas/CdmaList"
                        - description: CDMA object information.
                Ip:
                  description: IP address used for resolving device location.
                  type: object
                  properties:
                    IpAddress:
                      allOf:
                        - $ref: "#/components/schemas/IPAddress"
                        - description: IP address information.
                Gnss:
                  description: Global navigation satellite system (GNSS) object used for positioning.
                  type: object
                  properties:
                    Payload:
                      allOf:
                        - $ref: "#/components/schemas/GnssNav"
                        - description: Payload that contains the GNSS scan result, or NAV message, in hexadecimal notation.
                    CaptureTime:
                      allOf:
                        - $ref: "#/components/schemas/GPST"
                        - description: Optional parameter that gives an estimate of the time when the GNSS scan information is taken, in seconds GPS time (GPST). If capture time is not specified, the local server time is used.
                    CaptureTimeAccuracy:
                      allOf:
                        - $ref: "#/components/schemas/CaptureTimeAccuracy"
                        - description: Optional value that gives the capture time estimate accuracy, in seconds. If capture time accuracy is not specified, default value of 300 is used.
                    AssistPosition:
                      allOf:
                        - $ref: "#/components/schemas/AssistPosition"
                        - description: Optional assistance position information, specified using latitude and longitude values in degrees. The coordinates are inside the WGS84 reference frame.
                    AssistAltitude:
                      allOf:
                        - $ref: "#/components/schemas/Coordinate"
                        - description: Optional assistance altitude, which is the altitude of the device at capture time, specified in meters above the WGS84 reference ellipsoid.
                    Use2DSolver:
                      allOf:
                        - $ref: "#/components/schemas/Use2DSolver"
                        - description: Optional parameter that forces 2D solve, which modifies the positioning algorithm to a 2D solution problem. When this parameter is specified, the assistance altitude should have an accuracy of at least 10 meters.
                Timestamp:
                  description: Optional information that specifies the time when the position information will be resolved. It uses the Unix timestamp format. If not specified, the time at which the request was received will be used.
                  type: string
                  format: date-time
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/event-configurations/{Identifier}#identifierType":
    get:
      operationId: GetResourceEventConfiguration
      description: Get the event configuration for a particular resource identifier.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetResourceEventConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Identifier
          in: path
          required: true
          description: Resource identifier to opt in for event messaging.
          schema:
            type: string
            maxLength: 256
        - name: identifierType
          in: query
          required: true
          description: Identifier type of the particular resource identifier for event configuration.
          schema:
            type: string
            enum:
              - PartnerAccountId
              - DevEui
              - GatewayEui
              - WirelessDeviceId
              - WirelessGatewayId
        - name: partnerType
          in: query
          required: false
          description: Partner type of the resource if the identifier type is <code>PartnerAccountId</code>.
          schema:
            type: string
            enum:
              - Sidewalk
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateResourceEventConfiguration
      description: Update the event configuration for a particular resource identifier.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResourceEventConfigurationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "485":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Identifier
          in: path
          required: true
          description: Resource identifier to opt in for event messaging.
          schema:
            type: string
            maxLength: 256
        - name: identifierType
          in: query
          required: true
          description: Identifier type of the particular resource identifier for event configuration.
          schema:
            type: string
            enum:
              - PartnerAccountId
              - DevEui
              - GatewayEui
              - WirelessDeviceId
              - WirelessGatewayId
        - name: partnerType
          in: query
          required: false
          description: "Partner type of the resource if the identifier type is <code>PartnerAccountId</code> "
          schema:
            type: string
            enum:
              - Sidewalk
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceRegistrationState:
                  description: Device registration state event configuration object for enabling and disabling relevant topics.
                  type: object
                  properties:
                    Sidewalk:
                      allOf:
                        - $ref: "#/components/schemas/SidewalkEventNotificationConfigurations"
                        - description: Device registration state event configuration object for enabling or disabling Sidewalk related event topics.
                    WirelessDeviceIdEventTopic:
                      allOf:
                        - $ref: "#/components/schemas/EventNotificationTopicStatus"
                        - description: Denotes whether the wireless device ID device registration state event topic is enabled or disabled.
                Proximity:
                  description: Proximity event configuration object for enabling and disabling relevant topics.
                  type: object
                  properties:
                    Sidewalk:
                      allOf:
                        - $ref: "#/components/schemas/SidewalkEventNotificationConfigurations"
                        - description: Proximity event configuration object for enabling or disabling Sidewalk related event topics.
                    WirelessDeviceIdEventTopic:
                      allOf:
                        - $ref: "#/components/schemas/EventNotificationTopicStatus"
                        - description: Denotes whether the wireless device ID proximity event topic is enabled or disabled.
                Join:
                  description: Join event configuration object for enabling or disabling topic.
                  type: object
                  properties:
                    LoRaWAN:
                      allOf:
                        - $ref: "#/components/schemas/LoRaWANJoinEventNotificationConfigurations"
                        - description: Join event configuration object for enabling or disabling LoRaWAN related event topics.
                    WirelessDeviceIdEventTopic:
                      allOf:
                        - $ref: "#/components/schemas/EventNotificationTopicStatus"
                        - description: Denotes whether the wireless device ID join event topic is enabled or disabled.
                ConnectionStatus:
                  description: Connection status event configuration object for enabling or disabling topic.
                  type: object
                  properties:
                    LoRaWAN:
                      allOf:
                        - $ref: "#/components/schemas/LoRaWANConnectionStatusEventNotificationConfigurations"
                        - description: Connection status event configuration object for enabling or disabling LoRaWAN related event topics.
                    WirelessGatewayIdEventTopic:
                      allOf:
                        - $ref: "#/components/schemas/EventNotificationTopicStatus"
                        - description: Denotes whether the wireless gateway ID connection status event topic is enabled or disabled.
                MessageDeliveryStatus:
                  description: Message delivery status event configuration object for enabling and disabling relevant topics.
                  type: object
                  properties:
                    Sidewalk:
                      $ref: "#/components/schemas/SidewalkEventNotificationConfigurations"
                    WirelessDeviceIdEventTopic:
                      allOf:
                        - $ref: "#/components/schemas/EventNotificationTopicStatus"
                        - description: Denotes whether the wireless device ID message delivery status event topic is enabled or disabled.
  "/log-levels/{ResourceIdentifier}#resourceType":
    get:
      operationId: GetResourceLogLevel
      description: Fetches the log-level override, if any, for a given resource-ID and resource-type. It can be used for a wireless device or a wireless gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetResourceLogLevelResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.
            maxLength: 256
        - name: resourceType
          in: query
          required: true
          description: The type of the resource, which can be <code>WirelessDevice</code> or <code>WirelessGateway</code>.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    put:
      operationId: PutResourceLogLevel
      description: Sets the log-level override for a resource-ID and resource-type. This option can be specified for a wireless gateway or a wireless device. A limit of 200 log level override can be set per account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutResourceLogLevelResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.
            maxLength: 256
        - name: resourceType
          in: query
          required: true
          description: The type of the resource, which can be <code>WirelessDevice</code> or <code>WirelessGateway</code>.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - LogLevel
              properties:
                LogLevel:
                  description: The log level for a log message. The log levels can be disabled, or set to <code>ERROR</code> to display less verbose logs containing only error information, or to <code>INFO</code> for more detailed logs.
                  type: string
                  enum:
                    - INFO
                    - ERROR
                    - DISABLED
    delete:
      operationId: ResetResourceLogLevel
      description: Removes the log-level override, if any, for a specific resource-ID and resource-type. It can be used for a wireless device or a wireless gateway.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResetResourceLogLevelResponse"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.
            maxLength: 256
        - name: resourceType
          in: query
          required: true
          description: The type of the resource, which can be <code>WirelessDevice</code> or <code>WirelessGateway</code>.
          schema:
            type: string
  "/resource-positions/{ResourceIdentifier}#resourceType":
    get:
      operationId: GetResourcePosition
      description: Get the position information for a given wireless device or a wireless gateway resource. The position information uses the <a href="https://gisgeography.com/wgs84-world-geodetic-system/"> World Geodetic System (WGS84)</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetResourcePositionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: The identifier of the resource for which position information is retrieved. It can be the wireless device ID or the wireless gateway ID, depending on the resource type.
          schema:
            type: string
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        - name: resourceType
          in: query
          required: true
          description: The type of resource for which position information is retrieved, which can be a wireless device or a wireless gateway.
          schema:
            type: string
            enum:
              - WirelessDevice
              - WirelessGateway
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    patch:
      operationId: UpdateResourcePosition
      description: Update the position information of a given wireless device or a wireless gateway resource. The position coordinates are based on the <a href="https://gisgeography.com/wgs84-world-geodetic-system/"> World Geodetic System (WGS84)</a>.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateResourcePositionResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: ResourceIdentifier
          in: path
          required: true
          description: The identifier of the resource for which position information is updated. It can be the wireless device ID or the wireless gateway ID, depending on the resource type.
          schema:
            type: string
            pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        - name: resourceType
          in: query
          required: true
          description: The type of resource for which position information is updated, which can be a wireless device or a wireless gateway.
          schema:
            type: string
            enum:
              - WirelessDevice
              - WirelessGateway
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GeoJsonPayload:
                  description: The position information of the resource, displayed as a JSON payload. The payload uses the GeoJSON format, which a format that's used to encode geographic data structures. For more information, see <a href="https://geojson.org/">GeoJSON</a>.
                  type: string
  /service-endpoint:
    get:
      operationId: GetServiceEndpoint
      description: Gets the account-specific endpoint for Configuration and Update Server (CUPS) protocol or LoRaWAN Network Server (LNS) connections.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetServiceEndpointResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: serviceType
          in: query
          required: false
          description: The service type for which to get endpoint information about. Can be <code>CUPS</code> for the Configuration and Update Server endpoint, or <code>LNS</code> for the LoRaWAN Network Server endpoint or <code>CLAIM</code> for the global endpoint.
          schema:
            type: string
            enum:
              - CUPS
              - LNS
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/wireless-devices/{Identifier}#identifierType":
    get:
      operationId: GetWirelessDevice
      description: Gets information about a wireless device.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWirelessDeviceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Identifier
          in: path
          required: true
          description: The identifier of the wireless device to get.
          schema:
            type: string
            maxLength: 256
        - name: identifierType
          in: query
          required: true
          description: The type of identifier used in <code>identifier</code>.
          schema:
            type: string
            enum:
              - WirelessDeviceId
              - DevEui
              - ThingName
              - SidewalkManufacturingSn
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/wireless-devices/{Id}/statistics":
    get:
      operationId: GetWirelessDeviceStatistics
      description: Gets operating information about a wireless device.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWirelessDeviceStatisticsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the wireless device for which to get the data.
          schema:
            type: string
            description: The ID of the wireless device.
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/wireless-gateways/{Identifier}#identifierType":
    get:
      operationId: GetWirelessGateway
      description: Gets information about a wireless gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWirelessGatewayResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Identifier
          in: path
          required: true
          description: The identifier of the wireless gateway to get.
          schema:
            type: string
            maxLength: 256
        - name: identifierType
          in: query
          required: true
          description: The type of identifier used in <code>identifier</code>.
          schema:
            type: string
            enum:
              - GatewayEui
              - WirelessGatewayId
              - ThingName
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/wireless-gateways/{Id}/firmware-information":
    get:
      operationId: GetWirelessGatewayFirmwareInformation
      description: Gets the firmware version and other information about a wireless gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWirelessGatewayFirmwareInformationResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the resource to get.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/wireless-gateways/{Id}/statistics":
    get:
      operationId: GetWirelessGatewayStatistics
      description: Gets operating information about a wireless gateway.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetWirelessGatewayStatisticsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the wireless gateway for which to get the data.
          schema:
            type: string
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /wireless_device_import_task#id:
    get:
      operationId: ListDevicesForWirelessDeviceImportTask
      description: List the Sidewalk devices in an import task and their onboarding status.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDevicesForWirelessDeviceImportTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: id
          in: query
          required: true
          description: The identifier of the import task for which wireless devices are listed.
          schema:
            type: string
            maxLength: 256
        - name: maxResults
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <code>null</code> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: status
          in: query
          required: false
          description: The status of the devices in the import task.
          schema:
            type: string
            enum:
              - INITIALIZED
              - PENDING
              - ONBOARDED
              - FAILED
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /event-configurations#resourceType:
    get:
      operationId: ListEventConfigurations
      description: List event configurations where at least one event topic has been enabled.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEventConfigurationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: resourceType
          in: query
          required: true
          description: Resource type to filter event configurations.
          schema:
            type: string
            enum:
              - SidewalkAccount
              - WirelessDevice
              - WirelessGateway
        - name: maxResults
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/fuota-tasks/{Id}/multicast-groups":
    get:
      operationId: ListMulticastGroupsByFuotaTask
      description: List all multicast groups associated with a fuota task.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMulticastGroupsByFuotaTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of a FUOTA task.
            maxLength: 256
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /position-configurations:
    get:
      deprecated: true
      operationId: ListPositionConfigurations
      description: <p>List position configurations for a given resource, such as positioning solvers.</p> <important> <p>This action is no longer supported. Calls to retrieve position information should use the <a href="https://docs.aws.amazon.com/iot-wireless/2020-11-22/apireference/API_GetResourcePosition.html">GetResourcePosition</a> API operation instead.</p> </important>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPositionConfigurationsResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: resourceType
          in: query
          required: false
          description: Resource type for which position configurations are listed.
          schema:
            type: string
            enum:
              - WirelessDevice
              - WirelessGateway
        - name: maxResults
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/wireless-devices/{Id}/data":
    get:
      operationId: ListQueuedMessages
      description: List queued messages in the downlink queue.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListQueuedMessagesResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "483":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of a given wireless device which the downlink message packets are being sent.
          schema:
            type: string
            description: The ID of the wireless device.
            maxLength: 256
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
        - name: maxResults
          in: query
          required: false
          description: The maximum number of results to return in this operation.
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: WirelessDeviceType
          in: query
          required: false
          description: The wireless device type, whic can be either Sidewalk or LoRaWAN.
          schema:
            type: string
            enum:
              - Sidewalk
              - LoRaWAN
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: SendDataToWirelessDevice
      description: Sends a decrypted application data frame to a device.
      responses:
        "202":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendDataToWirelessDeviceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the wireless device to receive the data.
          schema:
            type: string
            description: The ID of the wireless device.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TransmitMode
                - PayloadData
              properties:
                TransmitMode:
                  description: "The transmit mode to use to send data to the wireless device. Can be: <code>0</code> for UM (unacknowledge mode) or <code>1</code> for AM (acknowledge mode)."
                  type: integer
                  minimum: 0
                  maximum: 1
                PayloadData:
                  description: The binary to be sent to the end device, encoded in base64.
                  type: string
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  maxLength: 2048
                WirelessMetadata:
                  description: WirelessMetadata object.
                  type: object
                  properties:
                    LoRaWAN:
                      allOf:
                        - $ref: "#/components/schemas/LoRaWANSendDataToDevice"
                        - description: LoRaWAN device info.
                    Sidewalk:
                      allOf:
                        - $ref: "#/components/schemas/SidewalkSendDataToDevice"
                        - description: The Sidewalk account credentials.
  /tags#resourceArn:
    get:
      operationId: ListTagsForResource
      description: Lists the tags (metadata) you have assigned to the resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: The ARN of the resource for which you want to list tags.
          schema:
            type: string
            minLength: 1
            maxLength: 1011
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: Adds a tag to a resource.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "485":
          description: TooManyTagsException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TooManyTagsException"
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: The ARN of the resource to add tags to.
          schema:
            type: string
            minLength: 1
            maxLength: 1011
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
  /wireless_device_import_tasks:
    get:
      operationId: ListWirelessDeviceImportTasks
      description: List wireless devices that have been added to an import task.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWirelessDeviceImportTasksResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: ""
          schema:
            type: integer
            description: The maximum number of results to return in this operation.
            minimum: 0
            maximum: 250
        - name: nextToken
          in: query
          required: false
          description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <code>null</code> to receive the first set of results.
          schema:
            type: string
            maxLength: 4096
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/multicast-groups/{Id}/data":
    post:
      operationId: SendDataToMulticastGroup
      description: Sends the specified data to a multicast group.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SendDataToMulticastGroupResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "484":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PayloadData
                - WirelessMetadata
              properties:
                PayloadData:
                  description: The binary to be sent to the end device, encoded in base64.
                  type: string
                  pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
                  maxLength: 2048
                WirelessMetadata:
                  description: Wireless metadata that is to be sent to multicast group.
                  type: object
                  properties:
                    LoRaWAN:
                      $ref: "#/components/schemas/LoRaWANMulticastMetadata"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/multicast-groups/{Id}/bulk":
    patch:
      operationId: StartBulkAssociateWirelessDeviceWithMulticastGroup
      description: Starts a bulk association of all qualifying wireless devices with a multicast group.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartBulkAssociateWirelessDeviceWithMulticastGroupResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QueryString:
                  description: Query string used to search for wireless devices as part of the bulk associate and disassociate process.
                  type: string
                  maxLength: 4096
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: StartBulkDisassociateWirelessDeviceFromMulticastGroup
      description: Starts a bulk disassociatin of all qualifying wireless devices from a multicast group.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartBulkDisassociateWirelessDeviceFromMulticastGroupResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: Id
          in: path
          required: true
          description: ""
          schema:
            type: string
            description: The ID of the multicast group.
            maxLength: 256
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QueryString:
                  description: Query string used to search for wireless devices as part of the bulk associate and disassociate process.
                  type: string
                  maxLength: 4096
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
  /wireless_single_device_import_task:
    post:
      operationId: StartSingleWirelessDeviceImportTask
      description: Start import task for a single wireless device.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartSingleWirelessDeviceImportTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DestinationName
                - Sidewalk
              properties:
                DestinationName:
                  description: The name of the Sidewalk destination that describes the IoT rule to route messages from the device in the import task that will be onboarded to AWS IoT Wireless.
                  type: string
                  pattern: "[a-zA-Z0-9-_]+"
                  maxLength: 128
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
                DeviceName:
                  description: The name of the wireless device for which an import task is being started.
                  type: string
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
                Sidewalk:
                  description: Information about an import task created for an individual Sidewalk device.
                  type: object
                  properties:
                    SidewalkManufacturingSn:
                      allOf:
                        - $ref: "#/components/schemas/SidewalkManufacturingSn"
                        - description: The Sidewalk manufacturing serial number (SMSN) of the device added to the import task.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /wireless_device_import_task:
    post:
      operationId: StartWirelessDeviceImportTask
      description: Start import task for provisioning Sidewalk devices in bulk using an S3 CSV file.
      responses:
        "201":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartWirelessDeviceImportTaskResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "485":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - DestinationName
                - Sidewalk
              properties:
                DestinationName:
                  description: The name of the Sidewalk destination that describes the IoT rule to route messages from the devices in the import task that are onboarded to AWS IoT Wireless.
                  type: string
                  pattern: "[a-zA-Z0-9-_]+"
                  maxLength: 128
                ClientRequestToken:
                  description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
                  type: string
                  pattern: ^[a-zA-Z0-9-_]+$
                  minLength: 1
                  maxLength: 64
                Tags:
                  description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 200
                Sidewalk:
                  description: Information about an import task created for bulk provisioning.
                  type: object
                  properties:
                    DeviceCreationFile:
                      allOf:
                        - $ref: "#/components/schemas/DeviceCreationFile"
                        - description: The CSV file contained in an S3 bucket that's used for adding devices to an import task.
                    Role:
                      allOf:
                        - $ref: "#/components/schemas/Role"
                        - description: The IAM role that allows AWS IoT Wireless to access the CSV file in the S3 bucket.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/wireless-devices/{Id}/test":
    post:
      operationId: TestWirelessDevice
      description: Simulates a provisioned device by sending an uplink data payload of <code>Hello</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestWirelessDeviceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
      parameters:
        - name: Id
          in: path
          required: true
          description: The ID of the wireless device to test.
          schema:
            type: string
            description: The ID of the wireless device.
            maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /tags#resourceArn&tagKeys:
    delete:
      operationId: UntagResource
      description: Removes one or more tags from a resource.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceResponse"
        "480":
          description: ValidationException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ConflictException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConflictException"
        "483":
          description: InternalServerException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerException"
        "484":
          description: ThrottlingException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ThrottlingException"
      parameters:
        - name: resourceArn
          in: query
          required: true
          description: The ARN of the resource to remove tags from.
          schema:
            type: string
            minLength: 1
            maxLength: 1011
        - name: tagKeys
          in: query
          required: true
          description: A list of the keys of the tags to remove from the resource.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/TagKey"
            minItems: 0
            maxItems: 200
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    AssociateAwsAccountWithPartnerAccountResponse:
      type: object
      properties:
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkAccountInfo"
            - description: The Sidewalk account credentials.
        Arn:
          allOf:
            - $ref: "#/components/schemas/PartnerAccountArn"
            - description: The Amazon Resource Name of the resource.
    AmazonId:
      type: string
      description: The Sidewalk Amazon ID.
      maxLength: 2048
    AppServerPrivateKey:
      type: string
      pattern: "[a-fA-F0-9]{64}"
      minLength: 1
      maxLength: 4096
      format: password
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/TagKey"
            - description: The tag's key value.
        Value:
          allOf:
            - $ref: "#/components/schemas/TagValue"
            - description: The tag's value.
      description: A simple label consisting of a customer-defined key-value pair
    ValidationException: {}
    ResourceNotFoundException: {}
    InternalServerException: {}
    ThrottlingException: {}
    ConflictException: {}
    AccessDeniedException: {}
    AssociateMulticastGroupWithFuotaTaskResponse:
      type: object
      properties: {}
    AssociateWirelessDeviceWithFuotaTaskResponse:
      type: object
      properties: {}
    AssociateWirelessDeviceWithMulticastGroupResponse:
      type: object
      properties: {}
    AssociateWirelessDeviceWithThingResponse:
      type: object
      properties: {}
    AssociateWirelessGatewayWithCertificateResponse:
      type: object
      properties:
        IotCertificateId:
          allOf:
            - $ref: "#/components/schemas/IotCertificateId"
            - description: The ID of the certificate associated with the wireless gateway.
    AssociateWirelessGatewayWithThingResponse:
      type: object
      properties: {}
    CancelMulticastGroupSessionResponse:
      type: object
      properties: {}
    CreateDestinationResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/DestinationArn"
            - description: The Amazon Resource Name of the new resource.
        Name:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the new resource.
    CreateDeviceProfileResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileArn"
            - description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileId"
            - description: The ID of the new device profile.
    SupportsClassB:
      type: boolean
    ClassBTimeout:
      type: integer
      minimum: 0
      maximum: 1000
    PingSlotPeriod:
      type: integer
      minimum: 32
      maximum: 4096
    PingSlotDr:
      type: integer
      minimum: 0
      maximum: 15
    PingSlotFreq:
      type: integer
      minimum: 1000000
      maximum: 16700000
    SupportsClassC:
      type: boolean
    ClassCTimeout:
      type: integer
      minimum: 0
      maximum: 1000
    MacVersion:
      type: string
      maxLength: 64
    RegParamsRevision:
      type: string
      maxLength: 64
    RxDelay1:
      type: integer
      minimum: 0
      maximum: 15
    RxDrOffset1:
      type: integer
      minimum: 0
      maximum: 7
    RxDataRate2:
      type: integer
      minimum: 0
      maximum: 15
    RxFreq2:
      type: integer
      minimum: 1000000
      maximum: 16700000
    FactoryPresetFreqsList:
      type: array
      items:
        $ref: "#/components/schemas/PresetFreq"
      minItems: 0
      maxItems: 20
    MaxEirp:
      type: integer
      minimum: 0
      maximum: 15
    MaxDutyCycle:
      type: integer
      minimum: 0
      maximum: 100
    RfRegion:
      type: string
      description: The frequency band (RFRegion) value.
      maxLength: 64
    SupportsJoin:
      type: boolean
    Supports32BitFCnt:
      type: boolean
    CreateFuotaTaskResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/FuotaTaskArn"
        Id:
          $ref: "#/components/schemas/FuotaTaskId"
    SupportedRfRegion:
      type: string
      enum:
        - EU868
        - US915
        - AU915
        - AS923-1
        - AS923-2
        - AS923-3
        - AS923-4
        - EU433
        - CN470
        - CN779
        - RU864
        - KR920
        - IN865
      description: Supported RfRegions
    CreateMulticastGroupResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/MulticastGroupArn"
        Id:
          $ref: "#/components/schemas/MulticastGroupId"
    DlClass:
      type: string
      enum:
        - ClassB
        - ClassC
      description: DlClass for LoRaWAM, valid values are ClassB and ClassC.
      maxLength: 256
    CreateNetworkAnalyzerConfigurationResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/NetworkAnalyzerConfigurationArn"
            - description: The Amazon Resource Name of the new resource.
        Name:
          $ref: "#/components/schemas/NetworkAnalyzerConfigurationName"
    WirelessDeviceFrameInfo:
      type: string
      enum:
        - ENABLED
        - DISABLED
      description: " <code>FrameInfo</code> of your wireless device resources for the trace content. Use FrameInfo to debug the communication between your LoRaWAN end devices and the network server."
    LogLevel:
      type: string
      enum:
        - INFO
        - ERROR
        - DISABLED
      description: The log level for a log message. The log levels can be disabled, or set to <code>ERROR</code> to display less verbose logs containing only error information, or to <code>INFO</code> for more detailed logs.
    WirelessDeviceId:
      type: string
      description: The ID of the wireless device.
      maxLength: 256
    WirelessGatewayId:
      type: string
      maxLength: 256
    CreateServiceProfileResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileArn"
            - description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileId"
            - description: The ID of the new service profile.
    AddGwMetadata:
      type: boolean
    DrMinBox:
      type: integer
      minimum: 0
      maximum: 15
    DrMaxBox:
      type: integer
      minimum: 0
      maximum: 15
    PrAllowed:
      type: boolean
    RaAllowed:
      type: boolean
    CreateWirelessDeviceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceArn"
            - description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceId"
            - description: The ID of the new wireless device.
    DevEui:
      type: string
      pattern: "[a-fA-F0-9]{16}"
    DeviceProfileId:
      type: string
      maxLength: 256
    ServiceProfileId:
      type: string
      maxLength: 256
    OtaaV1_1:
      type: object
      properties:
        AppKey:
          allOf:
            - $ref: "#/components/schemas/AppKey"
            - description: The AppKey value.
        NwkKey:
          allOf:
            - $ref: "#/components/schemas/NwkKey"
            - description: The NwkKey value.
        JoinEui:
          allOf:
            - $ref: "#/components/schemas/JoinEui"
            - description: The JoinEUI value.
      description: OTAA device object for v1.1
    OtaaV1_0_x:
      type: object
      properties:
        AppKey:
          allOf:
            - $ref: "#/components/schemas/AppKey"
            - description: The AppKey value.
        AppEui:
          allOf:
            - $ref: "#/components/schemas/AppEui"
            - description: The AppEUI value.
        GenAppKey:
          allOf:
            - $ref: "#/components/schemas/GenAppKey"
            - description: The GenAppKey value.
      description: OTAA device object for v1.0.x
    AbpV1_1:
      type: object
      properties:
        DevAddr:
          allOf:
            - $ref: "#/components/schemas/DevAddr"
            - description: The DevAddr value.
        SessionKeys:
          allOf:
            - $ref: "#/components/schemas/SessionKeysAbpV1_1"
            - description: Session keys for ABP v1.1
        FCntStart:
          allOf:
            - $ref: "#/components/schemas/FCntStart"
            - description: The FCnt init value.
      description: ABP device object for LoRaWAN specification v1.1
    AbpV1_0_x:
      type: object
      properties:
        DevAddr:
          allOf:
            - $ref: "#/components/schemas/DevAddr"
            - description: The DevAddr value.
        SessionKeys:
          allOf:
            - $ref: "#/components/schemas/SessionKeysAbpV1_0_x"
            - description: Session keys for ABP v1.0.x
        FCntStart:
          allOf:
            - $ref: "#/components/schemas/FCntStart"
            - description: The FCnt init value.
      description: ABP device object for LoRaWAN specification v1.0.x
    FPorts:
      type: object
      properties:
        Fuota:
          $ref: "#/components/schemas/FPort"
        Multicast:
          $ref: "#/components/schemas/FPort"
        ClockSync:
          $ref: "#/components/schemas/FPort"
        Positioning:
          allOf:
            - $ref: "#/components/schemas/Positioning"
            - description: FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
        Applications:
          allOf:
            - $ref: "#/components/schemas/Applications"
            - description: Optional LoRaWAN application information, which can be used for geolocation.
      description: List of FPort assigned for different LoRaWAN application packages to use
    CreateWirelessGatewayResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayArn"
            - description: The Amazon Resource Name of the new resource.
        Id:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceId"
            - description: The ID of the new wireless gateway.
    GatewayEui:
      type: string
      pattern: ^(([0-9A-Fa-f]{2}-){7}|([0-9A-Fa-f]{2}:){7}|([0-9A-Fa-f]{2}\s){7}|([0-9A-Fa-f]{2}){7})([0-9A-Fa-f]{2})$
    JoinEuiFilters:
      type: array
      description: A list of JoinEuiRange used by LoRa gateways to filter LoRa frames.
      items:
        $ref: "#/components/schemas/JoinEuiRange"
      minItems: 0
      maxItems: 3
    NetIdFilters:
      type: array
      description: A list of NetId values that are used by LoRa gateways to filter the uplink frames.
      items:
        $ref: "#/components/schemas/NetId"
      minItems: 0
      maxItems: 10
    SubBands:
      type: array
      description: A list of integer indicating which sub bands are supported by LoRa gateway.
      items:
        $ref: "#/components/schemas/SubBand"
      minItems: 0
      maxItems: 8
    Beaconing:
      type: object
      properties:
        DataRate:
          allOf:
            - $ref: "#/components/schemas/BeaconingDataRate"
            - description: The data rate for gateways that are sending the beacons.
        Frequencies:
          allOf:
            - $ref: "#/components/schemas/BeaconingFrequencies"
            - description: The frequency list for the gateways to send the beacons.
      description: Beaconing parameters for configuring the wireless gateways.
    GatewayMaxEirp:
      type: number
      format: float
      minimum: 0
      maximum: 30
    CreateWirelessGatewayTaskResponse:
      type: object
      properties:
        WirelessGatewayTaskDefinitionId:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskDefinitionId"
            - description: The ID of the WirelessGatewayTaskDefinition.
        Status:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskStatus"
            - description: The status of the request.
    CreateWirelessGatewayTaskDefinitionResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskDefinitionId"
            - description: The ID of the new wireless gateway task definition.
        Arn:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskDefinitionArn"
            - description: The Amazon Resource Name of the resource.
    UpdateDataSource:
      type: string
      minLength: 1
      maxLength: 4096
    LoRaWANUpdateGatewayTaskCreate:
      type: object
      properties:
        UpdateSignature:
          allOf:
            - $ref: "#/components/schemas/UpdateSignature"
            - description: The signature used to verify the update firmware.
        SigKeyCrc:
          allOf:
            - $ref: "#/components/schemas/Crc"
            - description: The CRC of the signature private key to check.
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/LoRaWANGatewayVersion"
            - description: The version of the gateways that should receive the update.
        UpdateVersion:
          allOf:
            - $ref: "#/components/schemas/LoRaWANGatewayVersion"
            - description: The firmware version to update the gateway to.
      description: LoRaWANUpdateGatewayTaskCreate object.
    DeleteDestinationResponse:
      type: object
      properties: {}
    DeleteDeviceProfileResponse:
      type: object
      properties: {}
    DeleteFuotaTaskResponse:
      type: object
      properties: {}
    DeleteMulticastGroupResponse:
      type: object
      properties: {}
    DeleteNetworkAnalyzerConfigurationResponse:
      type: object
      properties: {}
    DeleteQueuedMessagesResponse:
      type: object
      properties: {}
    DeleteServiceProfileResponse:
      type: object
      properties: {}
    DeleteWirelessDeviceResponse:
      type: object
      properties: {}
    DeleteWirelessDeviceImportTaskResponse:
      type: object
      properties: {}
    DeleteWirelessGatewayResponse:
      type: object
      properties: {}
    DeleteWirelessGatewayTaskResponse:
      type: object
      properties: {}
    DeleteWirelessGatewayTaskDefinitionResponse:
      type: object
      properties: {}
    DeregisterWirelessDeviceResponse:
      type: object
      properties: {}
    DisassociateAwsAccountFromPartnerAccountResponse:
      type: object
      properties: {}
    DisassociateMulticastGroupFromFuotaTaskResponse:
      type: object
      properties: {}
    DisassociateWirelessDeviceFromFuotaTaskResponse:
      type: object
      properties: {}
    DisassociateWirelessDeviceFromMulticastGroupResponse:
      type: object
      properties: {}
    DisassociateWirelessDeviceFromThingResponse:
      type: object
      properties: {}
    DisassociateWirelessGatewayFromCertificateResponse:
      type: object
      properties: {}
    DisassociateWirelessGatewayFromThingResponse:
      type: object
      properties: {}
    GetDestinationResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/DestinationArn"
            - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the resource.
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The rule name or topic rule to send messages to.
        ExpressionType:
          allOf:
            - $ref: "#/components/schemas/ExpressionType"
            - description: The type of value in <code>Expression</code>.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the resource.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The ARN of the IAM Role that authorizes the destination.
    GetDeviceProfileResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileArn"
            - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileName"
            - description: The name of the resource.
        Id:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileId"
            - description: The ID of the device profile.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANDeviceProfile"
            - description: Information about the device profile.
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkGetDeviceProfile"
            - description: Information about the Sidewalk parameters in the device profile.
    GetEventConfigurationByResourceTypesResponse:
      type: object
      properties:
        DeviceRegistrationState:
          allOf:
            - $ref: "#/components/schemas/DeviceRegistrationStateResourceTypeEventConfiguration"
            - description: Resource type event configuration for the device registration state event.
        Proximity:
          allOf:
            - $ref: "#/components/schemas/ProximityResourceTypeEventConfiguration"
            - description: Resource type event configuration for the proximity event.
        Join:
          allOf:
            - $ref: "#/components/schemas/JoinResourceTypeEventConfiguration"
            - description: Resource type event configuration for the join event.
        ConnectionStatus:
          allOf:
            - $ref: "#/components/schemas/ConnectionStatusResourceTypeEventConfiguration"
            - description: Resource type event configuration for the connection status event.
        MessageDeliveryStatus:
          allOf:
            - $ref: "#/components/schemas/MessageDeliveryStatusResourceTypeEventConfiguration"
            - description: Resource type event configuration object for the message delivery status event.
    GetFuotaTaskResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/FuotaTaskArn"
        Id:
          $ref: "#/components/schemas/FuotaTaskId"
        Status:
          $ref: "#/components/schemas/FuotaTaskStatus"
        Name:
          $ref: "#/components/schemas/FuotaTaskName"
        Description:
          $ref: "#/components/schemas/Description"
        LoRaWAN:
          $ref: "#/components/schemas/LoRaWANFuotaTaskGetInfo"
        FirmwareUpdateImage:
          $ref: "#/components/schemas/FirmwareUpdateImage"
        FirmwareUpdateRole:
          $ref: "#/components/schemas/FirmwareUpdateRole"
        CreatedAt:
          $ref: "#/components/schemas/CreatedAt"
        RedundancyPercent:
          $ref: "#/components/schemas/RedundancyPercent"
        FragmentSizeBytes:
          $ref: "#/components/schemas/FragmentSizeBytes"
        FragmentIntervalMS:
          $ref: "#/components/schemas/FragmentIntervalMS"
    GetLogLevelsByResourceTypesResponse:
      type: object
      properties:
        DefaultLogLevel:
          $ref: "#/components/schemas/LogLevel"
        WirelessGatewayLogOptions:
          $ref: "#/components/schemas/WirelessGatewayLogOptionList"
        WirelessDeviceLogOptions:
          $ref: "#/components/schemas/WirelessDeviceLogOptionList"
    GetMulticastGroupResponse:
      type: object
      properties:
        Arn:
          $ref: "#/components/schemas/MulticastGroupArn"
        Id:
          $ref: "#/components/schemas/MulticastGroupId"
        Name:
          $ref: "#/components/schemas/MulticastGroupName"
        Description:
          $ref: "#/components/schemas/Description"
        Status:
          $ref: "#/components/schemas/MulticastGroupStatus"
        LoRaWAN:
          $ref: "#/components/schemas/LoRaWANMulticastGet"
        CreatedAt:
          $ref: "#/components/schemas/CreatedAt"
    GetMulticastGroupSessionResponse:
      type: object
      properties:
        LoRaWAN:
          $ref: "#/components/schemas/LoRaWANMulticastSession"
    GetNetworkAnalyzerConfigurationResponse:
      type: object
      properties:
        TraceContent:
          $ref: "#/components/schemas/TraceContent"
        WirelessDevices:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceList"
            - description: List of wireless gateway resources that have been added to the network analyzer configuration.
        WirelessGateways:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayList"
            - description: List of wireless gateway resources that have been added to the network analyzer configuration.
        Description:
          $ref: "#/components/schemas/Description"
        Arn:
          allOf:
            - $ref: "#/components/schemas/NetworkAnalyzerConfigurationArn"
            - description: The Amazon Resource Name of the new resource.
        Name:
          $ref: "#/components/schemas/NetworkAnalyzerConfigurationName"
    GetPartnerAccountResponse:
      type: object
      properties:
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkAccountInfoWithFingerprint"
            - description: The Sidewalk account credentials.
        AccountLinked:
          allOf:
            - $ref: "#/components/schemas/AccountLinked"
            - description: Whether the partner account is linked to the AWS account.
    GetPositionResponse:
      type: object
      deprecated: true
      properties:
        Position:
          allOf:
            - $ref: "#/components/schemas/PositionCoordinate"
            - description: The position information of the resource.
        Accuracy:
          allOf:
            - $ref: "#/components/schemas/Accuracy"
            - description: The accuracy of the estimated position in meters. An empty value indicates that no position data is available. A value of ‘0.0’ value indicates that position data is available. This data corresponds to the position information that you specified instead of the position computed by solver.
        SolverType:
          allOf:
            - $ref: "#/components/schemas/PositionSolverType"
            - description: The type of solver used to identify the position of the resource.
        SolverProvider:
          allOf:
            - $ref: "#/components/schemas/PositionSolverProvider"
            - description: The vendor of the positioning solver.
        SolverVersion:
          allOf:
            - $ref: "#/components/schemas/PositionSolverVersion"
            - description: The version of the positioning solver.
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/ISODateTimeString"
            - description: The timestamp at which the device's position was determined.
      description: This operation is no longer supported.
    GetPositionConfigurationResponse:
      type: object
      deprecated: true
      properties:
        Solvers:
          allOf:
            - $ref: "#/components/schemas/PositionSolverDetails"
            - description: The wrapper for the solver configuration details object.
        Destination:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The position data destination that describes the AWS IoT rule that processes the device's position data for use by AWS IoT Core for LoRaWAN.
      description: This operation is no longer supported.
    GetPositionEstimateResponse:
      type: object
      properties:
        GeoJsonPayload:
          allOf:
            - $ref: "#/components/schemas/GeoJsonPayload"
            - description: The position information of the resource, displayed as a JSON payload. The payload uses the GeoJSON format, which a format that's used to encode geographic data structures. For more information, see <a href="https://geojson.org/">GeoJSON</a>.
    WiFiAccessPoint:
      type: object
      required:
        - MacAddress
        - Rss
      properties:
        MacAddress:
          allOf:
            - $ref: "#/components/schemas/MacAddress"
            - description: Wi-Fi MAC Address.
        Rss:
          allOf:
            - $ref: "#/components/schemas/RSS"
            - description: Received signal strength (dBm) of the WLAN measurement data.
      description: Wi-Fi access point.
    GsmList:
      type: array
      items:
        $ref: "#/components/schemas/GsmObj"
      minItems: 1
      maxItems: 16
    WcdmaList:
      type: array
      items:
        $ref: "#/components/schemas/WcdmaObj"
      minItems: 1
      maxItems: 16
    TdscdmaList:
      type: array
      items:
        $ref: "#/components/schemas/TdscdmaObj"
      minItems: 1
      maxItems: 16
    LteList:
      type: array
      items:
        $ref: "#/components/schemas/LteObj"
      minItems: 1
      maxItems: 16
    CdmaList:
      type: array
      items:
        $ref: "#/components/schemas/CdmaObj"
      minItems: 1
      maxItems: 16
    IPAddress:
      type: string
    GnssNav:
      type: string
      maxLength: 2048
    GPST:
      type: number
      format: float
    CaptureTimeAccuracy:
      type: number
      format: float
    AssistPosition:
      type: array
      items:
        $ref: "#/components/schemas/Coordinate"
      minItems: 2
      maxItems: 2
    Coordinate:
      type: number
      format: float
    Use2DSolver:
      type: boolean
    GetResourceEventConfigurationResponse:
      type: object
      properties:
        DeviceRegistrationState:
          allOf:
            - $ref: "#/components/schemas/DeviceRegistrationStateEventConfiguration"
            - description: Event configuration for the device registration state event.
        Proximity:
          allOf:
            - $ref: "#/components/schemas/ProximityEventConfiguration"
            - description: Event configuration for the proximity event.
        Join:
          allOf:
            - $ref: "#/components/schemas/JoinEventConfiguration"
            - description: Event configuration for the join event.
        ConnectionStatus:
          allOf:
            - $ref: "#/components/schemas/ConnectionStatusEventConfiguration"
            - description: Event configuration for the connection status event.
        MessageDeliveryStatus:
          allOf:
            - $ref: "#/components/schemas/MessageDeliveryStatusEventConfiguration"
            - description: Event configuration for the message delivery status event.
    GetResourceLogLevelResponse:
      type: object
      properties:
        LogLevel:
          $ref: "#/components/schemas/LogLevel"
    GetResourcePositionResponse:
      type: object
      properties:
        GeoJsonPayload:
          allOf:
            - $ref: "#/components/schemas/GeoJsonPayload"
            - description: The position information of the resource, displayed as a JSON payload. The payload uses the GeoJSON format, which a format that's used to encode geographic data structures. For more information, see <a href="https://geojson.org/">GeoJSON</a>.
    GetServiceEndpointResponse:
      type: object
      properties:
        ServiceType:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayServiceType"
            - description: The endpoint's service type.
        ServiceEndpoint:
          allOf:
            - $ref: "#/components/schemas/EndPoint"
            - description: The service endpoint value.
        ServerTrust:
          allOf:
            - $ref: "#/components/schemas/CertificatePEM"
            - description: The Root CA of the server trust certificate.
    GetServiceProfileResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileArn"
            - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileName"
            - description: The name of the resource.
        Id:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileId"
            - description: The ID of the service profile.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANGetServiceProfileInfo"
            - description: Information about the service profile.
    GetWirelessDeviceResponse:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceType"
            - description: The wireless device type.
        Name:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceName"
            - description: The name of the resource.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the resource.
        DestinationName:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the destination to which the device is assigned.
        Id:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceId"
            - description: The ID of the wireless device.
        Arn:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceArn"
            - description: The Amazon Resource Name of the resource.
        ThingName:
          allOf:
            - $ref: "#/components/schemas/ThingName"
            - description: The name of the thing associated with the wireless device. The value is empty if a thing isn't associated with the device.
        ThingArn:
          allOf:
            - $ref: "#/components/schemas/ThingArn"
            - description: The ARN of the thing associated with the wireless device.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANDevice"
            - description: Information about the wireless device.
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkDevice"
            - description: Sidewalk device object.
        Positioning:
          allOf:
            - $ref: "#/components/schemas/PositioningConfigStatus"
            - description: FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
    GetWirelessDeviceImportTaskResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ImportTaskId"
            - description: The identifier of the import task for which information is retrieved.
        Arn:
          allOf:
            - $ref: "#/components/schemas/ImportTaskArn"
            - description: The ARN (Amazon Resource Name) of the import task.
        DestinationName:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the destination that's assigned to the wireless devices in the import task.
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkGetStartImportInfo"
            - description: The Sidewalk-related information about an import task.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/CreationTime"
            - description: The time at which the import task was created.
        Status:
          allOf:
            - $ref: "#/components/schemas/ImportTaskStatus"
            - description: The import task status.
        StatusReason:
          allOf:
            - $ref: "#/components/schemas/StatusReason"
            - description: The reason for the provided status information, such as a validation error that causes the import task to fail.
        InitializedImportedDeviceCount:
          allOf:
            - $ref: "#/components/schemas/ImportedWirelessDeviceCount"
            - description: The number of devices in the import task that are waiting for the control log to start processing.
        PendingImportedDeviceCount:
          allOf:
            - $ref: "#/components/schemas/ImportedWirelessDeviceCount"
            - description: The number of devices in the import task that are waiting in the import task queue to be onboarded.
        OnboardedImportedDeviceCount:
          allOf:
            - $ref: "#/components/schemas/ImportedWirelessDeviceCount"
            - description: The number of devices in the import task that have been onboarded to the import task.
        FailedImportedDeviceCount:
          allOf:
            - $ref: "#/components/schemas/ImportedWirelessDeviceCount"
            - description: The number of devices in the import task that failed to onboard to the import task.
    GetWirelessDeviceStatisticsResponse:
      type: object
      properties:
        WirelessDeviceId:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceId"
            - description: The ID of the wireless device.
        LastUplinkReceivedAt:
          allOf:
            - $ref: "#/components/schemas/ISODateTimeString"
            - description: The date and time when the most recent uplink was received.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANDeviceMetadata"
            - description: Information about the wireless device's operations.
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkDeviceMetadata"
            - description: MetaData for Sidewalk device.
    GetWirelessGatewayResponse:
      type: object
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayName"
            - description: The name of the resource.
        Id:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayId"
            - description: The ID of the wireless gateway.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the resource.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANGateway"
            - description: Information about the wireless gateway.
        Arn:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayArn"
            - description: The Amazon Resource Name of the resource.
        ThingName:
          allOf:
            - $ref: "#/components/schemas/ThingName"
            - description: The name of the thing associated with the wireless gateway. The value is empty if a thing isn't associated with the gateway.
        ThingArn:
          allOf:
            - $ref: "#/components/schemas/ThingArn"
            - description: The ARN of the thing associated with the wireless gateway.
    GetWirelessGatewayCertificateResponse:
      type: object
      properties:
        IotCertificateId:
          allOf:
            - $ref: "#/components/schemas/IotCertificateId"
            - description: The ID of the certificate associated with the wireless gateway.
        LoRaWANNetworkServerCertificateId:
          allOf:
            - $ref: "#/components/schemas/IotCertificateId"
            - description: The ID of the certificate that is associated with the wireless gateway and used for the LoRaWANNetworkServer endpoint.
    GetWirelessGatewayFirmwareInformationResponse:
      type: object
      properties:
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANGatewayCurrentVersion"
            - description: Information about the wireless gateway's firmware.
    GetWirelessGatewayStatisticsResponse:
      type: object
      properties:
        WirelessGatewayId:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayId"
            - description: The ID of the wireless gateway.
        LastUplinkReceivedAt:
          allOf:
            - $ref: "#/components/schemas/ISODateTimeString"
            - description: The date and time when the most recent uplink was received.
        ConnectionStatus:
          allOf:
            - $ref: "#/components/schemas/ConnectionStatus"
            - description: The connection status of the wireless gateway.
    GetWirelessGatewayTaskResponse:
      type: object
      properties:
        WirelessGatewayId:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayId"
            - description: The ID of the wireless gateway.
        WirelessGatewayTaskDefinitionId:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskDefinitionId"
            - description: The ID of the WirelessGatewayTask.
        LastUplinkReceivedAt:
          allOf:
            - $ref: "#/components/schemas/ISODateTimeString"
            - description: The date and time when the most recent uplink was received.
        TaskCreatedAt:
          allOf:
            - $ref: "#/components/schemas/ISODateTimeString"
            - description: The date and time when the task was created.
        Status:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskStatus"
            - description: The status of the request.
    GetWirelessGatewayTaskDefinitionResponse:
      type: object
      properties:
        AutoCreateTasks:
          allOf:
            - $ref: "#/components/schemas/AutoCreateTasks"
            - description: Whether to automatically create tasks using this task definition for all gateways with the specified current version. If <code>false</code>, the task must me created by calling <code>CreateWirelessGatewayTask</code>.
        Name:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskName"
            - description: The name of the resource.
        Update:
          allOf:
            - $ref: "#/components/schemas/UpdateWirelessGatewayTaskCreate"
            - description: Information about the gateways to update.
        Arn:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskDefinitionArn"
            - description: The Amazon Resource Name of the resource.
    ListDestinationsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use to get the next set of results, or <b>null</b> if there are no additional results.
        DestinationList:
          allOf:
            - $ref: "#/components/schemas/DestinationList"
            - description: The list of destinations.
    ListDeviceProfilesResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use to get the next set of results, or <b>null</b> if there are no additional results.
        DeviceProfileList:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileList"
            - description: The list of device profiles.
    ListDevicesForWirelessDeviceImportTaskResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use to get the next set of results, or <code>null</code> if there are no additional results.
        DestinationName:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the Sidewalk destination that describes the IoT rule to route messages received from devices in an import task that are onboarded to AWS IoT Wireless.
        ImportedWirelessDeviceList:
          allOf:
            - $ref: "#/components/schemas/ImportedWirelessDeviceList"
            - description: List of wireless devices in an import task and their onboarding status.
    ListEventConfigurationsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
        EventConfigurationsList:
          allOf:
            - $ref: "#/components/schemas/EventConfigurationsList"
            - description: Event configurations of all events for a single resource.
    ListFuotaTasksResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
        FuotaTaskList:
          $ref: "#/components/schemas/FuotaTaskList"
    ListMulticastGroupsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
        MulticastGroupList:
          $ref: "#/components/schemas/MulticastGroupList"
    ListMulticastGroupsByFuotaTaskResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
        MulticastGroupList:
          $ref: "#/components/schemas/MulticastGroupListByFuotaTask"
    ListNetworkAnalyzerConfigurationsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use to get the next set of results, or <b>null</b> if there are no additional results.
        NetworkAnalyzerConfigurationList:
          allOf:
            - $ref: "#/components/schemas/NetworkAnalyzerConfigurationList"
            - description: The list of network analyzer configurations.
    ListPartnerAccountsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use to get the next set of results, or <b>null</b> if there are no additional results.
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkAccountList"
            - description: The Sidewalk account credentials.
    ListPositionConfigurationsResponse:
      type: object
      deprecated: true
      properties:
        PositionConfigurationList:
          allOf:
            - $ref: "#/components/schemas/PositionConfigurationList"
            - description: A list of position configurations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use to get the next set of results, or <b>null</b> if there are no additional results.
      description: This operation is no longer supported.
    ListQueuedMessagesResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: To retrieve the next set of results, the <code>nextToken</code> value from a previous response; otherwise <b>null</b> to receive the first set of results.
        DownlinkQueueMessagesList:
          allOf:
            - $ref: "#/components/schemas/DownlinkQueueMessagesList"
            - description: The messages in the downlink queue.
    ListServiceProfilesResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use to get the next set of results, or <b>null</b> if there are no additional results.
        ServiceProfileList:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileList"
            - description: The list of service profiles.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.
    ListWirelessDeviceImportTasksResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use to get the next set of results, or <code>null</code> if there are no additional results.
        WirelessDeviceImportTaskList:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceImportTaskList"
            - description: List of import tasks and summary information of onboarding status of devices in each import task.
    ListWirelessDevicesResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use to get the next set of results, or <b>null</b> if there are no additional results.
        WirelessDeviceList:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceStatisticsList"
            - description: The ID of the wireless device.
    ListWirelessGatewayTaskDefinitionsResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use to get the next set of results, or <b>null</b> if there are no additional results.
        TaskDefinitions:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskDefinitionList"
            - description: The list of task definitions.
    ListWirelessGatewaysResponse:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to use to get the next set of results, or <b>null</b> if there are no additional results.
        WirelessGatewayList:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayStatisticsList"
            - description: The ID of the wireless gateway.
    PutPositionConfigurationResponse:
      type: object
      deprecated: true
      properties: {}
      description: This operation is no longer supported.
    SemtechGnssConfiguration:
      type: object
      required:
        - Status
        - Fec
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/PositionConfigurationStatus"
            - description: The status indicating whether the solver is enabled.
        Fec:
          allOf:
            - $ref: "#/components/schemas/PositionConfigurationFec"
            - description: Whether forward error correction is enabled.
      description: Information about the Semtech GNSS solver configuration.
    PutResourceLogLevelResponse:
      type: object
      properties: {}
    ResetAllResourceLogLevelsResponse:
      type: object
      properties: {}
    ResetResourceLogLevelResponse:
      type: object
      properties: {}
    SendDataToMulticastGroupResponse:
      type: object
      properties:
        MessageId:
          $ref: "#/components/schemas/MulticastGroupMessageId"
    LoRaWANMulticastMetadata:
      type: object
      properties:
        FPort:
          $ref: "#/components/schemas/FPort"
      description: The metadata information of the LoRaWAN multicast group.
    SendDataToWirelessDeviceResponse:
      type: object
      properties:
        MessageId:
          allOf:
            - $ref: "#/components/schemas/MessageId"
            - description: The ID of the message sent to the wireless device.
    LoRaWANSendDataToDevice:
      type: object
      properties:
        FPort:
          $ref: "#/components/schemas/FPort"
        ParticipatingGateways:
          allOf:
            - $ref: "#/components/schemas/ParticipatingGateways"
            - description: Choose the gateways that you want to use for the downlink data traffic when the wireless device is running in class B or class C mode.
      description: LoRaWAN router info.
    SidewalkSendDataToDevice:
      type: object
      properties:
        Seq:
          allOf:
            - $ref: "#/components/schemas/Seq"
            - description: The sequence number.
        MessageType:
          $ref: "#/components/schemas/MessageType"
        AckModeRetryDurationSecs:
          allOf:
            - $ref: "#/components/schemas/AckModeRetryDurationSecs"
            - description: The duration of time in seconds to retry sending the ACK.
      description: Information about a Sidewalk router.
    StartBulkAssociateWirelessDeviceWithMulticastGroupResponse:
      type: object
      properties: {}
    StartBulkDisassociateWirelessDeviceFromMulticastGroupResponse:
      type: object
      properties: {}
    StartFuotaTaskResponse:
      type: object
      properties: {}
    StartTime:
      type: string
      description: Start time of a FUOTA task.
      format: date-time
    StartMulticastGroupSessionResponse:
      type: object
      properties: {}
    DlDr:
      type: integer
      description: Downlink data rate.
      minimum: 0
      maximum: 15
    DlFreq:
      type: integer
      description: Downlink frequency.
      minimum: 100000000
      maximum: 1000000000
    SessionStartTimeTimestamp:
      type: string
      description: Timestamp of when the multicast group session is to start.
      format: date-time
    SessionTimeout:
      type: integer
      description: How long before a multicast group session is to timeout.
      minimum: 60
      maximum: 172800
    StartSingleWirelessDeviceImportTaskResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ImportTaskId"
            - description: The import task ID.
        Arn:
          allOf:
            - $ref: "#/components/schemas/ImportTaskArn"
            - description: The ARN (Amazon Resource Name) of the import task.
    SidewalkManufacturingSn:
      type: string
      maxLength: 64
    StartWirelessDeviceImportTaskResponse:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ImportTaskId"
            - description: The import task ID.
        Arn:
          allOf:
            - $ref: "#/components/schemas/ImportTaskArn"
            - description: The ARN (Amazon Resource Name) of the import task.
    DeviceCreationFile:
      type: string
      maxLength: 1024
    Role:
      type: string
      maxLength: 2048
    TagResourceResponse:
      type: object
      properties: {}
    TooManyTagsException: {}
    TestWirelessDeviceResponse:
      type: object
      properties:
        Result:
          allOf:
            - $ref: "#/components/schemas/Result"
            - description: The result returned by the test.
    UntagResourceResponse:
      type: object
      properties: {}
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    UpdateDestinationResponse:
      type: object
      properties: {}
    UpdateEventConfigurationByResourceTypesResponse:
      type: object
      properties: {}
    SidewalkResourceTypeEventConfiguration:
      type: object
      properties:
        WirelessDeviceEventTopic:
          allOf:
            - $ref: "#/components/schemas/EventNotificationTopicStatus"
            - description: Denotes whether the wireless device join event topic is enabled or disabled.
      description: Sidewalk resource type event configuration object for enabling or disabling topic.
    LoRaWANJoinResourceTypeEventConfiguration:
      type: object
      properties:
        WirelessDeviceEventTopic:
          allOf:
            - $ref: "#/components/schemas/EventNotificationTopicStatus"
            - description: Denotes whether the wireless device join event topic is enabled or disabled.
      description: Object for LoRaWAN join resource type event configuration.
    LoRaWANConnectionStatusResourceTypeEventConfiguration:
      type: object
      properties:
        WirelessGatewayEventTopic:
          allOf:
            - $ref: "#/components/schemas/EventNotificationTopicStatus"
            - description: Denotes whether the wireless gateway connection status event topic is enabled or disabled.
      description: Object for LoRaWAN connection status resource type event configuration.
    UpdateFuotaTaskResponse:
      type: object
      properties: {}
    UpdateLogLevelsByResourceTypesResponse:
      type: object
      properties: {}
    WirelessDeviceLogOption:
      type: object
      required:
        - Type
        - LogLevel
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceType"
            - description: The wireless device type.
        LogLevel:
          $ref: "#/components/schemas/LogLevel"
        Events:
          $ref: "#/components/schemas/WirelessDeviceEventLogOptionList"
      description: The log options for wireless devices and can be used to set log levels for a specific type of wireless device.
    WirelessGatewayLogOption:
      type: object
      required:
        - Type
        - LogLevel
      properties:
        Type:
          $ref: "#/components/schemas/WirelessGatewayType"
        LogLevel:
          $ref: "#/components/schemas/LogLevel"
        Events:
          $ref: "#/components/schemas/WirelessGatewayEventLogOptionList"
      description: The log options for wireless gateways and can be used to set log levels for a specific type of wireless gateway.
    UpdateMulticastGroupResponse:
      type: object
      properties: {}
    UpdateNetworkAnalyzerConfigurationResponse:
      type: object
      properties: {}
    UpdatePartnerAccountResponse:
      type: object
      properties: {}
    UpdatePositionResponse:
      type: object
      deprecated: true
      properties: {}
      description: This operation is no longer supported.
    PositionCoordinateValue:
      type: number
      format: float
    UpdateResourceEventConfigurationResponse:
      type: object
      properties: {}
    SidewalkEventNotificationConfigurations:
      type: object
      properties:
        AmazonIdEventTopic:
          allOf:
            - $ref: "#/components/schemas/EventNotificationTopicStatus"
            - description: Denotes whether the Amazon ID event topic is enabled or disabled.
      description: " <code>SidewalkEventNotificationConfigurations</code> object, which is the event configuration object for Sidewalk-related event topics."
    EventNotificationTopicStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    LoRaWANJoinEventNotificationConfigurations:
      type: object
      properties:
        DevEuiEventTopic:
          allOf:
            - $ref: "#/components/schemas/EventNotificationTopicStatus"
            - description: Denotes whether the Dev EUI join event topic is enabled or disabled.
      description: Object for LoRaWAN join resource type event configuration.
    LoRaWANConnectionStatusEventNotificationConfigurations:
      type: object
      properties:
        GatewayEuiEventTopic:
          allOf:
            - $ref: "#/components/schemas/EventNotificationTopicStatus"
            - description: Denotes whether the gateway EUI connection status event topic is enabled or disabled.
      description: Object for LoRaWAN connection status resource type event configuration.
    UpdateResourcePositionResponse:
      type: object
      properties: {}
    UpdateWirelessDeviceResponse:
      type: object
      properties: {}
    UpdateAbpV1_1:
      type: object
      properties:
        FCntStart:
          allOf:
            - $ref: "#/components/schemas/FCntStart"
            - description: The FCnt init value.
      description: ABP device object for LoRaWAN specification v1.1
    UpdateAbpV1_0_x:
      type: object
      properties:
        FCntStart:
          allOf:
            - $ref: "#/components/schemas/FCntStart"
            - description: The FCnt init value.
      description: ABP device object for LoRaWAN specification v1.0.x
    UpdateFPorts:
      type: object
      properties:
        Positioning:
          allOf:
            - $ref: "#/components/schemas/Positioning"
            - description: Positioning FPorts for the ClockSync, Stream, and GNSS functions.
        Applications:
          allOf:
            - $ref: "#/components/schemas/Applications"
            - description: LoRaWAN application, which can be used for geolocation by activating positioning.
      description: Object for updating the FPorts information.
    UpdateWirelessDeviceImportTaskResponse:
      type: object
      properties: {}
    UpdateWirelessGatewayResponse:
      type: object
      properties: {}
    JoinEuiRange:
      type: array
      description: A pair of join EUI describing a range [BegEui, EndEui], both ends are inclusive.
      items:
        $ref: "#/components/schemas/JoinEui"
      minItems: 2
      maxItems: 2
    NetId:
      type: string
      pattern: "[a-fA-F0-9]{6}"
      description: LoRaWAN network ID.
    DevAddr:
      type: string
      pattern: "[a-fA-F0-9]{8}"
    SessionKeysAbpV1_0_x:
      type: object
      properties:
        NwkSKey:
          allOf:
            - $ref: "#/components/schemas/NwkSKey"
            - description: The NwkSKey value.
        AppSKey:
          allOf:
            - $ref: "#/components/schemas/AppSKey"
            - description: The AppSKey value.
      description: Session keys for ABP v1.1
    FCntStart:
      type: integer
      description: The FCnt init value.
      minimum: 0
      maximum: 65535
    SessionKeysAbpV1_1:
      type: object
      properties:
        FNwkSIntKey:
          allOf:
            - $ref: "#/components/schemas/FNwkSIntKey"
            - description: The FNwkSIntKey value.
        SNwkSIntKey:
          allOf:
            - $ref: "#/components/schemas/SNwkSIntKey"
            - description: The SNwkSIntKey value.
        NwkSEncKey:
          allOf:
            - $ref: "#/components/schemas/NwkSEncKey"
            - description: The NwkSEncKey value.
        AppSKey:
          allOf:
            - $ref: "#/components/schemas/AppSKey"
            - description: The AppSKey value.
      description: Session keys for ABP v1.1
    AccountLinked:
      type: boolean
    HorizontalAccuracy:
      type: number
      format: float
      minimum: 0
    VerticalAccuracy:
      type: number
      format: float
      minimum: 0
    Accuracy:
      type: object
      properties:
        HorizontalAccuracy:
          allOf:
            - $ref: "#/components/schemas/HorizontalAccuracy"
            - description: The horizontal accuracy of the estimated position, which is the difference between the estimated location and the actual device location.
        VerticalAccuracy:
          allOf:
            - $ref: "#/components/schemas/VerticalAccuracy"
            - description: The vertical accuracy of the estimated position, which is the difference between the estimated altitude and actual device latitude in meters.
      description: The accuracy of the estimated position in meters. An empty value indicates that no position data is available. A value of ‘0.0’ value indicates that position data is available. This data corresponds to the position information that you specified instead of the position computed by solver.
    AckModeRetryDurationSecs:
      type: integer
      minimum: 0
      maximum: 604800
    AmazonResourceName:
      type: string
      minLength: 1
      maxLength: 1011
    ApId:
      type: string
      maxLength: 256
    AppEui:
      type: string
      pattern: "[a-fA-F0-9]{16}"
    AppKey:
      type: string
      pattern: "[a-fA-F0-9]{32}"
    AppSKey:
      type: string
      pattern: "[a-fA-F0-9]{32}"
    FPort:
      type: integer
      description: The Fport value.
      minimum: 1
      maximum: 223
    ApplicationConfigType:
      type: string
      enum:
        - SemtechGeolocation
    DestinationName:
      type: string
      pattern: "[a-zA-Z0-9-_]+"
      maxLength: 128
    ApplicationConfig:
      type: object
      properties:
        FPort:
          $ref: "#/components/schemas/FPort"
        Type:
          allOf:
            - $ref: "#/components/schemas/ApplicationConfigType"
            - description: Application type, which can be specified to obtain real-time position information of your LoRaWAN device.
        DestinationName:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the position data destination that describes the AWS IoT rule that processes the device's position data for use by AWS IoT Core for LoRaWAN.
      description: LoRaWAN application configuration, which can be used to perform geolocation.
    ApplicationServerPublicKey:
      type: string
      pattern: "[a-fA-F0-9]{64}"
      minLength: 1
      maxLength: 4096
      format: password
    Applications:
      type: array
      items:
        $ref: "#/components/schemas/ApplicationConfig"
    SidewalkAccountInfo:
      type: object
      properties:
        AmazonId:
          allOf:
            - $ref: "#/components/schemas/AmazonId"
            - description: The Sidewalk Amazon ID.
        AppServerPrivateKey:
          allOf:
            - $ref: "#/components/schemas/AppServerPrivateKey"
            - description: The Sidewalk application server private key.
      description: Information about a Sidewalk account.
    ClientRequestToken:
      type: string
      pattern: ^[a-zA-Z0-9-_]+$
      description: Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request.
      minLength: 1
      maxLength: 64
    TagList:
      type: array
      description: The tag to attach to the specified resource. Tags are metadata that you can use to manage a resource.
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 0
      maxItems: 200
    AssociateAwsAccountWithPartnerAccountRequest:
      type: object
      required:
        - Sidewalk
      title: AssociateAwsAccountWithPartnerAccountRequest
      properties:
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkAccountInfo"
            - description: The Sidewalk account credentials.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. "
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.
    PartnerAccountArn:
      type: string
    FuotaTaskId:
      type: string
      description: The ID of a FUOTA task.
      maxLength: 256
    MulticastGroupId:
      type: string
      description: The ID of the multicast group.
      maxLength: 256
    AssociateMulticastGroupWithFuotaTaskRequest:
      type: object
      required:
        - MulticastGroupId
      title: AssociateMulticastGroupWithFuotaTaskRequest
      properties:
        MulticastGroupId:
          $ref: "#/components/schemas/MulticastGroupId"
    AssociateWirelessDeviceWithFuotaTaskRequest:
      type: object
      required:
        - WirelessDeviceId
      title: AssociateWirelessDeviceWithFuotaTaskRequest
      properties:
        WirelessDeviceId:
          $ref: "#/components/schemas/WirelessDeviceId"
    AssociateWirelessDeviceWithMulticastGroupRequest:
      type: object
      required:
        - WirelessDeviceId
      title: AssociateWirelessDeviceWithMulticastGroupRequest
      properties:
        WirelessDeviceId:
          $ref: "#/components/schemas/WirelessDeviceId"
    ThingArn:
      type: string
    AssociateWirelessDeviceWithThingRequest:
      type: object
      required:
        - ThingArn
      title: AssociateWirelessDeviceWithThingRequest
      properties:
        ThingArn:
          allOf:
            - $ref: "#/components/schemas/ThingArn"
            - description: The ARN of the thing to associate with the wireless device.
    IotCertificateId:
      type: string
      minLength: 1
      maxLength: 4096
    AssociateWirelessGatewayWithCertificateRequest:
      type: object
      required:
        - IotCertificateId
      title: AssociateWirelessGatewayWithCertificateRequest
      properties:
        IotCertificateId:
          allOf:
            - $ref: "#/components/schemas/IotCertificateId"
            - description: The ID of the certificate to associate with the wireless gateway.
    AssociateWirelessGatewayWithThingRequest:
      type: object
      required:
        - ThingArn
      title: AssociateWirelessGatewayWithThingRequest
      properties:
        ThingArn:
          allOf:
            - $ref: "#/components/schemas/ThingArn"
            - description: The ARN of the thing to associate with the wireless gateway.
    AutoCreateTasks:
      type: boolean
    BCCH:
      type: integer
      minimum: 0
      maximum: 1023
    BSIC:
      type: integer
      minimum: 0
      maximum: 63
    BaseLat:
      type: number
      format: float
      minimum: -90
      maximum: 90
    BaseLng:
      type: number
      format: float
      minimum: -180
      maximum: 180
    BaseStationId:
      type: integer
      minimum: 0
      maximum: 65535
    BatteryLevel:
      type: string
      enum:
        - normal
        - low
        - critical
      description: Sidewalk device battery level.
    BeaconingDataRate:
      type: integer
      minimum: 0
      maximum: 15
    BeaconingFrequencies:
      type: array
      items:
        $ref: "#/components/schemas/BeaconingFrequency"
      minItems: 0
      maxItems: 10
    BeaconingFrequency:
      type: integer
      minimum: 100000000
      maximum: 1000000000
    CancelMulticastGroupSessionRequest:
      type: object
      title: CancelMulticastGroupSessionRequest
      properties: {}
    CdmaChannel:
      type: integer
      minimum: 0
      maximum: 4095
    CdmaObj:
      type: object
      required:
        - SystemId
        - NetworkId
        - BaseStationId
      properties:
        SystemId:
          allOf:
            - $ref: "#/components/schemas/SystemId"
            - description: CDMA system ID (SID).
        NetworkId:
          allOf:
            - $ref: "#/components/schemas/NetworkId"
            - description: CDMA network ID (NID).
        BaseStationId:
          allOf:
            - $ref: "#/components/schemas/BaseStationId"
            - description: CDMA base station ID (BSID).
        RegistrationZone:
          allOf:
            - $ref: "#/components/schemas/RegistrationZone"
            - description: CDMA registration zone (RZ).
        CdmaLocalId:
          allOf:
            - $ref: "#/components/schemas/CdmaLocalId"
            - description: CDMA local identification (local ID) parameters.
        PilotPower:
          allOf:
            - $ref: "#/components/schemas/PilotPower"
            - description: Transmit power level of the pilot signal, measured in dBm (decibel-milliwatts).
        BaseLat:
          allOf:
            - $ref: "#/components/schemas/BaseLat"
            - description: CDMA base station latitude in degrees.
        BaseLng:
          allOf:
            - $ref: "#/components/schemas/BaseLng"
            - description: CDMA base station longitude in degrees.
        CdmaNmr:
          allOf:
            - $ref: "#/components/schemas/CdmaNmrList"
            - description: CDMA network measurement reports.
      description: CDMA (Code-division multiple access) object.
    PnOffset:
      type: integer
      minimum: 0
      maximum: 511
    CdmaLocalId:
      type: object
      required:
        - PnOffset
        - CdmaChannel
      properties:
        PnOffset:
          allOf:
            - $ref: "#/components/schemas/PnOffset"
            - description: Pseudo-noise offset, which is a characteristic of the signal from a cell on a radio tower.
        CdmaChannel:
          allOf:
            - $ref: "#/components/schemas/CdmaChannel"
            - description: CDMA channel information.
      description: CDMA local ID information, which corresponds to the local identification parameters of a CDMA cell.
    CdmaNmrObj:
      type: object
      required:
        - PnOffset
        - CdmaChannel
      properties:
        PnOffset:
          allOf:
            - $ref: "#/components/schemas/PnOffset"
            - description: Pseudo-noise offset, which is a characteristic of the signal from a cell on a radio tower.
        CdmaChannel:
          allOf:
            - $ref: "#/components/schemas/CdmaChannel"
            - description: CDMA channel information.
        PilotPower:
          allOf:
            - $ref: "#/components/schemas/PilotPower"
            - description: Transmit power level of the pilot signal, measured in dBm (decibel-milliwatts).
        BaseStationId:
          allOf:
            - $ref: "#/components/schemas/BaseStationId"
            - description: CDMA base station ID (BSID).
      description: CDMA object for network measurement reports.
    CdmaNmrList:
      type: array
      items:
        $ref: "#/components/schemas/CdmaNmrObj"
      minItems: 1
      maxItems: 32
    PilotPower:
      type: integer
      minimum: -142
      maximum: -49
    SystemId:
      type: integer
      minimum: 1
      maximum: 32767
    NetworkId:
      type: integer
      minimum: 0
      maximum: 65535
    RegistrationZone:
      type: integer
      minimum: 0
      maximum: 4095
    CellParams:
      type: integer
      minimum: 0
      maximum: 127
    CellTowers:
      type: object
      properties:
        Gsm:
          allOf:
            - $ref: "#/components/schemas/GsmList"
            - description: GSM object information.
        Wcdma:
          allOf:
            - $ref: "#/components/schemas/WcdmaList"
            - description: WCDMA object information.
        Tdscdma:
          allOf:
            - $ref: "#/components/schemas/TdscdmaList"
            - description: TD-SCDMA object information.
        Lte:
          allOf:
            - $ref: "#/components/schemas/LteList"
            - description: LTE object information.
        Cdma:
          allOf:
            - $ref: "#/components/schemas/CdmaList"
            - description: CDMA object information.
      description: The cell towers that were used to perform the measurements.
    SigningAlg:
      type: string
      enum:
        - Ed25519
        - P256r1
      description: The certificate chain algorithm provided by sidewalk.
    CertificateValue:
      type: string
      description: Certificate value.
      minLength: 0
      maxLength: 2048
    CertificateList:
      type: object
      required:
        - SigningAlg
        - Value
      properties:
        SigningAlg:
          allOf:
            - $ref: "#/components/schemas/SigningAlg"
            - description: The certificate chain algorithm provided by sidewalk.
        Value:
          allOf:
            - $ref: "#/components/schemas/CertificateValue"
            - description: The value of the chosen sidewalk certificate.
      description: List of sidewalk certificates.
    CertificatePEM:
      type: string
      pattern: "[^-A-Za-z0-9\\+/=]\\|=[^=]\\|=\\{3,\\}$\\{1,4096\\}"
      minLength: 1
      maxLength: 4096
    ChannelMask:
      type: string
      maxLength: 2048
    ConnectionStatus:
      type: string
      enum:
        - Connected
        - Disconnected
    ConnectionStatusEventConfiguration:
      type: object
      properties:
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANConnectionStatusEventNotificationConfigurations"
            - description: Connection status event configuration object for enabling or disabling LoRaWAN related event topics.
        WirelessGatewayIdEventTopic:
          allOf:
            - $ref: "#/components/schemas/EventNotificationTopicStatus"
            - description: Denotes whether the wireless gateway ID connection status event topic is enabled or disabled.
      description: Connection status event configuration object for enabling or disabling topic.
    ConnectionStatusResourceTypeEventConfiguration:
      type: object
      properties:
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANConnectionStatusResourceTypeEventConfiguration"
            - description: Connection status resource type event configuration object for enabling or disabling LoRaWAN related event topics.
      description: Connection status resource type event configuration object for enabling or disabling topic.
    Crc:
      type: integer
      minimum: 1
      maximum: 4294967295
    ExpressionType:
      type: string
      enum:
        - RuleName
        - MqttTopic
    Expression:
      type: string
      maxLength: 2048
    Description:
      type: string
      description: The description of the new resource.
      maxLength: 2048
    RoleArn:
      type: string
      minLength: 20
      maxLength: 2048
    CreateDestinationRequest:
      type: object
      required:
        - Name
        - ExpressionType
        - Expression
        - RoleArn
      title: CreateDestinationRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the new resource.
        ExpressionType:
          allOf:
            - $ref: "#/components/schemas/ExpressionType"
            - description: The type of value in <code>Expression</code>.
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The rule name or topic rule to send messages to.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the new resource.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The ARN of the IAM Role that authorizes the destination.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to attach to the new destination. Tags are metadata that you can use to manage a resource.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. "
    DestinationArn:
      type: string
    DeviceProfileName:
      type: string
      maxLength: 256
    LoRaWANDeviceProfile:
      type: object
      properties:
        SupportsClassB:
          allOf:
            - $ref: "#/components/schemas/SupportsClassB"
            - description: The SupportsClassB value.
        ClassBTimeout:
          allOf:
            - $ref: "#/components/schemas/ClassBTimeout"
            - description: The ClassBTimeout value.
        PingSlotPeriod:
          allOf:
            - $ref: "#/components/schemas/PingSlotPeriod"
            - description: The PingSlotPeriod value.
        PingSlotDr:
          allOf:
            - $ref: "#/components/schemas/PingSlotDr"
            - description: The PingSlotDR value.
        PingSlotFreq:
          allOf:
            - $ref: "#/components/schemas/PingSlotFreq"
            - description: The PingSlotFreq value.
        SupportsClassC:
          allOf:
            - $ref: "#/components/schemas/SupportsClassC"
            - description: The SupportsClassC value.
        ClassCTimeout:
          allOf:
            - $ref: "#/components/schemas/ClassCTimeout"
            - description: The ClassCTimeout value.
        MacVersion:
          allOf:
            - $ref: "#/components/schemas/MacVersion"
            - description: The MAC version (such as OTAA 1.1 or OTAA 1.0.3) to use with this device profile.
        RegParamsRevision:
          allOf:
            - $ref: "#/components/schemas/RegParamsRevision"
            - description: The version of regional parameters.
        RxDelay1:
          allOf:
            - $ref: "#/components/schemas/RxDelay1"
            - description: The RXDelay1 value.
        RxDrOffset1:
          allOf:
            - $ref: "#/components/schemas/RxDrOffset1"
            - description: The RXDROffset1 value.
        RxDataRate2:
          allOf:
            - $ref: "#/components/schemas/RxDataRate2"
            - description: The RXDataRate2 value.
        RxFreq2:
          allOf:
            - $ref: "#/components/schemas/RxFreq2"
            - description: The RXFreq2 value.
        FactoryPresetFreqsList:
          allOf:
            - $ref: "#/components/schemas/FactoryPresetFreqsList"
            - description: The list of values that make up the FactoryPresetFreqs value.
        MaxEirp:
          allOf:
            - $ref: "#/components/schemas/MaxEirp"
            - description: The MaxEIRP value.
        MaxDutyCycle:
          allOf:
            - $ref: "#/components/schemas/MaxDutyCycle"
            - description: The MaxDutyCycle value.
        RfRegion:
          allOf:
            - $ref: "#/components/schemas/RfRegion"
            - description: The frequency band (RFRegion) value.
        SupportsJoin:
          allOf:
            - $ref: "#/components/schemas/SupportsJoin"
            - description: The SupportsJoin value.
        Supports32BitFCnt:
          allOf:
            - $ref: "#/components/schemas/Supports32BitFCnt"
            - description: The Supports32BitFCnt value.
      description: LoRaWANDeviceProfile object.
    SidewalkCreateDeviceProfile:
      type: object
      properties: {}
      description: Sidewalk object for creating a device profile.
    CreateDeviceProfileRequest:
      type: object
      title: CreateDeviceProfileRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileName"
            - description: The name of the new resource.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANDeviceProfile"
            - description: The device profile information to use to create the device profile.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to attach to the new device profile. Tags are metadata that you can use to manage a resource.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. "
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkCreateDeviceProfile"
            - description: The Sidewalk-related information for creating the Sidewalk device profile.
    DeviceProfileArn:
      type: string
    FuotaTaskName:
      type: string
      description: The name of a FUOTA task.
      maxLength: 256
    LoRaWANFuotaTask:
      type: object
      properties:
        RfRegion:
          $ref: "#/components/schemas/SupportedRfRegion"
      description: The LoRaWAN information used with a FUOTA task.
    FirmwareUpdateImage:
      type: string
      description: The S3 URI points to a firmware update image that is to be used with a FUOTA task.
      minLength: 1
      maxLength: 4096
    FirmwareUpdateRole:
      type: string
      description: The firmware update role that is to be used with a FUOTA task.
      minLength: 1
      maxLength: 2048
    RedundancyPercent:
      type: integer
      description: The percentage of added redundant fragments. For example, if firmware file is 100 bytes and fragment size is 10 bytes, with <code>RedundancyPercent</code> set to 50(%), the final number of encoded fragments is (100 / 10) + (100 / 10 * 50%) = 15.
      minimum: 0
      maximum: 100
    FragmentSizeBytes:
      type: integer
      description: The size of each fragment in bytes. Currently only supported in fuota tasks with multicast groups.
      minimum: 1
    FragmentIntervalMS:
      type: integer
      description: The interval of sending fragments in milliseconds. Currently the interval will be rounded to the nearest second. Note that this interval only controls the timing when the cloud sends the fragments down. The actual delay of receiving fragments at device side depends on the device's class and the communication delay with the cloud.
      minimum: 1
    CreateFuotaTaskRequest:
      type: object
      required:
        - FirmwareUpdateImage
        - FirmwareUpdateRole
      title: CreateFuotaTaskRequest
      properties:
        Name:
          $ref: "#/components/schemas/FuotaTaskName"
        Description:
          $ref: "#/components/schemas/Description"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        LoRaWAN:
          $ref: "#/components/schemas/LoRaWANFuotaTask"
        FirmwareUpdateImage:
          $ref: "#/components/schemas/FirmwareUpdateImage"
        FirmwareUpdateRole:
          $ref: "#/components/schemas/FirmwareUpdateRole"
        Tags:
          $ref: "#/components/schemas/TagList"
        RedundancyPercent:
          $ref: "#/components/schemas/RedundancyPercent"
        FragmentSizeBytes:
          $ref: "#/components/schemas/FragmentSizeBytes"
        FragmentIntervalMS:
          $ref: "#/components/schemas/FragmentIntervalMS"
    FuotaTaskArn:
      type: string
      description: The arn of a FUOTA task.
      maxLength: 128
    MulticastGroupName:
      type: string
      description: The name of the multicast group.
      maxLength: 256
    LoRaWANMulticast:
      type: object
      properties:
        RfRegion:
          $ref: "#/components/schemas/SupportedRfRegion"
        DlClass:
          $ref: "#/components/schemas/DlClass"
      description: The LoRaWAN information that is to be used with the multicast group.
    CreateMulticastGroupRequest:
      type: object
      required:
        - LoRaWAN
      title: CreateMulticastGroupRequest
      properties:
        Name:
          $ref: "#/components/schemas/MulticastGroupName"
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the multicast group.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. "
        LoRaWAN:
          $ref: "#/components/schemas/LoRaWANMulticast"
        Tags:
          $ref: "#/components/schemas/TagList"
    MulticastGroupArn:
      type: string
      description: The arn of the multicast group.
      maxLength: 128
    NetworkAnalyzerConfigurationName:
      type: string
      pattern: "[a-zA-Z0-9-_]+"
      description: Name of the network analyzer configuration.
      minLength: 1
      maxLength: 1024
    TraceContent:
      type: object
      properties:
        WirelessDeviceFrameInfo:
          $ref: "#/components/schemas/WirelessDeviceFrameInfo"
        LogLevel:
          $ref: "#/components/schemas/LogLevel"
      description: Trace content for your wireless gateway and wireless device resources.
    WirelessDeviceList:
      type: array
      items:
        $ref: "#/components/schemas/WirelessDeviceId"
      minItems: 0
      maxItems: 250
    WirelessGatewayList:
      type: array
      items:
        $ref: "#/components/schemas/WirelessGatewayId"
    CreateNetworkAnalyzerConfigurationRequest:
      type: object
      required:
        - Name
      title: CreateNetworkAnalyzerConfigurationRequest
      properties:
        Name:
          $ref: "#/components/schemas/NetworkAnalyzerConfigurationName"
        TraceContent:
          $ref: "#/components/schemas/TraceContent"
        WirelessDevices:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceList"
            - description: Wireless device resources to add to the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resource to add in the input array.
        WirelessGateways:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayList"
            - description: Wireless gateway resources to add to the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resource to add in the input array.
        Description:
          $ref: "#/components/schemas/Description"
        Tags:
          $ref: "#/components/schemas/TagList"
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
    NetworkAnalyzerConfigurationArn:
      type: string
      maxLength: 1124
    ServiceProfileName:
      type: string
      maxLength: 256
    LoRaWANServiceProfile:
      type: object
      properties:
        AddGwMetadata:
          allOf:
            - $ref: "#/components/schemas/AddGwMetadata"
            - description: The AddGWMetaData value.
        DrMin:
          allOf:
            - $ref: "#/components/schemas/DrMinBox"
            - description: The DrMin value.
        DrMax:
          allOf:
            - $ref: "#/components/schemas/DrMaxBox"
            - description: The DrMax value.
        PrAllowed:
          allOf:
            - $ref: "#/components/schemas/PrAllowed"
            - description: The PRAllowed value that describes whether passive roaming is allowed.
        RaAllowed:
          allOf:
            - $ref: "#/components/schemas/RaAllowed"
            - description: The RAAllowed value that describes whether roaming activation is allowed.
      description: LoRaWANServiceProfile object.
    CreateServiceProfileRequest:
      type: object
      title: CreateServiceProfileRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileName"
            - description: The name of the new resource.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANServiceProfile"
            - description: The service profile information to use to create the service profile.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to attach to the new service profile. Tags are metadata that you can use to manage a resource.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. "
    ServiceProfileArn:
      type: string
    WirelessDeviceType:
      type: string
      enum:
        - Sidewalk
        - LoRaWAN
    WirelessDeviceName:
      type: string
      maxLength: 256
    LoRaWANDevice:
      type: object
      properties:
        DevEui:
          allOf:
            - $ref: "#/components/schemas/DevEui"
            - description: The DevEUI value.
        DeviceProfileId:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileId"
            - description: The ID of the device profile for the new wireless device.
        ServiceProfileId:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileId"
            - description: The ID of the service profile.
        OtaaV1_1:
          allOf:
            - $ref: "#/components/schemas/OtaaV1_1"
            - description: OTAA device object for v1.1 for create APIs
        OtaaV1_0_x:
          allOf:
            - $ref: "#/components/schemas/OtaaV1_0_x"
            - description: OTAA device object for create APIs for v1.0.x
        AbpV1_1:
          allOf:
            - $ref: "#/components/schemas/AbpV1_1"
            - description: ABP device object for create APIs for v1.1
        AbpV1_0_x:
          allOf:
            - $ref: "#/components/schemas/AbpV1_0_x"
            - description: LoRaWAN object for create APIs
        FPorts:
          $ref: "#/components/schemas/FPorts"
      description: LoRaWAN object for create functions.
    PositioningConfigStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    SidewalkCreateWirelessDevice:
      type: object
      properties:
        DeviceProfileId:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileId"
            - description: The ID of the Sidewalk device profile.
      description: Sidewalk object for creating a wireless device.
    CreateWirelessDeviceRequest:
      type: object
      required:
        - Type
        - DestinationName
      title: CreateWirelessDeviceRequest
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceType"
            - description: The wireless device type.
        Name:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceName"
            - description: The name of the new resource.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the new resource.
        DestinationName:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the destination to assign to the new wireless device.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. "
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANDevice"
            - description: The device configuration information to use to create the wireless device.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to attach to the new wireless device. Tags are metadata that you can use to manage a resource.
        Positioning:
          allOf:
            - $ref: "#/components/schemas/PositioningConfigStatus"
            - description: FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkCreateWirelessDevice"
            - description: The device configuration information to use to create the Sidewalk device.
    WirelessDeviceArn:
      type: string
    WirelessGatewayName:
      type: string
      maxLength: 256
    LoRaWANGateway:
      type: object
      properties:
        GatewayEui:
          allOf:
            - $ref: "#/components/schemas/GatewayEui"
            - description: The gateway's EUI value.
        RfRegion:
          allOf:
            - $ref: "#/components/schemas/RfRegion"
            - description: The frequency band (RFRegion) value.
        JoinEuiFilters:
          $ref: "#/components/schemas/JoinEuiFilters"
        NetIdFilters:
          $ref: "#/components/schemas/NetIdFilters"
        SubBands:
          $ref: "#/components/schemas/SubBands"
        Beaconing:
          allOf:
            - $ref: "#/components/schemas/Beaconing"
            - description: Beaconing object information, which consists of the data rate and frequency parameters.
        MaxEirp:
          allOf:
            - $ref: "#/components/schemas/GatewayMaxEirp"
            - description: The MaxEIRP value.
      description: LoRaWANGateway object.
    CreateWirelessGatewayRequest:
      type: object
      required:
        - LoRaWAN
      title: CreateWirelessGatewayRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayName"
            - description: The name of the new resource.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the new resource.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANGateway"
            - description: The gateway configuration information to use to create the wireless gateway.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to attach to the new wireless gateway. Tags are metadata that you can use to manage a resource.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. "
    WirelessGatewayArn:
      type: string
    WirelessGatewayTaskName:
      type: string
      minLength: 1
      maxLength: 2048
    UpdateWirelessGatewayTaskCreate:
      type: object
      properties:
        UpdateDataSource:
          allOf:
            - $ref: "#/components/schemas/UpdateDataSource"
            - description: The link to the S3 bucket.
        UpdateDataRole:
          allOf:
            - $ref: "#/components/schemas/UpdateDataSource"
            - description: The IAM role used to read data from the S3 bucket.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANUpdateGatewayTaskCreate"
            - description: The properties that relate to the LoRaWAN wireless gateway.
      description: UpdateWirelessGatewayTaskCreate object.
    CreateWirelessGatewayTaskDefinitionRequest:
      type: object
      required:
        - AutoCreateTasks
      title: CreateWirelessGatewayTaskDefinitionRequest
      properties:
        AutoCreateTasks:
          allOf:
            - $ref: "#/components/schemas/AutoCreateTasks"
            - description: Whether to automatically create tasks using this task definition for all gateways with the specified current version. If <code>false</code>, the task must me created by calling <code>CreateWirelessGatewayTask</code>.
        Name:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskName"
            - description: The name of the new resource.
        Update:
          allOf:
            - $ref: "#/components/schemas/UpdateWirelessGatewayTaskCreate"
            - description: Information about the gateways to update.
        ClientRequestToken:
          allOf:
            - $ref: "#/components/schemas/ClientRequestToken"
            - description: "Each resource must have a unique client request token. If you try to create a new resource with the same token as a resource that already exists, an exception occurs. If you omit this value, AWS SDKs will automatically generate a unique client request. "
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: The tags to attach to the specified resource. Tags are metadata that you can use to manage a resource.
    WirelessGatewayTaskDefinitionId:
      type: string
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      maxLength: 36
    WirelessGatewayTaskDefinitionArn:
      type: string
    CreateWirelessGatewayTaskRequest:
      type: object
      required:
        - WirelessGatewayTaskDefinitionId
      title: CreateWirelessGatewayTaskRequest
      properties:
        WirelessGatewayTaskDefinitionId:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskDefinitionId"
            - description: The ID of the WirelessGatewayTaskDefinition.
    WirelessGatewayTaskStatus:
      type: string
      enum:
        - PENDING
        - IN_PROGRESS
        - FIRST_RETRY
        - SECOND_RETRY
        - COMPLETED
        - FAILED
    CreatedAt:
      type: string
      description: Created at timestamp for the resource.
      format: date-time
    CreationDate:
      type: string
      format: date-time
    CreationTime:
      type: string
      format: date-time
    DakCertificateId:
      type: string
      maxLength: 256
    MaxAllowedSignature:
      type: integer
    FactorySupport:
      type: boolean
    DeviceTypeId:
      type: string
      maxLength: 2048
    DakCertificateMetadata:
      type: object
      required:
        - CertificateId
      properties:
        CertificateId:
          allOf:
            - $ref: "#/components/schemas/DakCertificateId"
            - description: The certificate ID for the DAK.
        MaxAllowedSignature:
          allOf:
            - $ref: "#/components/schemas/MaxAllowedSignature"
            - description: The maximum number of signatures that the DAK can sign. A value of <code>-1</code> indicates that there's no device limit.
        FactorySupport:
          allOf:
            - $ref: "#/components/schemas/FactorySupport"
            - description: Whether factory support has been enabled.
        ApId:
          allOf:
            - $ref: "#/components/schemas/ApId"
            - description: The advertised product ID (APID) that's used for pre-production and production applications.
        DeviceTypeId:
          allOf:
            - $ref: "#/components/schemas/DeviceTypeId"
            - description: The device type ID that's used for prototyping applications.
      description: The device attestation key (DAK) information.
    DakCertificateMetadataList:
      type: array
      items:
        $ref: "#/components/schemas/DakCertificateMetadata"
    DeleteDestinationRequest:
      type: object
      title: DeleteDestinationRequest
      properties: {}
    DeleteDeviceProfileRequest:
      type: object
      title: DeleteDeviceProfileRequest
      properties: {}
    DeleteFuotaTaskRequest:
      type: object
      title: DeleteFuotaTaskRequest
      properties: {}
    DeleteMulticastGroupRequest:
      type: object
      title: DeleteMulticastGroupRequest
      properties: {}
    DeleteNetworkAnalyzerConfigurationRequest:
      type: object
      title: DeleteNetworkAnalyzerConfigurationRequest
      properties: {}
    MessageId:
      type: string
    DeleteQueuedMessagesRequest:
      type: object
      title: DeleteQueuedMessagesRequest
      properties: {}
    DeleteServiceProfileRequest:
      type: object
      title: DeleteServiceProfileRequest
      properties: {}
    ImportTaskId:
      type: string
      maxLength: 256
    DeleteWirelessDeviceImportTaskRequest:
      type: object
      title: DeleteWirelessDeviceImportTaskRequest
      properties: {}
    DeleteWirelessDeviceRequest:
      type: object
      title: DeleteWirelessDeviceRequest
      properties: {}
    DeleteWirelessGatewayRequest:
      type: object
      title: DeleteWirelessGatewayRequest
      properties: {}
    DeleteWirelessGatewayTaskDefinitionRequest:
      type: object
      title: DeleteWirelessGatewayTaskDefinitionRequest
      properties: {}
    DeleteWirelessGatewayTaskRequest:
      type: object
      title: DeleteWirelessGatewayTaskRequest
      properties: {}
    Identifier:
      type: string
      maxLength: 256
    DeregisterWirelessDeviceRequest:
      type: object
      title: DeregisterWirelessDeviceRequest
      properties: {}
    Destinations:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/DestinationArn"
            - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the resource.
        ExpressionType:
          allOf:
            - $ref: "#/components/schemas/ExpressionType"
            - description: The type of value in <code>Expression</code>.
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The rule name or topic rule to send messages to.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the resource.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The ARN of the IAM Role that authorizes the destination.
      description: Describes a destination.
    DestinationList:
      type: array
      items:
        $ref: "#/components/schemas/Destinations"
    DevStatusReqFreq:
      type: integer
      minimum: 0
      maximum: 2147483647
    DeviceCertificateList:
      type: array
      description: List of device certificate chain.
      items:
        $ref: "#/components/schemas/CertificateList"
    DeviceCreationFileList:
      type: array
      items:
        $ref: "#/components/schemas/DeviceCreationFile"
    DeviceName:
      type: string
    DeviceProfile:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileArn"
            - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileName"
            - description: The name of the resource.
        Id:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileId"
            - description: The ID of the device profile.
      description: Describes a device profile.
    DeviceProfileList:
      type: array
      items:
        $ref: "#/components/schemas/DeviceProfile"
    DeviceProfileType:
      type: string
      enum:
        - Sidewalk
        - LoRaWAN
    DeviceRegistrationStateEventConfiguration:
      type: object
      properties:
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkEventNotificationConfigurations"
            - description: Device registration state event configuration object for enabling or disabling Sidewalk related event topics.
        WirelessDeviceIdEventTopic:
          allOf:
            - $ref: "#/components/schemas/EventNotificationTopicStatus"
            - description: Denotes whether the wireless device ID device registration state event topic is enabled or disabled.
      description: Device registration state event configuration object for enabling and disabling relevant topics.
    DeviceRegistrationStateResourceTypeEventConfiguration:
      type: object
      properties:
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkResourceTypeEventConfiguration"
            - description: Device registration resource type state event configuration object for enabling or disabling Sidewalk related event topics.
      description: Device registration state resource type event configuration object for enabling or disabling topic.
    DeviceState:
      type: string
      enum:
        - Provisioned
        - RegisteredNotSeen
        - RegisteredReachable
        - RegisteredUnreachable
      description: Device state defines the device status of sidewalk device.
    PartnerAccountId:
      type: string
      maxLength: 256
    PartnerType:
      type: string
      enum:
        - Sidewalk
    DisassociateAwsAccountFromPartnerAccountRequest:
      type: object
      title: DisassociateAwsAccountFromPartnerAccountRequest
      properties: {}
    DisassociateMulticastGroupFromFuotaTaskRequest:
      type: object
      title: DisassociateMulticastGroupFromFuotaTaskRequest
      properties: {}
    DisassociateWirelessDeviceFromFuotaTaskRequest:
      type: object
      title: DisassociateWirelessDeviceFromFuotaTaskRequest
      properties: {}
    DisassociateWirelessDeviceFromMulticastGroupRequest:
      type: object
      title: DisassociateWirelessDeviceFromMulticastGroupRequest
      properties: {}
    DisassociateWirelessDeviceFromThingRequest:
      type: object
      title: DisassociateWirelessDeviceFromThingRequest
      properties: {}
    DisassociateWirelessGatewayFromCertificateRequest:
      type: object
      title: DisassociateWirelessGatewayFromCertificateRequest
      properties: {}
    DisassociateWirelessGatewayFromThingRequest:
      type: object
      title: DisassociateWirelessGatewayFromThingRequest
      properties: {}
    DlBucketSize:
      type: integer
      minimum: 0
      maximum: 2147483647
    DlRate:
      type: integer
      minimum: 0
      maximum: 2147483647
    DlRatePolicy:
      type: string
      maxLength: 256
    Double:
      type: number
      format: double
    DownlinkFrequency:
      type: integer
      minimum: 100000000
      maximum: 1000000000
    DownlinkMode:
      type: string
      enum:
        - SEQUENTIAL
        - CONCURRENT
        - USING_UPLINK_GATEWAY
    TransmitMode:
      type: integer
      minimum: 0
      maximum: 1
    ISODateTimeString:
      type: string
      pattern: ^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$
    DownlinkQueueMessage:
      type: object
      properties:
        MessageId:
          allOf:
            - $ref: "#/components/schemas/MessageId"
            - description: " The message ID assigned by IoT Wireless to each downlink message, which helps identify the message."
        TransmitMode:
          allOf:
            - $ref: "#/components/schemas/TransmitMode"
            - description: The transmit mode to use for sending data to the wireless device. This can be <code>0</code> for UM (unacknowledge mode) or <code>1</code> for AM (acknowledge mode).
        ReceivedAt:
          allOf:
            - $ref: "#/components/schemas/ISODateTimeString"
            - description: The time at which Iot Wireless received the downlink message.
        LoRaWAN:
          $ref: "#/components/schemas/LoRaWANSendDataToDevice"
      description: The message in the downlink queue.
    DownlinkQueueMessagesList:
      type: array
      items:
        $ref: "#/components/schemas/DownlinkQueueMessage"
    DrMax:
      type: integer
      minimum: 0
      maximum: 15
    DrMin:
      type: integer
      minimum: 0
      maximum: 15
    EARFCN:
      type: integer
      minimum: 0
      maximum: 262143
    EndPoint:
      type: string
      minLength: 1
      maxLength: 256
    EutranCid:
      type: integer
      minimum: 0
      maximum: 268435455
    Event:
      type: string
      enum:
        - discovered
        - lost
        - ack
        - nack
        - passthrough
      description: Sidewalk device status notification.
    IdentifierType:
      type: string
      enum:
        - PartnerAccountId
        - DevEui
        - GatewayEui
        - WirelessDeviceId
        - WirelessGatewayId
    EventNotificationPartnerType:
      type: string
      enum:
        - Sidewalk
    EventNotificationItemConfigurations:
      type: object
      properties:
        DeviceRegistrationState:
          allOf:
            - $ref: "#/components/schemas/DeviceRegistrationStateEventConfiguration"
            - description: Device registration state event configuration for an event configuration item.
        Proximity:
          allOf:
            - $ref: "#/components/schemas/ProximityEventConfiguration"
            - description: Proximity event configuration for an event configuration item.
        Join:
          allOf:
            - $ref: "#/components/schemas/JoinEventConfiguration"
            - description: Join event configuration for an event configuration item.
        ConnectionStatus:
          allOf:
            - $ref: "#/components/schemas/ConnectionStatusEventConfiguration"
            - description: Connection status event configuration for an event configuration item.
        MessageDeliveryStatus:
          allOf:
            - $ref: "#/components/schemas/MessageDeliveryStatusEventConfiguration"
            - description: Message delivery status event configuration for an event configuration item.
      description: Object of all event configurations and the status of the event topics.
    EventConfigurationItem:
      type: object
      properties:
        Identifier:
          allOf:
            - $ref: "#/components/schemas/Identifier"
            - description: Resource identifier opted in for event messaging.
        IdentifierType:
          allOf:
            - $ref: "#/components/schemas/IdentifierType"
            - description: Identifier type of the particular resource identifier for event configuration.
        PartnerType:
          allOf:
            - $ref: "#/components/schemas/EventNotificationPartnerType"
            - description: Partner type of the resource if the identifier type is PartnerAccountId.
        Events:
          $ref: "#/components/schemas/EventNotificationItemConfigurations"
      description: Event configuration object for a single resource.
    EventConfigurationsList:
      type: array
      items:
        $ref: "#/components/schemas/EventConfigurationItem"
    ProximityEventConfiguration:
      type: object
      properties:
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkEventNotificationConfigurations"
            - description: Proximity event configuration object for enabling or disabling Sidewalk related event topics.
        WirelessDeviceIdEventTopic:
          allOf:
            - $ref: "#/components/schemas/EventNotificationTopicStatus"
            - description: Denotes whether the wireless device ID proximity event topic is enabled or disabled.
      description: Proximity event configuration object for enabling and disabling relevant topics.
    JoinEventConfiguration:
      type: object
      properties:
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANJoinEventNotificationConfigurations"
            - description: Join event configuration object for enabling or disabling LoRaWAN related event topics.
        WirelessDeviceIdEventTopic:
          allOf:
            - $ref: "#/components/schemas/EventNotificationTopicStatus"
            - description: Denotes whether the wireless device ID join event topic is enabled or disabled.
      description: Join event configuration object for enabling or disabling topic.
    MessageDeliveryStatusEventConfiguration:
      type: object
      properties:
        Sidewalk:
          $ref: "#/components/schemas/SidewalkEventNotificationConfigurations"
        WirelessDeviceIdEventTopic:
          allOf:
            - $ref: "#/components/schemas/EventNotificationTopicStatus"
            - description: Denotes whether the wireless device ID message delivery status event topic is enabled or disabled.
      description: Message delivery status event configuration object for enabling and disabling relevant topics.
    EventNotificationResourceType:
      type: string
      enum:
        - SidewalkAccount
        - WirelessDevice
        - WirelessGateway
    FNwkSIntKey:
      type: string
      pattern: "[a-fA-F0-9]{32}"
    Positioning:
      type: object
      properties:
        ClockSync:
          $ref: "#/components/schemas/FPort"
        Stream:
          $ref: "#/components/schemas/FPort"
        Gnss:
          $ref: "#/components/schemas/FPort"
      description: The FPorts for the position information.
    PresetFreq:
      type: integer
      minimum: 1000000
      maximum: 16700000
    Fingerprint:
      type: string
      pattern: "[a-fA-F0-9]{64}"
      minLength: 64
      maxLength: 64
      format: password
    FuotaDeviceStatus:
      type: string
      enum:
        - Initial
        - Package_Not_Supported
        - FragAlgo_unsupported
        - Not_enough_memory
        - FragIndex_unsupported
        - Wrong_descriptor
        - SessionCnt_replay
        - MissingFrag
        - MemoryError
        - MICError
        - Successful
      description: The status of a wireless device in a FUOTA task.
    FuotaTask:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/FuotaTaskId"
        Arn:
          $ref: "#/components/schemas/FuotaTaskArn"
        Name:
          $ref: "#/components/schemas/FuotaTaskName"
      description: A FUOTA task.
    FuotaTaskList:
      type: array
      description: Lists the FUOTA tasks registered to your AWS account.
      items:
        $ref: "#/components/schemas/FuotaTask"
    FuotaTaskStatus:
      type: string
      enum:
        - Pending
        - FuotaSession_Waiting
        - In_FuotaSession
        - FuotaDone
        - Delete_Waiting
      description: The status of a FUOTA task.
    GatewayListItem:
      type: object
      required:
        - GatewayId
        - DownlinkFrequency
      properties:
        GatewayId:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayId"
            - description: The ID of the wireless gateways that you want to add to the list of gateways when sending downlink messages.
        DownlinkFrequency:
          allOf:
            - $ref: "#/components/schemas/DownlinkFrequency"
            - description: The frequency to use for the gateways when sending a downlink message to the wireless device.
      description: Gateway list item object that specifies the frequency and list of gateways for which the downlink message should be sent.
    GatewayList:
      type: array
      items:
        $ref: "#/components/schemas/GatewayListItem"
    GenAppKey:
      type: string
      pattern: "[a-fA-F0-9]{32}"
    GeoJsonPayload:
      type: string
    GeranCid:
      type: integer
      minimum: 0
      maximum: 65535
    GetDestinationRequest:
      type: object
      title: GetDestinationRequest
      properties: {}
    GetDeviceProfileRequest:
      type: object
      title: GetDeviceProfileRequest
      properties: {}
    SidewalkGetDeviceProfile:
      type: object
      properties:
        ApplicationServerPublicKey:
          allOf:
            - $ref: "#/components/schemas/ApplicationServerPublicKey"
            - description: The Sidewalk application server public key.
        QualificationStatus:
          allOf:
            - $ref: "#/components/schemas/QualificationStatus"
            - description: Gets information about the certification status of a Sidewalk device profile.
        DakCertificateMetadata:
          allOf:
            - $ref: "#/components/schemas/DakCertificateMetadataList"
            - description: The DAK certificate information of the Sidewalk device profile.
      description: Gets information about a Sidewalk device profile.
    GetEventConfigurationByResourceTypesRequest:
      type: object
      title: GetEventConfigurationByResourceTypesRequest
      properties: {}
    ProximityResourceTypeEventConfiguration:
      type: object
      properties:
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkResourceTypeEventConfiguration"
            - description: Proximity resource type event configuration object for enabling and disabling wireless device topic.
      description: Proximity resource type event configuration object for enabling or disabling topic.
    JoinResourceTypeEventConfiguration:
      type: object
      properties:
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANJoinResourceTypeEventConfiguration"
            - description: Join resource type event configuration object for enabling or disabling LoRaWAN related event topics.
      description: Join resource type event configuration object for enabling or disabling topic.
    MessageDeliveryStatusResourceTypeEventConfiguration:
      type: object
      properties:
        Sidewalk:
          $ref: "#/components/schemas/SidewalkResourceTypeEventConfiguration"
      description: Message delivery status resource type event configuration object for enabling or disabling relevant topic.
    GetFuotaTaskRequest:
      type: object
      title: GetFuotaTaskRequest
      properties: {}
    LoRaWANFuotaTaskGetInfo:
      type: object
      properties:
        RfRegion:
          $ref: "#/components/schemas/RfRegion"
        StartTime:
          $ref: "#/components/schemas/StartTime"
      description: The LoRaWAN information returned from getting a FUOTA task.
    GetLogLevelsByResourceTypesRequest:
      type: object
      title: GetLogLevelsByResourceTypesRequest
      properties: {}
    WirelessGatewayLogOptionList:
      type: array
      description: The list of wireless gateway log options.
      items:
        $ref: "#/components/schemas/WirelessGatewayLogOption"
    WirelessDeviceLogOptionList:
      type: array
      description: The list of wireless device log options.
      items:
        $ref: "#/components/schemas/WirelessDeviceLogOption"
    GetMulticastGroupRequest:
      type: object
      title: GetMulticastGroupRequest
      properties: {}
    MulticastGroupStatus:
      type: string
      description: The status of the multicast group.
      maxLength: 256
    LoRaWANMulticastGet:
      type: object
      properties:
        RfRegion:
          $ref: "#/components/schemas/SupportedRfRegion"
        DlClass:
          $ref: "#/components/schemas/DlClass"
        NumberOfDevicesRequested:
          $ref: "#/components/schemas/NumberOfDevicesRequested"
        NumberOfDevicesInGroup:
          $ref: "#/components/schemas/NumberOfDevicesInGroup"
      description: The LoRaWAN information that is to be returned from getting multicast group information.
    GetMulticastGroupSessionRequest:
      type: object
      title: GetMulticastGroupSessionRequest
      properties: {}
    LoRaWANMulticastSession:
      type: object
      properties:
        DlDr:
          $ref: "#/components/schemas/DlDr"
        DlFreq:
          $ref: "#/components/schemas/DlFreq"
        SessionStartTime:
          $ref: "#/components/schemas/SessionStartTimeTimestamp"
        SessionTimeout:
          $ref: "#/components/schemas/SessionTimeout"
        PingSlotPeriod:
          allOf:
            - $ref: "#/components/schemas/PingSlotPeriod"
            - description: The PingSlotPeriod value.
      description: The LoRaWAN information used with the multicast session.
    GetNetworkAnalyzerConfigurationRequest:
      type: object
      title: GetNetworkAnalyzerConfigurationRequest
      properties: {}
    GetPartnerAccountRequest:
      type: object
      title: GetPartnerAccountRequest
      properties: {}
    SidewalkAccountInfoWithFingerprint:
      type: object
      properties:
        AmazonId:
          allOf:
            - $ref: "#/components/schemas/AmazonId"
            - description: The Sidewalk Amazon ID.
        Fingerprint:
          allOf:
            - $ref: "#/components/schemas/Fingerprint"
            - description: The fingerprint of the Sidewalk application server private key.
        Arn:
          allOf:
            - $ref: "#/components/schemas/PartnerAccountArn"
            - description: The Amazon Resource Name of the resource.
      description: Information about a Sidewalk account.
    PositionResourceIdentifier:
      type: string
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
    PositionResourceType:
      type: string
      enum:
        - WirelessDevice
        - WirelessGateway
    GetPositionConfigurationRequest:
      type: object
      deprecated: true
      title: GetPositionConfigurationRequest
      properties: {}
      description: This operation is no longer supported.
    PositionSolverDetails:
      type: object
      properties:
        SemtechGnss:
          allOf:
            - $ref: "#/components/schemas/SemtechGnssDetail"
            - description: The Semtech GNSS solver object details.
      description: The wrapper for position solver details.
    WiFiAccessPoints:
      type: array
      items:
        $ref: "#/components/schemas/WiFiAccessPoint"
    Ip:
      type: object
      required:
        - IpAddress
      properties:
        IpAddress:
          allOf:
            - $ref: "#/components/schemas/IPAddress"
            - description: IP address information.
      description: IP address used for resolving device location.
    Gnss:
      type: object
      required:
        - Payload
      properties:
        Payload:
          allOf:
            - $ref: "#/components/schemas/GnssNav"
            - description: Payload that contains the GNSS scan result, or NAV message, in hexadecimal notation.
        CaptureTime:
          allOf:
            - $ref: "#/components/schemas/GPST"
            - description: Optional parameter that gives an estimate of the time when the GNSS scan information is taken, in seconds GPS time (GPST). If capture time is not specified, the local server time is used.
        CaptureTimeAccuracy:
          allOf:
            - $ref: "#/components/schemas/CaptureTimeAccuracy"
            - description: Optional value that gives the capture time estimate accuracy, in seconds. If capture time accuracy is not specified, default value of 300 is used.
        AssistPosition:
          allOf:
            - $ref: "#/components/schemas/AssistPosition"
            - description: Optional assistance position information, specified using latitude and longitude values in degrees. The coordinates are inside the WGS84 reference frame.
        AssistAltitude:
          allOf:
            - $ref: "#/components/schemas/Coordinate"
            - description: Optional assistance altitude, which is the altitude of the device at capture time, specified in meters above the WGS84 reference ellipsoid.
        Use2DSolver:
          allOf:
            - $ref: "#/components/schemas/Use2DSolver"
            - description: Optional parameter that forces 2D solve, which modifies the positioning algorithm to a 2D solution problem. When this parameter is specified, the assistance altitude should have an accuracy of at least 10 meters.
      description: Global navigation satellite system (GNSS) object used for positioning.
    GetPositionEstimateRequest:
      type: object
      title: GetPositionEstimateRequest
      properties:
        WiFiAccessPoints:
          allOf:
            - $ref: "#/components/schemas/WiFiAccessPoints"
            - description: Retrieves an estimated device position by resolving WLAN measurement data. The position is resolved using HERE's Wi-Fi based solver.
        CellTowers:
          allOf:
            - $ref: "#/components/schemas/CellTowers"
            - description: Retrieves an estimated device position by resolving measurement data from cellular radio towers. The position is resolved using HERE's cellular-based solver.
        Ip:
          allOf:
            - $ref: "#/components/schemas/Ip"
            - description: Retrieves an estimated device position by resolving the IP address information from the device. The position is resolved using MaxMind's IP-based solver.
        Gnss:
          allOf:
            - $ref: "#/components/schemas/Gnss"
            - description: Retrieves an estimated device position by resolving the global navigation satellite system (GNSS) scan data. The position is resolved using the GNSS solver powered by LoRa Cloud.
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/CreationDate"
            - description: Optional information that specifies the time when the position information will be resolved. It uses the Unix timestamp format. If not specified, the time at which the request was received will be used.
    GetPositionRequest:
      type: object
      deprecated: true
      title: GetPositionRequest
      properties: {}
      description: This operation is no longer supported.
    PositionCoordinate:
      type: array
      items:
        $ref: "#/components/schemas/PositionCoordinateValue"
    PositionSolverType:
      type: string
      enum:
        - GNSS
    PositionSolverProvider:
      type: string
      enum:
        - Semtech
    PositionSolverVersion:
      type: string
      minLength: 0
      maxLength: 50
    GetResourceEventConfigurationRequest:
      type: object
      title: GetResourceEventConfigurationRequest
      properties: {}
    ResourceIdentifier:
      type: string
      description: The identifier of the resource. For a Wireless Device, it is the wireless device ID. For a wireless gateway, it is the wireless gateway ID.
      maxLength: 256
    ResourceType:
      type: string
    GetResourceLogLevelRequest:
      type: object
      title: GetResourceLogLevelRequest
      properties: {}
    GetResourcePositionRequest:
      type: object
      title: GetResourcePositionRequest
      properties: {}
    WirelessGatewayServiceType:
      type: string
      enum:
        - CUPS
        - LNS
    GetServiceEndpointRequest:
      type: object
      title: GetServiceEndpointRequest
      properties: {}
    GetServiceProfileRequest:
      type: object
      title: GetServiceProfileRequest
      properties: {}
    LoRaWANGetServiceProfileInfo:
      type: object
      properties:
        UlRate:
          allOf:
            - $ref: "#/components/schemas/UlRate"
            - description: The ULRate value.
        UlBucketSize:
          allOf:
            - $ref: "#/components/schemas/UlBucketSize"
            - description: The ULBucketSize value.
        UlRatePolicy:
          allOf:
            - $ref: "#/components/schemas/UlRatePolicy"
            - description: The ULRatePolicy value.
        DlRate:
          allOf:
            - $ref: "#/components/schemas/DlRate"
            - description: The DLRate value.
        DlBucketSize:
          allOf:
            - $ref: "#/components/schemas/DlBucketSize"
            - description: The DLBucketSize value.
        DlRatePolicy:
          allOf:
            - $ref: "#/components/schemas/DlRatePolicy"
            - description: The DLRatePolicy value.
        AddGwMetadata:
          allOf:
            - $ref: "#/components/schemas/AddGwMetadata"
            - description: The AddGWMetaData value.
        DevStatusReqFreq:
          allOf:
            - $ref: "#/components/schemas/DevStatusReqFreq"
            - description: The DevStatusReqFreq value.
        ReportDevStatusBattery:
          allOf:
            - $ref: "#/components/schemas/ReportDevStatusBattery"
            - description: The ReportDevStatusBattery value.
        ReportDevStatusMargin:
          allOf:
            - $ref: "#/components/schemas/ReportDevStatusMargin"
            - description: The ReportDevStatusMargin value.
        DrMin:
          allOf:
            - $ref: "#/components/schemas/DrMin"
            - description: The DRMin value.
        DrMax:
          allOf:
            - $ref: "#/components/schemas/DrMax"
            - description: The DRMax value.
        ChannelMask:
          allOf:
            - $ref: "#/components/schemas/ChannelMask"
            - description: The ChannelMask value.
        PrAllowed:
          allOf:
            - $ref: "#/components/schemas/PrAllowed"
            - description: The PRAllowed value that describes whether passive roaming is allowed.
        HrAllowed:
          allOf:
            - $ref: "#/components/schemas/HrAllowed"
            - description: The HRAllowed value that describes whether handover roaming is allowed.
        RaAllowed:
          allOf:
            - $ref: "#/components/schemas/RaAllowed"
            - description: The RAAllowed value that describes whether roaming activation is allowed.
        NwkGeoLoc:
          allOf:
            - $ref: "#/components/schemas/NwkGeoLoc"
            - description: The NwkGeoLoc value.
        TargetPer:
          allOf:
            - $ref: "#/components/schemas/TargetPer"
            - description: The TargetPER value.
        MinGwDiversity:
          allOf:
            - $ref: "#/components/schemas/MinGwDiversity"
            - description: The MinGwDiversity value.
      description: LoRaWANGetServiceProfileInfo object.
    GetWirelessDeviceImportTaskRequest:
      type: object
      title: GetWirelessDeviceImportTaskRequest
      properties: {}
    ImportTaskArn:
      type: string
      maxLength: 128
    SidewalkGetStartImportInfo:
      type: object
      properties:
        DeviceCreationFileList:
          allOf:
            - $ref: "#/components/schemas/DeviceCreationFileList"
            - description: List of Sidewalk devices that are added to the import task.
        Role:
          allOf:
            - $ref: "#/components/schemas/Role"
            - description: The IAM role that allows AWS IoT Wireless to access the CSV file in the S3 bucket.
      description: Sidewalk-related information for devices in an import task that are being onboarded.
    ImportTaskStatus:
      type: string
      enum:
        - INITIALIZING
        - INITIALIZED
        - PENDING
        - COMPLETE
        - FAILED
        - DELETING
    StatusReason:
      type: string
    ImportedWirelessDeviceCount:
      type: integer
    WirelessDeviceIdType:
      type: string
      enum:
        - WirelessDeviceId
        - DevEui
        - ThingName
        - SidewalkManufacturingSn
    GetWirelessDeviceRequest:
      type: object
      title: GetWirelessDeviceRequest
      properties: {}
    ThingName:
      type: string
    SidewalkDevice:
      type: object
      properties:
        AmazonId:
          $ref: "#/components/schemas/AmazonId"
        SidewalkId:
          allOf:
            - $ref: "#/components/schemas/SidewalkId"
            - description: The sidewalk device identification.
        SidewalkManufacturingSn:
          allOf:
            - $ref: "#/components/schemas/SidewalkManufacturingSn"
            - description: The Sidewalk manufacturing series number.
        DeviceCertificates:
          allOf:
            - $ref: "#/components/schemas/DeviceCertificateList"
            - description: The sidewalk device certificates for Ed25519 and P256r1.
        PrivateKeys:
          allOf:
            - $ref: "#/components/schemas/PrivateKeysList"
            - description: The Sidewalk device private keys that will be used for onboarding the device.
        DeviceProfileId:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileId"
            - description: The ID of the Sidewalk device profile.
        CertificateId:
          allOf:
            - $ref: "#/components/schemas/DakCertificateId"
            - description: The ID of the Sidewalk device profile.
        Status:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceSidewalkStatus"
            - description: The Sidewalk device status, such as provisioned or registered.
      description: Sidewalk device object.
    GetWirelessDeviceStatisticsRequest:
      type: object
      title: GetWirelessDeviceStatisticsRequest
      properties: {}
    LoRaWANDeviceMetadata:
      type: object
      properties:
        DevEui:
          allOf:
            - $ref: "#/components/schemas/DevEui"
            - description: The DevEUI value.
        FPort:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The FPort value.
        DataRate:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The DataRate value.
        Frequency:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The device's channel frequency in Hz.
        Timestamp:
          allOf:
            - $ref: "#/components/schemas/ISODateTimeString"
            - description: The date and time of the metadata.
        Gateways:
          allOf:
            - $ref: "#/components/schemas/LoRaWANGatewayMetadataList"
            - description: Information about the gateways accessed by the device.
      description: LoRaWAN device metatdata.
    SidewalkDeviceMetadata:
      type: object
      properties:
        Rssi:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The RSSI value.
        BatteryLevel:
          allOf:
            - $ref: "#/components/schemas/BatteryLevel"
            - description: Sidewalk device battery level.
        Event:
          allOf:
            - $ref: "#/components/schemas/Event"
            - description: Sidewalk device status notification.
        DeviceState:
          allOf:
            - $ref: "#/components/schemas/DeviceState"
            - description: Device state defines the device status of sidewalk device.
      description: MetaData for Sidewalk device.
    GetWirelessGatewayCertificateRequest:
      type: object
      title: GetWirelessGatewayCertificateRequest
      properties: {}
    GetWirelessGatewayFirmwareInformationRequest:
      type: object
      title: GetWirelessGatewayFirmwareInformationRequest
      properties: {}
    LoRaWANGatewayCurrentVersion:
      type: object
      properties:
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/LoRaWANGatewayVersion"
            - description: The version of the gateways that should receive the update.
      description: LoRaWANGatewayCurrentVersion object.
    WirelessGatewayIdType:
      type: string
      enum:
        - GatewayEui
        - WirelessGatewayId
        - ThingName
    GetWirelessGatewayRequest:
      type: object
      title: GetWirelessGatewayRequest
      properties: {}
    GetWirelessGatewayStatisticsRequest:
      type: object
      title: GetWirelessGatewayStatisticsRequest
      properties: {}
    GetWirelessGatewayTaskDefinitionRequest:
      type: object
      title: GetWirelessGatewayTaskDefinitionRequest
      properties: {}
    GetWirelessGatewayTaskRequest:
      type: object
      title: GetWirelessGatewayTaskRequest
      properties: {}
    LAC:
      type: integer
      minimum: 1
      maximum: 65535
    GlobalIdentity:
      type: object
      required:
        - Lac
        - GeranCid
      properties:
        Lac:
          allOf:
            - $ref: "#/components/schemas/LAC"
            - description: Location area code of the global identity.
        GeranCid:
          allOf:
            - $ref: "#/components/schemas/GeranCid"
            - description: GERAN (GSM EDGE Radio Access Network) cell global identifier.
      description: Global identity information.
    GsmObj:
      type: object
      required:
        - Mcc
        - Mnc
        - Lac
        - GeranCid
      properties:
        Mcc:
          allOf:
            - $ref: "#/components/schemas/MCC"
            - description: Mobile Country Code.
        Mnc:
          allOf:
            - $ref: "#/components/schemas/MNC"
            - description: Mobile Network Code.
        Lac:
          allOf:
            - $ref: "#/components/schemas/LAC"
            - description: Location area code.
        GeranCid:
          allOf:
            - $ref: "#/components/schemas/GeranCid"
            - description: GERAN (GSM EDGE Radio Access Network) Cell Global Identifier.
        GsmLocalId:
          allOf:
            - $ref: "#/components/schemas/GsmLocalId"
            - description: GSM local identification (local ID) information.
        GsmTimingAdvance:
          allOf:
            - $ref: "#/components/schemas/GsmTimingAdvance"
            - description: Timing advance value, which corresponds to the length of time a signal takes to reach the base station from a mobile phone.
        RxLevel:
          allOf:
            - $ref: "#/components/schemas/RxLevel"
            - description: Rx level, which is the received signal power, measured in dBm (decibel-milliwatts).
        GsmNmr:
          allOf:
            - $ref: "#/components/schemas/GsmNmrList"
            - description: GSM object for network measurement reports.
      description: GSM object.
    GsmLocalId:
      type: object
      required:
        - Bsic
        - Bcch
      properties:
        Bsic:
          allOf:
            - $ref: "#/components/schemas/BSIC"
            - description: GSM base station identity code (BSIC).
        Bcch:
          allOf:
            - $ref: "#/components/schemas/BCCH"
            - description: GSM broadcast control channel.
      description: GSM local ID information, which corresponds to the local identification parameters of a GSM cell.
    GsmNmrObj:
      type: object
      required:
        - Bsic
        - Bcch
      properties:
        Bsic:
          allOf:
            - $ref: "#/components/schemas/BSIC"
            - description: GSM base station identity code (BSIC).
        Bcch:
          allOf:
            - $ref: "#/components/schemas/BCCH"
            - description: GSM broadcast control channel.
        RxLevel:
          allOf:
            - $ref: "#/components/schemas/RxLevel"
            - description: Rx level, which is the received signal power, measured in dBm (decibel-milliwatts).
        GlobalIdentity:
          allOf:
            - $ref: "#/components/schemas/GlobalIdentity"
            - description: Global identity information of the GSM object.
      description: GSM object for network measurement reports.
    GsmNmrList:
      type: array
      items:
        $ref: "#/components/schemas/GsmNmrObj"
      minItems: 1
      maxItems: 32
    RxLevel:
      type: integer
      minimum: -110
      maximum: -25
    MCC:
      type: integer
      minimum: 200
      maximum: 999
    MNC:
      type: integer
      minimum: 0
      maximum: 999
    GsmTimingAdvance:
      type: integer
      minimum: 0
      maximum: 63
    HrAllowed:
      type: boolean
    OnboardStatus:
      type: string
      enum:
        - INITIALIZED
        - PENDING
        - ONBOARDED
        - FAILED
    OnboardStatusReason:
      type: string
    LastUpdateTime:
      type: string
      format: date-time
    ImportedSidewalkDevice:
      type: object
      properties:
        SidewalkManufacturingSn:
          allOf:
            - $ref: "#/components/schemas/SidewalkManufacturingSn"
            - description: The Sidewalk manufacturing serial number (SMSN) of the Sidewalk device.
        OnboardingStatus:
          allOf:
            - $ref: "#/components/schemas/OnboardStatus"
            - description: The onboarding status of the Sidewalk device in the import task.
        OnboardingStatusReason:
          allOf:
            - $ref: "#/components/schemas/OnboardStatusReason"
            - description: The reason for the onboarding status information for the Sidewalk device.
        LastUpdateTime:
          allOf:
            - $ref: "#/components/schemas/LastUpdateTime"
            - description: The time at which the status information was last updated.
      description: Information about a Sidewalk device that has been added to an import task.
    ImportedWirelessDevice:
      type: object
      properties:
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/ImportedSidewalkDevice"
            - description: The Sidewalk-related information about a device that has been added to an import task.
      description: Information about a wireless device that has been added to an import task.
    ImportedWirelessDeviceList:
      type: array
      items:
        $ref: "#/components/schemas/ImportedWirelessDevice"
    Integer:
      type: integer
    JoinEui:
      type: string
      pattern: "[a-fA-F0-9]{16}"
    MaxResults:
      type: integer
      description: The maximum number of results to return in this operation.
      minimum: 0
      maximum: 250
    NextToken:
      type: string
      maxLength: 4096
    ListDestinationsRequest:
      type: object
      title: ListDestinationsRequest
      properties: {}
    ListDeviceProfilesRequest:
      type: object
      title: ListDeviceProfilesRequest
      properties: {}
    ListDevicesForWirelessDeviceImportTaskRequest:
      type: object
      title: ListDevicesForWirelessDeviceImportTaskRequest
      properties: {}
    ListEventConfigurationsRequest:
      type: object
      title: ListEventConfigurationsRequest
      properties: {}
    ListFuotaTasksRequest:
      type: object
      title: ListFuotaTasksRequest
      properties: {}
    ListMulticastGroupsByFuotaTaskRequest:
      type: object
      title: ListMulticastGroupsByFuotaTaskRequest
      properties: {}
    MulticastGroupListByFuotaTask:
      type: array
      description: List of multicast groups associated with a FUOTA task.
      items:
        $ref: "#/components/schemas/MulticastGroupByFuotaTask"
    ListMulticastGroupsRequest:
      type: object
      title: ListMulticastGroupsRequest
      properties: {}
    MulticastGroupList:
      type: array
      description: List of multicast groups.
      items:
        $ref: "#/components/schemas/MulticastGroup"
    ListNetworkAnalyzerConfigurationsRequest:
      type: object
      title: ListNetworkAnalyzerConfigurationsRequest
      properties: {}
    NetworkAnalyzerConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/NetworkAnalyzerConfigurations"
    ListPartnerAccountsRequest:
      type: object
      title: ListPartnerAccountsRequest
      properties: {}
    SidewalkAccountList:
      type: array
      items:
        $ref: "#/components/schemas/SidewalkAccountInfoWithFingerprint"
    ListPositionConfigurationsRequest:
      type: object
      deprecated: true
      title: ListPositionConfigurationsRequest
      properties: {}
      description: This operation is no longer supported.
    PositionConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/PositionConfigurationItem"
    ListQueuedMessagesRequest:
      type: object
      title: ListQueuedMessagesRequest
      properties: {}
    ListServiceProfilesRequest:
      type: object
      title: ListServiceProfilesRequest
      properties: {}
    ServiceProfileList:
      type: array
      items:
        $ref: "#/components/schemas/ServiceProfile"
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListWirelessDeviceImportTasksRequest:
      type: object
      title: ListWirelessDeviceImportTasksRequest
      properties: {}
    WirelessDeviceImportTaskList:
      type: array
      items:
        $ref: "#/components/schemas/WirelessDeviceImportTask"
    ListWirelessDevicesRequest:
      type: object
      title: ListWirelessDevicesRequest
      properties: {}
    WirelessDeviceStatisticsList:
      type: array
      items:
        $ref: "#/components/schemas/WirelessDeviceStatistics"
    WirelessGatewayTaskDefinitionType:
      type: string
      enum:
        - UPDATE
    ListWirelessGatewayTaskDefinitionsRequest:
      type: object
      title: ListWirelessGatewayTaskDefinitionsRequest
      properties: {}
    WirelessGatewayTaskDefinitionList:
      type: array
      items:
        $ref: "#/components/schemas/UpdateWirelessGatewayTaskEntry"
    ListWirelessGatewaysRequest:
      type: object
      title: ListWirelessGatewaysRequest
      properties: {}
    WirelessGatewayStatisticsList:
      type: array
      items:
        $ref: "#/components/schemas/WirelessGatewayStatistics"
    LoRaWANGatewayMetadataList:
      type: array
      items:
        $ref: "#/components/schemas/LoRaWANGatewayMetadata"
    LoRaWANGatewayVersion:
      type: object
      properties:
        PackageVersion:
          allOf:
            - $ref: "#/components/schemas/PackageVersion"
            - description: The version of the wireless gateway firmware.
        Model:
          allOf:
            - $ref: "#/components/schemas/Model"
            - description: The model number of the wireless gateway.
        Station:
          allOf:
            - $ref: "#/components/schemas/Station"
            - description: The basic station version of the wireless gateway.
      description: LoRaWANGatewayVersion object.
    LoRaWANGatewayMetadata:
      type: object
      properties:
        GatewayEui:
          allOf:
            - $ref: "#/components/schemas/GatewayEui"
            - description: The gateway's EUI value.
        Snr:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The SNR value.
        Rssi:
          allOf:
            - $ref: "#/components/schemas/Double"
            - description: The RSSI value.
      description: LoRaWAN gateway metatdata.
    PackageVersion:
      type: string
      minLength: 1
      maxLength: 32
    Model:
      type: string
      minLength: 1
      maxLength: 4096
    Station:
      type: string
      minLength: 1
      maxLength: 4096
    UlRate:
      type: integer
      minimum: 0
      maximum: 2147483647
    UlBucketSize:
      type: integer
      minimum: 0
      maximum: 2147483647
    UlRatePolicy:
      type: string
      maxLength: 256
    ReportDevStatusBattery:
      type: boolean
    ReportDevStatusMargin:
      type: boolean
    NwkGeoLoc:
      type: boolean
    TargetPer:
      type: integer
      minimum: 0
      maximum: 100
    MinGwDiversity:
      type: integer
      minimum: 1
      maximum: 100
    LoRaWANListDevice:
      type: object
      properties:
        DevEui:
          allOf:
            - $ref: "#/components/schemas/DevEui"
            - description: The DevEUI value.
      description: LoRaWAN object for list functions.
    NumberOfDevicesRequested:
      type: integer
      description: Number of devices that are requested to be associated with the multicast group.
    NumberOfDevicesInGroup:
      type: integer
      description: Number of devices that are associated to the multicast group.
    ParticipatingGateways:
      type: object
      required:
        - DownlinkMode
        - GatewayList
        - TransmissionInterval
      properties:
        DownlinkMode:
          allOf:
            - $ref: "#/components/schemas/DownlinkMode"
            - description: Indicates whether to send the downlink message in sequential mode or concurrent mode, or to use only the chosen gateways from the previous uplink message transmission.
        GatewayList:
          allOf:
            - $ref: "#/components/schemas/GatewayList"
            - description: The list of gateways that you want to use for sending the downlink data traffic.
        TransmissionInterval:
          allOf:
            - $ref: "#/components/schemas/TransmissionInterval"
            - description: The duration of time for which AWS IoT Core for LoRaWAN will wait before transmitting the payload to the next gateway.
      description: Specify the list of gateways to which you want to send downlink data traffic when the wireless device is running in class B or class C mode.
    LoRaWANStartFuotaTask:
      type: object
      properties:
        StartTime:
          $ref: "#/components/schemas/StartTime"
      description: The LoRaWAN information used to start a FUOTA task.
    LoRaWANUpdateDevice:
      type: object
      properties:
        DeviceProfileId:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileId"
            - description: The ID of the device profile for the wireless device.
        ServiceProfileId:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileId"
            - description: The ID of the service profile.
        AbpV1_1:
          allOf:
            - $ref: "#/components/schemas/UpdateAbpV1_1"
            - description: ABP device object for update APIs for v1.1
        AbpV1_0_x:
          allOf:
            - $ref: "#/components/schemas/UpdateAbpV1_0_x"
            - description: ABP device object for update APIs for v1.0.x
        FPorts:
          allOf:
            - $ref: "#/components/schemas/UpdateFPorts"
            - description: FPorts object for the positioning information of the device.
      description: LoRaWAN object for update functions.
    UpdateSignature:
      type: string
      minLength: 1
      maxLength: 4096
    LoRaWANUpdateGatewayTaskEntry:
      type: object
      properties:
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/LoRaWANGatewayVersion"
            - description: The version of the gateways that should receive the update.
        UpdateVersion:
          allOf:
            - $ref: "#/components/schemas/LoRaWANGatewayVersion"
            - description: The firmware version to update the gateway to.
      description: LoRaWANUpdateGatewayTaskEntry object.
    LteObj:
      type: object
      required:
        - Mcc
        - Mnc
        - EutranCid
      properties:
        Mcc:
          allOf:
            - $ref: "#/components/schemas/MCC"
            - description: Mobile Country Code.
        Mnc:
          allOf:
            - $ref: "#/components/schemas/MNC"
            - description: Mobile Network Code.
        EutranCid:
          allOf:
            - $ref: "#/components/schemas/EutranCid"
            - description: E-UTRAN (Evolved Universal Terrestrial Radio Access Network) Cell Global Identifier.
        Tac:
          allOf:
            - $ref: "#/components/schemas/TAC"
            - description: LTE tracking area code.
        LteLocalId:
          allOf:
            - $ref: "#/components/schemas/LteLocalId"
            - description: LTE local identification (local ID) information.
        LteTimingAdvance:
          allOf:
            - $ref: "#/components/schemas/LteTimingAdvance"
            - description: LTE timing advance.
        Rsrp:
          allOf:
            - $ref: "#/components/schemas/RSRP"
            - description: Signal power of the reference signal received, measured in dBm (decibel-milliwatts).
        Rsrq:
          allOf:
            - $ref: "#/components/schemas/RSRQ"
            - description: Signal quality of the reference Signal received, measured in decibels (dB).
        NrCapable:
          allOf:
            - $ref: "#/components/schemas/NRCapable"
            - description: Parameter that determines whether the LTE object is capable of supporting NR (new radio).
        LteNmr:
          allOf:
            - $ref: "#/components/schemas/LteNmrList"
            - description: LTE object for network measurement reports.
      description: LTE object.
    PCI:
      type: integer
      minimum: 0
      maximum: 503
    LteLocalId:
      type: object
      required:
        - Pci
        - Earfcn
      properties:
        Pci:
          allOf:
            - $ref: "#/components/schemas/PCI"
            - description: Physical cell ID.
        Earfcn:
          allOf:
            - $ref: "#/components/schemas/EARFCN"
            - description: Evolved universal terrestrial radio access (E-UTRA) absolute radio frequency channel number (FCN).
      description: LTE local identification (local ID) information.
    LteNmrObj:
      type: object
      required:
        - Pci
        - Earfcn
        - EutranCid
      properties:
        Pci:
          allOf:
            - $ref: "#/components/schemas/PCI"
            - description: Physical cell ID.
        Earfcn:
          allOf:
            - $ref: "#/components/schemas/EARFCN"
            - description: E-UTRA (Evolved universal terrestrial Radio Access) absolute radio frequency channel Number (EARFCN).
        EutranCid:
          allOf:
            - $ref: "#/components/schemas/EutranCid"
            - description: E-UTRAN (Evolved Universal Terrestrial Radio Access Network) cell global identifier (EUTRANCID).
        Rsrp:
          allOf:
            - $ref: "#/components/schemas/RSRP"
            - description: Signal power of the reference signal received, measured in dBm (decibel-milliwatts).
        Rsrq:
          allOf:
            - $ref: "#/components/schemas/RSRQ"
            - description: Signal quality of the reference Signal received, measured in decibels (dB).
      description: LTE object for network measurement reports.
    LteNmrList:
      type: array
      items:
        $ref: "#/components/schemas/LteNmrObj"
      minItems: 1
      maxItems: 32
    RSRP:
      type: integer
      minimum: -140
      maximum: -44
    RSRQ:
      type: number
      format: float
      minimum: -19.5
      maximum: -3
    TAC:
      type: integer
      minimum: 0
      maximum: 65535
    LteTimingAdvance:
      type: integer
      minimum: 0
      maximum: 1282
    NRCapable:
      type: boolean
    MacAddress:
      type: string
      pattern: ^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$
      minLength: 12
      maxLength: 17
    McGroupId:
      type: integer
      description: Id of the multicast group.
      minimum: 1
      maximum: 256
    MessageType:
      type: string
      enum:
        - CUSTOM_COMMAND_ID_NOTIFY
        - CUSTOM_COMMAND_ID_GET
        - CUSTOM_COMMAND_ID_SET
        - CUSTOM_COMMAND_ID_RESP
      description: Sidewalk device message type. Default value is <code>CUSTOM_COMMAND_ID_NOTIFY</code>.
    MulticastDeviceStatus:
      type: string
      maxLength: 256
    MulticastGroup:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/MulticastGroupId"
        Arn:
          $ref: "#/components/schemas/MulticastGroupArn"
        Name:
          $ref: "#/components/schemas/MulticastGroupName"
      description: A multicast group.
    MulticastGroupByFuotaTask:
      type: object
      properties:
        Id:
          $ref: "#/components/schemas/MulticastGroupId"
      description: A multicast group that is associated with a FUOTA task.
    MulticastGroupMessageId:
      type: string
      description: ID of a multicast group message.
      maxLength: 256
    MulticastWirelessMetadata:
      type: object
      properties:
        LoRaWAN:
          $ref: "#/components/schemas/LoRaWANMulticastMetadata"
      description: Wireless metadata that is to be sent to multicast group.
    NetworkAnalyzerConfigurations:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/NetworkAnalyzerConfigurationArn"
            - description: The Amazon Resource Name of the new resource.
        Name:
          $ref: "#/components/schemas/NetworkAnalyzerConfigurationName"
      description: Network analyzer configurations.
    NwkKey:
      type: string
      pattern: "[a-fA-F0-9]{32}"
    NwkSEncKey:
      type: string
      pattern: "[a-fA-F0-9]{32}"
    NwkSKey:
      type: string
      pattern: "[a-fA-F0-9]{32}"
    PSC:
      type: integer
      minimum: 0
      maximum: 511
    TransmissionInterval:
      type: integer
      minimum: 1
      maximum: 604800
    PathLoss:
      type: integer
      minimum: 46
      maximum: 158
    PayloadData:
      type: string
      pattern: ^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$
      description: The binary to be sent to the end device, encoded in base64.
      maxLength: 2048
    PositionConfigurationFec:
      type: string
      enum:
        - ROSE
        - NONE
    PositionConfigurationItem:
      type: object
      properties:
        ResourceIdentifier:
          allOf:
            - $ref: "#/components/schemas/PositionResourceIdentifier"
            - description: Resource identifier for the position configuration.
        ResourceType:
          allOf:
            - $ref: "#/components/schemas/PositionResourceType"
            - description: Resource type of the resource for the position configuration.
        Solvers:
          allOf:
            - $ref: "#/components/schemas/PositionSolverDetails"
            - description: The details of the positioning solver object used to compute the location.
        Destination:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The position data destination that describes the AWS IoT rule that processes the device's position data for use by AWS IoT Core for LoRaWAN.
      description: The wrapper for a position configuration.
    PositionConfigurationStatus:
      type: string
      enum:
        - Enabled
        - Disabled
    PositionSolverConfigurations:
      type: object
      properties:
        SemtechGnss:
          allOf:
            - $ref: "#/components/schemas/SemtechGnssConfiguration"
            - description: The Semtech GNSS solver configuration object.
      description: The wrapper for position solver configurations.
    SemtechGnssDetail:
      type: object
      properties:
        Provider:
          allOf:
            - $ref: "#/components/schemas/PositionSolverProvider"
            - description: The vendor of the solver object.
        Type:
          allOf:
            - $ref: "#/components/schemas/PositionSolverType"
            - description: The type of positioning solver used.
        Status:
          allOf:
            - $ref: "#/components/schemas/PositionConfigurationStatus"
            - description: The status indicating whether the solver is enabled.
        Fec:
          allOf:
            - $ref: "#/components/schemas/PositionConfigurationFec"
            - description: Whether forward error correction is enabled.
      description: Details of the Semtech GNSS solver object.
    PrivateKeysList:
      type: array
      items:
        $ref: "#/components/schemas/CertificateList"
    PutPositionConfigurationRequest:
      type: object
      deprecated: true
      title: PutPositionConfigurationRequest
      properties:
        Solvers:
          allOf:
            - $ref: "#/components/schemas/PositionSolverConfigurations"
            - description: The positioning solvers used to update the position configuration of the resource.
        Destination:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The position data destination that describes the AWS IoT rule that processes the device's position data for use by AWS IoT Core for LoRaWAN.
      description: This operation is no longer supported.
    PutResourceLogLevelRequest:
      type: object
      required:
        - LogLevel
      title: PutResourceLogLevelRequest
      properties:
        LogLevel:
          $ref: "#/components/schemas/LogLevel"
    QualificationStatus:
      type: boolean
    QueryString:
      type: string
      description: Query string used to search for wireless devices as part of the bulk associate and disassociate process.
      maxLength: 4096
    RSCP:
      type: integer
      minimum: -120
      maximum: -25
    RSS:
      type: integer
      minimum: -128
      maximum: 0
    ResetAllResourceLogLevelsRequest:
      type: object
      title: ResetAllResourceLogLevelsRequest
      properties: {}
    ResetResourceLogLevelRequest:
      type: object
      title: ResetResourceLogLevelRequest
      properties: {}
    Result:
      type: string
      maxLength: 2048
    SNwkSIntKey:
      type: string
      pattern: "[a-fA-F0-9]{32}"
    SendDataToMulticastGroupRequest:
      type: object
      required:
        - PayloadData
        - WirelessMetadata
      title: SendDataToMulticastGroupRequest
      properties:
        PayloadData:
          $ref: "#/components/schemas/PayloadData"
        WirelessMetadata:
          $ref: "#/components/schemas/MulticastWirelessMetadata"
    WirelessMetadata:
      type: object
      properties:
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANSendDataToDevice"
            - description: LoRaWAN device info.
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkSendDataToDevice"
            - description: The Sidewalk account credentials.
      description: WirelessMetadata object.
    SendDataToWirelessDeviceRequest:
      type: object
      required:
        - TransmitMode
        - PayloadData
      title: SendDataToWirelessDeviceRequest
      properties:
        TransmitMode:
          allOf:
            - $ref: "#/components/schemas/TransmitMode"
            - description: "The transmit mode to use to send data to the wireless device. Can be: <code>0</code> for UM (unacknowledge mode) or <code>1</code> for AM (acknowledge mode)."
        PayloadData:
          $ref: "#/components/schemas/PayloadData"
        WirelessMetadata:
          allOf:
            - $ref: "#/components/schemas/WirelessMetadata"
            - description: Metadata about the message request.
    Seq:
      type: integer
      minimum: 0
      maximum: 16383
    ServiceProfile:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileArn"
            - description: The Amazon Resource Name of the resource.
        Name:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileName"
            - description: The name of the resource.
        Id:
          allOf:
            - $ref: "#/components/schemas/ServiceProfileId"
            - description: The ID of the service profile.
      description: Information about a service profile.
    SidewalkId:
      type: string
      description: The sidewalk device identification.
      maxLength: 256
    WirelessDeviceSidewalkStatus:
      type: string
      enum:
        - PROVISIONED
        - REGISTERED
        - ACTIVATED
        - UNKNOWN
    SidewalkListDevice:
      type: object
      properties:
        AmazonId:
          allOf:
            - $ref: "#/components/schemas/AmazonId"
            - description: The Sidewalk Amazon ID.
        SidewalkId:
          allOf:
            - $ref: "#/components/schemas/SidewalkId"
            - description: The sidewalk device identification.
        SidewalkManufacturingSn:
          allOf:
            - $ref: "#/components/schemas/SidewalkManufacturingSn"
            - description: The Sidewalk manufacturing series number.
        DeviceCertificates:
          allOf:
            - $ref: "#/components/schemas/DeviceCertificateList"
            - description: The sidewalk device certificates for Ed25519 and P256r1.
        DeviceProfileId:
          allOf:
            - $ref: "#/components/schemas/DeviceProfileId"
            - description: Sidewalk object used by list functions.
        Status:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceSidewalkStatus"
            - description: The status of the Sidewalk devices, such as provisioned or registered.
      description: Sidewalk object used by list functions.
    SidewalkSingleStartImportInfo:
      type: object
      properties:
        SidewalkManufacturingSn:
          allOf:
            - $ref: "#/components/schemas/SidewalkManufacturingSn"
            - description: The Sidewalk manufacturing serial number (SMSN) of the device added to the import task.
      description: Information about an import task created for an individual Sidewalk device.
    SidewalkStartImportInfo:
      type: object
      properties:
        DeviceCreationFile:
          allOf:
            - $ref: "#/components/schemas/DeviceCreationFile"
            - description: The CSV file contained in an S3 bucket that's used for adding devices to an import task.
        Role:
          allOf:
            - $ref: "#/components/schemas/Role"
            - description: The IAM role that allows AWS IoT Wireless to access the CSV file in the S3 bucket.
      description: Information about an import task created for bulk provisioning.
    SidewalkUpdateAccount:
      type: object
      properties:
        AppServerPrivateKey:
          allOf:
            - $ref: "#/components/schemas/AppServerPrivateKey"
            - description: The new Sidewalk application server private key.
      description: Sidewalk update.
    SidewalkUpdateImportInfo:
      type: object
      properties:
        DeviceCreationFile:
          allOf:
            - $ref: "#/components/schemas/DeviceCreationFile"
            - description: The CSV file contained in an S3 bucket that's used for appending devices to an existing import task.
      description: Sidewalk object information for updating an import task.
    StartBulkAssociateWirelessDeviceWithMulticastGroupRequest:
      type: object
      title: StartBulkAssociateWirelessDeviceWithMulticastGroupRequest
      properties:
        QueryString:
          $ref: "#/components/schemas/QueryString"
        Tags:
          $ref: "#/components/schemas/TagList"
    StartBulkDisassociateWirelessDeviceFromMulticastGroupRequest:
      type: object
      title: StartBulkDisassociateWirelessDeviceFromMulticastGroupRequest
      properties:
        QueryString:
          $ref: "#/components/schemas/QueryString"
        Tags:
          $ref: "#/components/schemas/TagList"
    StartFuotaTaskRequest:
      type: object
      title: StartFuotaTaskRequest
      properties:
        LoRaWAN:
          $ref: "#/components/schemas/LoRaWANStartFuotaTask"
    StartMulticastGroupSessionRequest:
      type: object
      required:
        - LoRaWAN
      title: StartMulticastGroupSessionRequest
      properties:
        LoRaWAN:
          $ref: "#/components/schemas/LoRaWANMulticastSession"
    StartSingleWirelessDeviceImportTaskRequest:
      type: object
      required:
        - DestinationName
        - Sidewalk
      title: StartSingleWirelessDeviceImportTaskRequest
      properties:
        DestinationName:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the Sidewalk destination that describes the IoT rule to route messages from the device in the import task that will be onboarded to AWS IoT Wireless.
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/DeviceName"
            - description: The name of the wireless device for which an import task is being started.
        Tags:
          $ref: "#/components/schemas/TagList"
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkSingleStartImportInfo"
            - description: The Sidewalk-related parameters for importing a single wireless device.
    StartWirelessDeviceImportTaskRequest:
      type: object
      required:
        - DestinationName
        - Sidewalk
      title: StartWirelessDeviceImportTaskRequest
      properties:
        DestinationName:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the Sidewalk destination that describes the IoT rule to route messages from the devices in the import task that are onboarded to AWS IoT Wireless.
        ClientRequestToken:
          $ref: "#/components/schemas/ClientRequestToken"
        Tags:
          $ref: "#/components/schemas/TagList"
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkStartImportInfo"
            - description: The Sidewalk-related parameters for importing wireless devices that need to be provisioned in bulk.
    SubBand:
      type: integer
      description: A subset of supported frequency channels in a certain RFRegion.
      minimum: 1
      maximum: 8
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 0
      maxItems: 200
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: Adds to or modifies the tags of the given resource. Tags are metadata that you can use to manage a resource.
    TdscdmaObj:
      type: object
      required:
        - Mcc
        - Mnc
        - UtranCid
      properties:
        Mcc:
          allOf:
            - $ref: "#/components/schemas/MCC"
            - description: Mobile Country Code.
        Mnc:
          allOf:
            - $ref: "#/components/schemas/MNC"
            - description: Mobile Network Code.
        Lac:
          allOf:
            - $ref: "#/components/schemas/LAC"
            - description: Location Area Code.
        UtranCid:
          allOf:
            - $ref: "#/components/schemas/UtranCid"
            - description: UTRAN (UMTS Terrestrial Radio Access Network) Cell Global Identifier.
        TdscdmaLocalId:
          allOf:
            - $ref: "#/components/schemas/TdscdmaLocalId"
            - description: TD-SCDMA local identification (local ID) information.
        TdscdmaTimingAdvance:
          allOf:
            - $ref: "#/components/schemas/TdscdmaTimingAdvance"
            - description: TD-SCDMA Timing advance.
        Rscp:
          allOf:
            - $ref: "#/components/schemas/RSCP"
            - description: Signal power of the received signal (Received Signal Code Power), measured in decibel-milliwatts (dBm).
        PathLoss:
          allOf:
            - $ref: "#/components/schemas/PathLoss"
            - description: Path loss, or path attenuation, is the reduction in power density of an electromagnetic wave as it propagates through space.
        TdscdmaNmr:
          allOf:
            - $ref: "#/components/schemas/TdscdmaNmrList"
            - description: TD-SCDMA object for network measurement reports.
      description: TD-SCDMA object.
    UARFCN:
      type: integer
      minimum: 0
      maximum: 16383
    TdscdmaLocalId:
      type: object
      required:
        - Uarfcn
        - CellParams
      properties:
        Uarfcn:
          allOf:
            - $ref: "#/components/schemas/UARFCN"
            - description: TD-SCDMA UTRA (Universal Terrestrial Radio Access Network) absolute RF channel number (UARFCN).
        CellParams:
          allOf:
            - $ref: "#/components/schemas/CellParams"
            - description: Cell parameters for TD-SCDMA.
      description: TD-SCDMA local identification (local Id) information.
    TdscdmaNmrObj:
      type: object
      required:
        - Uarfcn
        - CellParams
      properties:
        Uarfcn:
          allOf:
            - $ref: "#/components/schemas/UARFCN"
            - description: TD-SCDMA UTRA (Universal Terrestrial Radio Access Network) absolute RF channel number.
        CellParams:
          allOf:
            - $ref: "#/components/schemas/CellParams"
            - description: Cell parameters for TD-SCDMA network measurement reports object.
        UtranCid:
          allOf:
            - $ref: "#/components/schemas/UtranCid"
            - description: UTRAN (UMTS Terrestrial Radio Access Network) cell global identifier.
        Rscp:
          allOf:
            - $ref: "#/components/schemas/RSCP"
            - description: Code power of the received signal, measured in decibel-milliwatts (dBm).
        PathLoss:
          allOf:
            - $ref: "#/components/schemas/PathLoss"
            - description: Path loss, or path attenuation, is the reduction in power density of an electromagnetic wave as it propagates through space.
      description: TD-SCDMA object for network measurement reports.
    TdscdmaNmrList:
      type: array
      items:
        $ref: "#/components/schemas/TdscdmaNmrObj"
      minItems: 1
      maxItems: 32
    UtranCid:
      type: integer
      minimum: 0
      maximum: 268435455
    TdscdmaTimingAdvance:
      type: integer
      minimum: 0
      maximum: 1530
    TestWirelessDeviceRequest:
      type: object
      title: TestWirelessDeviceRequest
      properties: {}
    UARFCNDL:
      type: integer
      minimum: 0
      maximum: 16383
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateDestinationRequest:
      type: object
      title: UpdateDestinationRequest
      properties:
        ExpressionType:
          allOf:
            - $ref: "#/components/schemas/ExpressionType"
            - description: The type of value in <code>Expression</code>.
        Expression:
          allOf:
            - $ref: "#/components/schemas/Expression"
            - description: The new rule name or topic rule to send messages to.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A new description of the resource.
        RoleArn:
          allOf:
            - $ref: "#/components/schemas/RoleArn"
            - description: The ARN of the IAM Role that authorizes the destination.
    UpdateEventConfigurationByResourceTypesRequest:
      type: object
      title: UpdateEventConfigurationByResourceTypesRequest
      properties:
        DeviceRegistrationState:
          allOf:
            - $ref: "#/components/schemas/DeviceRegistrationStateResourceTypeEventConfiguration"
            - description: Device registration state resource type event configuration object for enabling and disabling wireless gateway topic.
        Proximity:
          allOf:
            - $ref: "#/components/schemas/ProximityResourceTypeEventConfiguration"
            - description: Proximity resource type event configuration object for enabling and disabling wireless gateway topic.
        Join:
          allOf:
            - $ref: "#/components/schemas/JoinResourceTypeEventConfiguration"
            - description: Join resource type event configuration object for enabling and disabling wireless device topic.
        ConnectionStatus:
          allOf:
            - $ref: "#/components/schemas/ConnectionStatusResourceTypeEventConfiguration"
            - description: Connection status resource type event configuration object for enabling and disabling wireless gateway topic.
        MessageDeliveryStatus:
          allOf:
            - $ref: "#/components/schemas/MessageDeliveryStatusResourceTypeEventConfiguration"
            - description: Message delivery status resource type event configuration object for enabling and disabling wireless device topic.
    UpdateFuotaTaskRequest:
      type: object
      title: UpdateFuotaTaskRequest
      properties:
        Name:
          $ref: "#/components/schemas/FuotaTaskName"
        Description:
          $ref: "#/components/schemas/Description"
        LoRaWAN:
          $ref: "#/components/schemas/LoRaWANFuotaTask"
        FirmwareUpdateImage:
          $ref: "#/components/schemas/FirmwareUpdateImage"
        FirmwareUpdateRole:
          $ref: "#/components/schemas/FirmwareUpdateRole"
        RedundancyPercent:
          $ref: "#/components/schemas/RedundancyPercent"
        FragmentSizeBytes:
          $ref: "#/components/schemas/FragmentSizeBytes"
        FragmentIntervalMS:
          $ref: "#/components/schemas/FragmentIntervalMS"
    UpdateLogLevelsByResourceTypesRequest:
      type: object
      title: UpdateLogLevelsByResourceTypesRequest
      properties:
        DefaultLogLevel:
          $ref: "#/components/schemas/LogLevel"
        WirelessDeviceLogOptions:
          $ref: "#/components/schemas/WirelessDeviceLogOptionList"
        WirelessGatewayLogOptions:
          $ref: "#/components/schemas/WirelessGatewayLogOptionList"
    UpdateMulticastGroupRequest:
      type: object
      title: UpdateMulticastGroupRequest
      properties:
        Name:
          $ref: "#/components/schemas/MulticastGroupName"
        Description:
          $ref: "#/components/schemas/Description"
        LoRaWAN:
          $ref: "#/components/schemas/LoRaWANMulticast"
    UpdateNetworkAnalyzerConfigurationRequest:
      type: object
      title: UpdateNetworkAnalyzerConfigurationRequest
      properties:
        TraceContent:
          $ref: "#/components/schemas/TraceContent"
        WirelessDevicesToAdd:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceList"
            - description: Wireless device resources to add to the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resource to add in the input array.
        WirelessDevicesToRemove:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceList"
            - description: Wireless device resources to remove from the network analyzer configuration. Provide the <code>WirelessDeviceId</code> of the resources to remove in the input array.
        WirelessGatewaysToAdd:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayList"
            - description: Wireless gateway resources to add to the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resource to add in the input array.
        WirelessGatewaysToRemove:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayList"
            - description: Wireless gateway resources to remove from the network analyzer configuration. Provide the <code>WirelessGatewayId</code> of the resources to remove in the input array.
        Description:
          $ref: "#/components/schemas/Description"
    UpdatePartnerAccountRequest:
      type: object
      required:
        - Sidewalk
      title: UpdatePartnerAccountRequest
      properties:
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkUpdateAccount"
            - description: The Sidewalk account credentials.
    UpdatePositionRequest:
      type: object
      required:
        - Position
      deprecated: true
      title: UpdatePositionRequest
      properties:
        Position:
          allOf:
            - $ref: "#/components/schemas/PositionCoordinate"
            - description: The position information of the resource.
      description: This operation is no longer supported.
    UpdateResourceEventConfigurationRequest:
      type: object
      title: UpdateResourceEventConfigurationRequest
      properties:
        DeviceRegistrationState:
          allOf:
            - $ref: "#/components/schemas/DeviceRegistrationStateEventConfiguration"
            - description: Event configuration for the device registration state event.
        Proximity:
          allOf:
            - $ref: "#/components/schemas/ProximityEventConfiguration"
            - description: Event configuration for the proximity event.
        Join:
          allOf:
            - $ref: "#/components/schemas/JoinEventConfiguration"
            - description: Event configuration for the join event.
        ConnectionStatus:
          allOf:
            - $ref: "#/components/schemas/ConnectionStatusEventConfiguration"
            - description: Event configuration for the connection status event.
        MessageDeliveryStatus:
          allOf:
            - $ref: "#/components/schemas/MessageDeliveryStatusEventConfiguration"
            - description: Event configuration for the message delivery status event.
    UpdateResourcePositionRequest:
      type: object
      title: UpdateResourcePositionRequest
      properties:
        GeoJsonPayload:
          allOf:
            - $ref: "#/components/schemas/GeoJsonPayload"
            - description: The position information of the resource, displayed as a JSON payload. The payload uses the GeoJSON format, which a format that's used to encode geographic data structures. For more information, see <a href="https://geojson.org/">GeoJSON</a>.
    UpdateWirelessDeviceImportTaskRequest:
      type: object
      required:
        - Sidewalk
      title: UpdateWirelessDeviceImportTaskRequest
      properties:
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkUpdateImportInfo"
            - description: The Sidewalk-related parameters of the import task to be updated.
    UpdateWirelessDeviceRequest:
      type: object
      title: UpdateWirelessDeviceRequest
      properties:
        DestinationName:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the new destination for the device.
        Name:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceName"
            - description: The new name of the resource.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A new description of the resource.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANUpdateDevice"
            - description: The updated wireless device's configuration.
        Positioning:
          allOf:
            - $ref: "#/components/schemas/PositioningConfigStatus"
            - description: FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
    UpdateWirelessGatewayRequest:
      type: object
      title: UpdateWirelessGatewayRequest
      properties:
        Name:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayName"
            - description: The new name of the resource.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: A new description of the resource.
        JoinEuiFilters:
          $ref: "#/components/schemas/JoinEuiFilters"
        NetIdFilters:
          $ref: "#/components/schemas/NetIdFilters"
        MaxEirp:
          allOf:
            - $ref: "#/components/schemas/GatewayMaxEirp"
            - description: The MaxEIRP value.
    UpdateWirelessGatewayTaskEntry:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskDefinitionId"
            - description: The ID of the new wireless gateway task entry.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANUpdateGatewayTaskEntry"
            - description: The properties that relate to the LoRaWAN wireless gateway.
        Arn:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayTaskDefinitionArn"
            - description: The Amazon Resource Name of the resource.
      description: UpdateWirelessGatewayTaskEntry object.
    WcdmaObj:
      type: object
      required:
        - Mcc
        - Mnc
        - UtranCid
      properties:
        Mcc:
          allOf:
            - $ref: "#/components/schemas/MCC"
            - description: Mobile Country Code.
        Mnc:
          allOf:
            - $ref: "#/components/schemas/MNC"
            - description: Mobile Network Code.
        Lac:
          allOf:
            - $ref: "#/components/schemas/LAC"
            - description: Location Area Code.
        UtranCid:
          allOf:
            - $ref: "#/components/schemas/UtranCid"
            - description: UTRAN (UMTS Terrestrial Radio Access Network) Cell Global Identifier.
        WcdmaLocalId:
          allOf:
            - $ref: "#/components/schemas/WcdmaLocalId"
            - description: WCDMA local ID information.
        Rscp:
          allOf:
            - $ref: "#/components/schemas/RSCP"
            - description: Received Signal Code Power (signal power) (dBm).
        PathLoss:
          allOf:
            - $ref: "#/components/schemas/PathLoss"
            - description: Path loss, or path attenuation, is the reduction in power density of an electromagnetic wave as it propagates through space.
        WcdmaNmr:
          allOf:
            - $ref: "#/components/schemas/WcdmaNmrList"
            - description: WCDMA object for network measurement reports.
      description: WCDMA.
    WcdmaLocalId:
      type: object
      required:
        - Uarfcndl
        - Psc
      properties:
        Uarfcndl:
          allOf:
            - $ref: "#/components/schemas/UARFCNDL"
            - description: WCDMA UTRA Absolute RF Channel Number downlink.
        Psc:
          allOf:
            - $ref: "#/components/schemas/PSC"
            - description: Primary Scrambling Code.
      description: WCDMA local identification (local ID) information.
    WcdmaNmrObj:
      type: object
      required:
        - Uarfcndl
        - Psc
        - UtranCid
      properties:
        Uarfcndl:
          allOf:
            - $ref: "#/components/schemas/UARFCNDL"
            - description: WCDMA UTRA Absolute RF Channel Number downlink.
        Psc:
          allOf:
            - $ref: "#/components/schemas/PSC"
            - description: Primary Scrambling Code.
        UtranCid:
          allOf:
            - $ref: "#/components/schemas/UtranCid"
            - description: UTRAN (UMTS Terrestrial Radio Access Network) Cell Global Identifier.
        Rscp:
          allOf:
            - $ref: "#/components/schemas/RSCP"
            - description: Received Signal Code Power (signal power) (dBm)
        PathLoss:
          allOf:
            - $ref: "#/components/schemas/PathLoss"
            - description: Path loss, or path attenuation, is the reduction in power density of an electromagnetic wave as it propagates through space.
      description: Network Measurement Reports.
    WcdmaNmrList:
      type: array
      items:
        $ref: "#/components/schemas/WcdmaNmrObj"
      minItems: 1
      maxItems: 32
    WirelessDeviceEvent:
      type: string
      enum:
        - Join
        - Rejoin
        - Uplink_Data
        - Downlink_Data
        - Registration
      description: The event for a log message, if the log message is tied to a wireless device.
    WirelessDeviceEventLogOption:
      type: object
      required:
        - Event
        - LogLevel
      properties:
        Event:
          $ref: "#/components/schemas/WirelessDeviceEvent"
        LogLevel:
          $ref: "#/components/schemas/LogLevel"
      description: "<p>The log options for a wireless device event and can be used to set log levels for a specific wireless device event.</p> <p>For a LoRaWAN device, possible events for a log messsage are: <code>Join</code>, <code>Rejoin</code>, <code>Downlink_Data</code>, and <code>Uplink_Data</code>. For a Sidewalk device, possible events for a log message are <code>Registration</code>, <code>Downlink_Data</code>, and <code>Uplink_Data</code>.</p>"
    WirelessDeviceEventLogOptionList:
      type: array
      description: The list of wireless device event log options.
      items:
        $ref: "#/components/schemas/WirelessDeviceEventLogOption"
    WirelessDeviceImportTask:
      type: object
      properties:
        Id:
          allOf:
            - $ref: "#/components/schemas/ImportTaskId"
            - description: The ID of the wireless device import task.
        Arn:
          allOf:
            - $ref: "#/components/schemas/ImportTaskArn"
            - description: The ARN (Amazon Resource Name) of the wireless device import task.
        DestinationName:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the Sidewalk destination that that describes the IoT rule to route messages from the device in the import task that will be onboarded to AWS IoT Wireless
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkGetStartImportInfo"
            - description: The Sidewalk-related information of the wireless device import task.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/CreationTime"
            - description: The time at which the import task was created.
        Status:
          allOf:
            - $ref: "#/components/schemas/ImportTaskStatus"
            - description: The status information of the wireless device import task.
        StatusReason:
          allOf:
            - $ref: "#/components/schemas/StatusReason"
            - description: The reason that provides additional information about the import task status.
        InitializedImportedDeviceCount:
          allOf:
            - $ref: "#/components/schemas/ImportedWirelessDeviceCount"
            - description: The summary information of count of wireless devices that are waiting for the control log to be added to an import task.
        PendingImportedDeviceCount:
          allOf:
            - $ref: "#/components/schemas/ImportedWirelessDeviceCount"
            - description: The summary information of count of wireless devices in an import task that are waiting in the queue to be onboarded.
        OnboardedImportedDeviceCount:
          allOf:
            - $ref: "#/components/schemas/ImportedWirelessDeviceCount"
            - description: The summary information of count of wireless devices in an import task that have been onboarded to the import task.
        FailedImportedDeviceCount:
          allOf:
            - $ref: "#/components/schemas/ImportedWirelessDeviceCount"
            - description: The summary information of count of wireless devices in an import task that failed to onboarded to the import task.
      description: Information about an import task for wireless devices.
    WirelessDeviceStatistics:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceArn"
            - description: The Amazon Resource Name of the resource.
        Id:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceId"
            - description: The ID of the wireless device reporting the data.
        Type:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceType"
            - description: The wireless device type.
        Name:
          allOf:
            - $ref: "#/components/schemas/WirelessDeviceName"
            - description: The name of the resource.
        DestinationName:
          allOf:
            - $ref: "#/components/schemas/DestinationName"
            - description: The name of the destination to which the device is assigned.
        LastUplinkReceivedAt:
          allOf:
            - $ref: "#/components/schemas/ISODateTimeString"
            - description: The date and time when the most recent uplink was received.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANListDevice"
            - description: LoRaWAN device info.
        Sidewalk:
          allOf:
            - $ref: "#/components/schemas/SidewalkListDevice"
            - description: The Sidewalk account credentials.
        FuotaDeviceStatus:
          $ref: "#/components/schemas/FuotaDeviceStatus"
        MulticastDeviceStatus:
          allOf:
            - $ref: "#/components/schemas/MulticastDeviceStatus"
            - description: The status of the wireless device in the multicast group.
        McGroupId:
          $ref: "#/components/schemas/McGroupId"
      description: Information about a wireless device's operation.
    WirelessGatewayEvent:
      type: string
      enum:
        - CUPS_Request
        - Certificate
      description: The event for a log message, if the log message is tied to a wireless gateway.
    WirelessGatewayEventLogOption:
      type: object
      required:
        - Event
        - LogLevel
      properties:
        Event:
          $ref: "#/components/schemas/WirelessGatewayEvent"
        LogLevel:
          $ref: "#/components/schemas/LogLevel"
      description: <p>The log options for a wireless gateway event and can be used to set log levels for a specific wireless gateway event.</p> <p>For a LoRaWAN gateway, possible events for a log message are <code>CUPS_Request</code> and <code>Certificate</code>.</p>
    WirelessGatewayEventLogOptionList:
      type: array
      description: The list of wireless gateway event log options.
      items:
        $ref: "#/components/schemas/WirelessGatewayEventLogOption"
    WirelessGatewayType:
      type: string
      enum:
        - LoRaWAN
      description: The wireless gateway type.
    WirelessGatewayStatistics:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayArn"
            - description: The Amazon Resource Name of the resource.
        Id:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayId"
            - description: The ID of the wireless gateway reporting the data.
        Name:
          allOf:
            - $ref: "#/components/schemas/WirelessGatewayName"
            - description: The name of the resource.
        Description:
          allOf:
            - $ref: "#/components/schemas/Description"
            - description: The description of the resource.
        LoRaWAN:
          allOf:
            - $ref: "#/components/schemas/LoRaWANGateway"
            - description: LoRaWAN gateway info.
        LastUplinkReceivedAt:
          allOf:
            - $ref: "#/components/schemas/ISODateTimeString"
            - description: The date and time when the most recent uplink was received.
      description: Information about a wireless gateway's operation.
security:
  - hmac: []
