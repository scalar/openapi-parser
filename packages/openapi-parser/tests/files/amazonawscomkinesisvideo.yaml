openapi: 3.0.0
info:
  version: 2017-09-30
  x-release: v4
  title: Amazon Kinesis Video Streams
  description: <p/>
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: kinesisvideo
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/kinesisvideo-2017-09-30.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/kinesisvideo/
servers:
  - url: http://kinesisvideo.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Kinesis Video multi-region endpoint
  - url: https://kinesisvideo.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The Kinesis Video multi-region endpoint
  - url: http://kinesisvideo.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Kinesis Video endpoint for China (Beijing) and China (Ningxia)
  - url: https://kinesisvideo.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The Kinesis Video endpoint for China (Beijing) and China (Ningxia)
paths:
  /createSignalingChannel:
    post:
      operationId: CreateSignalingChannel
      description: <p>Creates a signaling channel. </p> <p> <code>CreateSignalingChannel</code> is an asynchronous operation.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSignalingChannelOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: AccountChannelLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountChannelLimitExceededException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: TagsPerResourceExceededLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagsPerResourceExceededLimitException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ChannelName
              properties:
                ChannelName:
                  description: A name for the signaling channel that you are creating. It must be unique for each Amazon Web Services account and Amazon Web Services Region.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                ChannelType:
                  description: "A type of the signaling channel that you are creating. Currently, <code>SINGLE_MASTER</code> is the only supported channel type. "
                  type: string
                  enum:
                    - SINGLE_MASTER
                    - FULL_MESH
                SingleMasterConfiguration:
                  description: A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel type.
                  type: object
                  properties:
                    MessageTtlSeconds:
                      allOf:
                        - $ref: "#/components/schemas/MessageTtlSeconds"
                        - description: The period of time a signaling channel retains undelivered messages before they are discarded.
                Tags:
                  description: A set of tags (key-value pairs) that you want to associate with this channel.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 0
                  maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /createStream:
    post:
      operationId: CreateStream
      description: <p>Creates a new Kinesis video stream. </p> <p>When you create a new stream, Kinesis Video Streams assigns it a version number. When you change the stream's metadata, Kinesis Video Streams updates the version. </p> <p> <code>CreateStream</code> is an asynchronous operation.</p> <p>For information about how the service works, see <a href="https://docs.aws.amazon.com/kinesisvideostreams/latest/dg/how-it-works.html">How it Works</a>. </p> <p>You must have permissions for the <code>KinesisVideo:CreateStream</code> action.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateStreamOutput"
        "480":
          description: AccountStreamLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountStreamLimitExceededException"
        "481":
          description: DeviceStreamLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeviceStreamLimitExceededException"
        "482":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "483":
          description: InvalidDeviceException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidDeviceException"
        "484":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "485":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "486":
          description: TagsPerResourceExceededLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagsPerResourceExceededLimitException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StreamName
              properties:
                DeviceName:
                  description: <p>The name of the device that is writing to the stream. </p> <note> <p>In the current implementation, Kinesis Video Streams does not use this name.</p> </note>
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 128
                StreamName:
                  description: <p>A name for the stream that you are creating.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                MediaType:
                  description: <p>The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming Requirements</a> for guidelines.</p> <p>Example valid values include "video/h264" and "video/h264,audio/aac".</p> <p>This parameter is optional; the default value is <code>null</code> (or empty in JSON).</p>
                  type: string
                  pattern: "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*"
                  minLength: 1
                  maxLength: 128
                KmsKeyId:
                  description: <p>The ID of the Key Management Service (KMS) key that you want Kinesis Video Streams to use to encrypt stream data.</p> <p>If no key ID is specified, the default, Kinesis Video-managed key (<code>aws/kinesisvideo</code>) is used.</p> <p> For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters">DescribeKey</a>. </p>
                  type: string
                  pattern: .+
                  minLength: 1
                  maxLength: 2048
                DataRetentionInHours:
                  description: <p>The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.</p> <p>The default value is 0, indicating that the stream does not persist data.</p> <p>When the <code>DataRetentionInHours</code> value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.</p>
                  type: integer
                  minimum: 0
                Tags:
                  description: A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /deleteSignalingChannel:
    post:
      operationId: DeleteSignalingChannel
      description: Deletes a specified signaling channel. <code>DeleteSignalingChannel</code> is an asynchronous operation. If you don't specify the channel's current version, the most recent version is deleted.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSignalingChannelOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: VersionMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionMismatchException"
        "485":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ChannelARN
              properties:
                ChannelARN:
                  description: The Amazon Resource Name (ARN) of the signaling channel that you want to delete.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                CurrentVersion:
                  description: The current version of the signaling channel that you want to delete. You can obtain the current version by invoking the <code>DescribeSignalingChannel</code> or <code>ListSignalingChannels</code> API operations.
                  type: string
                  pattern: "[a-zA-Z0-9]+"
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /deleteStream:
    post:
      operationId: DeleteStream
      description: <p>Deletes a Kinesis video stream and the data contained in the stream. </p> <p>This method marks the stream for deletion, and makes the data in the stream inaccessible immediately.</p> <p> </p> <p> To ensure that you have the latest version of the stream before deleting it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the <code>DescribeStream</code> API. </p> <p>This operation requires permission for the <code>KinesisVideo:DeleteStream</code> action.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteStreamOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "484":
          description: VersionMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionMismatchException"
        "485":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - StreamARN
              properties:
                StreamARN:
                  description: "The Amazon Resource Name (ARN) of the stream that you want to delete. "
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                CurrentVersion:
                  description: "<p>Optional: The version of the stream that you want to delete. </p> <p>Specify the version as a safeguard to ensure that your are deleting the correct stream. To get the stream version, use the <code>DescribeStream</code> API.</p> <p>If not specified, only the <code>CreationTime</code> is checked before deleting the stream.</p>"
                  type: string
                  pattern: "[a-zA-Z0-9]+"
                  minLength: 1
                  maxLength: 64
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeEdgeConfiguration:
    post:
      operationId: DescribeEdgeConfiguration
      description: Describes a stream’s edge configuration that was set using the <code>StartEdgeConfigurationUpdate</code> API. Use this API to get the status of the configuration if the configuration is in sync with the Edge Agent.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeEdgeConfigurationOutput"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: StreamEdgeConfigurationNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StreamEdgeConfigurationNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  description: "The name of the stream whose edge configuration you want to update. Specify either the <code>StreamName</code> or the <code>StreamARN</code>. "
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the stream. Specify either the <code>StreamName</code>or the <code>StreamARN</code>.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeImageGenerationConfiguration:
    post:
      operationId: DescribeImageGenerationConfiguration
      description: Gets the <code>ImageGenerationConfiguration</code> for a given Kinesis video stream.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeImageGenerationConfigurationOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  description: "The name of the stream from which to retrieve the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>. "
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the Kinesis video stream from which to retrieve the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeMappedResourceConfiguration:
    post:
      operationId: DescribeMappedResourceConfiguration
      description: <p>Returns the most current information about the stream. Either streamName or streamARN should be provided in the input.</p> <p>Returns the most current information about the stream. The <code>streamName</code> or <code>streamARN</code> should be provided in the input.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMappedResourceConfigurationOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  description: The name of the stream.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the stream.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                MaxResults:
                  description: The maximum number of results to return in the response.
                  type: integer
                  minimum: 1
                  maximum: 1
                NextToken:
                  description: The token to provide in your next request, to get another batch of results.
                  type: string
                  pattern: "[a-zA-Z0-9+/=]*"
                  minLength: 0
                  maxLength: 512
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeMediaStorageConfiguration:
    post:
      operationId: DescribeMediaStorageConfiguration
      description: Returns the most current information about the channel. Specify the <code>ChannelName</code> or <code>ChannelARN</code> in the input.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeMediaStorageConfigurationOutput"
        "480":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "483":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelName:
                  description: The name of the channel.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                ChannelARN:
                  description: The Amazon Resource Name (ARN) of the channel.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeNotificationConfiguration:
    post:
      operationId: DescribeNotificationConfiguration
      description: Gets the <code>NotificationConfiguration</code> for a given Kinesis video stream.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeNotificationConfigurationOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  description: The name of the stream from which to retrieve the notification configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to retrieve the notification configuration. You must specify either the <code>StreamName</code> or the StreamARN.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeSignalingChannel:
    post:
      operationId: DescribeSignalingChannel
      description: Returns the most current information about the signaling channel. You must specify either the name or the Amazon Resource Name (ARN) of the channel that you want to describe.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSignalingChannelOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelName:
                  description: The name of the signaling channel that you want to describe.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                ChannelARN:
                  description: The ARN of the signaling channel that you want to describe.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /describeStream:
    post:
      operationId: DescribeStream
      description: "Returns the most current information about the specified stream. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeStreamOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  description: The name of the stream.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the stream.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /getDataEndpoint:
    post:
      operationId: GetDataEndpoint
      description: <p>Gets an endpoint for a specified stream for either reading or writing. Use this endpoint in your application to read from the specified stream (using the <code>GetMedia</code> or <code>GetMediaForFragmentList</code> operations) or write to it (using the <code>PutMedia</code> operation). </p> <note> <p>The returned endpoint does not have the API name appended. The client needs to add the API name to the returned endpoint.</p> </note> <p>In the request, specify the stream either by <code>StreamName</code> or <code>StreamARN</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDataEndpointOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "482":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - APIName
              properties:
                StreamName:
                  description: The name of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamARN</code> in the request.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: "The Amazon Resource Name (ARN) of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamName</code> in the request. "
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                APIName:
                  description: The name of the API action for which to get an endpoint.
                  type: string
                  enum:
                    - PUT_MEDIA
                    - GET_MEDIA
                    - LIST_FRAGMENTS
                    - GET_MEDIA_FOR_FRAGMENT_LIST
                    - GET_HLS_STREAMING_SESSION_URL
                    - GET_DASH_STREAMING_SESSION_URL
                    - GET_CLIP
                    - GET_IMAGES
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /getSignalingChannelEndpoint:
    post:
      operationId: GetSignalingChannelEndpoint
      description: <p>Provides an endpoint for the specified signaling channel to send and receive messages. This API uses the <code>SingleMasterChannelEndpointConfiguration</code> input parameter, which consists of the <code>Protocols</code> and <code>Role</code> properties.</p> <p> <code>Protocols</code> is used to determine the communication mechanism. For example, if you specify <code>WSS</code> as the protocol, this API produces a secure websocket endpoint. If you specify <code>HTTPS</code> as the protocol, this API generates an HTTPS endpoint. </p> <p> <code>Role</code> determines the messaging permissions. A <code>MASTER</code> role results in this API generating an endpoint that a client can use to communicate with any of the viewers on the channel. A <code>VIEWER</code> role results in this API generating an endpoint that a client can use to communicate only with a <code>MASTER</code>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetSignalingChannelEndpointOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ChannelARN
              properties:
                ChannelARN:
                  description: The Amazon Resource Name (ARN) of the signalling channel for which you want to get an endpoint.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                SingleMasterChannelEndpointConfiguration:
                  description: "An object that contains the endpoint configuration for the <code>SINGLE_MASTER</code> channel type. "
                  type: object
                  properties:
                    Protocols:
                      allOf:
                        - $ref: "#/components/schemas/ListOfProtocols"
                        - description: This property is used to determine the nature of communication over this <code>SINGLE_MASTER</code> signaling channel. If <code>WSS</code> is specified, this API returns a websocket endpoint. If <code>HTTPS</code> is specified, this API returns an <code>HTTPS</code> endpoint.
                    Role:
                      allOf:
                        - $ref: "#/components/schemas/ChannelRole"
                        - description: "This property is used to determine messaging permissions in this <code>SINGLE_MASTER</code> signaling channel. If <code>MASTER</code> is specified, this API returns an endpoint that a client can use to receive offers from and send answers to any of the viewers on this signaling channel. If <code>VIEWER</code> is specified, this API returns an endpoint that a client can use only to send offers to another <code>MASTER</code> client on this signaling channel. "
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /listSignalingChannels:
    post:
      operationId: ListSignalingChannels
      description: Returns an array of <code>ChannelInfo</code> objects. Each object describes a signaling channel. To retrieve only those channels that satisfy a specific condition, you can specify a <code>ChannelNameCondition</code>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSignalingChannelsOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: The maximum number of channels to return in the response. The default is 500.
                  type: integer
                  minimum: 1
                  maximum: 10000
                NextToken:
                  description: If you specify this parameter, when the result of a <code>ListSignalingChannels</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of channels, provide this token in your next request.
                  type: string
                  pattern: "[a-zA-Z0-9+/=]*"
                  minLength: 0
                  maxLength: 512
                ChannelNameCondition:
                  description: An optional input parameter for the <code>ListSignalingChannels</code> API. When this parameter is specified while invoking <code>ListSignalingChannels</code>, the API returns only the channels that satisfy a condition specified in <code>ChannelNameCondition</code>.
                  type: object
                  properties:
                    ComparisonOperator:
                      allOf:
                        - $ref: "#/components/schemas/ComparisonOperator"
                        - description: A comparison operator. Currently, you can only specify the <code>BEGINS_WITH</code> operator, which finds signaling channels whose names begin with a given prefix.
                    ComparisonValue:
                      allOf:
                        - $ref: "#/components/schemas/ChannelName"
                        - description: A value to compare.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /listStreams:
    post:
      operationId: ListStreams
      description: "Returns an array of <code>StreamInfo</code> objects. Each object describes a stream. To retrieve only streams that satisfy a specific condition, you can specify a <code>StreamNameCondition</code>. "
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListStreamsOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
      parameters:
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: The maximum number of streams to return in the response. The default is 10,000.
                  type: integer
                  minimum: 1
                  maximum: 10000
                NextToken:
                  description: If you specify this parameter, when the result of a <code>ListStreams</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of streams, provide this token in your next request.
                  type: string
                  pattern: "[a-zA-Z0-9+/=]*"
                  minLength: 0
                  maxLength: 512
                StreamNameCondition:
                  description: "Specifies the condition that streams must satisfy to be returned when you list streams (see the <code>ListStreams</code> API). A condition has a comparison operation and a value. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix. "
                  type: object
                  properties:
                    ComparisonOperator:
                      allOf:
                        - $ref: "#/components/schemas/ComparisonOperator"
                        - description: A comparison operator. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix.
                    ComparisonValue:
                      allOf:
                        - $ref: "#/components/schemas/StreamName"
                        - description: A value to compare.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /ListTagsForResource:
    post:
      operationId: ListTagsForResource
      description: Returns a list of tags associated with the specified signaling channel.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceARN
              properties:
                NextToken:
                  description: "If you specify this parameter and the result of a <code>ListTagsForResource</code> call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags. "
                  type: string
                  pattern: "[a-zA-Z0-9+/=]*"
                  minLength: 0
                  maxLength: 512
                ResourceARN:
                  description: The Amazon Resource Name (ARN) of the signaling channel for which you want to list tags.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /listTagsForStream:
    post:
      operationId: ListTagsForStream
      description: <p>Returns a list of tags associated with the specified stream.</p> <p>In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>. </p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForStreamOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "484":
          description: InvalidResourceFormatException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceFormatException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NextToken:
                  description: If you specify this parameter and the result of a <code>ListTagsForStream</code> call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags.
                  type: string
                  pattern: "[a-zA-Z0-9+/=]*"
                  minLength: 0
                  maxLength: 512
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the stream that you want to list tags for.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                StreamName:
                  description: The name of the stream that you want to list tags for.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /startEdgeConfigurationUpdate:
    post:
      operationId: StartEdgeConfigurationUpdate
      description: "<p>An asynchronous API that updates a stream’s existing edge configuration. The Kinesis Video Stream will sync the stream’s edge configuration with the Edge Agent IoT Greengrass component that runs on an IoT Hub Device, setup at your premise. The time to sync can vary and depends on the connectivity of the Hub Device. The <code>SyncStatus</code> will be updated as the edge configuration is acknowledged, and synced with the Edge Agent. </p> <p>If this API is invoked for the first time, a new edge configuration will be created for the stream, and the sync status will be set to <code>SYNCING</code>. You will have to wait for the sync status to reach a terminal state such as: <code>IN_SYNC</code>, or <code>SYNC_FAILED</code>, before using this API again. If you invoke this API during the syncing process, a <code>ResourceInUseException</code> will be thrown. The connectivity of the stream’s edge configuration and the Edge Agent will be retried for 15 minutes. After 15 minutes, the status will transition into the <code>SYNC_FAILED</code> state.</p>"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartEdgeConfigurationUpdateOutput"
        "480":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "483":
          description: NoDataRetentionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoDataRetentionException"
        "484":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "485":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - EdgeConfig
              properties:
                StreamName:
                  description: The name of the stream whose edge configuration you want to update. Specify either the <code>StreamName</code> or the <code>StreamARN</code>.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: " The Amazon Resource Name (ARN) of the stream. Specify either the <code>StreamName</code> or the <code>StreamARN</code>."
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                EdgeConfig:
                  description: A description of the stream's edge configuration that will be used to sync with the Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub Device setup at your premise.
                  type: object
                  properties:
                    HubDeviceArn:
                      allOf:
                        - $ref: "#/components/schemas/HubDeviceArn"
                        - description: The "<b>Internet of Things (IoT) Thing</b>" Arn of the stream.
                    RecorderConfig:
                      allOf:
                        - $ref: "#/components/schemas/RecorderConfig"
                        - description: "The recorder configuration consists of the local <code>MediaSourceConfig</code> details, that are used as credentials to access the local media files streamed on the camera. "
                    UploaderConfig:
                      allOf:
                        - $ref: "#/components/schemas/UploaderConfig"
                        - description: The uploader configuration contains the <code>ScheduleExpression</code> details that are used to schedule upload jobs for the recorded media files from the Edge Agent to a Kinesis Video Stream.
                    DeletionConfig:
                      allOf:
                        - $ref: "#/components/schemas/DeletionConfig"
                        - description: The deletion configuration is made up of the retention time (<code>EdgeRetentionInHours</code>) and local size configuration (<code>LocalSizeConfig</code>) details that are used to make the deletion.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /TagResource:
    post:
      operationId: TagResource
      description: Adds one or more tags to a signaling channel. A <i>tag</i> is a key-value pair (the value is optional) that you can define and assign to Amazon Web Services resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>Billing and Cost Management and Cost Management User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagResourceOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: TagsPerResourceExceededLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagsPerResourceExceededLimitException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceARN
                - Tags
              properties:
                ResourceARN:
                  description: The Amazon Resource Name (ARN) of the signaling channel to which you want to add tags.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                Tags:
                  description: A list of tags to associate with the specified signaling channel. Each tag is a key-value pair.
                  type: array
                  items:
                    $ref: "#/components/schemas/Tag"
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /tagStream:
    post:
      operationId: TagStream
      description: <p>Adds one or more tags to a stream. A <i>tag</i> is a key-value pair (the value is optional) that you can define and assign to Amazon Web Services resources. If you specify a tag that already exists, the tag value is replaced with the value that you specify in the request. For more information, see <a href="https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/cost-alloc-tags.html">Using Cost Allocation Tags</a> in the <i>Billing and Cost Management and Cost Management User Guide</i>. </p> <p>You must provide either the <code>StreamName</code> or the <code>StreamARN</code>.</p> <p>This operation requires permission for the <code>KinesisVideo:TagStream</code> action.</p> <p>A Kinesis video stream can support up to 50 tags.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagStreamOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "484":
          description: InvalidResourceFormatException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceFormatException"
        "485":
          description: TagsPerResourceExceededLimitException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagsPerResourceExceededLimitException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Tags
              properties:
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the resource that you want to add the tag or tags to.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                StreamName:
                  description: The name of the stream that you want to add the tag or tags to.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                Tags:
                  description: A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).
                  type: object
                  minProperties: 1
                  maxProperties: 50
                  additionalProperties:
                    $ref: "#/components/schemas/TagValue"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /UntagResource:
    post:
      operationId: UntagResource
      description: Removes one or more tags from a signaling channel. In the request, specify only a tag key or keys; don't specify the value. If you specify a tag key that does not exist, it's ignored.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagResourceOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ResourceARN
                - TagKeyList
              properties:
                ResourceARN:
                  description: The Amazon Resource Name (ARN) of the signaling channel from which you want to remove tags.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                TagKeyList:
                  description: A list of the keys of the tags that you want to remove.
                  type: array
                  items:
                    $ref: "#/components/schemas/TagKey"
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /untagStream:
    post:
      operationId: UntagStream
      description: <p>Removes one or more tags from a stream. In the request, specify only a tag key or keys; don't specify the value. If you specify a tag key that does not exist, it's ignored.</p> <p>In the request, you must provide the <code>StreamName</code> or <code>StreamARN</code>.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UntagStreamOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "484":
          description: InvalidResourceFormatException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidResourceFormatException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - TagKeyList
              properties:
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the stream that you want to remove tags from.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                StreamName:
                  description: The name of the stream that you want to remove tags from.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                TagKeyList:
                  description: A list of the keys of the tags that you want to remove.
                  type: array
                  items:
                    $ref: "#/components/schemas/TagKey"
                  minItems: 1
                  maxItems: 50
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /updateDataRetention:
    post:
      operationId: UpdateDataRetention
      description: <p> Increases or decreases the stream's data retention period by the value that you specify. To indicate whether you want to increase or decrease the data retention period, specify the <code>Operation</code> parameter in the request body. In the request, you must specify either the <code>StreamName</code> or the <code>StreamARN</code>. </p> <note> <p>The retention period that you specify replaces the current value.</p> </note> <p>This operation requires permission for the <code>KinesisVideo:UpdateDataRetention</code> action.</p> <p>Changing the data retention period affects the data in the stream as follows:</p> <ul> <li> <p>If the data retention period is increased, existing data is retained for the new retention period. For example, if the data retention period is increased from one hour to seven hours, all existing data is retained for seven hours.</p> </li> <li> <p>If the data retention period is decreased, existing data is retained for the new retention period. For example, if the data retention period is decreased from seven hours to one hour, all existing data is retained for one hour, and any data older than one hour is deleted immediately.</p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateDataRetentionOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "485":
          description: VersionMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionMismatchException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CurrentVersion
                - Operation
                - DataRetentionChangeInHours
              properties:
                StreamName:
                  description: The name of the stream whose retention period you want to change.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the stream whose retention period you want to change.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                CurrentVersion:
                  description: The version of the stream whose retention period you want to change. To get the version, call either the <code>DescribeStream</code> or the <code>ListStreams</code> API.
                  type: string
                  pattern: "[a-zA-Z0-9]+"
                  minLength: 1
                  maxLength: 64
                Operation:
                  description: Indicates whether you want to increase or decrease the retention period.
                  type: string
                  enum:
                    - INCREASE_DATA_RETENTION
                    - DECREASE_DATA_RETENTION
                DataRetentionChangeInHours:
                  description: The retention period, in hours. The value you specify replaces the current value. The maximum value for this parameter is 87600 (ten years).
                  type: integer
                  minimum: 1
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /updateImageGenerationConfiguration:
    post:
      operationId: UpdateImageGenerationConfiguration
      description: Updates the <code>StreamInfo</code> and <code>ImageProcessingConfiguration</code> fields.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateImageGenerationConfigurationOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "485":
          description: NoDataRetentionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoDataRetentionException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  description: The name of the stream from which to update the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to update the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                ImageGenerationConfiguration:
                  description: The structure that contains the information required for the KVS images delivery. If null, the configuration will be deleted from the stream.
                  type: object
                  properties:
                    Status:
                      allOf:
                        - $ref: "#/components/schemas/ConfigurationStatus"
                        - description: Indicates whether the <code>ContinuousImageGenerationConfigurations</code> API is enabled or disabled.
                    ImageSelectorType:
                      allOf:
                        - $ref: "#/components/schemas/ImageSelectorType"
                        - description: The origin of the Server or Producer timestamps to use to generate the images.
                    DestinationConfig:
                      allOf:
                        - $ref: "#/components/schemas/ImageGenerationDestinationConfig"
                        - description: The structure that contains the information required to deliver images to a customer.
                    SamplingInterval:
                      allOf:
                        - $ref: "#/components/schemas/SamplingInterval"
                        - description: "The time interval in milliseconds (ms) at which the images need to be generated from the stream. The minimum value that can be provided is 33 ms, because a camera that generates content at 30 FPS would create a frame every 33.3 ms. If the timestamp range is less than the sampling interval, the Image from the <code>StartTimestamp</code> will be returned if available. "
                    Format:
                      allOf:
                        - $ref: "#/components/schemas/Format"
                        - description: The accepted image format.
                    FormatConfig:
                      allOf:
                        - $ref: "#/components/schemas/FormatConfig"
                        - description: The list of a key-value pair structure that contains extra parameters that can be applied when the image is generated. The <code>FormatConfig</code> key is the <code>JPEGQuality</code>, which indicates the JPEG quality key to be used to generate the image. The <code>FormatConfig</code> value accepts ints from 1 to 100. If the value is 1, the image will be generated with less quality and the best compression. If the value is 100, the image will be generated with the best quality and less compression. If no value is provided, the default value of the <code>JPEGQuality</code> key will be set to 80.
                    WidthPixels:
                      allOf:
                        - $ref: "#/components/schemas/WidthPixels"
                        - description: The width of the output image that is used in conjunction with the <code>HeightPixels</code> parameter. When both <code>WidthPixels</code> and <code>HeightPixels</code> parameters are provided, the image will be stretched to fit the specified aspect ratio. If only the <code>WidthPixels</code> parameter is provided, its original aspect ratio will be used to calculate the <code>HeightPixels</code> ratio. If neither parameter is provided, the original image size will be returned.
                    HeightPixels:
                      allOf:
                        - $ref: "#/components/schemas/HeightPixels"
                        - description: The height of the output image that is used in conjunction with the <code>WidthPixels</code> parameter. When both <code>HeightPixels</code> and <code>WidthPixels</code> parameters are provided, the image will be stretched to fit the specified aspect ratio. If only the <code>HeightPixels</code> parameter is provided, its original aspect ratio will be used to calculate the <code>WidthPixels</code> ratio. If neither parameter is provided, the original image size will be returned.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /updateMediaStorageConfiguration:
    post:
      operationId: UpdateMediaStorageConfiguration
      description: <p>Associates a <code>SignalingChannel</code> to a stream to store the media. There are two signaling modes that can specified :</p> <ul> <li> <p>If the <code>StorageStatus</code> is disabled, no data will be stored, and the <code>StreamARN</code> parameter will not be needed. </p> </li> <li> <p>If the <code>StorageStatus</code> is enabled, the data will be stored in the <code>StreamARN</code> provided. </p> </li> </ul>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateMediaStorageConfigurationOutput"
        "480":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "483":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: NoDataRetentionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoDataRetentionException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ChannelARN
                - MediaStorageConfiguration
              properties:
                ChannelARN:
                  description: The Amazon Resource Name (ARN) of the channel.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                MediaStorageConfiguration:
                  description: A structure that encapsulates, or contains, the media storage configuration properties.
                  type: object
                  properties:
                    StreamARN:
                      allOf:
                        - $ref: "#/components/schemas/ResourceARN"
                        - description: "The Amazon Resource Name (ARN) of the stream "
                    Status:
                      allOf:
                        - $ref: "#/components/schemas/MediaStorageConfigurationStatus"
                        - description: The status of the media storage configuration.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /updateNotificationConfiguration:
    post:
      operationId: UpdateNotificationConfiguration
      description: Updates the notification information for a stream.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateNotificationConfigurationOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "484":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "485":
          description: NoDataRetentionException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoDataRetentionException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StreamName:
                  description: The name of the stream from which to update the notification configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to update the notification configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                NotificationConfiguration:
                  description: The structure that contains the notification information for the KVS images delivery. If this parameter is null, the configuration will be deleted from the stream.
                  type: object
                  properties:
                    Status:
                      allOf:
                        - $ref: "#/components/schemas/ConfigurationStatus"
                        - description: Indicates if a notification configuration is enabled or disabled.
                    DestinationConfig:
                      allOf:
                        - $ref: "#/components/schemas/NotificationDestinationConfig"
                        - description: The destination information required to deliver a notification to a customer.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /updateSignalingChannel:
    post:
      operationId: UpdateSignalingChannel
      description: <p>Updates the existing signaling channel. This is an asynchronous operation and takes time to complete. </p> <p>If the <code>MessageTtlSeconds</code> value is updated (either increased or reduced), it only applies to new messages sent via this channel after it's been updated. Existing messages are still expired as per the previous <code>MessageTtlSeconds</code> value.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSignalingChannelOutput"
        "480":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "481":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: AccessDeniedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccessDeniedException"
        "485":
          description: VersionMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionMismatchException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ChannelARN
                - CurrentVersion
              properties:
                ChannelARN:
                  description: The Amazon Resource Name (ARN) of the signaling channel that you want to update.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                CurrentVersion:
                  description: The current version of the signaling channel that you want to update.
                  type: string
                  pattern: "[a-zA-Z0-9]+"
                  minLength: 1
                  maxLength: 64
                SingleMasterConfiguration:
                  description: A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel type.
                  type: object
                  properties:
                    MessageTtlSeconds:
                      allOf:
                        - $ref: "#/components/schemas/MessageTtlSeconds"
                        - description: The period of time a signaling channel retains undelivered messages before they are discarded.
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /updateStream:
    post:
      operationId: UpdateStream
      description: <p>Updates stream metadata, such as the device name and media type.</p> <p>You must provide the stream name or the Amazon Resource Name (ARN) of the stream.</p> <p>To make sure that you have the latest version of the stream before updating it, you can specify the stream version. Kinesis Video Streams assigns a version to each stream. When you update a stream, Kinesis Video Streams assigns a new version number. To get the latest stream version, use the <code>DescribeStream</code> API. </p> <p> <code>UpdateStream</code> is an asynchronous operation, and takes time to complete.</p>
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateStreamOutput"
        "480":
          description: ClientLimitExceededException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientLimitExceededException"
        "481":
          description: InvalidArgumentException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InvalidArgumentException"
        "482":
          description: ResourceNotFoundException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceNotFoundException"
        "483":
          description: ResourceInUseException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceInUseException"
        "484":
          description: NotAuthorizedException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotAuthorizedException"
        "485":
          description: VersionMismatchException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionMismatchException"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - CurrentVersion
              properties:
                StreamName:
                  description: <p>The name of the stream whose metadata you want to update.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 256
                StreamARN:
                  description: The ARN of the stream whose metadata you want to update.
                  type: string
                  pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
                  minLength: 1
                  maxLength: 1024
                CurrentVersion:
                  description: The version of the stream whose metadata you want to update.
                  type: string
                  pattern: "[a-zA-Z0-9]+"
                  minLength: 1
                  maxLength: 64
                DeviceName:
                  description: <p>The name of the device that is writing to the stream. </p> <note> <p> In the current implementation, Kinesis Video Streams does not use this name. </p> </note>
                  type: string
                  pattern: "[a-zA-Z0-9_.-]+"
                  minLength: 1
                  maxLength: 128
                MediaType:
                  description: <p>The stream's media type. Use <code>MediaType</code> to specify the type of content that the stream contains to the consumers of the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming Requirements</a>.</p> <p>To play video on the console, you must specify the correct video type. For example, if the video in the stream is H.264, specify <code>video/h264</code> as the <code>MediaType</code>.</p>
                  type: string
                  pattern: "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*"
                  minLength: 1
                  maxLength: 128
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    CreateSignalingChannelOutput:
      type: object
      properties:
        ChannelARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the created channel.
    MessageTtlSeconds:
      type: integer
      minimum: 5
      maximum: 120
    Tag:
      type: object
      required:
        - Key
        - Value
      properties:
        Key:
          allOf:
            - $ref: "#/components/schemas/TagKey"
            - description: The key of the tag that is associated with the specified signaling channel.
        Value:
          allOf:
            - $ref: "#/components/schemas/TagValue"
            - description: The value of the tag that is associated with the specified signaling channel.
      description: A key and value pair that is associated with the specified signaling channel.
    InvalidArgumentException: {}
    ClientLimitExceededException: {}
    AccountChannelLimitExceededException: {}
    ResourceInUseException: {}
    AccessDeniedException: {}
    TagsPerResourceExceededLimitException: {}
    CreateStreamOutput:
      type: object
      properties:
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the stream.
    TagValue:
      type: string
      pattern: "[\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*"
      minLength: 0
      maxLength: 256
    AccountStreamLimitExceededException: {}
    DeviceStreamLimitExceededException: {}
    InvalidDeviceException: {}
    DeleteSignalingChannelOutput:
      type: object
      properties: {}
    ResourceNotFoundException: {}
    VersionMismatchException: {}
    DeleteStreamOutput:
      type: object
      properties: {}
    NotAuthorizedException: {}
    DescribeEdgeConfigurationOutput:
      type: object
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream from which the edge configuration was updated.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the stream.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The timestamp at which a stream’s edge configuration was first created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The timestamp at which a stream’s edge configuration was last updated.
        SyncStatus:
          allOf:
            - $ref: "#/components/schemas/SyncStatus"
            - description: The latest status of the edge configuration update.
        FailedStatusDetails:
          allOf:
            - $ref: "#/components/schemas/FailedStatusDetails"
            - description: A description of the generated failure status.
        EdgeConfig:
          allOf:
            - $ref: "#/components/schemas/EdgeConfig"
            - description: A description of the stream's edge configuration that will be used to sync with the Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub Device setup at your premise.
    StreamEdgeConfigurationNotFoundException: {}
    DescribeImageGenerationConfigurationOutput:
      type: object
      properties:
        ImageGenerationConfiguration:
          allOf:
            - $ref: "#/components/schemas/ImageGenerationConfiguration"
            - description: The structure that contains the information required for the Kinesis video stream (KVS) images delivery. If this structure is null, the configuration will be deleted from the stream.
    DescribeMappedResourceConfigurationOutput:
      type: object
      properties:
        MappedResourceConfigurationList:
          allOf:
            - $ref: "#/components/schemas/MappedResourceConfigurationList"
            - description: A structure that encapsulates, or contains, the media storage configuration properties.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: "The token that was used in the <code>NextToken</code>request to fetch the next set of results. "
    DescribeMediaStorageConfigurationOutput:
      type: object
      properties:
        MediaStorageConfiguration:
          allOf:
            - $ref: "#/components/schemas/MediaStorageConfiguration"
            - description: A structure that encapsulates, or contains, the media storage configuration properties.
    DescribeNotificationConfigurationOutput:
      type: object
      properties:
        NotificationConfiguration:
          allOf:
            - $ref: "#/components/schemas/NotificationConfiguration"
            - description: The structure that contains the information required for notifications. If the structure is null, the configuration will be deleted from the stream.
    DescribeSignalingChannelOutput:
      type: object
      properties:
        ChannelInfo:
          allOf:
            - $ref: "#/components/schemas/ChannelInfo"
            - description: A structure that encapsulates the specified signaling channel's metadata and properties.
    DescribeStreamOutput:
      type: object
      properties:
        StreamInfo:
          allOf:
            - $ref: "#/components/schemas/StreamInfo"
            - description: An object that describes the stream.
    GetDataEndpointOutput:
      type: object
      properties:
        DataEndpoint:
          allOf:
            - $ref: "#/components/schemas/DataEndpoint"
            - description: The endpoint value. To read data from the stream or to write data to it, specify this endpoint in your application.
    GetSignalingChannelEndpointOutput:
      type: object
      properties:
        ResourceEndpointList:
          allOf:
            - $ref: "#/components/schemas/ResourceEndpointList"
            - description: A list of endpoints for the specified signaling channel.
    ListOfProtocols:
      type: array
      items:
        $ref: "#/components/schemas/ChannelProtocol"
      minItems: 1
      maxItems: 5
    ChannelRole:
      type: string
      enum:
        - MASTER
        - VIEWER
    ListSignalingChannelsOutput:
      type: object
      properties:
        ChannelInfoList:
          allOf:
            - $ref: "#/components/schemas/ChannelInfoList"
            - description: An array of <code>ChannelInfo</code> objects.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If the response is truncated, the call returns this element with a token. To get the next batch of streams, use this token in your next request.
    ComparisonOperator:
      type: string
      enum:
        - BEGINS_WITH
    ChannelName:
      type: string
      pattern: "[a-zA-Z0-9_.-]+"
      minLength: 1
      maxLength: 256
    ListStreamsOutput:
      type: object
      properties:
        StreamInfoList:
          allOf:
            - $ref: "#/components/schemas/StreamInfoList"
            - description: An array of <code>StreamInfo</code> objects.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: "If the response is truncated, the call returns this element with a token. To get the next batch of streams, use this token in your next request. "
    StreamName:
      type: string
      pattern: "[a-zA-Z0-9_.-]+"
      minLength: 1
      maxLength: 256
    ListTagsForResourceOutput:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: "If you specify this parameter and the result of a <code>ListTagsForResource</code> call is truncated, the response includes a token that you can use in the next request to fetch the next set of tags. "
        Tags:
          allOf:
            - $ref: "#/components/schemas/ResourceTags"
            - description: A map of tag keys and values associated with the specified signaling channel.
    ListTagsForStreamOutput:
      type: object
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If you specify this parameter and the result of a <code>ListTags</code> call is truncated, the response includes a token that you can use in the next request to fetch the next set of tags.
        Tags:
          allOf:
            - $ref: "#/components/schemas/ResourceTags"
            - description: A map of tag keys and values associated with the specified stream.
    InvalidResourceFormatException: {}
    StartEdgeConfigurationUpdateOutput:
      type: object
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream from which the edge configuration was updated.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the stream.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The timestamp at which a stream’s edge configuration was first created.
        LastUpdatedTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The timestamp at which a stream’s edge configuration was last updated.
        SyncStatus:
          allOf:
            - $ref: "#/components/schemas/SyncStatus"
            - description: " The current sync status of the stream's edge configuration. When you invoke this API, the sync status will be set to the <code>SYNCING</code> state. Use the <code>DescribeEdgeConfiguration</code> API to get the latest status of the edge configuration."
        FailedStatusDetails:
          allOf:
            - $ref: "#/components/schemas/FailedStatusDetails"
            - description: A description of the generated failure status.
        EdgeConfig:
          allOf:
            - $ref: "#/components/schemas/EdgeConfig"
            - description: A description of the stream's edge configuration that will be used to sync with the Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub Device setup at your premise.
    HubDeviceArn:
      type: string
      pattern: arn:[a-z\d-]+:iot:[a-z0-9-]+:[0-9]+:thing/[a-zA-Z0-9_.-]+
      minLength: 1
      maxLength: 1024
    RecorderConfig:
      type: object
      required:
        - MediaSourceConfig
      properties:
        MediaSourceConfig:
          allOf:
            - $ref: "#/components/schemas/MediaSourceConfig"
            - description: "The configuration details that consist of the credentials required (<code>MediaUriSecretArn</code> and <code>MediaUriType</code>) to access the media files streamed to the camera. "
        ScheduleConfig:
          allOf:
            - $ref: "#/components/schemas/ScheduleConfig"
            - description: The configuration that consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutes</code> details that specify the scheduling to record from a camera, or local media file, onto the Edge Agent. If the <code>ScheduleExpression</code> attribute is not provided, then the Edge Agent will always be set to recording mode.
      description: "The recorder configuration consists of the local <code>MediaSourceConfig</code> details that are used as credentials to accesss the local media files streamed on the camera. "
    UploaderConfig:
      type: object
      required:
        - ScheduleConfig
      properties:
        ScheduleConfig:
          allOf:
            - $ref: "#/components/schemas/ScheduleConfig"
            - description: The configuration that consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutes</code>details that specify the scheduling to record from a camera, or local media file, onto the Edge Agent. If the <code>ScheduleExpression</code> is not provided, then the Edge Agent will always be in recording mode.
      description: "The configuration that consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutesdetails</code>, that specify the scheduling to record from a camera, or local media file, onto the Edge Agent. If the <code>ScheduleExpression</code> is not provided, then the Edge Agent will always be in upload mode. "
    DeletionConfig:
      type: object
      properties:
        EdgeRetentionInHours:
          allOf:
            - $ref: "#/components/schemas/EdgeRetentionInHours"
            - description: The number of hours that you want to retain the data in the stream on the Edge Agent. The default value of the retention time is 720 hours, which translates to 30 days.
        LocalSizeConfig:
          allOf:
            - $ref: "#/components/schemas/LocalSizeConfig"
            - description: The value of the local size required in order to delete the edge configuration.
        DeleteAfterUpload:
          allOf:
            - $ref: "#/components/schemas/DeleteAfterUpload"
            - description: <p>The <code>boolean</code> value used to indicate whether or not you want to mark the media for deletion, once it has been uploaded to the Kinesis Video Stream cloud. The media files can be deleted if any of the deletion configuration values are set to <code>true</code>, such as when the limit for the <code>EdgeRetentionInHours</code>, or the <code>MaxLocalMediaSizeInMB</code>, has been reached. </p> <p>Since the default value is set to <code>true</code>, configure the uploader schedule such that the media files are not being deleted before they are initially uploaded to AWS cloud.</p>
      description: The configuration details required to delete the connection of the stream from the Edge Agent.
    NoDataRetentionException: {}
    TagResourceOutput:
      type: object
      properties: {}
    TagStreamOutput:
      type: object
      properties: {}
    UntagResourceOutput:
      type: object
      properties: {}
    TagKey:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 1
      maxLength: 128
    UntagStreamOutput:
      type: object
      properties: {}
    UpdateDataRetentionOutput:
      type: object
      properties: {}
    UpdateImageGenerationConfigurationOutput:
      type: object
      properties: {}
    ConfigurationStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    ImageSelectorType:
      type: string
      enum:
        - SERVER_TIMESTAMP
        - PRODUCER_TIMESTAMP
    ImageGenerationDestinationConfig:
      type: object
      required:
        - Uri
        - DestinationRegion
      properties:
        Uri:
          allOf:
            - $ref: "#/components/schemas/DestinationUri"
            - description: The Uniform Resource Identifier (URI) that identifies where the images will be delivered.
        DestinationRegion:
          allOf:
            - $ref: "#/components/schemas/DestinationRegion"
            - description: The AWS Region of the S3 bucket where images will be delivered. This <code>DestinationRegion</code> must match the Region where the stream is located.
      description: The structure that contains the information required to deliver images to a customer.
    SamplingInterval:
      type: integer
      minimum: 3000
      maximum: 20000
    Format:
      type: string
      enum:
        - JPEG
        - PNG
    FormatConfig:
      type: object
      minProperties: 1
      maxProperties: 1
      additionalProperties:
        $ref: "#/components/schemas/FormatConfigValue"
    WidthPixels:
      type: integer
      minimum: 1
      maximum: 3840
    HeightPixels:
      type: integer
      minimum: 1
      maximum: 2160
    UpdateMediaStorageConfigurationOutput:
      type: object
      properties: {}
    ResourceARN:
      type: string
      pattern: arn:[a-z\d-]+:kinesisvideo:[a-z0-9-]+:[0-9]+:[a-z]+/[a-zA-Z0-9_.-]+/[0-9]+
      minLength: 1
      maxLength: 1024
    MediaStorageConfigurationStatus:
      type: string
      enum:
        - ENABLED
        - DISABLED
    UpdateNotificationConfigurationOutput:
      type: object
      properties: {}
    NotificationDestinationConfig:
      type: object
      required:
        - Uri
      properties:
        Uri:
          allOf:
            - $ref: "#/components/schemas/DestinationUri"
            - description: The Uniform Resource Identifier (URI) that identifies where the images will be delivered.
      description: The structure that contains the information required to deliver a notification to a customer.
    UpdateSignalingChannelOutput:
      type: object
      properties: {}
    UpdateStreamOutput:
      type: object
      properties: {}
    APIName:
      type: string
      enum:
        - PUT_MEDIA
        - GET_MEDIA
        - LIST_FRAGMENTS
        - GET_MEDIA_FOR_FRAGMENT_LIST
        - GET_HLS_STREAMING_SESSION_URL
        - GET_DASH_STREAMING_SESSION_URL
        - GET_CLIP
        - GET_IMAGES
    ChannelType:
      type: string
      enum:
        - SINGLE_MASTER
        - FULL_MESH
    Status:
      type: string
      enum:
        - CREATING
        - ACTIVE
        - UPDATING
        - DELETING
    Timestamp:
      type: string
      format: date-time
    SingleMasterConfiguration:
      type: object
      properties:
        MessageTtlSeconds:
          allOf:
            - $ref: "#/components/schemas/MessageTtlSeconds"
            - description: The period of time a signaling channel retains undelivered messages before they are discarded.
      description: A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel type.
    Version:
      type: string
      pattern: "[a-zA-Z0-9]+"
      minLength: 1
      maxLength: 64
    ChannelInfo:
      type: object
      properties:
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/ChannelName"
            - description: The name of the signaling channel.
        ChannelARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the signaling channel.
        ChannelType:
          allOf:
            - $ref: "#/components/schemas/ChannelType"
            - description: The type of the signaling channel.
        ChannelStatus:
          allOf:
            - $ref: "#/components/schemas/Status"
            - description: Current status of the signaling channel.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: The time at which the signaling channel was created.
        SingleMasterConfiguration:
          allOf:
            - $ref: "#/components/schemas/SingleMasterConfiguration"
            - description: A structure that contains the configuration for the <code>SINGLE_MASTER</code> channel type.
        Version:
          allOf:
            - $ref: "#/components/schemas/Version"
            - description: The current version of the signaling channel.
      description: A structure that encapsulates a signaling channel's metadata and properties.
    ChannelInfoList:
      type: array
      items:
        $ref: "#/components/schemas/ChannelInfo"
    ChannelNameCondition:
      type: object
      properties:
        ComparisonOperator:
          allOf:
            - $ref: "#/components/schemas/ComparisonOperator"
            - description: A comparison operator. Currently, you can only specify the <code>BEGINS_WITH</code> operator, which finds signaling channels whose names begin with a given prefix.
        ComparisonValue:
          allOf:
            - $ref: "#/components/schemas/ChannelName"
            - description: A value to compare.
      description: An optional input parameter for the <code>ListSignalingChannels</code> API. When this parameter is specified while invoking <code>ListSignalingChannels</code>, the API returns only the channels that satisfy a condition specified in <code>ChannelNameCondition</code>.
    ChannelProtocol:
      type: string
      enum:
        - WSS
        - HTTPS
        - WEBRTC
    TagOnCreateList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 0
      maxItems: 50
    CreateSignalingChannelInput:
      type: object
      required:
        - ChannelName
      title: CreateSignalingChannelInput
      properties:
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/ChannelName"
            - description: A name for the signaling channel that you are creating. It must be unique for each Amazon Web Services account and Amazon Web Services Region.
        ChannelType:
          allOf:
            - $ref: "#/components/schemas/ChannelType"
            - description: "A type of the signaling channel that you are creating. Currently, <code>SINGLE_MASTER</code> is the only supported channel type. "
        SingleMasterConfiguration:
          allOf:
            - $ref: "#/components/schemas/SingleMasterConfiguration"
            - description: "A structure containing the configuration for the <code>SINGLE_MASTER</code> channel type. "
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagOnCreateList"
            - description: A set of tags (key-value pairs) that you want to associate with this channel.
    DeviceName:
      type: string
      pattern: "[a-zA-Z0-9_.-]+"
      minLength: 1
      maxLength: 128
    MediaType:
      type: string
      pattern: "[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+(,[\\w\\-\\.\\+]+/[\\w\\-\\.\\+]+)*"
      minLength: 1
      maxLength: 128
    KmsKeyId:
      type: string
      pattern: .+
      minLength: 1
      maxLength: 2048
    DataRetentionInHours:
      type: integer
      minimum: 0
    ResourceTags:
      type: object
      minProperties: 1
      maxProperties: 50
      additionalProperties:
        $ref: "#/components/schemas/TagValue"
    CreateStreamInput:
      type: object
      required:
        - StreamName
      title: CreateStreamInput
      properties:
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/DeviceName"
            - description: <p>The name of the device that is writing to the stream. </p> <note> <p>In the current implementation, Kinesis Video Streams does not use this name.</p> </note>
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: <p>A name for the stream that you are creating.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>
        MediaType:
          allOf:
            - $ref: "#/components/schemas/MediaType"
            - description: <p>The media type of the stream. Consumers of the stream can use this information when processing the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming Requirements</a> for guidelines.</p> <p>Example valid values include "video/h264" and "video/h264,audio/aac".</p> <p>This parameter is optional; the default value is <code>null</code> (or empty in JSON).</p>
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - description: <p>The ID of the Key Management Service (KMS) key that you want Kinesis Video Streams to use to encrypt stream data.</p> <p>If no key ID is specified, the default, Kinesis Video-managed key (<code>aws/kinesisvideo</code>) is used.</p> <p> For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_DescribeKey.html#API_DescribeKey_RequestParameters">DescribeKey</a>. </p>
        DataRetentionInHours:
          allOf:
            - $ref: "#/components/schemas/DataRetentionInHours"
            - description: <p>The number of hours that you want to retain the data in the stream. Kinesis Video Streams retains the data in a data store that is associated with the stream.</p> <p>The default value is 0, indicating that the stream does not persist data.</p> <p>When the <code>DataRetentionInHours</code> value is 0, consumers can still consume the fragments that remain in the service host buffer, which has a retention time limit of 5 minutes and a retention memory limit of 200 MB. Fragments are removed from the buffer when either limit is reached.</p>
        Tags:
          allOf:
            - $ref: "#/components/schemas/ResourceTags"
            - description: A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).
    DataEndpoint:
      type: string
    DataRetentionChangeInHours:
      type: integer
      minimum: 1
    DeleteAfterUpload:
      type: boolean
    DeleteSignalingChannelInput:
      type: object
      required:
        - ChannelARN
      title: DeleteSignalingChannelInput
      properties:
        ChannelARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the signaling channel that you want to delete.
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/Version"
            - description: The current version of the signaling channel that you want to delete. You can obtain the current version by invoking the <code>DescribeSignalingChannel</code> or <code>ListSignalingChannels</code> API operations.
    DeleteStreamInput:
      type: object
      required:
        - StreamARN
      title: DeleteStreamInput
      properties:
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: "The Amazon Resource Name (ARN) of the stream that you want to delete. "
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/Version"
            - description: "<p>Optional: The version of the stream that you want to delete. </p> <p>Specify the version as a safeguard to ensure that your are deleting the correct stream. To get the stream version, use the <code>DescribeStream</code> API.</p> <p>If not specified, only the <code>CreationTime</code> is checked before deleting the stream.</p>"
    EdgeRetentionInHours:
      type: integer
      minimum: 1
      maximum: 720
    LocalSizeConfig:
      type: object
      properties:
        MaxLocalMediaSizeInMB:
          allOf:
            - $ref: "#/components/schemas/MaxLocalMediaSizeInMB"
            - description: "The overall maximum size of the media that you want to store for a stream on the Edge Agent. "
        StrategyOnFullSize:
          allOf:
            - $ref: "#/components/schemas/StrategyOnFullSize"
            - description: The strategy to perform when a stream’s <code>MaxLocalMediaSizeInMB</code> limit is reached.
      description: The configuration details that include the maximum size of the media (<code>MaxLocalMediaSizeInMB</code>) that you want to store for a stream on the Edge Agent, as well as the strategy that should be used (<code>StrategyOnFullSize</code>) when a stream's maximum size has been reached.
    DescribeEdgeConfigurationInput:
      type: object
      title: DescribeEdgeConfigurationInput
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: "The name of the stream whose edge configuration you want to update. Specify either the <code>StreamName</code> or the <code>StreamARN</code>. "
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the stream. Specify either the <code>StreamName</code>or the <code>StreamARN</code>.
    SyncStatus:
      type: string
      enum:
        - SYNCING
        - ACKNOWLEDGED
        - IN_SYNC
        - SYNC_FAILED
        - DELETING
        - DELETE_FAILED
    FailedStatusDetails:
      type: string
    EdgeConfig:
      type: object
      required:
        - HubDeviceArn
        - RecorderConfig
      properties:
        HubDeviceArn:
          allOf:
            - $ref: "#/components/schemas/HubDeviceArn"
            - description: The "<b>Internet of Things (IoT) Thing</b>" Arn of the stream.
        RecorderConfig:
          allOf:
            - $ref: "#/components/schemas/RecorderConfig"
            - description: "The recorder configuration consists of the local <code>MediaSourceConfig</code> details, that are used as credentials to access the local media files streamed on the camera. "
        UploaderConfig:
          allOf:
            - $ref: "#/components/schemas/UploaderConfig"
            - description: The uploader configuration contains the <code>ScheduleExpression</code> details that are used to schedule upload jobs for the recorded media files from the Edge Agent to a Kinesis Video Stream.
        DeletionConfig:
          allOf:
            - $ref: "#/components/schemas/DeletionConfig"
            - description: The deletion configuration is made up of the retention time (<code>EdgeRetentionInHours</code>) and local size configuration (<code>LocalSizeConfig</code>) details that are used to make the deletion.
      description: A description of the stream's edge configuration that will be used to sync with the Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub Device setup at your premise.
    DescribeImageGenerationConfigurationInput:
      type: object
      title: DescribeImageGenerationConfigurationInput
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: "The name of the stream from which to retrieve the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>. "
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the Kinesis video stream from which to retrieve the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
    ImageGenerationConfiguration:
      type: object
      required:
        - Status
        - ImageSelectorType
        - DestinationConfig
        - SamplingInterval
        - Format
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/ConfigurationStatus"
            - description: Indicates whether the <code>ContinuousImageGenerationConfigurations</code> API is enabled or disabled.
        ImageSelectorType:
          allOf:
            - $ref: "#/components/schemas/ImageSelectorType"
            - description: The origin of the Server or Producer timestamps to use to generate the images.
        DestinationConfig:
          allOf:
            - $ref: "#/components/schemas/ImageGenerationDestinationConfig"
            - description: The structure that contains the information required to deliver images to a customer.
        SamplingInterval:
          allOf:
            - $ref: "#/components/schemas/SamplingInterval"
            - description: "The time interval in milliseconds (ms) at which the images need to be generated from the stream. The minimum value that can be provided is 33 ms, because a camera that generates content at 30 FPS would create a frame every 33.3 ms. If the timestamp range is less than the sampling interval, the Image from the <code>StartTimestamp</code> will be returned if available. "
        Format:
          allOf:
            - $ref: "#/components/schemas/Format"
            - description: The accepted image format.
        FormatConfig:
          allOf:
            - $ref: "#/components/schemas/FormatConfig"
            - description: The list of a key-value pair structure that contains extra parameters that can be applied when the image is generated. The <code>FormatConfig</code> key is the <code>JPEGQuality</code>, which indicates the JPEG quality key to be used to generate the image. The <code>FormatConfig</code> value accepts ints from 1 to 100. If the value is 1, the image will be generated with less quality and the best compression. If the value is 100, the image will be generated with the best quality and less compression. If no value is provided, the default value of the <code>JPEGQuality</code> key will be set to 80.
        WidthPixels:
          allOf:
            - $ref: "#/components/schemas/WidthPixels"
            - description: The width of the output image that is used in conjunction with the <code>HeightPixels</code> parameter. When both <code>WidthPixels</code> and <code>HeightPixels</code> parameters are provided, the image will be stretched to fit the specified aspect ratio. If only the <code>WidthPixels</code> parameter is provided, its original aspect ratio will be used to calculate the <code>HeightPixels</code> ratio. If neither parameter is provided, the original image size will be returned.
        HeightPixels:
          allOf:
            - $ref: "#/components/schemas/HeightPixels"
            - description: The height of the output image that is used in conjunction with the <code>WidthPixels</code> parameter. When both <code>HeightPixels</code> and <code>WidthPixels</code> parameters are provided, the image will be stretched to fit the specified aspect ratio. If only the <code>HeightPixels</code> parameter is provided, its original aspect ratio will be used to calculate the <code>WidthPixels</code> ratio. If neither parameter is provided, the original image size will be returned.
      description: The structure that contains the information required for the KVS images delivery. If null, the configuration will be deleted from the stream.
    MappedResourceConfigurationListLimit:
      type: integer
      minimum: 1
      maximum: 1
    NextToken:
      type: string
      pattern: "[a-zA-Z0-9+/=]*"
      minLength: 0
      maxLength: 512
    DescribeMappedResourceConfigurationInput:
      type: object
      title: DescribeMappedResourceConfigurationInput
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the stream.
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/MappedResourceConfigurationListLimit"
            - description: The maximum number of results to return in the response.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: The token to provide in your next request, to get another batch of results.
    MappedResourceConfigurationList:
      type: array
      items:
        $ref: "#/components/schemas/MappedResourceConfigurationListItem"
      minItems: 0
      maxItems: 1
    DescribeMediaStorageConfigurationInput:
      type: object
      title: DescribeMediaStorageConfigurationInput
      properties:
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/ChannelName"
            - description: The name of the channel.
        ChannelARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the channel.
    MediaStorageConfiguration:
      type: object
      required:
        - Status
      properties:
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: "The Amazon Resource Name (ARN) of the stream "
        Status:
          allOf:
            - $ref: "#/components/schemas/MediaStorageConfigurationStatus"
            - description: The status of the media storage configuration.
      description: A structure that encapsulates, or contains, the media storage configuration properties.
    DescribeNotificationConfigurationInput:
      type: object
      title: DescribeNotificationConfigurationInput
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream from which to retrieve the notification configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to retrieve the notification configuration. You must specify either the <code>StreamName</code> or the StreamARN.
    NotificationConfiguration:
      type: object
      required:
        - Status
        - DestinationConfig
      properties:
        Status:
          allOf:
            - $ref: "#/components/schemas/ConfigurationStatus"
            - description: Indicates if a notification configuration is enabled or disabled.
        DestinationConfig:
          allOf:
            - $ref: "#/components/schemas/NotificationDestinationConfig"
            - description: The destination information required to deliver a notification to a customer.
      description: The structure that contains the notification information for the KVS images delivery. If this parameter is null, the configuration will be deleted from the stream.
    DescribeSignalingChannelInput:
      type: object
      title: DescribeSignalingChannelInput
      properties:
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/ChannelName"
            - description: The name of the signaling channel that you want to describe.
        ChannelARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The ARN of the signaling channel that you want to describe.
    DescribeStreamInput:
      type: object
      title: DescribeStreamInput
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the stream.
    StreamInfo:
      type: object
      properties:
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/DeviceName"
            - description: The name of the device that is associated with the stream.
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the stream.
        MediaType:
          allOf:
            - $ref: "#/components/schemas/MediaType"
            - description: "The <code>MediaType</code> of the stream. "
        KmsKeyId:
          allOf:
            - $ref: "#/components/schemas/KmsKeyId"
            - description: The ID of the Key Management Service (KMS) key that Kinesis Video Streams uses to encrypt data on the stream.
        Version:
          allOf:
            - $ref: "#/components/schemas/Version"
            - description: The version of the stream.
        Status:
          allOf:
            - $ref: "#/components/schemas/Status"
            - description: The status of the stream.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/Timestamp"
            - description: A time stamp that indicates when the stream was created.
        DataRetentionInHours:
          allOf:
            - $ref: "#/components/schemas/DataRetentionInHours"
            - description: How long the stream retains data, in hours.
      description: An object describing a Kinesis video stream.
    DestinationRegion:
      type: string
      pattern: ^[a-z]+(-[a-z]+)?-[a-z]+-[0-9]$
      minLength: 9
      maxLength: 14
    DestinationUri:
      type: string
      pattern: ^[a-zA-Z_0-9]+:(//)?([^/]+)/?([^*]*)$
      minLength: 1
      maxLength: 255
    DurationInSeconds:
      type: integer
      minimum: 60
      maximum: 3600
    FormatConfigValue:
      type: string
      pattern: ^[a-zA-Z_0-9]+
      minLength: 0
      maxLength: 256
    FormatConfigKey:
      type: string
      enum:
        - JPEGQuality
    GetDataEndpointInput:
      type: object
      required:
        - APIName
      title: GetDataEndpointInput
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamARN</code> in the request.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: "The Amazon Resource Name (ARN) of the stream that you want to get the endpoint for. You must specify either this parameter or a <code>StreamName</code> in the request. "
        APIName:
          allOf:
            - $ref: "#/components/schemas/APIName"
            - description: The name of the API action for which to get an endpoint.
    SingleMasterChannelEndpointConfiguration:
      type: object
      properties:
        Protocols:
          allOf:
            - $ref: "#/components/schemas/ListOfProtocols"
            - description: This property is used to determine the nature of communication over this <code>SINGLE_MASTER</code> signaling channel. If <code>WSS</code> is specified, this API returns a websocket endpoint. If <code>HTTPS</code> is specified, this API returns an <code>HTTPS</code> endpoint.
        Role:
          allOf:
            - $ref: "#/components/schemas/ChannelRole"
            - description: "This property is used to determine messaging permissions in this <code>SINGLE_MASTER</code> signaling channel. If <code>MASTER</code> is specified, this API returns an endpoint that a client can use to receive offers from and send answers to any of the viewers on this signaling channel. If <code>VIEWER</code> is specified, this API returns an endpoint that a client can use only to send offers to another <code>MASTER</code> client on this signaling channel. "
      description: "An object that contains the endpoint configuration for the <code>SINGLE_MASTER</code> channel type. "
    GetSignalingChannelEndpointInput:
      type: object
      required:
        - ChannelARN
      title: GetSignalingChannelEndpointInput
      properties:
        ChannelARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the signalling channel for which you want to get an endpoint.
        SingleMasterChannelEndpointConfiguration:
          allOf:
            - $ref: "#/components/schemas/SingleMasterChannelEndpointConfiguration"
            - description: A structure containing the endpoint configuration for the <code>SINGLE_MASTER</code> channel type.
    ResourceEndpointList:
      type: array
      items:
        $ref: "#/components/schemas/ResourceEndpointListItem"
    ListStreamsInputLimit:
      type: integer
      minimum: 1
      maximum: 10000
    ListSignalingChannelsInput:
      type: object
      title: ListSignalingChannelsInput
      properties:
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/ListStreamsInputLimit"
            - description: The maximum number of channels to return in the response. The default is 500.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If you specify this parameter, when the result of a <code>ListSignalingChannels</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of channels, provide this token in your next request.
        ChannelNameCondition:
          allOf:
            - $ref: "#/components/schemas/ChannelNameCondition"
            - description: "Optional: Returns only the channels that satisfy a specific condition."
    StreamNameCondition:
      type: object
      properties:
        ComparisonOperator:
          allOf:
            - $ref: "#/components/schemas/ComparisonOperator"
            - description: A comparison operator. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix.
        ComparisonValue:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: A value to compare.
      description: "Specifies the condition that streams must satisfy to be returned when you list streams (see the <code>ListStreams</code> API). A condition has a comparison operation and a value. Currently, you can specify only the <code>BEGINS_WITH</code> operator, which finds streams whose names start with a given prefix. "
    ListStreamsInput:
      type: object
      title: ListStreamsInput
      properties:
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/ListStreamsInputLimit"
            - description: The maximum number of streams to return in the response. The default is 10,000.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If you specify this parameter, when the result of a <code>ListStreams</code> operation is truncated, the call returns the <code>NextToken</code> in the response. To get another batch of streams, provide this token in your next request.
        StreamNameCondition:
          allOf:
            - $ref: "#/components/schemas/StreamNameCondition"
            - description: "Optional: Returns only streams that satisfy a specific condition. Currently, you can specify only the prefix of a stream name as a condition. "
    StreamInfoList:
      type: array
      items:
        $ref: "#/components/schemas/StreamInfo"
    ListTagsForResourceInput:
      type: object
      required:
        - ResourceARN
      title: ListTagsForResourceInput
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: "If you specify this parameter and the result of a <code>ListTagsForResource</code> call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags. "
        ResourceARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the signaling channel for which you want to list tags.
    ListTagsForStreamInput:
      type: object
      title: ListTagsForStreamInput
      properties:
        NextToken:
          allOf:
            - $ref: "#/components/schemas/NextToken"
            - description: If you specify this parameter and the result of a <code>ListTagsForStream</code> call is truncated, the response includes a token that you can use in the next request to fetch the next batch of tags.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the stream that you want to list tags for.
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream that you want to list tags for.
    MaxLocalMediaSizeInMB:
      type: integer
      minimum: 64
      maximum: 2000000
    StrategyOnFullSize:
      type: string
      enum:
        - DELETE_OLDEST_MEDIA
        - DENY_NEW_MEDIA
    MappedResourceConfigurationListItem:
      type: object
      properties:
        Type:
          allOf:
            - $ref: "#/components/schemas/Type"
            - description: The type of the associated resource for the kinesis video stream.
        ARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the Kinesis Video Stream resource, associated with the stream.
      description: A structure that encapsulates, or contains, the media storage configuration properties.
    Type:
      type: string
    MediaUriSecretArn:
      type: string
      pattern: arn:[a-z\d-]+:secretsmanager:[a-z0-9-]+:[0-9]+:secret:[a-zA-Z0-9_.-]+
      minLength: 20
      maxLength: 2048
      format: password
    MediaUriType:
      type: string
      enum:
        - RTSP_URI
        - FILE_URI
    MediaSourceConfig:
      type: object
      required:
        - MediaUriSecretArn
        - MediaUriType
      properties:
        MediaUriSecretArn:
          allOf:
            - $ref: "#/components/schemas/MediaUriSecretArn"
            - description: The AWS Secrets Manager ARN for the username and password of the camera, or a local media file location.
        MediaUriType:
          allOf:
            - $ref: "#/components/schemas/MediaUriType"
            - description: <p>The Uniform Resource Identifier (URI) type. The <code>FILE_URI</code> value can be used to stream local media files.</p> <note> <p>Preview only supports the <code>RTSP_URI</code> media source URI format .</p> </note>
      description: The configuration details that consist of the credentials required (<code>MediaUriSecretArn</code> and <code>MediaUriType</code>) to access the media files that are streamed to the camera.
    ScheduleConfig:
      type: object
      required:
        - ScheduleExpression
        - DurationInSeconds
      properties:
        ScheduleExpression:
          allOf:
            - $ref: "#/components/schemas/ScheduleExpression"
            - description: <p>The Quartz cron expression that takes care of scheduling jobs to record from the camera, or local media file, onto the Edge Agent. If the <code>ScheduleExpression</code> is not provided for the <code>RecorderConfig</code>, then the Edge Agent will always be set to recording mode.</p> <p>For more information about Quartz, refer to the <a href="http://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html"> <i>Cron Trigger Tutorial</i> </a> page to understand the valid expressions and its use.</p>
        DurationInSeconds:
          allOf:
            - $ref: "#/components/schemas/DurationInSeconds"
            - description: The total duration to record the media. If the <code>ScheduleExpression</code> attribute is provided, then the <code>DurationInSeconds</code> attribute should also be specified.
      description: <p>This API enables you to specify the duration that the camera, or local media file, should record onto the Edge Agent. The <code>ScheduleConfig</code> consists of the <code>ScheduleExpression</code> and the <code>DurationInMinutes</code> attributes. </p> <p>If the <code>ScheduleExpression</code> is not provided, then the Edge Agent will always be set to recording mode.</p>
    ResourceEndpoint:
      type: string
    ResourceEndpointListItem:
      type: object
      properties:
        Protocol:
          allOf:
            - $ref: "#/components/schemas/ChannelProtocol"
            - description: The protocol of the signaling channel returned by the <code>GetSignalingChannelEndpoint</code> API.
        ResourceEndpoint:
          allOf:
            - $ref: "#/components/schemas/ResourceEndpoint"
            - description: The endpoint of the signaling channel returned by the <code>GetSignalingChannelEndpoint</code> API.
      description: An object that describes the endpoint of the signaling channel returned by the <code>GetSignalingChannelEndpoint</code> API.
    ScheduleExpression:
      type: string
      pattern: "[^\\n]{11,100}"
      minLength: 11
      maxLength: 100
    StartEdgeConfigurationUpdateInput:
      type: object
      required:
        - EdgeConfig
      title: StartEdgeConfigurationUpdateInput
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream whose edge configuration you want to update. Specify either the <code>StreamName</code> or the <code>StreamARN</code>.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: " The Amazon Resource Name (ARN) of the stream. Specify either the <code>StreamName</code> or the <code>StreamARN</code>."
        EdgeConfig:
          allOf:
            - $ref: "#/components/schemas/EdgeConfig"
            - description: The edge configuration details required to invoke the update process.
    TagKeyList:
      type: array
      items:
        $ref: "#/components/schemas/TagKey"
      minItems: 1
      maxItems: 50
    TagList:
      type: array
      items:
        $ref: "#/components/schemas/Tag"
      minItems: 1
      maxItems: 50
    TagResourceInput:
      type: object
      required:
        - ResourceARN
        - Tags
      title: TagResourceInput
      properties:
        ResourceARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the signaling channel to which you want to add tags.
        Tags:
          allOf:
            - $ref: "#/components/schemas/TagList"
            - description: A list of tags to associate with the specified signaling channel. Each tag is a key-value pair.
    TagStreamInput:
      type: object
      required:
        - Tags
      title: TagStreamInput
      properties:
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the resource that you want to add the tag or tags to.
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream that you want to add the tag or tags to.
        Tags:
          allOf:
            - $ref: "#/components/schemas/ResourceTags"
            - description: A list of tags to associate with the specified stream. Each tag is a key-value pair (the value is optional).
    UntagResourceInput:
      type: object
      required:
        - ResourceARN
        - TagKeyList
      title: UntagResourceInput
      properties:
        ResourceARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the signaling channel from which you want to remove tags.
        TagKeyList:
          allOf:
            - $ref: "#/components/schemas/TagKeyList"
            - description: A list of the keys of the tags that you want to remove.
    UntagStreamInput:
      type: object
      required:
        - TagKeyList
      title: UntagStreamInput
      properties:
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the stream that you want to remove tags from.
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream that you want to remove tags from.
        TagKeyList:
          allOf:
            - $ref: "#/components/schemas/TagKeyList"
            - description: A list of the keys of the tags that you want to remove.
    UpdateDataRetentionOperation:
      type: string
      enum:
        - INCREASE_DATA_RETENTION
        - DECREASE_DATA_RETENTION
    UpdateDataRetentionInput:
      type: object
      required:
        - CurrentVersion
        - Operation
        - DataRetentionChangeInHours
      title: UpdateDataRetentionInput
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream whose retention period you want to change.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the stream whose retention period you want to change.
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/Version"
            - description: The version of the stream whose retention period you want to change. To get the version, call either the <code>DescribeStream</code> or the <code>ListStreams</code> API.
        Operation:
          allOf:
            - $ref: "#/components/schemas/UpdateDataRetentionOperation"
            - description: Indicates whether you want to increase or decrease the retention period.
        DataRetentionChangeInHours:
          allOf:
            - $ref: "#/components/schemas/DataRetentionChangeInHours"
            - description: The retention period, in hours. The value you specify replaces the current value. The maximum value for this parameter is 87600 (ten years).
    UpdateImageGenerationConfigurationInput:
      type: object
      title: UpdateImageGenerationConfigurationInput
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream from which to update the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to update the image generation configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
        ImageGenerationConfiguration:
          allOf:
            - $ref: "#/components/schemas/ImageGenerationConfiguration"
            - description: The structure that contains the information required for the KVS images delivery. If the structure is null, the configuration will be deleted from the stream.
    UpdateMediaStorageConfigurationInput:
      type: object
      required:
        - ChannelARN
        - MediaStorageConfiguration
      title: UpdateMediaStorageConfigurationInput
      properties:
        ChannelARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the channel.
        MediaStorageConfiguration:
          allOf:
            - $ref: "#/components/schemas/MediaStorageConfiguration"
            - description: A structure that encapsulates, or contains, the media storage configuration properties.
    UpdateNotificationConfigurationInput:
      type: object
      title: UpdateNotificationConfigurationInput
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: The name of the stream from which to update the notification configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the Kinesis video stream from where you want to update the notification configuration. You must specify either the <code>StreamName</code> or the <code>StreamARN</code>.
        NotificationConfiguration:
          allOf:
            - $ref: "#/components/schemas/NotificationConfiguration"
            - description: The structure containing the information required for notifications. If the structure is null, the configuration will be deleted from the stream.
    UpdateSignalingChannelInput:
      type: object
      required:
        - ChannelARN
        - CurrentVersion
      title: UpdateSignalingChannelInput
      properties:
        ChannelARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The Amazon Resource Name (ARN) of the signaling channel that you want to update.
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/Version"
            - description: The current version of the signaling channel that you want to update.
        SingleMasterConfiguration:
          allOf:
            - $ref: "#/components/schemas/SingleMasterConfiguration"
            - description: "The structure containing the configuration for the <code>SINGLE_MASTER</code> type of the signaling channel that you want to update. "
    UpdateStreamInput:
      type: object
      required:
        - CurrentVersion
      title: UpdateStreamInput
      properties:
        StreamName:
          allOf:
            - $ref: "#/components/schemas/StreamName"
            - description: <p>The name of the stream whose metadata you want to update.</p> <p>The stream name is an identifier for the stream, and must be unique for each account and region.</p>
        StreamARN:
          allOf:
            - $ref: "#/components/schemas/ResourceARN"
            - description: The ARN of the stream whose metadata you want to update.
        CurrentVersion:
          allOf:
            - $ref: "#/components/schemas/Version"
            - description: The version of the stream whose metadata you want to update.
        DeviceName:
          allOf:
            - $ref: "#/components/schemas/DeviceName"
            - description: <p>The name of the device that is writing to the stream. </p> <note> <p> In the current implementation, Kinesis Video Streams does not use this name. </p> </note>
        MediaType:
          allOf:
            - $ref: "#/components/schemas/MediaType"
            - description: <p>The stream's media type. Use <code>MediaType</code> to specify the type of content that the stream contains to the consumers of the stream. For more information about media types, see <a href="http://www.iana.org/assignments/media-types/media-types.xhtml">Media Types</a>. If you choose to specify the <code>MediaType</code>, see <a href="https://tools.ietf.org/html/rfc6838#section-4.2">Naming Requirements</a>.</p> <p>To play video on the console, you must specify the correct video type. For example, if the video in the stream is H.264, specify <code>video/h264</code> as the <code>MediaType</code>.</p>
security:
  - hmac: []
