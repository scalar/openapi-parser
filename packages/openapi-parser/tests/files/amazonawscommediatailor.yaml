openapi: 3.0.0
info:
  version: 2018-04-23
  x-release: v4
  title: AWS MediaTailor
  description: <p>Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/">AWS Elemental MediaTailor User Guide</a>.</p> <p>Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).</p>
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_twitter.com_awscloud_profile_image.png
    backgroundColor: "#FFFFFF"
  termsOfService: https://aws.amazon.com/service-terms/
  contact:
    name: Mike Ralphson
    email: mike.ralphson@gmail.com
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  x-providerName: amazonaws.com
  x-serviceName: mediatailor
  x-aws-signingName: mediatailor
  x-origin:
    - contentType: application/json
      url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/mediatailor-2018-04-23.normal.json
      converter:
        url: https://github.com/mermade/aws2openapi
        version: 1.0.0
      x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
    - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/mediatailor/
servers:
  - url: http://api.mediatailor.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The MediaTailor multi-region endpoint
  - url: https://api.mediatailor.{region}.amazonaws.com
    variables:
      region:
        description: The AWS region
        enum:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
          - us-gov-west-1
          - us-gov-east-1
          - ca-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - eu-central-1
          - eu-south-1
          - af-south-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-southeast-1
          - ap-southeast-2
          - ap-east-1
          - ap-south-1
          - sa-east-1
          - me-south-1
        default: us-east-1
    description: The MediaTailor multi-region endpoint
  - url: http://api.mediatailor.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaTailor endpoint for China (Beijing) and China (Ningxia)
  - url: https://api.mediatailor.{region}.amazonaws.com.cn
    variables:
      region:
        description: The AWS region
        enum:
          - cn-north-1
          - cn-northwest-1
        default: cn-north-1
    description: The MediaTailor endpoint for China (Beijing) and China (Ningxia)
x-hasEquivalentPaths: true
paths:
  /configureLogs/channel:
    put:
      operationId: ConfigureLogsForChannel
      description: Configures Amazon CloudWatch log settings for a channel.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigureLogsForChannelResponse"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ChannelName
                - LogTypes
              properties:
                ChannelName:
                  description: The name of the channel.
                  type: string
                LogTypes:
                  description: The types of logs to collect.
                  type: array
                  items:
                    $ref: "#/components/schemas/LogType"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /configureLogs/playbackConfiguration:
    put:
      operationId: ConfigureLogsForPlaybackConfiguration
      description: Amazon CloudWatch log settings for a playback configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConfigureLogsForPlaybackConfigurationResponse"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - PercentEnabled
                - PlaybackConfigurationName
              properties:
                PercentEnabled:
                  description: '<p>The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account. For example, if your playback configuration has 1000 sessions and percentEnabled is set to <code>60</code>, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/debug-log-mode.html">debug log mode</a>.</p> <p>Valid values: <code>0</code> - <code>100</code> </p>'
                  type: integer
                PlaybackConfigurationName:
                  description: The name of the playback configuration.
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/channel/{ChannelName}":
    post:
      operationId: CreateChannel
      description: Creates a channel. For information about MediaTailor channels, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html">Working with channels</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateChannelResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Outputs
                - PlaybackMode
              properties:
                FillerSlate:
                  description: Slate VOD source configuration.
                  type: object
                  properties:
                    SourceLocationName:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The name of the source location where the slate VOD source is stored.
                    VodSourceName:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.
                Outputs:
                  description: An object that represents an object in the CreateChannel request.
                  type: array
                  items:
                    $ref: "#/components/schemas/RequestOutputItem"
                PlaybackMode:
                  description: <p>The type of playback mode to use for this channel.</p> <p> <code>LINEAR</code> - The programs in the schedule play once back-to-back in the schedule.</p> <p> <code>LOOP</code> - The programs in the schedule play back-to-back in an endless loop. When the last program in the schedule stops playing, playback loops back to the first program in the schedule.</p>
                  type: string
                  enum:
                    - LOOP
                    - LINEAR
                tags:
                  description: The tags to assign to the channel. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/__string"
                Tier:
                  description: The tier of the channel.
                  type: string
                  enum:
                    - BASIC
                    - STANDARD
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteChannel
      description: Deletes a channel. For information about MediaTailor channels, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html">Working with channels</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteChannelResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel.
          schema:
            type: string
    get:
      operationId: DescribeChannel
      description: Describes a channel. For information about MediaTailor channels, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html">Working with channels</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeChannelResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel.
          schema:
            type: string
    put:
      operationId: UpdateChannel
      description: Updates a channel. For information about MediaTailor channels, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html">Working with channels</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateChannelResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Outputs
              properties:
                FillerSlate:
                  description: Slate VOD source configuration.
                  type: object
                  properties:
                    SourceLocationName:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The name of the source location where the slate VOD source is stored.
                    VodSourceName:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.
                Outputs:
                  description: An object that represents an object in the CreateChannel request.
                  type: array
                  items:
                    $ref: "#/components/schemas/RequestOutputItem"
  "/sourceLocation/{SourceLocationName}/liveSource/{LiveSourceName}":
    post:
      operationId: CreateLiveSource
      description: The live source configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateLiveSourceResponse"
      parameters:
        - name: LiveSourceName
          in: path
          required: true
          description: The name of the live source.
          schema:
            type: string
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - HttpPackageConfigurations
              properties:
                HttpPackageConfigurations:
                  description: The VOD source's HTTP package configuration settings.
                  type: array
                  items:
                    $ref: "#/components/schemas/HttpPackageConfiguration"
                tags:
                  description: The tags to assign to the live source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/__string"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteLiveSource
      description: The live source to delete.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteLiveSourceResponse"
      parameters:
        - name: LiveSourceName
          in: path
          required: true
          description: The name of the live source.
          schema:
            type: string
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location associated with this Live Source.
          schema:
            type: string
    get:
      operationId: DescribeLiveSource
      description: The live source to describe.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeLiveSourceResponse"
      parameters:
        - name: LiveSourceName
          in: path
          required: true
          description: The name of the live source.
          schema:
            type: string
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location associated with this Live Source.
          schema:
            type: string
    put:
      operationId: UpdateLiveSource
      description: Updates a live source's configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateLiveSourceResponse"
      parameters:
        - name: LiveSourceName
          in: path
          required: true
          description: The name of the live source.
          schema:
            type: string
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location associated with this Live Source.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - HttpPackageConfigurations
              properties:
                HttpPackageConfigurations:
                  description: The VOD source's HTTP package configuration settings.
                  type: array
                  items:
                    $ref: "#/components/schemas/HttpPackageConfiguration"
  "/prefetchSchedule/{PlaybackConfigurationName}/{Name}":
    post:
      operationId: CreatePrefetchSchedule
      description: Creates a prefetch schedule for a playback configuration. A prefetch schedule allows you to tell MediaTailor to fetch and prepare certain ads before an ad break happens. For more information about ad prefetching, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html">Using ad prefetching</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePrefetchScheduleResponse"
      parameters:
        - name: Name
          in: path
          required: true
          description: The name to assign to the schedule request.
          schema:
            type: string
        - name: PlaybackConfigurationName
          in: path
          required: true
          description: The name to assign to the playback configuration.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Consumption
                - Retrieval
              properties:
                Consumption:
                  description: A complex type that contains settings that determine how and when that MediaTailor places prefetched ads into upcoming ad breaks.
                  type: object
                  properties:
                    AvailMatchingCriteria:
                      allOf:
                        - $ref: "#/components/schemas/__listOfAvailMatchingCriteria"
                        - description: If you only want MediaTailor to insert prefetched ads into avails (ad breaks) that match specific dynamic variables, such as <code>scte.event_id</code>, set the avail matching criteria.
                    EndTime:
                      allOf:
                        - $ref: "#/components/schemas/__timestampUnix"
                        - description: The time when MediaTailor no longer considers the prefetched ads for use in an ad break. MediaTailor automatically deletes prefetch schedules no less than seven days after the end time. If you'd like to manually delete the prefetch schedule, you can call <code>DeletePrefetchSchedule</code>.
                    StartTime:
                      allOf:
                        - $ref: "#/components/schemas/__timestampUnix"
                        - description: The time when prefetched ads are considered for use in an ad break. If you don't specify <code>StartTime</code>, the prefetched ads are available after MediaTailor retrives them from the ad decision server.
                Retrieval:
                  description: A complex type that contains settings governing when MediaTailor prefetches ads, and which dynamic variables that MediaTailor includes in the request to the ad decision server.
                  type: object
                  properties:
                    DynamicVariables:
                      allOf:
                        - $ref: "#/components/schemas/__mapOf__string"
                        - description: <p>The dynamic variables to use for substitution during prefetch requests to the ad decision server (ADS).</p> <p>You initially configure <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/variables.html">dynamic variables</a> for the ADS URL when you set up your playback configuration. When you specify <code>DynamicVariables</code> for prefetch retrieval, MediaTailor includes the dynamic variables in the request to the ADS.</p>
                    EndTime:
                      allOf:
                        - $ref: "#/components/schemas/__timestampUnix"
                        - description: The time when prefetch retrieval ends for the ad break. Prefetching will be attempted for manifest requests that occur at or before this time.
                    StartTime:
                      allOf:
                        - $ref: "#/components/schemas/__timestampUnix"
                        - description: The time when prefetch retrievals can start for this break. Ad prefetching will be attempted for manifest requests that occur at or after this time. Defaults to the current time. If not specified, the prefetch retrieval starts as soon as possible.
                StreamId:
                  description: An optional stream identifier that MediaTailor uses to prefetch ads for multiple streams that use the same playback configuration. If <code>StreamId</code> is specified, MediaTailor returns all of the prefetch schedules with an exact match on <code>StreamId</code>. If not specified, MediaTailor returns all of the prefetch schedules for the playback configuration, regardless of <code>StreamId</code>.
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeletePrefetchSchedule
      description: Deletes a prefetch schedule for a specific playback configuration. If you call <code>DeletePrefetchSchedule</code> on an expired prefetch schedule, MediaTailor returns an HTTP 404 status code. For more information about ad prefetching, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html">Using ad prefetching</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletePrefetchScheduleResponse"
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the prefetch schedule. If the action is successful, the service sends back an HTTP 204 response with an empty HTTP body.
          schema:
            type: string
        - name: PlaybackConfigurationName
          in: path
          required: true
          description: The name of the playback configuration for this prefetch schedule.
          schema:
            type: string
    get:
      operationId: GetPrefetchSchedule
      description: Retrieves a prefetch schedule for a playback configuration. A prefetch schedule allows you to tell MediaTailor to fetch and prepare certain ads before an ad break happens. For more information about ad prefetching, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html">Using ad prefetching</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPrefetchScheduleResponse"
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the prefetch schedule. The name must be unique among all prefetch schedules that are associated with the specified playback configuration.
          schema:
            type: string
        - name: PlaybackConfigurationName
          in: path
          required: true
          description: Returns information about the prefetch schedule for a specific playback configuration. If you call <code>GetPrefetchSchedule</code> on an expired prefetch schedule, MediaTailor returns an HTTP 404 status code.
          schema:
            type: string
  "/channel/{ChannelName}/program/{ProgramName}":
    post:
      operationId: CreateProgram
      description: Creates a program within a channel. For information about programs, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-programs.html">Working with programs</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateProgramResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel for this Program.
          schema:
            type: string
        - name: ProgramName
          in: path
          required: true
          description: The name of the Program.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ScheduleConfiguration
                - SourceLocationName
              properties:
                AdBreaks:
                  description: The ad break configuration settings.
                  type: array
                  items:
                    $ref: "#/components/schemas/AdBreak"
                LiveSourceName:
                  description: The name of the LiveSource for this Program.
                  type: string
                ScheduleConfiguration:
                  description: Schedule configuration parameters. A channel must be stopped before changes can be made to the schedule.
                  type: object
                  properties:
                    ClipRange:
                      allOf:
                        - $ref: "#/components/schemas/ClipRange"
                        - description: Program clip range configuration.
                    Transition:
                      allOf:
                        - $ref: "#/components/schemas/Transition"
                        - description: Program transition configurations.
                SourceLocationName:
                  description: The name of the source location.
                  type: string
                VodSourceName:
                  description: The name that's used to refer to a VOD source.
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteProgram
      description: Deletes a program within a channel. For information about programs, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-programs.html">Working with programs</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteProgramResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel.
          schema:
            type: string
        - name: ProgramName
          in: path
          required: true
          description: The name of the program.
          schema:
            type: string
    get:
      operationId: DescribeProgram
      description: Describes a program within a channel. For information about programs, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-programs.html">Working with programs</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeProgramResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel associated with this Program.
          schema:
            type: string
        - name: ProgramName
          in: path
          required: true
          description: The name of the program.
          schema:
            type: string
    put:
      operationId: UpdateProgram
      description: Updates a program within a channel.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateProgramResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel for this Program.
          schema:
            type: string
        - name: ProgramName
          in: path
          required: true
          description: The name of the Program.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - ScheduleConfiguration
              properties:
                AdBreaks:
                  description: The ad break configuration settings.
                  type: array
                  items:
                    $ref: "#/components/schemas/AdBreak"
                ScheduleConfiguration:
                  description: Schedule configuration parameters.
                  type: object
                  properties:
                    ClipRange:
                      allOf:
                        - $ref: "#/components/schemas/ClipRange"
                        - description: Program clip range configuration.
                    Transition:
                      allOf:
                        - $ref: "#/components/schemas/UpdateProgramTransition"
                        - description: Program transition configuration.
  "/sourceLocation/{SourceLocationName}":
    post:
      operationId: CreateSourceLocation
      description: Creates a source location. A source location is a container for sources. For more information about source locations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html">Working with source locations</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateSourceLocationResponse"
      parameters:
        - name: SourceLocationName
          in: path
          required: true
          description: The name associated with the source location.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - HttpConfiguration
              properties:
                AccessConfiguration:
                  description: Access configuration parameters.
                  type: object
                  properties:
                    AccessType:
                      allOf:
                        - $ref: "#/components/schemas/AccessType"
                        - description: "<p>The type of authentication used to access content from <code>HttpConfiguration::BaseUrl</code> on your source location. Accepted value: <code>S3_SIGV4</code>.</p> <p> <code>S3_SIGV4</code> - AWS Signature Version 4 authentication for Amazon S3 hosted virtual-style access. If your source location base URL is an Amazon S3 bucket, MediaTailor can use AWS Signature Version 4 (SigV4) authentication to access the bucket where your source content is stored. Your MediaTailor source location baseURL must follow the S3 virtual hosted-style request URL format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.</p> <p>Before you can use <code>S3_SIGV4</code>, you must meet these requirements:</p> <p>• You must allow MediaTailor to access your S3 bucket by granting mediatailor.amazonaws.com principal access in IAM. For information about configuring access in IAM, see Access management in the IAM User Guide.</p> <p>• The mediatailor.amazonaws.com service principal must have permissions to read all top level manifests referenced by the VodSource packaging configurations.</p> <p>• The caller of the API must have s3:GetObject IAM permissions to read all top level manifests referenced by your MediaTailor VodSource packaging configurations.</p>"
                    SecretsManagerAccessTokenConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/SecretsManagerAccessTokenConfiguration"
                        - description: AWS Secrets Manager access token configuration parameters.
                DefaultSegmentDeliveryConfiguration:
                  description: The optional configuration for a server that serves segments. Use this if you want the segment delivery server to be different from the source location server. For example, you can configure your source location server to be an origination server, such as MediaPackage, and the segment delivery server to be a content delivery network (CDN), such as CloudFront. If you don't specify a segment delivery server, then the source location server is used.
                  type: object
                  properties:
                    BaseUrl:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The hostname of the server that will be used to serve segments. This string must include the protocol, such as <b>https://</b>.
                HttpConfiguration:
                  description: The HTTP configuration for the source location.
                  type: object
                  properties:
                    BaseUrl:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The base URL for the source location host server. This string must include the protocol, such as <b>https://</b>.
                SegmentDeliveryConfigurations:
                  description: A list of the segment delivery configurations associated with this resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/SegmentDeliveryConfiguration"
                tags:
                  description: The tags to assign to the source location. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/__string"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteSourceLocation
      description: Deletes a source location. A source location is a container for sources. For more information about source locations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html">Working with source locations</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteSourceLocationResponse"
      parameters:
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location.
          schema:
            type: string
    get:
      operationId: DescribeSourceLocation
      description: Describes a source location. A source location is a container for sources. For more information about source locations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html">Working with source locations</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeSourceLocationResponse"
      parameters:
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location.
          schema:
            type: string
    put:
      operationId: UpdateSourceLocation
      description: Updates a source location. A source location is a container for sources. For more information about source locations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html">Working with source locations</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateSourceLocationResponse"
      parameters:
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - HttpConfiguration
              properties:
                AccessConfiguration:
                  description: Access configuration parameters.
                  type: object
                  properties:
                    AccessType:
                      allOf:
                        - $ref: "#/components/schemas/AccessType"
                        - description: "<p>The type of authentication used to access content from <code>HttpConfiguration::BaseUrl</code> on your source location. Accepted value: <code>S3_SIGV4</code>.</p> <p> <code>S3_SIGV4</code> - AWS Signature Version 4 authentication for Amazon S3 hosted virtual-style access. If your source location base URL is an Amazon S3 bucket, MediaTailor can use AWS Signature Version 4 (SigV4) authentication to access the bucket where your source content is stored. Your MediaTailor source location baseURL must follow the S3 virtual hosted-style request URL format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.</p> <p>Before you can use <code>S3_SIGV4</code>, you must meet these requirements:</p> <p>• You must allow MediaTailor to access your S3 bucket by granting mediatailor.amazonaws.com principal access in IAM. For information about configuring access in IAM, see Access management in the IAM User Guide.</p> <p>• The mediatailor.amazonaws.com service principal must have permissions to read all top level manifests referenced by the VodSource packaging configurations.</p> <p>• The caller of the API must have s3:GetObject IAM permissions to read all top level manifests referenced by your MediaTailor VodSource packaging configurations.</p>"
                    SecretsManagerAccessTokenConfiguration:
                      allOf:
                        - $ref: "#/components/schemas/SecretsManagerAccessTokenConfiguration"
                        - description: AWS Secrets Manager access token configuration parameters.
                DefaultSegmentDeliveryConfiguration:
                  description: The optional configuration for a server that serves segments. Use this if you want the segment delivery server to be different from the source location server. For example, you can configure your source location server to be an origination server, such as MediaPackage, and the segment delivery server to be a content delivery network (CDN), such as CloudFront. If you don't specify a segment delivery server, then the source location server is used.
                  type: object
                  properties:
                    BaseUrl:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The hostname of the server that will be used to serve segments. This string must include the protocol, such as <b>https://</b>.
                HttpConfiguration:
                  description: The HTTP configuration for the source location.
                  type: object
                  properties:
                    BaseUrl:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The base URL for the source location host server. This string must include the protocol, such as <b>https://</b>.
                SegmentDeliveryConfigurations:
                  description: A list of the segment delivery configurations associated with this resource.
                  type: array
                  items:
                    $ref: "#/components/schemas/SegmentDeliveryConfiguration"
  "/sourceLocation/{SourceLocationName}/vodSource/{VodSourceName}":
    post:
      operationId: CreateVodSource
      description: The VOD source configuration parameters.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateVodSourceResponse"
      parameters:
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location for this VOD source.
          schema:
            type: string
        - name: VodSourceName
          in: path
          required: true
          description: The name associated with the VOD source.&gt;
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - HttpPackageConfigurations
              properties:
                HttpPackageConfigurations:
                  description: The VOD source's HTTP package configuration settings.
                  type: array
                  items:
                    $ref: "#/components/schemas/HttpPackageConfiguration"
                tags:
                  description: The tags to assign to the VOD source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/__string"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    delete:
      operationId: DeleteVodSource
      description: The video on demand (VOD) source to delete.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteVodSourceResponse"
      parameters:
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location associated with this VOD Source.
          schema:
            type: string
        - name: VodSourceName
          in: path
          required: true
          description: The name of the VOD source.
          schema:
            type: string
    get:
      operationId: DescribeVodSource
      description: Provides details about a specific video on demand (VOD) source in a specific source location.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DescribeVodSourceResponse"
      parameters:
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location associated with this VOD Source.
          schema:
            type: string
        - name: VodSourceName
          in: path
          required: true
          description: The name of the VOD Source.
          schema:
            type: string
    put:
      operationId: UpdateVodSource
      description: Updates a VOD source's configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateVodSourceResponse"
      parameters:
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location associated with this VOD Source.
          schema:
            type: string
        - name: VodSourceName
          in: path
          required: true
          description: The name of the VOD source.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - HttpPackageConfigurations
              properties:
                HttpPackageConfigurations:
                  description: The VOD source's HTTP package configuration settings.
                  type: array
                  items:
                    $ref: "#/components/schemas/HttpPackageConfiguration"
  "/channel/{ChannelName}/policy":
    delete:
      operationId: DeleteChannelPolicy
      description: The channel policy to delete.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteChannelPolicyResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel associated with this channel policy.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetChannelPolicy
      description: Returns the channel's IAM policy. IAM policies are used to control access to your channel.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetChannelPolicyResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel associated with this Channel Policy.
          schema:
            type: string
    put:
      operationId: PutChannelPolicy
      description: Creates an IAM policy for the channel. IAM policies are used to control access to your channel.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutChannelPolicyResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The channel name associated with this Channel Policy.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Policy
              properties:
                Policy:
                  description: Adds an IAM role that determines the permissions of your channel.
                  type: string
  "/playbackConfiguration/{Name}":
    delete:
      operationId: DeletePlaybackConfiguration
      description: Deletes a playback configuration. For information about MediaTailor configurations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html">Working with configurations in AWS Elemental MediaTailor</a>.
      responses:
        "204":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeletePlaybackConfigurationResponse"
      parameters:
        - name: Name
          in: path
          required: true
          description: The name of the playback configuration.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    get:
      operationId: GetPlaybackConfiguration
      description: Retrieves a playback configuration. For information about MediaTailor configurations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html">Working with configurations in AWS Elemental MediaTailor</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPlaybackConfigurationResponse"
      parameters:
        - name: Name
          in: path
          required: true
          description: The identifier for the playback configuration.
          schema:
            type: string
  "/channel/{ChannelName}/schedule":
    get:
      operationId: GetChannelSchedule
      description: Retrieves information about your channel's schedule.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetChannelScheduleResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel associated with this Channel Schedule.
          schema:
            type: string
        - name: durationMinutes
          in: query
          required: false
          description: The duration in minutes of the channel schedule.
          schema:
            type: string
        - name: maxResults
          in: query
          required: false
          description: The maximum number of channel schedules that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> channel schedules, use the value of <code>NextToken</code> in the response to get the next page of results.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: <p>(Optional) If the playback configuration has more than <code>MaxResults</code> channel schedules, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p>For the first <code>GetChannelScheduleRequest</code> request, omit this value.</p> <p>For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p> <p>If the previous response didn't include a <code>NextToken</code> element, there are no more channel schedules to get.</p>
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /alerts#resourceArn:
    get:
      operationId: ListAlerts
      description: Lists the alerts that are associated with a MediaTailor channel assembly resource.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAlertsResponse"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of alerts that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> alerts, use the value of <code>NextToken</code> in the response to get the next page of results.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
          schema:
            type: string
        - name: resourceArn
          in: query
          required: true
          description: The Amazon Resource Name (ARN) of the resource.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /channels:
    get:
      operationId: ListChannels
      description: Retrieves information about the channels that are associated with the current AWS account.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListChannelsResponse"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of channels that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> channels, use the value of <code>NextToken</code> in the response to get the next page of results.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/sourceLocation/{SourceLocationName}/liveSources":
    get:
      operationId: ListLiveSources
      description: Lists the live sources contained in a source location. A source represents a piece of content.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLiveSourcesResponse"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: The maximum number of live sources that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> live sources, use the value of <code>NextToken</code> in the response to get the next page of results.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
          schema:
            type: string
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location associated with this Live Sources list.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /playbackConfigurations:
    get:
      operationId: ListPlaybackConfigurations
      description: Retrieves existing playback configurations. For information about MediaTailor configurations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html">Working with Configurations in AWS Elemental MediaTailor</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPlaybackConfigurationsResponse"
      parameters:
        - name: MaxResults
          in: query
          required: false
          description: The maximum number of playback configurations that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> playback configurations, use the value of <code>NextToken</code> in the response to get the next page of results.
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: NextToken
          in: query
          required: false
          description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/prefetchSchedule/{PlaybackConfigurationName}":
    post:
      operationId: ListPrefetchSchedules
      description: Lists the prefetch schedules for a playback configuration.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPrefetchSchedulesResponse"
      parameters:
        - name: PlaybackConfigurationName
          in: path
          required: true
          description: Retrieves the prefetch schedule(s) for a specific playback configuration.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  description: The maximum number of prefetch schedules that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> prefetch schedules, use the value of <code>NextToken</code> in the response to get the next page of results.
                  type: integer
                  minimum: 1
                  maximum: 100
                NextToken:
                  description: <p>(Optional) If the playback configuration has more than <code>MaxResults</code> prefetch schedules, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p> For the first <code>ListPrefetchSchedulesRequest</code> request, omit this value.</p> <p> For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p> <p> If the previous response didn't include a <code>NextToken</code> element, there are no more prefetch schedules to get.</p>
                  type: string
                StreamId:
                  description: An optional filtering parameter whereby MediaTailor filters the prefetch schedules to include only specific streams.
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /sourceLocations:
    get:
      operationId: ListSourceLocations
      description: Lists the source locations for a channel. A source location defines the host server URL, and contains a list of sources.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSourceLocationsResponse"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: " The maximum number of source locations that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> source locations, use the value of <code>NextToken</code> in the response to get the next page of results."
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{ResourceArn}":
    get:
      operationId: ListTagsForResource
      description: A list of tags that are associated with this resource. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTagsForResourceResponse"
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) associated with this resource.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
    post:
      operationId: TagResource
      description: The resource to tag. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
      responses:
        "204":
          description: Success
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) associated with the resource.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tags
              properties:
                tags:
                  description: The tags to assign to the resource. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/__string"
  "/sourceLocation/{SourceLocationName}/vodSources":
    get:
      operationId: ListVodSources
      description: Lists the VOD sources contained in a source location. A source represents a piece of content.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListVodSourcesResponse"
      parameters:
        - name: maxResults
          in: query
          required: false
          description: " The maximum number of VOD sources that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> VOD sources, use the value of <code>NextToken</code> in the response to get the next page of results."
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: nextToken
          in: query
          required: false
          description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
          schema:
            type: string
        - name: SourceLocationName
          in: path
          required: true
          description: The name of the source location associated with this VOD Source list.
          schema:
            type: string
        - name: MaxResults
          in: query
          schema:
            type: string
          description: Pagination limit
          required: false
        - name: NextToken
          in: query
          schema:
            type: string
          description: Pagination token
          required: false
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  /playbackConfiguration:
    put:
      operationId: PutPlaybackConfiguration
      description: Creates a playback configuration. For information about MediaTailor configurations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html">Working with configurations in AWS Elemental MediaTailor</a>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PutPlaybackConfigurationResponse"
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - Name
              properties:
                AdDecisionServerUrl:
                  description: The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
                  type: string
                AvailSuppression:
                  description: The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Suppression</a>.
                  type: object
                  properties:
                    Mode:
                      allOf:
                        - $ref: "#/components/schemas/Mode"
                        - description: Sets the ad suppression mode. By default, ad suppression is off and all ad breaks are filled with ads or slate. When Mode is set to <code>BEHIND_LIVE_EDGE</code>, ad suppression is active and MediaTailor won't fill ad breaks on or behind the ad suppression Value time in the manifest lookback window.
                    Value:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: A live edge offset time in HH:MM:SS. MediaTailor won't fill ad breaks on or behind this time in the manifest lookback window. If Value is set to 00:00:00, it is in sync with the live edge, and MediaTailor won't fill any ad breaks on or behind the live edge. If you set a Value time, MediaTailor won't fill any ad breaks on or behind this time in the manifest lookback window. For example, if you set 00:45:00, then MediaTailor will fill ad breaks that occur within 45 minutes behind the live edge, but won't fill ad breaks on or behind 45 minutes behind the live edge.
                Bumper:
                  description: The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
                  type: object
                  properties:
                    EndUrl:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The URL for the end bumper asset.
                    StartUrl:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The URL for the start bumper asset.
                CdnConfiguration:
                  description: The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
                  type: object
                  properties:
                    AdSegmentUrlPrefix:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: A non-default content delivery network (CDN) to serve ad segments. By default, AWS Elemental MediaTailor uses Amazon CloudFront with default cache settings as its CDN for ad segments. To set up an alternate CDN, create a rule in your CDN for the origin ads.mediatailor.<i>&lt;region&gt;</i>.amazonaws.com. Then specify the rule's name in this <code>AdSegmentUrlPrefix</code>. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for ad segments.
                    ContentSegmentUrlPrefix:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: A content delivery network (CDN) to cache content segments, so that content requests don’t always have to go to the origin server. First, create a rule in your CDN for the content segment origin server. Then specify the rule's name in this <code>ContentSegmentUrlPrefix</code>. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for content segments.
                ConfigurationAliases:
                  description: The predefined aliases for dynamic variables.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/__mapOf__string"
                DashConfiguration:
                  description: The configuration for DASH PUT operations.
                  type: object
                  properties:
                    MpdLocation:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The setting that controls whether MediaTailor includes the Location tag in DASH manifests. MediaTailor populates the Location tag with the URL for manifest update requests, to be used by players that don't support sticky redirects. Disable this if you have CDN routing rules set up for accessing MediaTailor manifests, and you are either using client-side reporting or your players support sticky HTTP redirects. Valid values are <code>DISABLED</code> and <code>EMT_DEFAULT</code>. The <code>EMT_DEFAULT</code> setting enables the inclusion of the tag and is the default value.
                    OriginManifestType:
                      allOf:
                        - $ref: "#/components/schemas/OriginManifestType"
                        - description: The setting that controls whether MediaTailor handles manifests from the origin server as multi-period manifests or single-period manifests. If your origin server produces single-period manifests, set this to <code>SINGLE_PERIOD</code>. The default setting is <code>MULTI_PERIOD</code>. For multi-period manifests, omit this setting or set it to <code>MULTI_PERIOD</code>.
                LivePreRollConfiguration:
                  description: The configuration for pre-roll ad insertion.
                  type: object
                  properties:
                    AdDecisionServerUrl:
                      allOf:
                        - $ref: "#/components/schemas/__string"
                        - description: The URL for the ad decision server (ADS) for pre-roll ads. This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing, you can provide a static VAST URL. The maximum length is 25,000 characters.
                    MaxDurationSeconds:
                      allOf:
                        - $ref: "#/components/schemas/__integer"
                        - description: The maximum allowed duration for the pre-roll ad avail. AWS Elemental MediaTailor won't play pre-roll ads to exceed this duration, regardless of the total duration of ads that the ADS returns.
                ManifestProcessingRules:
                  description: The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
                  type: object
                  properties:
                    AdMarkerPassthrough:
                      allOf:
                        - $ref: "#/components/schemas/AdMarkerPassthrough"
                        - description: <p>For HLS, when set to <code>true</code>, MediaTailor passes through <code>EXT-X-CUE-IN</code>, <code>EXT-X-CUE-OUT</code>, and <code>EXT-X-SPLICEPOINT-SCTE35</code> ad markers from the origin manifest to the MediaTailor personalized manifest.</p> <p>No logic is applied to these ad markers. For example, if <code>EXT-X-CUE-OUT</code> has a value of <code>60</code>, but no ads are filled for that ad break, MediaTailor will not set the value to <code>0</code>.</p>
                Name:
                  description: The identifier for the playback configuration.
                  type: string
                PersonalizationThresholdSeconds:
                  description: Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to <i>ad replacement</i> in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Behavior in AWS Elemental MediaTailor</a>.
                  type: integer
                  minimum: 1
                SlateAdUrl:
                  description: The URL for a high-quality video asset to transcode and use to fill in time that's not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
                  type: string
                tags:
                  description: The tags to assign to the playback configuration. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
                  type: object
                  additionalProperties:
                    $ref: "#/components/schemas/__string"
                TranscodeProfileName:
                  description: The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
                  type: string
                VideoContentSourceUrl:
                  description: The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
                  type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/channel/{ChannelName}/start":
    put:
      operationId: StartChannel
      description: Starts a channel. For information about MediaTailor channels, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html">Working with channels</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StartChannelResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/channel/{ChannelName}/stop":
    put:
      operationId: StopChannel
      description: Stops a channel. For information about MediaTailor channels, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html">Working with channels</a> in the <i>MediaTailor User Guide</i>.
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StopChannelResponse"
      parameters:
        - name: ChannelName
          in: path
          required: true
          description: The name of the channel.
          schema:
            type: string
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
  "/tags/{ResourceArn}#tagKeys":
    delete:
      operationId: UntagResource
      description: The resource to untag.
      responses:
        "204":
          description: Success
        "480":
          description: BadRequestException
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestException"
      parameters:
        - name: ResourceArn
          in: path
          required: true
          description: The Amazon Resource Name (ARN) of the resource to untag.
          schema:
            type: string
        - name: tagKeys
          in: query
          required: true
          description: The tag keys associated with the resource.
          schema:
            type: array
            items:
              $ref: "#/components/schemas/__string"
    parameters:
      - $ref: "#/components/parameters/X-Amz-Content-Sha256"
      - $ref: "#/components/parameters/X-Amz-Date"
      - $ref: "#/components/parameters/X-Amz-Algorithm"
      - $ref: "#/components/parameters/X-Amz-Credential"
      - $ref: "#/components/parameters/X-Amz-Security-Token"
      - $ref: "#/components/parameters/X-Amz-Signature"
      - $ref: "#/components/parameters/X-Amz-SignedHeaders"
components:
  parameters:
    X-Amz-Content-Sha256:
      name: X-Amz-Content-Sha256
      in: header
      schema:
        type: string
      required: false
    X-Amz-Date:
      name: X-Amz-Date
      in: header
      schema:
        type: string
      required: false
    X-Amz-Algorithm:
      name: X-Amz-Algorithm
      in: header
      schema:
        type: string
      required: false
    X-Amz-Credential:
      name: X-Amz-Credential
      in: header
      schema:
        type: string
      required: false
    X-Amz-Security-Token:
      name: X-Amz-Security-Token
      in: header
      schema:
        type: string
      required: false
    X-Amz-Signature:
      name: X-Amz-Signature
      in: header
      schema:
        type: string
      required: false
    X-Amz-SignedHeaders:
      name: X-Amz-SignedHeaders
      in: header
      schema:
        type: string
      required: false
  securitySchemes:
    hmac:
      type: apiKey
      name: Authorization
      in: header
      description: Amazon Signature authorization v4
      x-amazon-apigateway-authtype: awsSigv4
  schemas:
    ConfigureLogsForChannelResponse:
      type: object
      properties:
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the channel.
        LogTypes:
          allOf:
            - $ref: "#/components/schemas/LogTypes"
            - description: The types of logs collected.
    LogType:
      type: string
      enum:
        - AS_RUN
    ConfigureLogsForPlaybackConfigurationResponse:
      type: object
      required:
        - PercentEnabled
      properties:
        PercentEnabled:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account.
        PlaybackConfigurationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the playback configuration.
    CreateChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) to assign to the channel.
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the channel.
        ChannelState:
          allOf:
            - $ref: "#/components/schemas/ChannelState"
            - description: Indicates whether the channel is in a running state or not.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp of when the channel was created.
        FillerSlate:
          allOf:
            - $ref: "#/components/schemas/SlateSource"
            - description: Contains information about the slate used to fill gaps between programs in the schedule.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp of when the channel was last modified.
        Outputs:
          allOf:
            - $ref: "#/components/schemas/ResponseOutputs"
            - description: The output properties to assign to the channel.
        PlaybackMode:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The playback mode to assign to the channel.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the channel. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        Tier:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The tier of the channel.
    __string:
      type: string
    RequestOutputItem:
      type: object
      required:
        - ManifestName
        - SourceGroup
      properties:
        DashPlaylistSettings:
          allOf:
            - $ref: "#/components/schemas/DashPlaylistSettings"
            - description: DASH manifest configuration parameters.
        HlsPlaylistSettings:
          allOf:
            - $ref: "#/components/schemas/HlsPlaylistSettings"
            - description: HLS playlist configuration parameters.
        ManifestName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the manifest for the channel. The name appears in the <code>PlaybackUrl</code>.
        SourceGroup:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: A string used to match which <code>HttpPackageConfiguration</code> is used for each <code>VodSource</code>.
      description: The output configuration for this channel.
    CreateLiveSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN to assign to the live source.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time the live source was created.
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: A list of HTTP package configuration parameters for this live source.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time the live source was last modified.
        LiveSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the live source.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the source location of the live source.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the live source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
    HttpPackageConfiguration:
      type: object
      required:
        - Path
        - SourceGroup
        - Type
      properties:
        Path:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The relative path to the URL for this VOD source. This is combined with <code>SourceLocation::HttpConfiguration::BaseUrl</code> to form a valid URL.
        SourceGroup:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source group. This has to match one of the <code>Channel::Outputs::SourceGroup</code>.
        Type:
          allOf:
            - $ref: "#/components/schemas/Type"
            - description: The streaming protocol for this package configuration. Supported values are <code>HLS</code> and <code>DASH</code>.
      description: The HTTP package configuration properties for the requested VOD source.
    CreatePrefetchScheduleResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN to assign to the prefetch schedule.
        Consumption:
          allOf:
            - $ref: "#/components/schemas/PrefetchConsumption"
            - description: The configuration settings for MediaTailor's <i>consumption</i> of the prefetched ads from the ad decision server. Each consumption configuration contains an end time and an optional start time that define the <i>consumption window</i>. Prefetch schedules automatically expire no earlier than seven days after the end time.
        Name:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the prefetch schedule.
        PlaybackConfigurationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the playback configuration.
        Retrieval:
          allOf:
            - $ref: "#/components/schemas/PrefetchRetrieval"
            - description: The configuration settings for retrieval of prefetched ads from the ad decision server. Only one set of prefetched ads will be retrieved and subsequently consumed for each ad break.
        StreamId:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: An optional stream identifier that MediaTailor uses to prefetch ads for multiple streams that use the same playback configuration. If <code>StreamId</code> is specified, MediaTailor returns all of the prefetch schedules with an exact match on <code>StreamId</code>. If not specified, MediaTailor returns all of the prefetch schedules for the playback configuration, regardless of <code>StreamId</code>.
    __listOfAvailMatchingCriteria:
      type: array
      items:
        $ref: "#/components/schemas/AvailMatchingCriteria"
    __timestampUnix:
      type: string
      format: date-time
    __mapOf__string:
      type: object
      additionalProperties:
        $ref: "#/components/schemas/__string"
    CreateProgramResponse:
      type: object
      properties:
        AdBreaks:
          allOf:
            - $ref: "#/components/schemas/__listOfAdBreak"
            - description: The ad break configuration settings.
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN to assign to the program.
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the channel for this program.
        ClipRange:
          allOf:
            - $ref: "#/components/schemas/ClipRange"
            - description: The clip range configuration settings.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time the program was created.
        DurationMillis:
          allOf:
            - $ref: "#/components/schemas/__long"
            - description: The duration of the live program in milliseconds.
        LiveSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the LiveSource for this Program.
        ProgramName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to this program.
        ScheduledStartTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The scheduled start time for this Program.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the source location for this program.
        VodSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name that's used to refer to a VOD source.
    AdBreak:
      type: object
      properties:
        MessageType:
          allOf:
            - $ref: "#/components/schemas/MessageType"
            - description: "The SCTE-35 ad insertion type. Accepted value: <code>SPLICE_INSERT</code>, <code>TIME_SIGNAL</code>."
        OffsetMillis:
          allOf:
            - $ref: "#/components/schemas/__long"
            - description: How long (in milliseconds) after the beginning of the program that an ad starts. This value must fall within 100ms of a segment boundary, otherwise the ad break will be skipped.
        Slate:
          allOf:
            - $ref: "#/components/schemas/SlateSource"
            - description: Ad break slate configuration.
        SpliceInsertMessage:
          allOf:
            - $ref: "#/components/schemas/SpliceInsertMessage"
            - description: This defines the SCTE-35 <code>splice_insert()</code> message inserted around the ad. For information about using <code>splice_insert()</code>, see the SCTE-35 specficiaiton, section 9.7.3.1.
        TimeSignalMessage:
          allOf:
            - $ref: "#/components/schemas/TimeSignalMessage"
            - description: <p>Defines the SCTE-35 <code>time_signal</code> message inserted around the ad.</p> <p>Programs on a channel's schedule can be configured with one or more ad breaks. You can attach a <code>splice_insert</code> SCTE-35 message to the ad break. This message provides basic metadata about the ad break.</p> <p>See section 9.7.4 of the 2022 SCTE-35 specification for more information.</p>
      description: Ad break configuration parameters.
    ClipRange:
      type: object
      required:
        - EndOffsetMillis
      properties:
        EndOffsetMillis:
          allOf:
            - $ref: "#/components/schemas/__long"
            - description: The end offset of the clip range, in milliseconds, starting from the beginning of the VOD source associated with the program.
      description: Clip range configuration for the VOD source associated with the program.
    Transition:
      type: object
      required:
        - RelativePosition
        - Type
      properties:
        DurationMillis:
          allOf:
            - $ref: "#/components/schemas/__long"
            - description: The duration of the live program in seconds.
        RelativePosition:
          allOf:
            - $ref: "#/components/schemas/RelativePosition"
            - description: The position where this program will be inserted relative to the <code>RelativePosition</code>.
        RelativeProgram:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the program that this program will be inserted next to, as defined by <code>RelativePosition</code>.
        ScheduledStartTimeMillis:
          allOf:
            - $ref: "#/components/schemas/__long"
            - description: The date and time that the program is scheduled to start, in epoch milliseconds.
        Type:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: <p>Defines when the program plays in the schedule. You can set the value to <code>ABSOLUTE</code> or <code>RELATIVE</code>.</p> <p> <code>ABSOLUTE</code> - The program plays at a specific wall clock time. This setting can only be used for channels using the <code>LINEAR</code> <code>PlaybackMode</code>.</p> <p>Note the following considerations when using <code>ABSOLUTE</code> transitions:</p> <p>If the preceding program in the schedule has a duration that extends past the wall clock time, MediaTailor truncates the preceding program on a common segment boundary.</p> <p>If there are gaps in playback, MediaTailor plays the <code>FillerSlate</code> you configured for your linear channel.</p> <p> <code>RELATIVE</code> - The program is inserted into the schedule either before or after a program that you specify via <code>RelativePosition</code>.</p>
      description: Program transition configuration.
    CreateSourceLocationResponse:
      type: object
      properties:
        AccessConfiguration:
          allOf:
            - $ref: "#/components/schemas/AccessConfiguration"
            - description: Access configuration parameters. Configures the type of authentication used to access content from your source location.
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN to assign to the source location.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time the source location was created.
        DefaultSegmentDeliveryConfiguration:
          allOf:
            - $ref: "#/components/schemas/DefaultSegmentDeliveryConfiguration"
            - description: The optional configuration for the server that serves segments.
        HttpConfiguration:
          allOf:
            - $ref: "#/components/schemas/HttpConfiguration"
            - description: The source's HTTP package configurations.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time the source location was last modified.
        SegmentDeliveryConfigurations:
          allOf:
            - $ref: "#/components/schemas/__listOfSegmentDeliveryConfiguration"
            - description: The segment delivery configurations for the source location. For information about MediaTailor configurations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html">Working with configurations in AWS Elemental MediaTailor</a>.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the source location.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the source location. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
    AccessType:
      type: string
      enum:
        - S3_SIGV4
        - SECRETS_MANAGER_ACCESS_TOKEN
    SecretsManagerAccessTokenConfiguration:
      type: object
      properties:
        HeaderName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the HTTP header used to supply the access token in requests to the source location.
        SecretArn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) of the AWS Secrets Manager secret that contains the access token.
        SecretStringKey:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The AWS Secrets Manager <a href="https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html#SecretsManager-CreateSecret-request-SecretString.html">SecretString</a> key associated with the access token. MediaTailor uses the key to look up SecretString key and value pair containing the access token.
      description: AWS Secrets Manager access token configuration parameters. For information about Secrets Manager access token authentication, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-access-configuration-access-token.html">Working with AWS Secrets Manager access token authentication</a>.
    SegmentDeliveryConfiguration:
      type: object
      properties:
        BaseUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The base URL of the host or path of the segment delivery server that you're using to serve segments. This is typically a content delivery network (CDN). The URL can be absolute or relative. To use an absolute URL include the protocol, such as <code>https://example.com/some/path</code>. To use a relative URL specify the relative path, such as <code>/some/path*</code>.
        Name:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: A unique identifier used to distinguish between multiple segment delivery configurations in a source location.
      description: The segment delivery configuration settings.
    CreateVodSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN to assign to this VOD source.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time the VOD source was created.
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: A list of HTTP package configuration parameters for this VOD source.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time the VOD source was last modified.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the source location for this VOD source.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the VOD source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        VodSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the VOD source.
    DeleteChannelResponse:
      type: object
      properties: {}
    DeleteChannelPolicyResponse:
      type: object
      properties: {}
    DeleteLiveSourceResponse:
      type: object
      properties: {}
    DeletePlaybackConfigurationResponse:
      type: object
      properties: {}
    DeletePrefetchScheduleResponse:
      type: object
      properties: {}
    DeleteProgramResponse:
      type: object
      properties: {}
    DeleteSourceLocationResponse:
      type: object
      properties: {}
    DeleteVodSourceResponse:
      type: object
      properties: {}
    DescribeChannelResponse:
      type: object
      required:
        - LogConfiguration
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN of the channel.
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the channel.
        ChannelState:
          allOf:
            - $ref: "#/components/schemas/ChannelState"
            - description: Indicates whether the channel is in a running state or not.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp of when the channel was created.
        FillerSlate:
          allOf:
            - $ref: "#/components/schemas/SlateSource"
            - description: Contains information about the slate used to fill gaps between programs in the schedule.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp of when the channel was last modified.
        LogConfiguration:
          allOf:
            - $ref: "#/components/schemas/LogConfigurationForChannel"
            - description: The log configuration for the channel.
        Outputs:
          allOf:
            - $ref: "#/components/schemas/ResponseOutputs"
            - description: The channel's output properties.
        PlaybackMode:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The channel's playback mode.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags assigned to the channel. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        Tier:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The channel's tier.
    DescribeLiveSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN of the live source.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the live source was created.
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: The HTTP package configurations.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the live source was modified.
        LiveSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the live source.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location associated with the live source.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags assigned to the live source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
    DescribeProgramResponse:
      type: object
      properties:
        AdBreaks:
          allOf:
            - $ref: "#/components/schemas/__listOfAdBreak"
            - description: The ad break configuration settings.
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN of the program.
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the channel that the program belongs to.
        ClipRange:
          allOf:
            - $ref: "#/components/schemas/ClipRange"
            - description: The clip range configuration settings.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp of when the program was created.
        DurationMillis:
          allOf:
            - $ref: "#/components/schemas/Long"
            - description: The duration of the live program in milliseconds.
        LiveSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the LiveSource for this Program.
        ProgramName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the program.
        ScheduledStartTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The date and time that the program is scheduled to start in ISO 8601 format and Coordinated Universal Time (UTC). For example, the value 2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751 UTC.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The source location name.
        VodSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name that's used to refer to a VOD source.
    DescribeSourceLocationResponse:
      type: object
      properties:
        AccessConfiguration:
          allOf:
            - $ref: "#/components/schemas/AccessConfiguration"
            - description: The access configuration for the source location.
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN of the source location.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the source location was created.
        DefaultSegmentDeliveryConfiguration:
          allOf:
            - $ref: "#/components/schemas/DefaultSegmentDeliveryConfiguration"
            - description: The default segment delivery configuration settings.
        HttpConfiguration:
          allOf:
            - $ref: "#/components/schemas/HttpConfiguration"
            - description: The HTTP package configuration settings for the source location.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the source location was last modified.
        SegmentDeliveryConfigurations:
          allOf:
            - $ref: "#/components/schemas/__listOfSegmentDeliveryConfiguration"
            - description: A list of the segment delivery configurations associated with this resource.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags assigned to the source location. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
    DescribeVodSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN of the VOD source.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the VOD source was created.
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: The HTTP package configurations.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The last modified time of the VOD source.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location associated with the VOD source.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags assigned to the VOD source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        VodSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the VOD source.
    GetChannelPolicyResponse:
      type: object
      properties:
        Policy:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The IAM policy for the channel. IAM policies are used to control access to your channel.
    GetChannelScheduleResponse:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/__listOfScheduleEntry"
            - description: A list of schedule entries for the channel.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
    GetPlaybackConfigurationResponse:
      type: object
      properties:
        AdDecisionServerUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing, you can provide a static VAST URL. The maximum length is 25,000 characters.
        AvailSuppression:
          allOf:
            - $ref: "#/components/schemas/AvailSuppression"
            - description: The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Suppression</a>.
        Bumper:
          allOf:
            - $ref: "#/components/schemas/Bumper"
            - description: The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
        CdnConfiguration:
          allOf:
            - $ref: "#/components/schemas/CdnConfiguration"
            - description: The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
        ConfigurationAliases:
          allOf:
            - $ref: "#/components/schemas/ConfigurationAliasesResponse"
            - description: The player parameters and aliases used as dynamic variables during session initialization. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html">Domain Variables</a>.
        DashConfiguration:
          allOf:
            - $ref: "#/components/schemas/DashConfiguration"
            - description: The configuration for DASH content.
        HlsConfiguration:
          allOf:
            - $ref: "#/components/schemas/HlsConfiguration"
            - description: The configuration for HLS content.
        LivePreRollConfiguration:
          allOf:
            - $ref: "#/components/schemas/LivePreRollConfiguration"
            - description: The configuration for pre-roll ad insertion.
        LogConfiguration:
          allOf:
            - $ref: "#/components/schemas/LogConfiguration"
            - description: The Amazon CloudWatch log settings for a playback configuration.
        ManifestProcessingRules:
          allOf:
            - $ref: "#/components/schemas/ManifestProcessingRules"
            - description: The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
        Name:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The identifier for the playback configuration.
        PersonalizationThresholdSeconds:
          allOf:
            - $ref: "#/components/schemas/__integerMin1"
            - description: Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to <i>ad replacement</i> in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Behavior in AWS Elemental MediaTailor</a>.
        PlaybackConfigurationArn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) for the playback configuration.
        PlaybackEndpointPrefix:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL that the player accesses to get a manifest from AWS Elemental MediaTailor. This session will use server-side reporting.
        SessionInitializationEndpointPrefix:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL that the player uses to initialize a session that uses client-side reporting.
        SlateAdUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL for a high-quality video asset to transcode and use to fill in time that's not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID playback configurations. For VPAID, the slate is required because MediaTailor provides it in the slots designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags assigned to the playback configuration. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        TranscodeProfileName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
        VideoContentSourceUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
    GetPrefetchScheduleResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) of the prefetch schedule.
        Consumption:
          allOf:
            - $ref: "#/components/schemas/PrefetchConsumption"
            - description: Consumption settings determine how, and when, MediaTailor places the prefetched ads into ad breaks. Ad consumption occurs within a span of time that you define, called a <i>consumption window</i>. You can designate which ad breaks that MediaTailor fills with prefetch ads by setting avail matching criteria.
        Name:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the prefetch schedule. The name must be unique among all prefetch schedules that are associated with the specified playback configuration.
        PlaybackConfigurationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the playback configuration to create the prefetch schedule for.
        Retrieval:
          allOf:
            - $ref: "#/components/schemas/PrefetchRetrieval"
            - description: A complex type that contains settings for prefetch retrieval from the ad decision server (ADS).
        StreamId:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: An optional stream identifier that you can specify in order to prefetch for multiple streams that use the same playback configuration.
    ListAlertsResponse:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/__listOfAlert"
            - description: A list of alerts that are associated with this resource.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
    ListChannelsResponse:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/__listOfChannel"
            - description: A list of channels that are associated with this account.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
    ListLiveSourcesResponse:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/__listOfLiveSource"
            - description: Lists the live sources.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
    ListPlaybackConfigurationsResponse:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/__listOfPlaybackConfiguration"
            - description: Array of playback configurations. This might be all the available configurations or a subset, depending on the settings that you provide and the total number of configurations stored.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: Pagination token returned by the GET list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
    ListPrefetchSchedulesResponse:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/__listOfPrefetchSchedule"
            - description: Lists the prefetch schedules. An empty <code>Items</code> list doesn't mean there aren't more items to fetch, just that that page was empty.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
    ListSourceLocationsResponse:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/__listOfSourceLocation"
            - description: A list of source locations.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags associated with this resource. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
    BadRequestException: {}
    ListVodSourcesResponse:
      type: object
      properties:
        Items:
          allOf:
            - $ref: "#/components/schemas/__listOfVodSource"
            - description: Lists the VOD sources.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: Pagination token returned by the list request when results exceed the maximum allowed. Use the token to fetch the next page of results.
    PutChannelPolicyResponse:
      type: object
      properties: {}
    PutPlaybackConfigurationResponse:
      type: object
      properties:
        AdDecisionServerUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
        AvailSuppression:
          allOf:
            - $ref: "#/components/schemas/AvailSuppression"
            - description: The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Suppression</a>.
        Bumper:
          allOf:
            - $ref: "#/components/schemas/Bumper"
            - description: The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
        CdnConfiguration:
          allOf:
            - $ref: "#/components/schemas/CdnConfiguration"
            - description: The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
        ConfigurationAliases:
          allOf:
            - $ref: "#/components/schemas/ConfigurationAliasesResponse"
            - description: The player parameters and aliases used as dynamic variables during session initialization. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html">Domain Variables</a>.
        DashConfiguration:
          allOf:
            - $ref: "#/components/schemas/DashConfiguration"
            - description: The configuration for DASH content.
        HlsConfiguration:
          allOf:
            - $ref: "#/components/schemas/HlsConfiguration"
            - description: The configuration for HLS content.
        LivePreRollConfiguration:
          allOf:
            - $ref: "#/components/schemas/LivePreRollConfiguration"
            - description: The configuration for pre-roll ad insertion.
        LogConfiguration:
          allOf:
            - $ref: "#/components/schemas/LogConfiguration"
            - description: The Amazon CloudWatch log settings for a playback configuration.
        ManifestProcessingRules:
          allOf:
            - $ref: "#/components/schemas/ManifestProcessingRules"
            - description: The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
        Name:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The identifier for the playback configuration.
        PersonalizationThresholdSeconds:
          allOf:
            - $ref: "#/components/schemas/__integerMin1"
            - description: Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to <i>ad replacement</i> in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Behavior in AWS Elemental MediaTailor</a>.
        PlaybackConfigurationArn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) associated with the playback configuration.
        PlaybackEndpointPrefix:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The playback endpoint prefix associated with the playback configuration.
        SessionInitializationEndpointPrefix:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The session initialization endpoint prefix associated with the playback configuration.
        SlateAdUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL for a high-quality video asset to transcode and use to fill in time that's not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the playback configuration. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        TranscodeProfileName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
        VideoContentSourceUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
    Mode:
      type: string
      enum:
        - OFF
        - BEHIND_LIVE_EDGE
    OriginManifestType:
      type: string
      enum:
        - SINGLE_PERIOD
        - MULTI_PERIOD
    __integer:
      type: integer
    AdMarkerPassthrough:
      type: object
      properties:
        Enabled:
          allOf:
            - $ref: "#/components/schemas/__boolean"
            - description: Enables ad marker passthrough for your configuration.
      description: <p>For HLS, when set to <code>true</code>, MediaTailor passes through <code>EXT-X-CUE-IN</code>, <code>EXT-X-CUE-OUT</code>, and <code>EXT-X-SPLICEPOINT-SCTE35</code> ad markers from the origin manifest to the MediaTailor personalized manifest.</p> <p>No logic is applied to these ad markers. For example, if <code>EXT-X-CUE-OUT</code> has a value of <code>60</code>, but no ads are filled for that ad break, MediaTailor will not set the value to <code>0</code>.</p>
    StartChannelResponse:
      type: object
      properties: {}
    StopChannelResponse:
      type: object
      properties: {}
    UpdateChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) associated with the channel.
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the channel.
        ChannelState:
          allOf:
            - $ref: "#/components/schemas/ChannelState"
            - description: Returns the state whether the channel is running or not.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp of when the channel was created.
        FillerSlate:
          allOf:
            - $ref: "#/components/schemas/SlateSource"
            - description: The slate used to fill gaps between programs in the schedule. You must configure filler slate if your channel uses the <code>LINEAR</code> <code>PlaybackMode</code>. MediaTailor doesn't support filler slate for channels using the <code>LOOP</code> <code>PlaybackMode</code>.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the channel was last modified.
        Outputs:
          allOf:
            - $ref: "#/components/schemas/ResponseOutputs"
            - description: The channel's output properties.
        PlaybackMode:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: <p>The type of playback mode for this channel.</p> <p> <code>LINEAR</code> - Programs play back-to-back only once.</p> <p> <code>LOOP</code> - Programs play back-to-back in an endless loop. When the last program in the schedule plays, playback loops back to the first program in the schedule.</p>
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the channel. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        Tier:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The tier associated with this Channel.
    UpdateLiveSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) associated with this live source.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the live source was created.
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: A list of HTTP package configurations for the live source on this account.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the live source was last modified.
        LiveSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the live source.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location associated with the live source.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the live source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
    UpdateProgramResponse:
      type: object
      properties:
        AdBreaks:
          allOf:
            - $ref: "#/components/schemas/__listOfAdBreak"
            - description: The ad break configuration settings.
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN to assign to the program.
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the channel for this program.
        ClipRange:
          allOf:
            - $ref: "#/components/schemas/ClipRange"
            - description: The clip range configuration settings.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time the program was created.
        DurationMillis:
          allOf:
            - $ref: "#/components/schemas/__long"
            - description: The duration of the live program in milliseconds.
        LiveSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the LiveSource for this Program.
        ProgramName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to this program.
        ScheduledStartTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The scheduled start time for this Program.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name to assign to the source location for this program.
        VodSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name that's used to refer to a VOD source.
    UpdateProgramTransition:
      type: object
      properties:
        DurationMillis:
          allOf:
            - $ref: "#/components/schemas/__long"
            - description: The duration of the live program in seconds.
        ScheduledStartTimeMillis:
          allOf:
            - $ref: "#/components/schemas/__long"
            - description: The date and time that the program is scheduled to start, in epoch milliseconds.
      description: Program transition configuration.
    UpdateSourceLocationResponse:
      type: object
      properties:
        AccessConfiguration:
          allOf:
            - $ref: "#/components/schemas/AccessConfiguration"
            - description: Access configuration parameters. Configures the type of authentication used to access content from your source location.
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) associated with the source location.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the source location was created.
        DefaultSegmentDeliveryConfiguration:
          allOf:
            - $ref: "#/components/schemas/DefaultSegmentDeliveryConfiguration"
            - description: The optional configuration for the host server that serves segments.
        HttpConfiguration:
          allOf:
            - $ref: "#/components/schemas/HttpConfiguration"
            - description: The HTTP configuration for the source location.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the source location was last modified.
        SegmentDeliveryConfigurations:
          allOf:
            - $ref: "#/components/schemas/__listOfSegmentDeliveryConfiguration"
            - description: The segment delivery configurations for the source location. For information about MediaTailor configurations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html">Working with configurations in AWS Elemental MediaTailor</a>.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the source location. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
    UpdateVodSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) associated with the VOD source.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the VOD source was created.
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: A list of HTTP package configurations for the VOD source on this account.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the VOD source was last modified.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location associated with the VOD source.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the VOD source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        VodSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the VOD source.
    AccessConfiguration:
      type: object
      properties:
        AccessType:
          allOf:
            - $ref: "#/components/schemas/AccessType"
            - description: "<p>The type of authentication used to access content from <code>HttpConfiguration::BaseUrl</code> on your source location. Accepted value: <code>S3_SIGV4</code>.</p> <p> <code>S3_SIGV4</code> - AWS Signature Version 4 authentication for Amazon S3 hosted virtual-style access. If your source location base URL is an Amazon S3 bucket, MediaTailor can use AWS Signature Version 4 (SigV4) authentication to access the bucket where your source content is stored. Your MediaTailor source location baseURL must follow the S3 virtual hosted-style request URL format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.</p> <p>Before you can use <code>S3_SIGV4</code>, you must meet these requirements:</p> <p>• You must allow MediaTailor to access your S3 bucket by granting mediatailor.amazonaws.com principal access in IAM. For information about configuring access in IAM, see Access management in the IAM User Guide.</p> <p>• The mediatailor.amazonaws.com service principal must have permissions to read all top level manifests referenced by the VodSource packaging configurations.</p> <p>• The caller of the API must have s3:GetObject IAM permissions to read all top level manifests referenced by your MediaTailor VodSource packaging configurations.</p>"
        SecretsManagerAccessTokenConfiguration:
          allOf:
            - $ref: "#/components/schemas/SecretsManagerAccessTokenConfiguration"
            - description: AWS Secrets Manager access token configuration parameters.
      description: Access configuration parameters.
    MessageType:
      type: string
      enum:
        - SPLICE_INSERT
        - TIME_SIGNAL
    __long:
      type: integer
    SlateSource:
      type: object
      properties:
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location where the slate VOD source is stored.
        VodSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The slate VOD source name. The VOD source must already exist in a source location before it can be used for slate.
      description: Slate VOD source configuration.
    SpliceInsertMessage:
      type: object
      properties:
        AvailNum:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: This is written to <code>splice_insert.avail_num</code>, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is <code>0</code>. Values must be between <code>0</code> and <code>256</code>, inclusive.
        AvailsExpected:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: This is written to <code>splice_insert.avails_expected</code>, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is <code>0</code>. Values must be between <code>0</code> and <code>256</code>, inclusive.
        SpliceEventId:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: This is written to <code>splice_insert.splice_event_id</code>, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is <code>1</code>.
        UniqueProgramId:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: This is written to <code>splice_insert.unique_program_id</code>, as defined in section 9.7.3.1 of the SCTE-35 specification. The default value is <code>0</code>. Values must be between <code>0</code> and <code>256</code>, inclusive.
      description: Splice insert message configuration.
    TimeSignalMessage:
      type: object
      properties:
        SegmentationDescriptors:
          allOf:
            - $ref: "#/components/schemas/SegmentationDescriptorList"
            - description: The configurations for the SCTE-35 <code>segmentation_descriptor</code> message(s) sent with the <code>time_signal</code> message.
      description: <p>The SCTE-35 <code>time_signal</code> message can be sent with one or more <code>segmentation_descriptor</code> messages. A <code>time_signal</code> message can be sent only if a single <code>segmentation_descriptor</code> message is sent.</p> <p>The <code>time_signal</code> message contains only the <code>splice_time</code> field which is constructed using a given presentation timestamp. When sending a <code>time_signal</code> message, the <code>splice_command_type</code> field in the <code>splice_info_section</code> message is set to 6 (0x06).</p> <p>See the <code>time_signal()</code> table of the 2022 SCTE-35 specification for more information.</p>
    __boolean:
      type: boolean
    __listOf__string:
      type: array
      items:
        $ref: "#/components/schemas/__string"
    Alert:
      type: object
      required:
        - AlertCode
        - AlertMessage
        - LastModifiedTime
        - RelatedResourceArns
        - ResourceArn
      properties:
        AlertCode:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The code for the alert. For example, <code>NOT_PROCESSED</code>.
        AlertMessage:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: If an alert is generated for a resource, an explanation of the reason for the alert.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp when the alert was last modified.
        RelatedResourceArns:
          allOf:
            - $ref: "#/components/schemas/__listOf__string"
            - description: The Amazon Resource Names (ARNs) related to this alert.
        ResourceArn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) of the resource.
      description: Alert configuration parameters.
    Operator:
      type: string
      enum:
        - EQUALS
    AvailMatchingCriteria:
      type: object
      required:
        - DynamicVariable
        - Operator
      properties:
        DynamicVariable:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: <p>The dynamic variable(s) that MediaTailor should use as avail matching criteria. MediaTailor only places the prefetched ads into the avail if the avail matches the criteria defined by the dynamic variable. For information about dynamic variables, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/variables.html">Using dynamic ad variables</a> in the <i>MediaTailor User Guide</i>.</p> <p>You can include up to 100 dynamic variables.</p>
        Operator:
          allOf:
            - $ref: "#/components/schemas/Operator"
            - description: For the <code>DynamicVariable</code> specified in <code>AvailMatchingCriteria</code>, the Operator that is used for the comparison.
      description: <p>MediaTailor only places (consumes) prefetched ads if the ad break meets the criteria defined by the dynamic variables. This gives you granular control over which ad break to place the prefetched ads into.</p> <p>As an example, let's say that you set <code>DynamicVariable</code> to <code>scte.event_id</code> and <code>Operator</code> to <code>EQUALS</code>, and your playback configuration has an ADS URL of <code>https://my.ads.server.com/path?&amp;podId=[scte.avail_num]&amp;event=[scte.event_id]&amp;duration=[session.avail_duration_secs]</code>. And the prefetch request to the ADS contains these values <code>https://my.ads.server.com/path?&amp;podId=3&amp;event=my-awesome-event&amp;duration=30</code>. MediaTailor will only insert the prefetched ads into the ad break if has a SCTE marker with an event id of <code>my-awesome-event</code>, since it must match the event id that MediaTailor uses to query the ADS.</p> <p>You can specify up to five <code>AvailMatchingCriteria</code>. If you specify multiple <code>AvailMatchingCriteria</code>, MediaTailor combines them to match using a logical <code>AND</code>. You can model logical <code>OR</code> combinations by creating multiple prefetch schedules.</p>
    AvailSuppression:
      type: object
      properties:
        Mode:
          allOf:
            - $ref: "#/components/schemas/Mode"
            - description: Sets the ad suppression mode. By default, ad suppression is off and all ad breaks are filled with ads or slate. When Mode is set to <code>BEHIND_LIVE_EDGE</code>, ad suppression is active and MediaTailor won't fill ad breaks on or behind the ad suppression Value time in the manifest lookback window.
        Value:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: A live edge offset time in HH:MM:SS. MediaTailor won't fill ad breaks on or behind this time in the manifest lookback window. If Value is set to 00:00:00, it is in sync with the live edge, and MediaTailor won't fill any ad breaks on or behind the live edge. If you set a Value time, MediaTailor won't fill any ad breaks on or behind this time in the manifest lookback window. For example, if you set 00:45:00, then MediaTailor will fill ad breaks that occur within 45 minutes behind the live edge, but won't fill ad breaks on or behind 45 minutes behind the live edge.
      description: The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Suppression</a>.
    Bumper:
      type: object
      properties:
        EndUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL for the end bumper asset.
        StartUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL for the start bumper asset.
      description: The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
    CdnConfiguration:
      type: object
      properties:
        AdSegmentUrlPrefix:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: A non-default content delivery network (CDN) to serve ad segments. By default, AWS Elemental MediaTailor uses Amazon CloudFront with default cache settings as its CDN for ad segments. To set up an alternate CDN, create a rule in your CDN for the origin ads.mediatailor.<i>&lt;region&gt;</i>.amazonaws.com. Then specify the rule's name in this <code>AdSegmentUrlPrefix</code>. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for ad segments.
        ContentSegmentUrlPrefix:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: A content delivery network (CDN) to cache content segments, so that content requests don’t always have to go to the origin server. First, create a rule in your CDN for the content segment origin server. Then specify the rule's name in this <code>ContentSegmentUrlPrefix</code>. When AWS Elemental MediaTailor serves a manifest, it reports your CDN as the source for content segments.
      description: The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
    LogConfigurationForChannel:
      type: object
      properties:
        LogTypes:
          allOf:
            - $ref: "#/components/schemas/LogTypes"
            - description: The log types.
      description: The log configuration for the channel.
    ResponseOutputs:
      type: array
      items:
        $ref: "#/components/schemas/ResponseOutputItem"
    Channel:
      type: object
      required:
        - Arn
        - ChannelName
        - ChannelState
        - LogConfiguration
        - Outputs
        - PlaybackMode
        - Tier
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN of the channel.
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the channel.
        ChannelState:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: Returns the state whether the channel is running or not.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp of when the channel was created.
        FillerSlate:
          allOf:
            - $ref: "#/components/schemas/SlateSource"
            - description: The slate used to fill gaps between programs in the schedule. You must configure filler slate if your channel uses the <code>LINEAR</code> <code>PlaybackMode</code>. MediaTailor doesn't support filler slate for channels using the <code>LOOP</code> <code>PlaybackMode</code>.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp of when the channel was last modified.
        LogConfiguration:
          allOf:
            - $ref: "#/components/schemas/LogConfigurationForChannel"
            - description: The log configuration.
        Outputs:
          allOf:
            - $ref: "#/components/schemas/ResponseOutputs"
            - description: The channel's output properties.
        PlaybackMode:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: <p>The type of playback mode for this channel.</p> <p> <code>LINEAR</code> - Programs play back-to-back only once.</p> <p> <code>LOOP</code> - Programs play back-to-back in an endless loop. When the last program in the schedule plays, playback loops back to the first program in the schedule.</p>
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the channel. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        Tier:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The tier for this channel. STANDARD tier channels can contain live programs.
      description: The configuration parameters for a channel. For information about MediaTailor channels, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html">Working with channels</a> in the <i>MediaTailor User Guide</i>.
    ChannelState:
      type: string
      enum:
        - RUNNING
        - STOPPED
    ConfigurationAliasesRequest:
      type: object
      description: The predefined aliases for dynamic variables.
      additionalProperties:
        $ref: "#/components/schemas/__mapOf__string"
    ConfigurationAliasesResponse:
      type: object
      description: The predefined aliases for dynamic variables.
      additionalProperties:
        $ref: "#/components/schemas/__mapOf__string"
    LogTypes:
      type: array
      items:
        $ref: "#/components/schemas/LogType"
    ConfigureLogsForChannelRequest:
      type: object
      required:
        - ChannelName
        - LogTypes
      title: ConfigureLogsForChannelRequest
      properties:
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the channel.
        LogTypes:
          allOf:
            - $ref: "#/components/schemas/LogTypes"
            - description: The types of logs to collect.
    ConfigureLogsForPlaybackConfigurationRequest:
      type: object
      required:
        - PercentEnabled
        - PlaybackConfigurationName
      title: ConfigureLogsForPlaybackConfigurationRequest
      properties:
        PercentEnabled:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: '<p>The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account. For example, if your playback configuration has 1000 sessions and percentEnabled is set to <code>60</code>, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/debug-log-mode.html">debug log mode</a>.</p> <p>Valid values: <code>0</code> - <code>100</code> </p>'
        PlaybackConfigurationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the playback configuration.
      description: Configures Amazon CloudWatch log settings for a playback configuration.
    RequestOutputs:
      type: array
      description: An object that represents an object in the CreateChannel request.
      items:
        $ref: "#/components/schemas/RequestOutputItem"
    PlaybackMode:
      type: string
      enum:
        - LOOP
        - LINEAR
    Tier:
      type: string
      enum:
        - BASIC
        - STANDARD
    CreateChannelRequest:
      type: object
      required:
        - Outputs
        - PlaybackMode
      title: CreateChannelRequest
      properties:
        FillerSlate:
          allOf:
            - $ref: "#/components/schemas/SlateSource"
            - description: The slate used to fill gaps between programs in the schedule. You must configure filler slate if your channel uses the <code>LINEAR</code> <code>PlaybackMode</code>. MediaTailor doesn't support filler slate for channels using the <code>LOOP</code> <code>PlaybackMode</code>.
        Outputs:
          allOf:
            - $ref: "#/components/schemas/RequestOutputs"
            - description: The channel's output properties.
        PlaybackMode:
          allOf:
            - $ref: "#/components/schemas/PlaybackMode"
            - description: <p>The type of playback mode to use for this channel.</p> <p> <code>LINEAR</code> - The programs in the schedule play once back-to-back in the schedule.</p> <p> <code>LOOP</code> - The programs in the schedule play back-to-back in an endless loop. When the last program in the schedule stops playing, playback loops back to the first program in the schedule.</p>
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the channel. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        Tier:
          allOf:
            - $ref: "#/components/schemas/Tier"
            - description: The tier of the channel.
    HttpPackageConfigurations:
      type: array
      description: The VOD source's HTTP package configuration settings.
      items:
        $ref: "#/components/schemas/HttpPackageConfiguration"
    CreateLiveSourceRequest:
      type: object
      required:
        - HttpPackageConfigurations
      title: CreateLiveSourceRequest
      properties:
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: A list of HTTP package configuration parameters for this live source.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the live source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
    PrefetchConsumption:
      type: object
      required:
        - EndTime
      properties:
        AvailMatchingCriteria:
          allOf:
            - $ref: "#/components/schemas/__listOfAvailMatchingCriteria"
            - description: If you only want MediaTailor to insert prefetched ads into avails (ad breaks) that match specific dynamic variables, such as <code>scte.event_id</code>, set the avail matching criteria.
        EndTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time when MediaTailor no longer considers the prefetched ads for use in an ad break. MediaTailor automatically deletes prefetch schedules no less than seven days after the end time. If you'd like to manually delete the prefetch schedule, you can call <code>DeletePrefetchSchedule</code>.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time when prefetched ads are considered for use in an ad break. If you don't specify <code>StartTime</code>, the prefetched ads are available after MediaTailor retrives them from the ad decision server.
      description: A complex type that contains settings that determine how and when that MediaTailor places prefetched ads into upcoming ad breaks.
    PrefetchRetrieval:
      type: object
      required:
        - EndTime
      properties:
        DynamicVariables:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - description: <p>The dynamic variables to use for substitution during prefetch requests to the ad decision server (ADS).</p> <p>You initially configure <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/variables.html">dynamic variables</a> for the ADS URL when you set up your playback configuration. When you specify <code>DynamicVariables</code> for prefetch retrieval, MediaTailor includes the dynamic variables in the request to the ADS.</p>
        EndTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time when prefetch retrieval ends for the ad break. Prefetching will be attempted for manifest requests that occur at or before this time.
        StartTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The time when prefetch retrievals can start for this break. Ad prefetching will be attempted for manifest requests that occur at or after this time. Defaults to the current time. If not specified, the prefetch retrieval starts as soon as possible.
      description: A complex type that contains settings governing when MediaTailor prefetches ads, and which dynamic variables that MediaTailor includes in the request to the ad decision server.
    CreatePrefetchScheduleRequest:
      type: object
      required:
        - Consumption
        - Retrieval
      title: CreatePrefetchScheduleRequest
      properties:
        Consumption:
          allOf:
            - $ref: "#/components/schemas/PrefetchConsumption"
            - description: The configuration settings for MediaTailor's <i>consumption</i> of the prefetched ads from the ad decision server. Each consumption configuration contains an end time and an optional start time that define the <i>consumption window</i>. Prefetch schedules automatically expire no earlier than seven days after the end time.
        Retrieval:
          allOf:
            - $ref: "#/components/schemas/PrefetchRetrieval"
            - description: The configuration settings for retrieval of prefetched ads from the ad decision server. Only one set of prefetched ads will be retrieved and subsequently consumed for each ad break.
        StreamId:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: An optional stream identifier that MediaTailor uses to prefetch ads for multiple streams that use the same playback configuration. If <code>StreamId</code> is specified, MediaTailor returns all of the prefetch schedules with an exact match on <code>StreamId</code>. If not specified, MediaTailor returns all of the prefetch schedules for the playback configuration, regardless of <code>StreamId</code>.
    __listOfAdBreak:
      type: array
      items:
        $ref: "#/components/schemas/AdBreak"
    ScheduleConfiguration:
      type: object
      required:
        - Transition
      properties:
        ClipRange:
          allOf:
            - $ref: "#/components/schemas/ClipRange"
            - description: Program clip range configuration.
        Transition:
          allOf:
            - $ref: "#/components/schemas/Transition"
            - description: Program transition configurations.
      description: Schedule configuration parameters. A channel must be stopped before changes can be made to the schedule.
    CreateProgramRequest:
      type: object
      required:
        - ScheduleConfiguration
        - SourceLocationName
      title: CreateProgramRequest
      properties:
        AdBreaks:
          allOf:
            - $ref: "#/components/schemas/__listOfAdBreak"
            - description: The ad break configuration settings.
        LiveSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the LiveSource for this Program.
        ScheduleConfiguration:
          allOf:
            - $ref: "#/components/schemas/ScheduleConfiguration"
            - description: The schedule configuration settings.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location.
        VodSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name that's used to refer to a VOD source.
    DefaultSegmentDeliveryConfiguration:
      type: object
      properties:
        BaseUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The hostname of the server that will be used to serve segments. This string must include the protocol, such as <b>https://</b>.
      description: The optional configuration for a server that serves segments. Use this if you want the segment delivery server to be different from the source location server. For example, you can configure your source location server to be an origination server, such as MediaPackage, and the segment delivery server to be a content delivery network (CDN), such as CloudFront. If you don't specify a segment delivery server, then the source location server is used.
    HttpConfiguration:
      type: object
      required:
        - BaseUrl
      properties:
        BaseUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The base URL for the source location host server. This string must include the protocol, such as <b>https://</b>.
      description: The HTTP configuration for the source location.
    __listOfSegmentDeliveryConfiguration:
      type: array
      items:
        $ref: "#/components/schemas/SegmentDeliveryConfiguration"
    CreateSourceLocationRequest:
      type: object
      required:
        - HttpConfiguration
      title: CreateSourceLocationRequest
      properties:
        AccessConfiguration:
          allOf:
            - $ref: "#/components/schemas/AccessConfiguration"
            - description: Access configuration parameters. Configures the type of authentication used to access content from your source location.
        DefaultSegmentDeliveryConfiguration:
          allOf:
            - $ref: "#/components/schemas/DefaultSegmentDeliveryConfiguration"
            - description: The optional configuration for the server that serves segments.
        HttpConfiguration:
          allOf:
            - $ref: "#/components/schemas/HttpConfiguration"
            - description: The source's HTTP package configurations.
        SegmentDeliveryConfigurations:
          allOf:
            - $ref: "#/components/schemas/__listOfSegmentDeliveryConfiguration"
            - description: A list of the segment delivery configurations associated with this resource.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the source location. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
    CreateVodSourceRequest:
      type: object
      required:
        - HttpPackageConfigurations
      title: CreateVodSourceRequest
      properties:
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: A list of HTTP package configuration parameters for this VOD source.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the VOD source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
    DashConfiguration:
      type: object
      properties:
        ManifestEndpointPrefix:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL generated by MediaTailor to initiate a playback session. The session uses server-side reporting. This setting is ignored in PUT operations.
        MpdLocation:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The setting that controls whether MediaTailor includes the Location tag in DASH manifests. MediaTailor populates the Location tag with the URL for manifest update requests, to be used by players that don't support sticky redirects. Disable this if you have CDN routing rules set up for accessing MediaTailor manifests, and you are either using client-side reporting or your players support sticky HTTP redirects. Valid values are <code>DISABLED</code> and <code>EMT_DEFAULT</code>. The <code>EMT_DEFAULT</code> setting enables the inclusion of the tag and is the default value.
        OriginManifestType:
          allOf:
            - $ref: "#/components/schemas/OriginManifestType"
            - description: The setting that controls whether MediaTailor handles manifests from the origin server as multi-period manifests or single-period manifests. If your origin server produces single-period manifests, set this to <code>SINGLE_PERIOD</code>. The default setting is <code>MULTI_PERIOD</code>. For multi-period manifests, omit this setting or set it to <code>MULTI_PERIOD</code>.
      description: The configuration for DASH content.
    DashConfigurationForPut:
      type: object
      properties:
        MpdLocation:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The setting that controls whether MediaTailor includes the Location tag in DASH manifests. MediaTailor populates the Location tag with the URL for manifest update requests, to be used by players that don't support sticky redirects. Disable this if you have CDN routing rules set up for accessing MediaTailor manifests, and you are either using client-side reporting or your players support sticky HTTP redirects. Valid values are <code>DISABLED</code> and <code>EMT_DEFAULT</code>. The <code>EMT_DEFAULT</code> setting enables the inclusion of the tag and is the default value.
        OriginManifestType:
          allOf:
            - $ref: "#/components/schemas/OriginManifestType"
            - description: The setting that controls whether MediaTailor handles manifests from the origin server as multi-period manifests or single-period manifests. If your origin server produces single-period manifests, set this to <code>SINGLE_PERIOD</code>. The default setting is <code>MULTI_PERIOD</code>. For multi-period manifests, omit this setting or set it to <code>MULTI_PERIOD</code>.
      description: The configuration for DASH PUT operations.
    DashPlaylistSettings:
      type: object
      properties:
        ManifestWindowSeconds:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: "The total duration (in seconds) of each manifest. Minimum value: <code>30</code> seconds. Maximum value: <code>3600</code> seconds."
        MinBufferTimeSeconds:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: "Minimum amount of content (measured in seconds) that a player must keep available in the buffer. Minimum value: <code>2</code> seconds. Maximum value: <code>60</code> seconds."
        MinUpdatePeriodSeconds:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: "Minimum amount of time (in seconds) that the player should wait before requesting updates to the manifest. Minimum value: <code>2</code> seconds. Maximum value: <code>60</code> seconds."
        SuggestedPresentationDelaySeconds:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: "Amount of time (in seconds) that the player should be from the live point at the end of the manifest. Minimum value: <code>2</code> seconds. Maximum value: <code>60</code> seconds."
      description: Dash manifest configuration parameters.
    DeleteChannelPolicyRequest:
      type: object
      title: DeleteChannelPolicyRequest
      properties: {}
    DeleteChannelRequest:
      type: object
      title: DeleteChannelRequest
      properties: {}
    DeleteLiveSourceRequest:
      type: object
      title: DeleteLiveSourceRequest
      properties: {}
    DeletePlaybackConfigurationRequest:
      type: object
      title: DeletePlaybackConfigurationRequest
      properties: {}
    DeletePrefetchScheduleRequest:
      type: object
      title: DeletePrefetchScheduleRequest
      properties: {}
    DeleteProgramRequest:
      type: object
      title: DeleteProgramRequest
      properties: {}
    DeleteSourceLocationRequest:
      type: object
      title: DeleteSourceLocationRequest
      properties: {}
    DeleteVodSourceRequest:
      type: object
      title: DeleteVodSourceRequest
      properties: {}
    DescribeChannelRequest:
      type: object
      title: DescribeChannelRequest
      properties: {}
    DescribeLiveSourceRequest:
      type: object
      title: DescribeLiveSourceRequest
      properties: {}
    DescribeProgramRequest:
      type: object
      title: DescribeProgramRequest
      properties: {}
    Long:
      type: integer
    DescribeSourceLocationRequest:
      type: object
      title: DescribeSourceLocationRequest
      properties: {}
    DescribeVodSourceRequest:
      type: object
      title: DescribeVodSourceRequest
      properties: {}
    GetChannelPolicyRequest:
      type: object
      title: GetChannelPolicyRequest
      properties: {}
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    GetChannelScheduleRequest:
      type: object
      title: GetChannelScheduleRequest
      properties: {}
    __listOfScheduleEntry:
      type: array
      items:
        $ref: "#/components/schemas/ScheduleEntry"
    GetPlaybackConfigurationRequest:
      type: object
      title: GetPlaybackConfigurationRequest
      properties: {}
    HlsConfiguration:
      type: object
      properties:
        ManifestEndpointPrefix:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL that is used to initiate a playback session for devices that support Apple HLS. The session uses server-side reporting.
      description: The configuration for HLS content.
    LivePreRollConfiguration:
      type: object
      properties:
        AdDecisionServerUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL for the ad decision server (ADS) for pre-roll ads. This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing, you can provide a static VAST URL. The maximum length is 25,000 characters.
        MaxDurationSeconds:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: The maximum allowed duration for the pre-roll ad avail. AWS Elemental MediaTailor won't play pre-roll ads to exceed this duration, regardless of the total duration of ads that the ADS returns.
      description: The configuration for pre-roll ad insertion.
    LogConfiguration:
      type: object
      required:
        - PercentEnabled
      properties:
        PercentEnabled:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: '<p>The percentage of session logs that MediaTailor sends to your Cloudwatch Logs account. For example, if your playback configuration has 1000 sessions and <code>percentEnabled</code> is set to <code>60</code>, MediaTailor sends logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random which of the playback configuration sessions to send logs for. If you want to view logs for a specific session, you can use the <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/debug-log-mode.html">debug log mode</a>.</p> <p>Valid values: <code>0</code> - <code>100</code> </p>'
      description: Returns Amazon CloudWatch log settings for a playback configuration.
    ManifestProcessingRules:
      type: object
      properties:
        AdMarkerPassthrough:
          allOf:
            - $ref: "#/components/schemas/AdMarkerPassthrough"
            - description: <p>For HLS, when set to <code>true</code>, MediaTailor passes through <code>EXT-X-CUE-IN</code>, <code>EXT-X-CUE-OUT</code>, and <code>EXT-X-SPLICEPOINT-SCTE35</code> ad markers from the origin manifest to the MediaTailor personalized manifest.</p> <p>No logic is applied to these ad markers. For example, if <code>EXT-X-CUE-OUT</code> has a value of <code>60</code>, but no ads are filled for that ad break, MediaTailor will not set the value to <code>0</code>.</p>
      description: The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
    __integerMin1:
      type: integer
      minimum: 1
    GetPrefetchScheduleRequest:
      type: object
      title: GetPrefetchScheduleRequest
      properties: {}
    HlsPlaylistSettings:
      type: object
      properties:
        ManifestWindowSeconds:
          allOf:
            - $ref: "#/components/schemas/__integer"
            - description: "The total duration (in seconds) of each manifest. Minimum value: <code>30</code> seconds. Maximum value: <code>3600</code> seconds."
      description: HLS playlist configuration parameters.
    Type:
      type: string
      enum:
        - DASH
        - HLS
    Integer:
      type: integer
    ListAlertsRequest:
      type: object
      title: ListAlertsRequest
      properties: {}
    __listOfAlert:
      type: array
      items:
        $ref: "#/components/schemas/Alert"
    ListChannelsRequest:
      type: object
      title: ListChannelsRequest
      properties: {}
    __listOfChannel:
      type: array
      items:
        $ref: "#/components/schemas/Channel"
    ListLiveSourcesRequest:
      type: object
      title: ListLiveSourcesRequest
      properties: {}
    __listOfLiveSource:
      type: array
      items:
        $ref: "#/components/schemas/LiveSource"
    ListPlaybackConfigurationsRequest:
      type: object
      title: ListPlaybackConfigurationsRequest
      properties: {}
    __listOfPlaybackConfiguration:
      type: array
      items:
        $ref: "#/components/schemas/PlaybackConfiguration"
    __integerMin1Max100:
      type: integer
      minimum: 1
      maximum: 100
    ListPrefetchSchedulesRequest:
      type: object
      title: ListPrefetchSchedulesRequest
      properties:
        MaxResults:
          allOf:
            - $ref: "#/components/schemas/__integerMin1Max100"
            - description: The maximum number of prefetch schedules that you want MediaTailor to return in response to the current request. If there are more than <code>MaxResults</code> prefetch schedules, use the value of <code>NextToken</code> in the response to get the next page of results.
        NextToken:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: <p>(Optional) If the playback configuration has more than <code>MaxResults</code> prefetch schedules, use <code>NextToken</code> to get the second and subsequent pages of results.</p> <p> For the first <code>ListPrefetchSchedulesRequest</code> request, omit this value.</p> <p> For the second and subsequent requests, get the value of <code>NextToken</code> from the previous response and specify that value for <code>NextToken</code> in the request.</p> <p> If the previous response didn't include a <code>NextToken</code> element, there are no more prefetch schedules to get.</p>
        StreamId:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: An optional filtering parameter whereby MediaTailor filters the prefetch schedules to include only specific streams.
    __listOfPrefetchSchedule:
      type: array
      items:
        $ref: "#/components/schemas/PrefetchSchedule"
    ListSourceLocationsRequest:
      type: object
      title: ListSourceLocationsRequest
      properties: {}
    __listOfSourceLocation:
      type: array
      items:
        $ref: "#/components/schemas/SourceLocation"
    ListTagsForResourceRequest:
      type: object
      title: ListTagsForResourceRequest
      properties: {}
    ListVodSourcesRequest:
      type: object
      title: ListVodSourcesRequest
      properties: {}
    __listOfVodSource:
      type: array
      items:
        $ref: "#/components/schemas/VodSource"
    LiveSource:
      type: object
      required:
        - Arn
        - HttpPackageConfigurations
        - LiveSourceName
        - SourceLocationName
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN for the live source.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the live source was created.
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: The HTTP package configurations for the live source.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the live source was last modified.
        LiveSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name that's used to refer to a live source.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags assigned to the live source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
      description: Live source configuration parameters.
    PlaybackConfiguration:
      type: object
      properties:
        AdDecisionServerUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
        AvailSuppression:
          allOf:
            - $ref: "#/components/schemas/AvailSuppression"
            - description: The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Suppression</a>.
        Bumper:
          allOf:
            - $ref: "#/components/schemas/Bumper"
            - description: The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
        CdnConfiguration:
          allOf:
            - $ref: "#/components/schemas/CdnConfiguration"
            - description: The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
        ConfigurationAliases:
          allOf:
            - $ref: "#/components/schemas/ConfigurationAliasesResponse"
            - description: The player parameters and aliases used as dynamic variables during session initialization. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html">Domain Variables</a>.
        DashConfiguration:
          allOf:
            - $ref: "#/components/schemas/DashConfiguration"
            - description: The configuration for a DASH source.
        HlsConfiguration:
          allOf:
            - $ref: "#/components/schemas/HlsConfiguration"
            - description: The configuration for HLS content.
        LivePreRollConfiguration:
          allOf:
            - $ref: "#/components/schemas/LivePreRollConfiguration"
            - description: The configuration for pre-roll ad insertion.
        LogConfiguration:
          allOf:
            - $ref: "#/components/schemas/LogConfiguration"
            - description: The Amazon CloudWatch log settings for a playback configuration.
        ManifestProcessingRules:
          allOf:
            - $ref: "#/components/schemas/ManifestProcessingRules"
            - description: The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
        Name:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The identifier for the playback configuration.
        PersonalizationThresholdSeconds:
          allOf:
            - $ref: "#/components/schemas/__integerMin1"
            - description: Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to <i>ad replacement</i> in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Behavior in AWS Elemental MediaTailor</a>.
        PlaybackConfigurationArn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) for the playback configuration.
        PlaybackEndpointPrefix:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL that the player accesses to get a manifest from AWS Elemental MediaTailor.
        SessionInitializationEndpointPrefix:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL that the player uses to initialize a session that uses client-side reporting.
        SlateAdUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL for a video asset to transcode and use to fill in time that's not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID playback configurations. For VPAID, the slate is required because MediaTailor provides it in the slots designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the playback configuration. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        TranscodeProfileName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
        VideoContentSourceUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
      description: A playback configuration. For information about MediaTailor configurations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html">Working with configurations in AWS Elemental MediaTailor</a>.
    PrefetchSchedule:
      type: object
      required:
        - Arn
        - Consumption
        - Name
        - PlaybackConfigurationName
        - Retrieval
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The Amazon Resource Name (ARN) of the prefetch schedule.
        Consumption:
          allOf:
            - $ref: "#/components/schemas/PrefetchConsumption"
            - description: Consumption settings determine how, and when, MediaTailor places the prefetched ads into ad breaks. Ad consumption occurs within a span of time that you define, called a <i>consumption window</i>. You can designate which ad breaks that MediaTailor fills with prefetch ads by setting avail matching criteria.
        Name:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the prefetch schedule. The name must be unique among all prefetch schedules that are associated with the specified playback configuration.
        PlaybackConfigurationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the playback configuration to create the prefetch schedule for.
        Retrieval:
          allOf:
            - $ref: "#/components/schemas/PrefetchRetrieval"
            - description: A complex type that contains settings for prefetch retrieval from the ad decision server (ADS).
        StreamId:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: An optional stream identifier that you can specify in order to prefetch for multiple streams that use the same playback configuration.
      description: A prefetch schedule allows you to tell MediaTailor to fetch and prepare certain ads before an ad break happens. For more information about ad prefetching, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html">Using ad prefetching</a> in the <i>MediaTailor User Guide</i>.
    PutChannelPolicyRequest:
      type: object
      required:
        - Policy
      title: PutChannelPolicyRequest
      properties:
        Policy:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: Adds an IAM role that determines the permissions of your channel.
    PutPlaybackConfigurationRequest:
      type: object
      required:
        - Name
      title: PutPlaybackConfigurationRequest
      properties:
        AdDecisionServerUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL for the ad decision server (ADS). This includes the specification of static parameters and placeholders for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific and session-specific parameters as needed when calling the ADS. Alternately, for testing you can provide a static VAST URL. The maximum length is 25,000 characters.
        AvailSuppression:
          allOf:
            - $ref: "#/components/schemas/AvailSuppression"
            - description: The configuration for avail suppression, also known as ad suppression. For more information about ad suppression, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Suppression</a>.
        Bumper:
          allOf:
            - $ref: "#/components/schemas/Bumper"
            - description: The configuration for bumpers. Bumpers are short audio or video clips that play at the start or before the end of an ad break. To learn more about bumpers, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html">Bumpers</a>.
        CdnConfiguration:
          allOf:
            - $ref: "#/components/schemas/CdnConfiguration"
            - description: The configuration for using a content delivery network (CDN), like Amazon CloudFront, for content and ad segment management.
        ConfigurationAliases:
          allOf:
            - $ref: "#/components/schemas/ConfigurationAliasesRequest"
            - description: The player parameters and aliases used as dynamic variables during session initialization. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domain.html">Domain Variables</a>.
        DashConfiguration:
          allOf:
            - $ref: "#/components/schemas/DashConfigurationForPut"
            - description: The configuration for DASH content.
        LivePreRollConfiguration:
          allOf:
            - $ref: "#/components/schemas/LivePreRollConfiguration"
            - description: The configuration for pre-roll ad insertion.
        ManifestProcessingRules:
          allOf:
            - $ref: "#/components/schemas/ManifestProcessingRules"
            - description: The configuration for manifest processing rules. Manifest processing rules enable customization of the personalized manifests created by MediaTailor.
        Name:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The identifier for the playback configuration.
        PersonalizationThresholdSeconds:
          allOf:
            - $ref: "#/components/schemas/__integerMin1"
            - description: Defines the maximum duration of underfilled ad time (in seconds) allowed in an ad break. If the duration of underfilled ad time exceeds the personalization threshold, then the personalization of the ad break is abandoned and the underlying content is shown. This feature applies to <i>ad replacement</i> in live and VOD streams, rather than ad insertion, because it relies on an underlying content stream. For more information about ad break behavior, including ad replacement and insertion, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html">Ad Behavior in AWS Elemental MediaTailor</a>.
        SlateAdUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL for a high-quality video asset to transcode and use to fill in time that's not used by ads. AWS Elemental MediaTailor shows the slate to fill in gaps in media content. Configuring the slate is optional for non-VPAID configurations. For VPAID, the slate is required because MediaTailor provides it in the slots that are designated for dynamic ad content. The slate must be a high-quality asset that contains both audio and video.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the playback configuration. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        TranscodeProfileName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name that is used to associate this playback configuration with a custom transcode profile. This overrides the dynamic transcoding defaults of MediaTailor. Use this only if you have already set up custom profiles with the help of AWS Support.
        VideoContentSourceUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL prefix for the parent manifest for the stream, minus the asset ID. The maximum length is 512 characters.
    RelativePosition:
      type: string
      enum:
        - BEFORE_PROGRAM
        - AFTER_PROGRAM
    ResponseOutputItem:
      type: object
      required:
        - ManifestName
        - PlaybackUrl
        - SourceGroup
      properties:
        DashPlaylistSettings:
          allOf:
            - $ref: "#/components/schemas/DashPlaylistSettings"
            - description: DASH manifest configuration settings.
        HlsPlaylistSettings:
          allOf:
            - $ref: "#/components/schemas/HlsPlaylistSettings"
            - description: HLS manifest configuration settings.
        ManifestName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the manifest for the channel that will appear in the channel output's playback URL.
        PlaybackUrl:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The URL used for playback by content players.
        SourceGroup:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: A string used to associate a package configuration source group with a channel output.
      description: The output item response.
    ScheduleAdBreak:
      type: object
      properties:
        ApproximateDurationSeconds:
          allOf:
            - $ref: "#/components/schemas/__long"
            - description: The approximate duration of the ad break, in seconds.
        ApproximateStartTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The approximate time that the ad will start playing.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location containing the VOD source used for the ad break.
        VodSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the VOD source used for the ad break.
      description: The schedule's ad break properties.
    __listOfScheduleAdBreak:
      type: array
      items:
        $ref: "#/components/schemas/ScheduleAdBreak"
    ScheduleEntryType:
      type: string
      enum:
        - PROGRAM
        - FILLER_SLATE
    ScheduleEntry:
      type: object
      required:
        - Arn
        - ChannelName
        - ProgramName
        - SourceLocationName
      properties:
        ApproximateDurationSeconds:
          allOf:
            - $ref: "#/components/schemas/__long"
            - description: The approximate duration of this program, in seconds.
        ApproximateStartTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The approximate time that the program will start playing.
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN of the program.
        ChannelName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the channel that uses this schedule.
        LiveSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the live source used for the program.
        ProgramName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the program.
        ScheduleAdBreaks:
          allOf:
            - $ref: "#/components/schemas/__listOfScheduleAdBreak"
            - description: The schedule's ad break properties.
        ScheduleEntryType:
          allOf:
            - $ref: "#/components/schemas/ScheduleEntryType"
            - description: The type of schedule entry.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location.
        VodSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the VOD source.
      description: The properties for a schedule.
    String:
      type: string
    SegmentationDescriptor:
      type: object
      properties:
        SegmentNum:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The segment number to assign to the <code>segmentation_descriptor.segment_num</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification Values must be between 0 and 256, inclusive. The default value is 0.
        SegmentationEventId:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The Event Identifier to assign to the <code>segmentation_descriptor.segmentation_event_id</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. The default value is 1.
        SegmentationTypeId:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The Type Identifier to assign to the <code>segmentation_descriptor.segmentation_type_id</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. Values must be between 0 and 256, inclusive. The default value is 48.
        SegmentationUpid:
          allOf:
            - $ref: "#/components/schemas/String"
            - description: The Upid to assign to the <code>segmentation_descriptor.segmentation_upid</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. The value must be a hexadecimal string containing only the characters 0 though 9 and A through F. The default value is "" (an empty string).
        SegmentationUpidType:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The Upid Type to assign to the <code>segmentation_descriptor.segmentation_upid_type</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. Values must be between 0 and 256, inclusive. The default value is 14.
        SegmentsExpected:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of segments expected, which is assigned to the <code>segmentation_descriptor.segments_expectedS</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification Values must be between 0 and 256, inclusive. The default value is 0.
        SubSegmentNum:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The sub-segment number to assign to the <code>segmentation_descriptor.sub_segment_num</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. Values must be between 0 and 256, inclusive. The defualt value is null.
        SubSegmentsExpected:
          allOf:
            - $ref: "#/components/schemas/Integer"
            - description: The number of sub-segments expected, which is assigned to the <code>segmentation_descriptor.sub_segments_expected</code> message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification. Values must be between 0 and 256, inclusive. The default value is null.
      description: <p>The <code>segmentation_descriptor</code> message can contain advanced metadata fields, like content identifiers, to convey a wide range of information about the ad break. MediaTailor writes the ad metadata in the egress manifest as part of the <code>EXT-X-DATERANGE</code> or <code>EventStream</code> ad marker's SCTE-35 data.</p> <p> <code>segmentation_descriptor</code> messages must be sent with the <code>time_signal</code> message type.</p> <p>See the <code>segmentation_descriptor()</code> table of the 2022 SCTE-35 specification for more information.</p>
    SegmentationDescriptorList:
      type: array
      items:
        $ref: "#/components/schemas/SegmentationDescriptor"
    SourceLocation:
      type: object
      required:
        - Arn
        - HttpConfiguration
        - SourceLocationName
      properties:
        AccessConfiguration:
          allOf:
            - $ref: "#/components/schemas/AccessConfiguration"
            - description: The access configuration for the source location.
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN of the SourceLocation.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the source location was created.
        DefaultSegmentDeliveryConfiguration:
          allOf:
            - $ref: "#/components/schemas/DefaultSegmentDeliveryConfiguration"
            - description: The default segment delivery configuration.
        HttpConfiguration:
          allOf:
            - $ref: "#/components/schemas/HttpConfiguration"
            - description: The HTTP configuration for the source location.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the source location was last modified.
        SegmentDeliveryConfigurations:
          allOf:
            - $ref: "#/components/schemas/__listOfSegmentDeliveryConfiguration"
            - description: The segment delivery configurations for the source location.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags assigned to the source location. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
      description: A source location is a container for sources. For more information about source locations, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html">Working with source locations</a> in the <i>MediaTailor User Guide</i>.
    StartChannelRequest:
      type: object
      title: StartChannelRequest
      properties: {}
    StopChannelRequest:
      type: object
      title: StopChannelRequest
      properties: {}
    TagResourceRequest:
      type: object
      required:
        - Tags
      title: TagResourceRequest
      properties:
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags to assign to the resource. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
    UntagResourceRequest:
      type: object
      title: UntagResourceRequest
      properties: {}
    UpdateChannelRequest:
      type: object
      required:
        - Outputs
      title: UpdateChannelRequest
      properties:
        FillerSlate:
          allOf:
            - $ref: "#/components/schemas/SlateSource"
            - description: The slate used to fill gaps between programs in the schedule. You must configure filler slate if your channel uses the <code>LINEAR</code> <code>PlaybackMode</code>. MediaTailor doesn't support filler slate for channels using the <code>LOOP</code> <code>PlaybackMode</code>.
        Outputs:
          allOf:
            - $ref: "#/components/schemas/RequestOutputs"
            - description: The channel's output properties.
    UpdateLiveSourceRequest:
      type: object
      required:
        - HttpPackageConfigurations
      title: UpdateLiveSourceRequest
      properties:
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: A list of HTTP package configurations for the live source on this account.
    UpdateProgramScheduleConfiguration:
      type: object
      properties:
        ClipRange:
          allOf:
            - $ref: "#/components/schemas/ClipRange"
            - description: Program clip range configuration.
        Transition:
          allOf:
            - $ref: "#/components/schemas/UpdateProgramTransition"
            - description: Program transition configuration.
      description: Schedule configuration parameters.
    UpdateProgramRequest:
      type: object
      required:
        - ScheduleConfiguration
      title: UpdateProgramRequest
      properties:
        AdBreaks:
          allOf:
            - $ref: "#/components/schemas/__listOfAdBreak"
            - description: The ad break configuration settings.
        ScheduleConfiguration:
          allOf:
            - $ref: "#/components/schemas/UpdateProgramScheduleConfiguration"
            - description: The schedule configuration settings.
    UpdateSourceLocationRequest:
      type: object
      required:
        - HttpConfiguration
      title: UpdateSourceLocationRequest
      properties:
        AccessConfiguration:
          allOf:
            - $ref: "#/components/schemas/AccessConfiguration"
            - description: Access configuration parameters. Configures the type of authentication used to access content from your source location.
        DefaultSegmentDeliveryConfiguration:
          allOf:
            - $ref: "#/components/schemas/DefaultSegmentDeliveryConfiguration"
            - description: The optional configuration for the host server that serves segments.
        HttpConfiguration:
          allOf:
            - $ref: "#/components/schemas/HttpConfiguration"
            - description: The HTTP configuration for the source location.
        SegmentDeliveryConfigurations:
          allOf:
            - $ref: "#/components/schemas/__listOfSegmentDeliveryConfiguration"
            - description: A list of the segment delivery configurations associated with this resource.
    UpdateVodSourceRequest:
      type: object
      required:
        - HttpPackageConfigurations
      title: UpdateVodSourceRequest
      properties:
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: A list of HTTP package configurations for the VOD source on this account.
    VodSource:
      type: object
      required:
        - Arn
        - HttpPackageConfigurations
        - SourceLocationName
        - VodSourceName
      properties:
        Arn:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The ARN for the VOD source.
        CreationTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the VOD source was created.
        HttpPackageConfigurations:
          allOf:
            - $ref: "#/components/schemas/HttpPackageConfigurations"
            - description: The HTTP package configurations for the VOD source.
        LastModifiedTime:
          allOf:
            - $ref: "#/components/schemas/__timestampUnix"
            - description: The timestamp that indicates when the VOD source was last modified.
        SourceLocationName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the source location that the VOD source is associated with.
        Tags:
          allOf:
            - $ref: "#/components/schemas/__mapOf__string"
            - xml:
                name: tags
              description: The tags assigned to the VOD source. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see <a href="https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html">Tagging AWS Elemental MediaTailor Resources</a>.
        VodSourceName:
          allOf:
            - $ref: "#/components/schemas/__string"
            - description: The name of the VOD source.
      description: VOD source configuration parameters.
security:
  - hmac: []
