openapi: 3.0.1
servers:
  - url: https://presentation.s.xtrf.eu/home-api
info:
  description: |-
    XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href="/home-api/openapi.json">here</a> <br>
      The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://legal.xtrf.eu/2017/products/GeneralTermsAndConditions.pdf
  title: XTRF Home Portal API
  version: "2.0"
  x-logo:
    url: https://api.apis.guru/v2/cache/logo/https_xtrf.eu_wp-content_uploads_2023_01_cropped-XTRF-Favicon--180x180.webp
  x-origin:
    - format: openapi
      url: https://presentation.s.xtrf.eu/home-api/openapi.json
      version: "3.0"
  x-providerName: xtrf.eu
security:
  - X-AUTH-ACCESS-TOKEN: []
  - X-AUTH-ACCESS-TOKEN: []
  - X-AUTH-ACCESS-TOKEN: []
  - X-AUTH-ACCESS-TOKEN: []
  - X-AUTH-ACCESS-TOKEN: []
  - X-AUTH-ACCESS-TOKEN: []
  - X-AUTH-ACCESS-TOKEN: []
  - X-AUTH-ACCESS-TOKEN: []
  - X-AUTH-ACCESS-TOKEN: []
  - X-AUTH-ACCESS-TOKEN: []
  - X-AUTH-ACCESS-TOKEN: []
tags:
  - description: To change the description use /examples/TagsDescriptions.json
    name: Browser
  - description: To change the description use /examples/TagsDescriptions.json
    name: Client Invoices
  - description: To change the description use /examples/TagsDescriptions.json
    name: Clients
  - description: To change the description use /examples/TagsDescriptions.json
    name: Dictionaries
  - description: To change the description use /examples/TagsDescriptions.json
    name: Currency exchange rates
  - description: To change the description use /examples/TagsDescriptions.json
    name: Files
  - description: To change the description use /examples/TagsDescriptions.json
    name: License
  - description: To change the description use /examples/TagsDescriptions.json
    name: Macros
  - description: To change the description use /examples/TagsDescriptions.json
    name: Vendor Invoices
  - description: To change the description use /examples/TagsDescriptions.json
    name: Vendors
  - description: To change the description use /examples/TagsDescriptions.json
    name: Reports
  - description: To change the description use /examples/TagsDescriptions.json
    name: Subscription
  - description: To change the description use /examples/TagsDescriptions.json
    name: Users
  - description: To change the description use /examples/TagsDescriptions.json
    name: Jobs (Classic)
  - description: To change the description use /examples/TagsDescriptions.json
    name: Projects (Classic)
  - description: To change the description use /examples/TagsDescriptions.json
    name: Quotes (Classic)
  - description: To change the description use /examples/TagsDescriptions.json
    name: Tasks (Classic)
  - description: To change the description use /examples/TagsDescriptions.json
    name: Jobs (Smart)(v2)
  - description: To change the description use /examples/TagsDescriptions.json
    name: Projects (Smart)(v2)
  - description: To change the description use /examples/TagsDescriptions.json
    name: Quotes (Smart)(v2)
paths:
  /accounting/customers/invoices:
    get:
      description: Lists all client invoices in all statuses (including not ready and drafts) that have been updated since a specific date.
      operationId: getAll
      parameters:
        - description: only client invoices modified since this timestamp
          in: query
          name: updatedSince
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getAll.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/CustomerInvoiceDTO"
                type: array
          description: client invoices
      summary: Lists all client invoices in all statuses (including not ready and drafts) that have been updated since a specific date.
      tags:
        - Client Invoices
    post:
      description: Creates a new invoice from tasks. Tasks are grouped by client and currency, therefore multiple invoices can be created.If any of the tasks cannot be invoiced (ie. it is already invoiced, not invoiceable, not associated with a project) then an error is reported.
      operationId: create_1
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/customers/invoices/createMultipleFromTasks.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomerInvoiceCreateDTO"
        description: Created new invoice.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/createMultipleFromTasks.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomerInvoiceCreateResultDTO"
          description: Success
      summary: Creates a new invoice.
      tags:
        - Client Invoices
  /accounting/customers/invoices/documents:
    post:
      description: Generates client invoices' documents.
      operationId: downloadDocuments
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/customers/invoices/downloadDocuments.json#requestBody
            schema:
              $ref: "#/components/schemas/DownloadDocumentsRequestDTO"
        description: Generated client invoices documents.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/downloadDocuments.json#responseBody
              schema:
                $ref: "#/components/schemas/UrlResultDTO"
          description: Success
      summary: Generates client invoices' documents.
      tags:
        - Client Invoices
  /accounting/customers/invoices/ids:
    get:
      description: Returns client invoices' internal identifiers.
      operationId: getAllIds
      parameters:
        - description: only client invoices modified since this timestamp
          in: query
          name: updatedSince
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: client invoices' internal identifiers
      summary: Returns client invoices' internal identifiers.
      tags:
        - Client Invoices
  /accounting/customers/invoices/sendReminders:
    post:
      description: Sends reminders. Returns number of sent e-mails.
      operationId: sendReminders
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/customers/invoices/sendReminders.json#requestBody
            schema:
              $ref: "#/components/schemas/SendRemindersRequestDTO"
        description: Number of sent e-mails.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/sendReminders.json#responseBody
              schema:
                $ref: "#/components/schemas/SendRemindersResponseDTO"
          description: Success
      summary: Sends reminders. Returns number of sent e-mails.
      tags:
        - Client Invoices
  "/accounting/customers/invoices/{invoiceId}":
    delete:
      description: Removes a client invoice.
      operationId: delete_1
      parameters:
        - description: client invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Removes a client invoice.
      tags:
        - Client Invoices
    get:
      description: Returns client invoice details.
      operationId: getById
      parameters:
        - description: client invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
        - description: list of adittional fields which should be embedded in the response (ie. tasks)
          in: query
          name: embed
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomerInvoiceDTO"
          description: Success
      summary: Returns client invoice details.
      tags:
        - Client Invoices
  "/accounting/customers/invoices/{invoiceId}/dates":
    get:
      description: Returns dates of a given client invoice.
      operationId: getDates
      parameters:
        - description: client invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getDates.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomerInvoiceDatesDTO"
          description: Success
      summary: Returns dates of a given client invoice.
      tags:
        - Client Invoices
  "/accounting/customers/invoices/{invoiceId}/document":
    get:
      description: Generates client invoice document (PDF).
      operationId: getDocument
      parameters:
        - description: client invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getDocument.json#responseBody
              schema:
                $ref: "#/components/schemas/UrlResultDTO"
          description: Success
      summary: Generates client invoice document (PDF).
      tags:
        - Client Invoices
  "/accounting/customers/invoices/{invoiceId}/duplicate":
    post:
      description: Duplicate client invoice.
      operationId: duplicate
      parameters:
        - description: client invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/duplicate.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomerInvoiceDTO"
          description: Success
      summary: Duplicate client invoice.
      tags:
        - Client Invoices
  "/accounting/customers/invoices/{invoiceId}/duplicate/proForma":
    post:
      description: Duplicate client invoice as pro forma.
      operationId: duplicateAsProForma
      parameters:
        - description: client invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/duplicateAsProForma.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomerInvoiceDTO"
          description: Success
      summary: Duplicate client invoice as pro forma.
      tags:
        - Client Invoices
  "/accounting/customers/invoices/{invoiceId}/paymentTerms":
    get:
      description: Returns payment terms of a given client invoice.
      operationId: getPaymentTerms
      parameters:
        - description: client invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getPaymentTerms.json#responseBody
              schema:
                $ref: "#/components/schemas/PaymentTermsDTO"
          description: Success
      summary: Returns payment terms of a given client invoice.
      tags:
        - Client Invoices
  "/accounting/customers/invoices/{invoiceId}/payments":
    get:
      description: Returns all payments for the client invoice.
      operationId: getPayments
      parameters:
        - description: client invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/customers/invoices/getPayments.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/PaymentDTO"
                type: array
          description: client invoice's payments
      summary: Returns all payments for the client invoice.
      tags:
        - Client Invoices
    post:
      description: Adds a new payment to the client invoice. The invoice payment status (Not Paid, Partially Paid, Fully Paid) is automatically recalculated.
      operationId: createPayment
      parameters:
        - description: client invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/customers/invoices/createPayment.json#requestBody
            schema:
              $ref: "#/components/schemas/PaymentDTO"
        description: New payment.
        required: true
      responses:
        "204":
          description: Success
      summary: Adds a new payment to the client invoice. The invoice payment status (Not Paid, Partially Paid, Fully Paid) is automatically recalculated.
      tags:
        - Client Invoices
  "/accounting/customers/invoices/{invoiceId}/sendReminder":
    post:
      description: Sends reminder.
      operationId: sendReminder
      parameters:
        - description: client invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Sends reminder.
      tags:
        - Client Invoices
  "/accounting/customers/payments/{paymentId}":
    delete:
      description: Removes a customer payment.
      operationId: delete_2
      parameters:
        - description: customer payment's internal identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Removes a customer payment.
      tags:
        - Client Invoices
  /accounting/providers/invoices:
    get:
      description: Lists all vendor invoices in all statuses (including not ready and drafts) that have been updated since a specific date.
      operationId: getAll_2
      parameters:
        - description: only vendor invoices modified since this timestamp
          in: query
          name: updatedSince
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/getAll.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/ProviderInvoiceDTO"
                type: array
          description: vendor invoices
      summary: Lists all vendor invoices in all statuses (including not ready and drafts) that have been updated since a specific date.
      tags:
        - Vendor Invoices
    post:
      description: Creates a new invoice from jobs. Jobs are grouped by provider and currency, therefore multiple invoices can be created.If any of the jobs cannot be invoiced (ie. it is already invoiced) then an error is reported.
      operationId: create_4
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/providers/invoices/createSingleFromJobs.json#requestBody
            schema:
              $ref: "#/components/schemas/ProviderInvoiceCreateDTO"
        description: Created new invoice.
        required: true
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/createSingleFromJobs.json#responseBody
              schema:
                $ref: "#/components/schemas/ProviderInvoiceCreateResultDTO"
          description: Success
      summary: Creates a new invoice.
      tags:
        - Vendor Invoices
  /accounting/providers/invoices/ids:
    get:
      description: Returns vendor invoices' internal identifiers.
      operationId: getAllIds_3
      parameters:
        - description: only vendor invoices modified since this timestamp
          in: query
          name: updatedSince
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: vendor invoices' internal identifiers
      summary: Returns vendor invoices' internal identifiers.
      tags:
        - Vendor Invoices
  "/accounting/providers/invoices/{invoiceId}":
    delete:
      description: Removes a provider invoice.
      operationId: delete_6
      parameters:
        - description: provider invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Removes a provider invoice.
      tags:
        - Vendor Invoices
    get:
      description: Returns provider invoice details.
      operationId: getById_3
      parameters:
        - description: provider invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/ProviderInvoiceDTO"
          description: Success
      summary: Returns provider invoice details.
      tags:
        - Vendor Invoices
  "/accounting/providers/invoices/{invoiceId}/document":
    get:
      description: Generates provider invoice document (PDF).
      operationId: getDocument_1
      parameters:
        - description: provider invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/getDocument.json#responseBody
              schema:
                $ref: "#/components/schemas/UrlResultDTO"
          description: Success
      summary: Generates provider invoice document (PDF).
      tags:
        - Vendor Invoices
  "/accounting/providers/invoices/{invoiceId}/payments":
    get:
      description: Returns all payments for the vendor invoice.
      operationId: getPayments_1
      parameters:
        - description: vendor invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/accounting/providers/invoices/getPayments.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/PaymentDTO"
                type: array
          description: vendor invoice's payments
      summary: Returns all payments for the vendor invoice.
      tags:
        - Vendor Invoices
    post:
      description: Creates a new payment on the vendor account and assigns the payment to the invoice.
      operationId: createPayment_1
      parameters:
        - description: vendor invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/providers/invoices/createPayment.json#requestBody
            schema:
              $ref: "#/components/schemas/PaymentDTO"
        description: New payment.
        required: true
      responses:
        "204":
          description: Success
      summary: Creates a new payment on the vendor account and assigns the payment to the invoice.
      tags:
        - Vendor Invoices
  "/accounting/providers/invoices/{invoiceId}/send":
    post:
      description: Sends a provider invoice.
      operationId: send
      parameters:
        - description: provider invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Sends a provider invoice.
      tags:
        - Vendor Invoices
  "/accounting/providers/invoices/{invoiceId}/status":
    post:
      description: Changes invoice status to given status.
      operationId: setStatus
      parameters:
        - description: provider invoice's internal identifier
          in: path
          name: invoiceId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/accounting/providers/invoices/setStatus.json#requestBody
            schema:
              $ref: "#/components/schemas/StatusRequestDTO"
        description: Changed invoice status to given status.
        required: true
      responses:
        "204":
          description: Success
      summary: Changes invoice status to given status.
      tags:
        - Vendor Invoices
  "/accounting/providers/payments/{paymentId}":
    delete:
      description: Removes a provider payment.
      operationId: delete_7
      parameters:
        - description: provider payment's internal identifier
          in: path
          name: paymentId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Removes a provider payment.
      tags:
        - Vendor Invoices
  /browser:
    get:
      description: Searches for data (ie. customer, task, etc) and returns it in a tabular form.
      operationId: browseJSON
      parameters:
        - description: view's identifier
          in: query
          name: viewId
          schema:
            format: int64
            type: integer
        - in: query
          name: page
          schema:
            default: 0
            format: int32
            type: integer
        - in: query
          name: additionalOrder
          schema:
            type: string
        - in: query
          name: useDeferredColumns
          schema:
            type: string
        - description: overrides view's default rows limit, supported values 10 to 1000
          in: query
          name: maxRows
          schema:
            default: 0
            format: int32
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/browseProjects.json#responseBody
              schema:
                type: object
          description: Success
      summary: Searches for data (ie. customer, task, etc) and returns it in a tabular form.
      tags:
        - Browser
  /browser/csv:
    get:
      description: Searches for data (ie. customer, task, etc) and returns it in a CSV form.
      operationId: browseCSV
      parameters:
        - description: view's identifier
          in: query
          name: viewId
          schema:
            format: int64
            type: integer
        - description: csv field separator
          in: query
          name: separator
          schema:
            type: string
        - description: secondary csv field separator
          in: query
          name: secondarySeparator
          schema:
            type: string
        - in: query
          name: additionalOrder
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/exportToCSV.json#responseBody
              schema:
                type: object
          description: Success
      summary: Searches for data (ie. customer, task, etc) and returns it in a CSV form.
      tags:
        - Browser
  "/browser/views/details/for/{className}":
    get:
      description: Returns current view's detailed information, suitable for browser.
      operationId: getCurrentViewDetails
      parameters:
        - description: views' class name
          in: path
          name: className
          required: true
          schema:
            type: string
        - description: place name (denotes specific place in system with the table)
          in: query
          name: placeName
          schema:
            default: default
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getCurrentDetails.json#responseBody
              schema:
                $ref: "#/components/schemas/ViewDetailsDTO"
          description: Success
      summary: Returns current view's detailed information, suitable for browser.
      tags:
        - Browser
  "/browser/views/details/for/{className}/{viewId}":
    get:
      description: Returns view's detailed information, suitable for browser.
      operationId: getViewDetails
      parameters:
        - description: views' class name
          in: path
          name: className
          required: true
          schema:
            type: string
        - description: place name (denotes specific place in system with the table)
          in: query
          name: placeName
          schema:
            default: default
            type: string
        - in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getDetails.json#responseBody
              schema:
                $ref: "#/components/schemas/ViewDetailsDTO"
          description: Success
      summary: Returns view's detailed information, suitable for browser.
      tags:
        - Browser
    post:
      description: Selects given view as current and returns its detailed information, suitable for browser.
      operationId: selectViewAndGetItsDetails
      parameters:
        - description: views' class name
          in: path
          name: className
          required: true
          schema:
            type: string
        - in: query
          name: place name (denotes specific place in system with the table)
          schema:
            default: default
            type: string
        - in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/selectViewAndGetItsDetails.json#responseBody
              schema:
                $ref: "#/components/schemas/ViewDetailsDTO"
          description: Success
      summary: Selects given view as current and returns its detailed information, suitable for browser.
      tags:
        - Browser
  "/browser/views/for/{className}":
    get:
      description: Returns views' brief.
      operationId: getViewsBrief
      parameters:
        - description: views' class name
          in: path
          name: className
          required: true
          schema:
            type: string
        - description: place name (denotes specific place in system with the table)
          in: query
          name: placeName
          schema:
            default: default
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getViewsBrief.json#responseBody
              schema:
                $ref: "#/components/schemas/ViewsBriefDTO"
          description: Success
      summary: Returns views' brief.
      tags:
        - Browser
    post:
      description: Creates view for given class.
      operationId: create
      parameters:
        - description: view's class name
          in: path
          name: className
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/ViewDTO"
        description: Created view for given class.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/create.json#responseBody
              schema:
                $ref: "#/components/schemas/ViewWithIdDTO"
          description: Success
      summary: Creates view for given class.
      tags:
        - Browser
  "/browser/views/{viewId}":
    delete:
      description: Removes a view. No content is returned upon success (204).
      operationId: delete
      parameters:
        - description: view's internal identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Removes a view.
      tags:
        - Browser
    get:
      description: Returns all view's information (ie. name, columns, filters, etc).
      operationId: get
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/get.json#responseBody
              schema:
                $ref: "#/components/schemas/ViewDTO"
          description: Success
      summary: Returns all view's information.
      tags:
        - Browser
    put:
      description: Updates all view's information (ie. name, columns, filters, etc).
      operationId: update
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/ViewDTO"
        description: Updated all view's information.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/update.json#responseBody
              schema:
                $ref: "#/components/schemas/ViewDTO"
          description: Success
      summary: Updates all view's information.
      tags:
        - Browser
  "/browser/views/{viewId}/columns":
    get:
      description: Returns columns defined in view.
      operationId: getColumns
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getColumns.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/ColumnDTO"
                type: array
          description: Success
      summary: Returns columns defined in view.
      tags:
        - Browser
    put:
      description: Updates columns in view.
      operationId: updateColumns
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateColumns.json#requestBody
            schema:
              items:
                $ref: "#/components/schemas/ColumnDTO"
              type: array
        description: Updated columns in view.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateColumns.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/ColumnDTO"
                type: array
          description: Success
      summary: Updates columns in view.
      tags:
        - Browser
  "/browser/views/{viewId}/columns/{columnName}":
    delete:
      description: Deletes a single column from view.
      operationId: deleteColumn
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
        - description: column's name
          in: path
          name: columnName
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/deleteColumn.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/ColumnDTO"
                type: array
          description: Success
      summary: Deletes a single column from view.
      tags:
        - Browser
  "/browser/views/{viewId}/columns/{columnName}/settings":
    get:
      description: Returns column's specific settings. For example when column describes money amount we can decide whether it should display currency or not.
      operationId: getColumnSettings
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
        - description: column's name
          in: path
          name: columnName
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getColumnSettings.json#responseBody
              schema:
                type: object
          description: Success
      summary: Returns column's specific settings.
      tags:
        - Browser
    put:
      description: Updates column's specific settings. For example when column describes money amount we can decide whether it should display currency or not.
      operationId: updateColumnSettings
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
        - description: column's name
          in: path
          name: columnName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateColumnSettings.json#requestBody
            schema:
              type: object
        description: Updated column's specific settings.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateColumnSettings.json#responseBody
              schema:
                type: object
          description: Success
      summary: Updates column's specific settings.
      tags:
        - Browser
  "/browser/views/{viewId}/filter":
    get:
      description: Returns view's filter.
      operationId: getFilter
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/filter/getTextProperty.json#responseBody
              schema:
                $ref: "#/components/schemas/FilterDTO"
          description: Success
      summary: Returns view's filter.
      tags:
        - Browser
    put:
      description: Updates view's filter.
      operationId: updateFilter
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateFilter.json#requestBody
            schema:
              items:
                $ref: "#/components/schemas/FilterPropertyDTO"
              type: array
        description: Updated view's filter.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateFilter.json#responseBody
              schema:
                $ref: "#/components/schemas/FilterDTO"
          description: Success
      summary: Updates view's filter.
      tags:
        - Browser
  "/browser/views/{viewId}/filter/{filterProperty}":
    put:
      description: Updates view's filter property.
      operationId: updateFilterProperty
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
        - description: view's filter property name
          in: path
          name: filterProperty
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateFilterProperty.json#requestBody
            schema:
              $ref: "#/components/schemas/FilterPropertyDTO"
        description: Updated view's filter property.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateFilterProperty.json#responseBody
              schema:
                type: object
          description: Success
      summary: Updates view's filter property.
      tags:
        - Browser
  "/browser/views/{viewId}/order":
    get:
      description: Returns view's order settings.
      operationId: getOrder
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getOrder.json#responseBody
              schema:
                $ref: "#/components/schemas/OrderDTO"
          description: Success
      summary: Returns view's order settings.
      tags:
        - Browser
    put:
      description: Updates view's order settings.
      operationId: updateOrder
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateOrder.json#requestBody
            schema:
              $ref: "#/components/schemas/OrderDTO"
        description: Updated view's order settings.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateOrder.json#responseBody
              schema:
                $ref: "#/components/schemas/OrderDTO"
          description: Success
      summary: Updates view's order settings.
      tags:
        - Browser
  "/browser/views/{viewId}/permissions":
    get:
      description: Returns view's permissions.
      operationId: getPermissions
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getPermissions.json#responseBody
              schema:
                $ref: "#/components/schemas/PermissionsDTO"
          description: Success
      summary: Returns view's permissions.
      tags:
        - Browser
    put:
      description: Updates view's permissions.
      operationId: updatePermissions
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updatePermissions.json#requestBody
            schema:
              $ref: "#/components/schemas/PermissionsDTO"
        description: Updated view's permissions.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updatePermissions.json#responseBody
              schema:
                $ref: "#/components/schemas/PermissionsDTO"
          description: Success
      summary: Updates view's permissions.
      tags:
        - Browser
  "/browser/views/{viewId}/settings":
    get:
      description: Returns view's settings (ie. name).
      operationId: getSettings
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getSettings.json#responseBody
              schema:
                $ref: "#/components/schemas/SettingsDTO"
          description: Success
      summary: Returns view's settings.
      tags:
        - Browser
    put:
      description: Updates view's settings.
      operationId: updateSettings
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateSettings.json#requestBody
            schema:
              $ref: "#/components/schemas/SettingsDTO"
        description: Updated view's settings.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateSettings.json#responseBody
              schema:
                $ref: "#/components/schemas/SettingsDTO"
          description: Success
      summary: Updates view's settings.
      tags:
        - Browser
  "/browser/views/{viewId}/settings/local":
    get:
      description: Returns view's local settings (for current user).
      operationId: getLocalSettings
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/getLocalSettings.json#responseBody
              schema:
                $ref: "#/components/schemas/LocalSettingsDTO"
          description: Success
      summary: Returns view's local settings (for current user).
      tags:
        - Browser
    put:
      description: Updates view's local settings (for current user).
      operationId: updateLocalSettings
      parameters:
        - description: view's identifier
          in: path
          name: viewId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/browsers/views/updateLocalSettings.json#requestBody
            schema:
              $ref: "#/components/schemas/LocalSettingsDTO"
        description: Updated view's local settings (for current user).
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/browsers/views/updateLocalSettings.json#responseBody
              schema:
                $ref: "#/components/schemas/LocalSettingsDTO"
          description: Success
      summary: Updates view's local settings (for current user).
      tags:
        - Browser
  /customers:
    get:
      description: Returns list of simple clients representations
      operationId: getAllNamesWithIds
      parameters:
        - description: only clients modified since this timestamp
          in: query
          name: updatedSince
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getAllNamesWithIds.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/EntityWithNameDTO"
                type: array
          description: Success
      summary: Returns list of simple clients representations
      tags:
        - Clients
    post:
      description: |
        Creates a new client. All available fields are presented in PUT request.<p>
          Required fields:
          <ul>
            <li>name</li>
            <li>fullName</li>
            <li>contact -> emails -> primary</li>
          </ul>
        </p>
      operationId: create_3
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/create.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomerDTO"
        description: Created user object
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/create.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomerDTO"
          description: Success
      summary: Creates a new client.
      tags:
        - Clients
  /customers/ids:
    get:
      description: Returns clients' internal identifiers.
      operationId: getAllIds_2
      parameters:
        - description: only clients modified since this timestamp
          in: query
          name: updatedSince
          schema:
            format: int64
            type: integer
        - description: exact name of client
          in: query
          name: nameEquals
          schema:
            type: string
        - description: exact email of client
          in: query
          name: emailEquals
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns clients' internal identifiers.
      tags:
        - Clients
  /customers/persons:
    post:
      description: Creates a new person. Required fields are presented in the example. Other fields (from PUT) may also be specified here.
      operationId: create_2
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/persons/create.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomerPersonDTO"
        description: Brand new person.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/create.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomerPersonDTO"
          description: Success
      summary: Creates a new person.
      tags:
        - Clients
  /customers/persons/accessToken:
    post:
      description: Generates a single use sign-in token for the customer person found for given login or e-mail. Returns 'url' and 'token' which allows to sign-in to customer portal as this person. Token is valid for two minutes and can be used only once. To sign-in to customer portal you should post 'token' provided as the 'accessToken' form param to the 'url' using POST method.Detailed description is available in the Customer API <a href="/api-doc/customer-api/authentication">authentication</a>.
      operationId: generateSingleUseSignInToken
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/persons/generateSingleUseSignInToken.json#requestBody
            schema:
              $ref: "#/components/schemas/AccessTokenRequestDTO"
        description: Generated sign-in token.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/generateSingleUseSignInToken.json#responseBody
              schema:
                $ref: "#/components/schemas/AccessTokenDTO"
          description: Success
      summary: Generates a single use sign-in token.
      tags:
        - Clients
  /customers/persons/ids:
    get:
      description: Returns persons' internal identifiers.
      operationId: getAllIds_1
      parameters:
        - description: only persons modified since this timestamp
          in: query
          name: updatedSince
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns persons' internal identifiers.
      tags:
        - Clients
  "/customers/persons/{personId}":
    delete:
      description: Removes a person.
      operationId: delete_3
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Removes a person.
      tags:
        - Clients
    get:
      description: Returns person details.
      operationId: getById_1
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomerPersonDTO"
          description: Success
      summary: Returns person details.
      tags:
        - Clients
    put:
      description: Only specified fields will be changed. One may not specify embeddable fields here - use separate API calls for updating them.
      operationId: update_1
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/persons/update.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomerPersonDTO"
        description: Updated existing person.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/update.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomerPersonDTO"
          description: Success
      summary: Updates an existing person.
      tags:
        - Clients
  "/customers/persons/{personId}/contact":
    get:
      description: Returns contact of a given person.
      operationId: getContact
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/getContact.json#responseBody
              schema:
                $ref: "#/components/schemas/PersonContactDTO"
          description: Success
      summary: Returns contact of a given person.
      tags:
        - Clients
    put:
      description: Updates contact of a given person. Sets that this person uses specific address and contact (not the one from customer).
      operationId: updateContact
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/persons/updateContact.json#requestBody
            schema:
              $ref: "#/components/schemas/PersonContactDTO"
        description: Updated contact of a given person.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/updateContact.json#responseBody
              schema:
                $ref: "#/components/schemas/PersonContactDTO"
          description: Success
      summary: Updates contact of a given person.
      tags:
        - Clients
  "/customers/persons/{personId}/customFields":
    get:
      description: Returns custom fields of a given person.
      operationId: getCustomFields
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/getCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Returns custom fields of a given person.
      tags:
        - Clients
    put:
      description: Updates custom fields of a given person.
      operationId: updateCustomFields
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/persons/updateCustomFields.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomFieldsDTO"
        description: Updated custom fields of a given person.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/persons/updateCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Updates custom fields of a given person.
      tags:
        - Clients
  "/customers/priceLists/{priceListId}":
    delete:
      description: Removes a customer price list.
      operationId: delete_4
      parameters:
        - description: customer price list's internal identifier
          in: path
          name: priceListId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Removes a customer price list.
      tags:
        - Clients
  "/customers/{customerId}":
    delete:
      description: Removes a client.
      operationId: delete_5
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Removes a client.
      tags:
        - Clients
    get:
      description: Returns client details.
      operationId: getById_2
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
        - description: "list of additional fields which should be embedded in the response (available options: persons)"
          in: query
          name: embed
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomerDTO"
          description: Success
      summary: Returns client details.
      tags:
        - Clients
    put:
      description: Only specified fields will be changed (id is required). One may not specify embeddable fields here - use separate API calls for updating them.
      operationId: update_2
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/update.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomerDTO"
        description: Updated client
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/update.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomerDTO"
          description: Success
      summary: Updates an existing client.
      tags:
        - Clients
  "/customers/{customerId}/address":
    get:
      description: Returns address of a given client.
      operationId: getAddress
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/address/getAddress.json#responseBody
              schema:
                $ref: "#/components/schemas/AddressDTO"
          description: Success
      summary: Returns address of a given client.
      tags:
        - Clients
    put:
      description: Updates address of a given client.
      operationId: updateAddress
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/address/updateAddress.json#requestBody
            schema:
              $ref: "#/components/schemas/AddressDTO"
        description: Updated address of a given client.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/address/updateAddress.json#responseBody
              schema:
                $ref: "#/components/schemas/AddressDTO"
          description: Success
      summary: Updates address of a given client.
      tags:
        - Clients
  "/customers/{customerId}/categories":
    get:
      description: Returns categories of a given client.
      operationId: getCategories
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getCategories.json#responseBody
              schema:
                $ref: "#/components/schemas/CategoriesDTO"
          description: Success
      summary: Returns categories of a given client.
      tags:
        - Clients
    put:
      description: Updates categories of a given client.
      operationId: updateCategories
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/updateCategories.json#requestBody
            schema:
              $ref: "#/components/schemas/CategoriesDTO"
        description: Updated categories of a given client.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/updateCategories.json#responseBody
              schema:
                $ref: "#/components/schemas/CategoriesDTO"
          description: Success
      summary: Updates categories of a given client.
      tags:
        - Clients
  "/customers/{customerId}/contact":
    get:
      description: Returns contact of a given client.
      operationId: getContact_1
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getContact.json#responseBody
              schema:
                $ref: "#/components/schemas/ContactDTO"
          description: Success
      summary: Returns contact of a given client.
      tags:
        - Clients
    put:
      description: Updates contact of a given client.
      operationId: updateContact_1
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/updateContact.json#requestBody
            schema:
              $ref: "#/components/schemas/ContactDTO"
        description: Updated contact of a given client.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/updateContact.json#responseBody
              schema:
                $ref: "#/components/schemas/ContactDTO"
          description: Success
      summary: Updates contact of a given client.
      tags:
        - Clients
  "/customers/{customerId}/correspondenceAddress":
    get:
      description: Returns correspondence address of a given client.
      operationId: getCorrespondenceAddress
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/address/getCorrespondenceAddress.json#responseBody
              schema:
                $ref: "#/components/schemas/AddressDTO"
          description: Success
      summary: Returns correspondence address of a given client.
      tags:
        - Clients
    put:
      description: Updates correspondence address of a given client.
      operationId: updateCorrespondenceAddress
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/address/updateCorrespondenceAddress.json#requestBody
            schema:
              $ref: "#/components/schemas/AddressDTO"
        description: Updated address of a given client.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/address/updateCorrespondenceAddress.json#responseBody
              schema:
                $ref: "#/components/schemas/AddressDTO"
          description: Success
      summary: Updates correspondence address of a given client.
      tags:
        - Clients
  "/customers/{customerId}/customFields":
    get:
      description: Returns custom fields of a given client.
      operationId: getCustomFields_1
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Returns custom fields of a given client.
      tags:
        - Clients
    put:
      description: Updates custom fields of a given client.
      operationId: updateCustomFields_1
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/updateCustomFields.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomFieldsDTO"
        description: Updated custom fields of a given client.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/updateCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Updates custom fields of a given client.
      tags:
        - Clients
  "/customers/{customerId}/customFields/{customFieldKey}":
    get:
      description: Returns custom field of a given client.
      operationId: getCustomField
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
        - description: custom field's key
          in: path
          name: customFieldKey
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getCustomField.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldDTO"
          description: Success
      summary: Returns custom field of a given client.
      tags:
        - Clients
    put:
      description: Updates given custom field of a given client.
      operationId: updateCustomField
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
        - description: custom field's key
          in: path
          name: customFieldKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/updateCustomField.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomFieldDTO"
        description: Updated custom field of a given client.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/updateCustomField.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldDTO"
          description: Success
      summary: Updates given custom field of a given client.
      tags:
        - Clients
  "/customers/{customerId}/industries":
    get:
      description: Returns industries of a given client.
      operationId: getIndustries
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/getIndustries.json#responseBody
              schema:
                $ref: "#/components/schemas/IndustriesDTO"
          description: Success
      summary: Returns industries of a given client.
      tags:
        - Clients
    put:
      description: Updates industries of a given client.
      operationId: updateIndustries
      parameters:
        - description: client's internal identifier
          in: path
          name: customerId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/customers/updateIndustries.json#requestBody
            schema:
              $ref: "#/components/schemas/CategoriesDTO"
        description: Updated industries of a given client.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/customers/updateIndustries.json#responseBody
              schema:
                $ref: "#/components/schemas/IndustriesDTO"
          description: Success
      summary: Updates industries of a given client.
      tags:
        - Clients
  /dictionaries/active:
    get:
      description: Returns active dictionary entities for all types.
      operationId: getActive
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/map-active.json#responseBody
              schema:
                $ref: "#/components/schemas/ManyValuesPerTypeDTO"
          description: Success
      summary: Returns active dictionary entities for all types.
      tags:
        - Dictionaries
  /dictionaries/all:
    get:
      description: |-
        <div>
          <p>
            XTRF holds many user-defined dictionaries (ie. countries).
            Each dictionary contains a set of values (ie. Poland or Germany).
            A default value may be defined for a dictionary.
          </p>
          <p>
            Dictionary values are identified using internal identifier which is constant and unique among other values from the same dictionary.
            Please note that name used in dictionary values is presented in the locale of the current identity.
            The same dictionary value can have different names, ie. "Poland" for one user, "Polska" for another one.
          </p>
          <p>
            Possible dictionary types with short explanation:
            <ul>
              <li>calculationUnit - predefined values of how to calculate the volume of work into the price</li>
              <li>category - labels to organize data on the platform</li>
              <li>country - list of countries used on the platform</li>
              <li>currency - currencies used in financial operations in the system</li>
              <li>industry - industry sectors which clients specialize in</li>
              <li>jobType - services offered by a company used in customized workflows</li>
              <li>language - list of languages and its values used on the platform</li>
              <li>leadSource - lead/recruitment places where new clients and vendors may be found</li>
              <li>personDepartment - departments in which contact person may be assigned to</li>
              <li>personPosition - positions in which user may be associated with</li>
              <li>province - states and provinces used in various documents on the platform</li>
              <li>specialization - list of specific qualifications required to perform a specific job in the task, for ex. medical, military</li>
            </ul>
          </p>
        </div>
      operationId: getAll_1
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/map-all.json#responseBody
              schema:
                $ref: "#/components/schemas/ManyValuesPerTypeDTO"
          description: Success
      summary: Returns dictionary entities for all types. Both active and not active ones.
      tags:
        - Dictionaries
  "/dictionaries/currency/{isoCode}/exchangeRate":
    get:
      description: Returns currency exchange rates.
      operationId: getByIsoCode
      parameters:
        - description: iso code, https://www.xe.com/iso4217.php
          in: path
          name: isoCode
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/currency/getByIsoCode.json#responseBody
              schema:
                $ref: "#/components/schemas/CurrencyHistoryDTO"
          description: Success
      summary: Returns currency exchange rates.
      tags:
        - Currency exchange rates
    post:
      description: Adding currency exchange rates via API
      operationId: createExchangeRate
      parameters:
        - description: iso code, https://www.xe.com/iso4217.php
          in: path
          name: isoCode
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/dictionaries/currency/createExchangeRate.json#requestBody
            schema:
              $ref: "#/components/schemas/CurrencyHistoryDTO"
        description: Adding new currency exchange rates
        required: true
      responses:
        "204":
          description: Success
      summary: Adding currency exchange rates.
      tags:
        - Currency exchange rates
  "/dictionaries/{type}/active":
    get:
      description: Returns active values from a given dictionary.
      operationId: getActiveByType
      parameters:
        - description: dictionary type
          in: path
          name: type
          required: true
          schema:
            type: string
        - description: exact name of entity
          in: query
          name: nameEquals
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/currency-active-v1.json#responseBody
              schema:
                $ref: "#/components/schemas/DictionaryEntity"
          description: Success
      summary: Returns active values from a given dictionary.
      tags:
        - Dictionaries
  "/dictionaries/{type}/all":
    get:
      description: Returns all values (both active and not active) from a given dictionary.
      operationId: getAllByType
      parameters:
        - description: dictionary type
          in: path
          name: type
          required: true
          schema:
            type: string
        - description: exact name of entity
          in: query
          name: nameEquals
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/currency-all-v1.json#responseBody
              schema:
                $ref: "#/components/schemas/DictionaryEntity"
          description: Success
      summary: Returns all values (both active and not active) from a given dictionary.
      tags:
        - Dictionaries
  "/dictionaries/{type}/{id}":
    get:
      description: Returns specific value from a given dictionary.
      operationId: getByTypeAndId
      parameters:
        - description: dictionary type
          in: path
          name: type
          required: true
          schema:
            type: string
        - description: dictionary value identifier
          in: path
          name: id
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/dictionaries/currency-v1.json#responseBody
              schema:
                $ref: "#/components/schemas/DictionaryEntity"
          description: Success
      summary: Returns specific value from a given dictionary.
      tags:
        - Dictionaries
  /files:
    post:
      description: |
        When a file is required by an operation (ie. task creation) it must be uploaded previously to the API.
        Uploading a file will result in a file token, which can be used to reference this file in other API calls.
         Each file must be uploaded separately.
         Keep in mind that file token has limited validity (ie. 10 minutes).
         Therefore files must be uploaded just before issuing API call which reference them.
      operationId: uploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/FileToUploadDto"
        description: Uploaded file
        required: true
      responses:
        default:
          content:
            application/json: {}
          description: default response
      summary: Uploads a temporary file (ie. for XML import). Returns token which can be used in other API calls.
      tags:
        - Files
  "/jobs/{jobId}":
    get:
      description: Returns job details by jobId.
      operationId: getJobDetails
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/jobs/getJobDetails.json#responseBody
              schema:
                $ref: "#/components/schemas/JobDto"
          description: Success
      summary: Returns job details by jobId.
      tags:
        - Jobs (Classic)
  "/jobs/{jobId}/dates":
    put:
      description: Updates dates of a given job.
      operationId: updateDates
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/jobs/updateDates.json#requestBody
            schema:
              $ref: "#/components/schemas/JobDatesDto"
        description: New job dates.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates dates of a given job.
      tags:
        - Jobs (Classic)
  "/jobs/{jobId}/files":
    get:
      description: Returns list of input and output files of a job.
      operationId: getJobFiles
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/jobs/getJobFiles.json#responseBody
              schema:
                $ref: "#/components/schemas/JobFilesDTO"
          description: Success
      summary: Returns list of input and output files of a job.
      tags:
        - Jobs (Classic)
  "/jobs/{jobId}/files/output":
    post:
      operationId: assignFileToJobOutput
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/jobs/assignFileToJobOutput.json#requestBody
            schema:
              $ref: "#/components/schemas/TaskFileDTO"
        description: Assigns file to job output files.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8: {}
          description: default response
      tags:
        - Jobs (Classic)
  "/jobs/{jobId}/files/{fileId}":
    get:
      description: Returns file metadata.
      operationId: getJobFiles_1
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: file's internal identifier
          in: path
          name: fileId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/jobs/getJobFileMetadata.json#responseBody
              schema:
                $ref: "#/components/schemas/FileMetadataDTO"
          description: Success
      summary: Returns file metadata.
      tags:
        - Jobs (Classic)
  "/jobs/{jobId}/instructions":
    put:
      description: Updates instructions for a job.
      operationId: updateInstructions
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/jobs/updateInstructionsForJob.json#requestBody
            schema:
              $ref: "#/components/schemas/InstructionsDTO"
        description: Updated instructions for a job.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates instructions for a job.
      tags:
        - Jobs (Classic)
  "/jobs/{jobId}/status":
    put:
      description: "Changes job status if possible (400 Bad Request is returned otherwise). The status has to be specified using one of the following keys:<ul><li>OPEN – available when the job has one of the following statuses: ACCEPTED, CANCELED</li><li>ACCEPTED – available when the job has one of the following statuses: OPEN (Vendor and dates have to be set before calling the operation), STARTED</li><li>STARTED – available when the job has one of the following statuses: ACCEPTED, READY</li><li>READY – available when the job has one of the following statuses: STARTED</li><li>CANCELLED – available when the job has one of the following statuses: OPEN, ACCEPTED, STARTED, OFFERS_SENT</li><li>OFFERS_SENT – not available as a target status for this operation</li></ul>"
      operationId: changeStatus
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/jobs/changeStatus.json#requestBody
            schema:
              $ref: "#/components/schemas/JobStatusDTO"
        description: Changed job status.
        required: true
      responses:
        "204":
          description: Success
      summary: Changes job status if possible (400 Bad Request is returned otherwise).
      tags:
        - Jobs (Classic)
  "/jobs/{jobId}/vendor":
    put:
      description: Assigns vendor to a job in a project.
      operationId: assignVendor
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/jobs/assignVendor.json#requestBody
            schema:
              $ref: "#/components/schemas/AssignVendorDTO"
        description: Assigned vendor to a job in a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Assigns vendor to a job in a project.
      tags:
        - Jobs (Classic)
  /license:
    get:
      description: Returns license content.
      operationId: getLicense
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/license/getLicense.json#responseBody
              schema:
                $ref: "#/components/schemas/GetLicenseResult"
          description: Success
      summary: Returns license content.
      tags:
        - License
  /license/refresh:
    post:
      description: Refreshes license content. This method returns OK immediately and license is refreshed asynchronously. It takes a while (usually a few seconds) for the license to be actually refreshed.
      operationId: refresh
      responses:
        "204":
          description: Success
      summary: Refreshes license content.
      tags:
        - License
  "/macros/{macroId}/run":
    post:
      description: |-
        Runs a specified macro on a specified list of items ("list" variable in the macro code). The list of items can be empty if the macro doesn't use it. Additional custom parameters can be provided to the macro when necessary ("params" variable in the macro code).

         <BR>Note: Macros that support parameters can be also run from GUI (Views in Home Portal),so they should also handle the empty parameters map (e.g. by defining default values when parameters are not provided).
      operationId: run
      parameters:
        - description: macro internal identifier
          in: path
          name: macroId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/macros/runMacroAsynchronously.json#requestBody
            schema:
              $ref: "#/components/schemas/MacroRequestDTO"
        description: Generated client invoices documents.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/macros/runMacroSynchronouslyWithParametersWithoutIds.json#responseBody
              schema:
                $ref: "#/components/schemas/ActionStartedDTO"
          description: Success
      summary: Executes a macro.
      tags:
        - Macros
  /projects:
    post:
      description: Creates a new Classic Project. If the specified service ID refers to Smart Project, 400 Bad Request is returned instead.
      operationId: create_5
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/createProject.json#requestBody
            schema:
              $ref: "#/components/schemas/ClassicProjectCreateDTO"
        description: Created a new Classic Project.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/createProject.json#responseBody
              schema:
                $ref: "#/components/schemas/ProjectDTOv1"
          description: Success
      summary: Creates a new Classic Project.
      tags:
        - Projects (Classic)
  "/projects/files/{fileId}/download":
    get:
      description: Downloads a file.
      operationId: getFileById
      parameters:
        - description: file's internal identifier
          in: path
          name: fileId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            multipart/form-data: {}
          description: Success!
      summary: Downloads a file.
      tags:
        - Projects (Classic)
  /projects/ids:
    get:
      description: Returns projects' internal identifiers.
      operationId: getAllIds_6
      parameters:
        - description: only projects modified since this timestamp
          in: query
          name: updatedSince
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns projects' internal identifiers.
      tags:
        - Projects (Classic)
  "/projects/{projectId}":
    delete:
      description: Removes a project.
      operationId: delete_12
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success
      summary: Removes a project.
      tags:
        - Projects (Classic)
    get:
      description: Returns project details. If the specified project ID refers to Smart Project, 400 Bad Request is returned instead.
      operationId: getById_7
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: "list of additional fields which should be embedded in the response (available options: tasks)"
          in: query
          name: embed
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/ProjectDTOv1"
          description: Success
      summary: Returns project details.
      tags:
        - Projects (Classic)
  "/projects/{projectId}/contacts":
    get:
      description: Returns contacts of a given project.
      operationId: getContacts
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getContacts.json#responseBody
              schema:
                $ref: "#/components/schemas/ContactsDTO"
          description: Success
      summary: Returns contacts of a given project.
      tags:
        - Projects (Classic)
    put:
      description: Updates contacts of a given project.
      operationId: updateContacts
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updateContacts.json#requestBody
            schema:
              $ref: "#/components/schemas/ContactsDTO"
        description: Updated contacts of a given project.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updateContacts.json#responseBody
              schema:
                $ref: "#/components/schemas/ContactsDTO"
          description: Success
      summary: Updates contacts of a given project.
      tags:
        - Projects (Classic)
  "/projects/{projectId}/customFields":
    get:
      description: Returns custom fields of a given project.
      operationId: getCustomFields_5
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Returns custom fields of a given project.
      tags:
        - Projects (Classic)
    put:
      description: Updates custom fields of a given project.
      operationId: updateCustomFields_3
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updateCustomFields.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomFieldsDTO"
        description: Updated custom fields of a given project.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updateCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Updates custom fields of a given project.
      tags:
        - Projects (Classic)
  "/projects/{projectId}/dates":
    get:
      description: Returns dates of a given project.
      operationId: getDates_1
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getDates.json#responseBody
              schema:
                $ref: "#/components/schemas/ProjectDatesDTO"
          description: Success
      summary: Returns dates of a given project.
      tags:
        - Projects (Classic)
    put:
      description: Updates dates of a given project.
      operationId: updateDates_1
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updateDates.json#requestBody
            schema:
              $ref: "#/components/schemas/ProjectDatesDTO"
        description: Updated dates of a given project..
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updateDates.json#responseBody
              schema:
                $ref: "#/components/schemas/ProjectDatesDTO"
          description: Success
      summary: Updates dates of a given project.
      tags:
        - Projects (Classic)
  "/projects/{projectId}/finance":
    get:
      description: Returns finance of a given project.
      operationId: getFinance
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getFinance.json#responseBody
              schema:
                $ref: "#/components/schemas/FinanceDTO"
          description: Success
      summary: Returns finance of a given project.
      tags:
        - Projects (Classic)
  "/projects/{projectId}/finance/payables":
    post:
      description: Adds a payable to a project.
      operationId: createPayable
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/createPayable.json#requestBody
            schema:
              $ref: "#/components/schemas/PayableCreateDTO"
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/createPayable.json#responseBody
              schema:
                $ref: "#/components/schemas/PayableDTO"
          description: Success
      summary: Adds a payable to a project.
      tags:
        - Projects (Classic)
  "/projects/{projectId}/finance/payables/{payableId}":
    delete:
      description: Deletes a payable.
      operationId: deletePayable
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: payable's internal identifier
          in: path
          name: payableId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Deletes a payable.
      tags:
        - Projects (Classic)
    put:
      description: Updates a payable.
      operationId: updatePayable
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: payable's internal identifier
          in: path
          name: payableId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updatePayable.json#requestBody
            schema:
              $ref: "#/components/schemas/PayableDTO"
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updatePayable.json#responseBody
              schema:
                $ref: "#/components/schemas/PayableDTO"
          description: Success
      summary: Updates a payable.
      tags:
        - Projects (Classic)
  "/projects/{projectId}/finance/receivables":
    post:
      description: Adds a receivable to a project.
      operationId: createReceivable
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/createReceivable.json#requestBody
            schema:
              $ref: "#/components/schemas/ReceivableCreateDTO"
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/createReceivable.json#responseBody
              schema:
                $ref: "#/components/schemas/ReceivableDTO"
          description: Success
      summary: Adds a receivable to a project.
      tags:
        - Projects (Classic)
  "/projects/{projectId}/finance/receivables/{receivableId}":
    delete:
      description: Deletes a receivable.
      operationId: deleteReceivable
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: receivable's internal identifier
          in: path
          name: receivableId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Deletes a receivable.
      tags:
        - Projects (Classic)
    put:
      description: Updates a receivable.
      operationId: updateReceivable
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: receivable's internal identifier
          in: path
          name: receivableId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updateReceivable.json#requestBody
            schema:
              $ref: "#/components/schemas/ReceivableDTO"
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updateReceivable.json#responseBody
              schema:
                $ref: "#/components/schemas/ReceivableDTO"
          description: Success
      summary: Updates a receivable.
      tags:
        - Projects (Classic)
  "/projects/{projectId}/instructions":
    get:
      description: Returns instructions of a given project.
      operationId: getInstructions
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/getInstructions.json#responseBody
              schema:
                $ref: "#/components/schemas/InstructionsDTO"
          description: Success
      summary: Returns instructions of a given project.
      tags:
        - Projects (Classic)
    put:
      description: Updates instructions of a given project.
      operationId: updateInstructions_1
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/updateInstructions.json#requestBody
            schema:
              $ref: "#/components/schemas/InstructionsDTO"
        description: Updated instructions of a given project.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/updateInstructions.json#responseBody
              schema:
                $ref: "#/components/schemas/InstructionsDTO"
          description: Success
      summary: Updates instructions of a given project.
      tags:
        - Projects (Classic)
  "/projects/{projectId}/languageCombinations":
    post:
      description: Creates a new language combination for a given project without creating a task.
      operationId: createLanguageCombination
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/createLanguageCombination.json#requestBody
            schema:
              $ref: "#/components/schemas/CommonLanguageCombinationDTO"
        description: Created language combination for a given project without creating a task.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/createLanguageCombination.json#responseBody
              schema:
                $ref: "#/components/schemas/CommonLanguageCombinationDTO"
          description: Success
      summary: Creates a new language combination for a given project without creating a task.
      tags:
        - Projects (Classic)
  "/projects/{projectId}/tasks":
    post:
      description: |
        Creates a new task for a given project.<p>
          Required fields:
          <ul>
            <li>languageCombination</li>
            <li>specializationId</li>
            <li>workflowId</li>
          </ul>
        </p>
      operationId: createTask
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/projects/createTask.json#requestBody
            schema:
              $ref: "#/components/schemas/TaskCreateDTO"
        description: Created new task for a given project.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/projects/createTask.json#responseBody
              schema:
                $ref: "#/components/schemas/TaskDTO"
          description: Success
      summary: Creates a new task for a given project.
      tags:
        - Projects (Classic)
  /providers/ids:
    get:
      description: Returns providers' internal identifiers.
      operationId: getAllIds_5
      parameters:
        - description: only providers modified since this timestamp
          in: query
          name: updatedSince
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns providers' internal identifiers.
      tags:
        - Vendors
  /providers/persons/ids:
    get:
      description: Returns persons' internal identifiers.
      operationId: getAllIds_4
      parameters:
        - description: only persons modified since this timestamp
          in: query
          name: updatedSince
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/persons/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns persons' internal identifiers.
      tags:
        - Vendors
  "/providers/persons/{personId}":
    delete:
      description: Removes a person.
      operationId: delete_8
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8: {}
          description: Success
      summary: Removes a person.
      tags:
        - Vendors
    get:
      description: Returns person details.
      operationId: getById_4
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/persons/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/ProviderPersonDTO"
          description: Success
      summary: Returns person details.
      tags:
        - Vendors
  "/providers/persons/{personId}/contact":
    get:
      description: Returns contact of a given person.
      operationId: getContact_2
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/persons/getContact.json#responseBody
              schema:
                $ref: "#/components/schemas/PersonContactDTO"
          description: Success
      summary: Returns contact of a given person.
      tags:
        - Vendors
  "/providers/persons/{personId}/customFields":
    get:
      description: Returns custom fields of a given person.
      operationId: getCustomFields_2
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/persons/getCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Returns custom fields of a given person.
      tags:
        - Vendors
  "/providers/persons/{personId}/notification/invitation":
    post:
      description: Sends invitation to Vendor Portal.
      operationId: sendInvitations
      parameters:
        - description: person's internal identifier
          in: path
          name: personId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/persons/sendInvitations.json#responseBody
              schema:
                $ref: "#/components/schemas/InvitationStatisticsDTO"
          description: Success
      summary: Sends invitation to Vendor Portal.
      tags:
        - Vendors
  "/providers/priceLists/{priceListId}":
    delete:
      description: Removes a provider price list.
      operationId: delete_9
      parameters:
        - description: provider price list's internal identifier
          in: path
          name: priceListId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Removes a provider price list.
      tags:
        - Vendors
  "/providers/{providerId}":
    delete:
      description: Removes a provider.
      operationId: delete_10
      parameters:
        - description: provider's internal identifier
          in: path
          name: providerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Removes a provider.
      tags:
        - Vendors
    get:
      description: Returns provider details.
      operationId: getById_5
      parameters:
        - description: provider's internal identifier
          in: path
          name: providerId
          required: true
          schema:
            format: int64
            type: integer
        - description: list of adittional fields which should be embedded in the response (ie. persons)
          in: query
          name: embed
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/ProviderDTO"
          description: Success
      summary: Returns provider details.
      tags:
        - Vendors
  "/providers/{providerId}/address":
    get:
      description: Returns address of a given provider.
      operationId: getAddress_1
      parameters:
        - description: provider's internal identifier
          in: path
          name: providerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/address/getAddress.json#responseBody
              schema:
                $ref: "#/components/schemas/AddressDTO"
          description: Success
      summary: Returns address of a given provider.
      tags:
        - Vendors
  "/providers/{providerId}/competencies":
    get:
      description: Returns competencies of a given provider.
      operationId: getCompetencies
      parameters:
        - description: provider's internal identifier
          in: path
          name: providerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/getCompetencies.json#responseBody
              schema:
                $ref: "#/components/schemas/CompetenciesDTO"
          description: Success
      summary: Returns competencies of a given provider.
      tags:
        - Vendors
  "/providers/{providerId}/contact":
    get:
      description: Returns contact of a given provider.
      operationId: getContact_3
      parameters:
        - description: provider's internal identifier
          in: path
          name: providerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/getContact.json#responseBody
              schema:
                $ref: "#/components/schemas/ContactDTO"
          description: Success
      summary: Returns contact of a given provider.
      tags:
        - Vendors
  "/providers/{providerId}/correspondenceAddress":
    get:
      description: Returns correspondence address of a given provider.
      operationId: getCorrespondenceAddress_1
      parameters:
        - description: provider's internal identifier
          in: path
          name: providerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/address/getCorrespondenceAddress.json#responseBody
              schema:
                $ref: "#/components/schemas/AddressDTO"
          description: Success
      summary: Returns correspondence address of a given provider.
      tags:
        - Vendors
  "/providers/{providerId}/customFields":
    get:
      description: Returns custom fields of a given provider.
      operationId: getCustomFields_3
      parameters:
        - description: provider's internal identifier
          in: path
          name: providerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/getCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Returns custom fields of a given provider.
      tags:
        - Vendors
  "/providers/{providerId}/notification/invitation":
    post:
      description: Sends invitations to Vendor Portal.
      operationId: sendInvitations_1
      parameters:
        - description: provider's internal identifier
          in: path
          name: providerId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/providers/sendInvitations.json#responseBody
              schema:
                $ref: "#/components/schemas/InvitationStatisticsDTO"
          description: Success
      summary: Sends invitations to Vendor Portal.
      tags:
        - Vendors
  /quotes/ids:
    get:
      description: Returns quotes' internal identifiers.
      operationId: getAllIds_7
      parameters:
        - description: only quotes modified since this timestamp
          in: query
          name: updatedSince
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getIds.json#responseBody
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: Success
      summary: Returns quotes' internal identifiers.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}":
    delete:
      description: Removes a quote.
      operationId: delete_13
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success
      summary: Removes a quote.
      tags:
        - Quotes (Classic)
    get:
      description: Returns quote details. If the specified quote ID refers to Smart Quote, 400 Bad Request is returned instead.
      operationId: getById_8
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
        - description: list of adittional fields which should be embedded in the response (ie. tasks)
          in: query
          name: embed
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/QuoteDTOv1"
          description: Success
      summary: Returns quote details.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/confirmation/send":
    post:
      description: Sends a quote for customer confirmation. Quote status is changed to SENT and a document is sent to the customer.
      operationId: send_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success
      summary: Sends a quote for customer confirmation.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/customFields":
    get:
      description: Returns custom fields of a given quote.
      operationId: getCustomFields_6
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Returns custom fields of a given quote.
      tags:
        - Quotes (Classic)
    put:
      description: Updates custom fields of a given quote.
      operationId: updateCustomFields_4
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/updateCustomFields.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomFieldsDTO"
        description: Updated custom fields of a given quote.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/updateCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Updates custom fields of a given quote.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/dates":
    get:
      description: Returns dates of a given quote.
      operationId: getDates_2
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getDates.json#responseBody
              schema:
                $ref: "#/components/schemas/QuoteDatesDTO"
          description: Success
      summary: Returns dates of a given quote.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/finance":
    get:
      description: Returns finance of a given quote.
      operationId: getFinance_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getFinance.json#responseBody
              schema:
                $ref: "#/components/schemas/FinanceDTO"
          description: Success
      summary: Returns finance of a given quote.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/finance/payables":
    post:
      description: Adds a payable.
      operationId: createPayable_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/createCATPayable.json#requestBody
            schema:
              $ref: "#/components/schemas/PayableCreateDTO"
        description: Adds a payable.
        required: true
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/createCATPayable.json#responseBody
              schema:
                $ref: "#/components/schemas/PayableDTO"
          description: Success
      summary: Adds a payable.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/finance/payables/{payableId}":
    delete:
      description: Deletes a payable.
      operationId: deletePayable_1
      parameters:
        - description: quoteId's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
        - description: payable's internal identifier
          in: path
          name: payableId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Deletes a payable.
      tags:
        - Quotes (Classic)
    put:
      description: Updates a payable.
      operationId: updatePayable_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
        - description: payable's internal identifier
          in: path
          name: payableId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/updatePayable.json#requestBody
            schema:
              $ref: "#/components/schemas/PayableDTO"
        description: Updates a payable.
        required: true
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/updatePayable.json#responseBody
              schema:
                $ref: "#/components/schemas/PayableDTO"
          description: Success
      summary: Updates a payable.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/finance/receivables":
    post:
      description: Adds a receivable.
      operationId: createReceivable_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/createReceivable.json#requestBody
            schema:
              $ref: "#/components/schemas/ReceivableCreateDTO"
        description: Adds a receivable.
        required: true
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/createReceivable.json#responseBody
              schema:
                $ref: "#/components/schemas/ReceivableDTO"
          description: Success
      summary: Adds a receivable.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/finance/receivables/{receivableId}":
    delete:
      description: Deletes a receivable.
      operationId: deleteReceivable_1
      parameters:
        - description: quoteId's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
        - description: receivable's internal identifier
          in: path
          name: receivableId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Deletes a receivable.
      tags:
        - Quotes (Classic)
    put:
      description: Updates a receivable.
      operationId: updateReceivable_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
        - description: receivable's internal identifier
          in: path
          name: receivableId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/updateReceivable.json#requestBody
            schema:
              $ref: "#/components/schemas/ReceivableDTO"
        description: Updates a receivable.
        required: true
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/updateReceivable.json#responseBody
              schema:
                $ref: "#/components/schemas/ReceivableDTO"
          description: Success
      summary: Updates a receivable.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/instructions":
    get:
      description: Returns instructions of a given quote.
      operationId: getInstructions_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/getInstructions.json#responseBody
              schema:
                $ref: "#/components/schemas/InstructionsDTO"
          description: Success
      summary: Returns instructions of a given quote.
      tags:
        - Quotes (Classic)
    put:
      description: Updates instructions of a given quote.
      operationId: updateInstructions_2
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/updateInstructions.json#requestBody
            schema:
              $ref: "#/components/schemas/InstructionsDTO"
        description: Updated instructions of a given project.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/updateInstructions.json#responseBody
              schema:
                $ref: "#/components/schemas/InstructionsDTO"
          description: Success
      summary: Updates instructions of a given quote.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/languageCombinations":
    post:
      description: Creates a new language combination for a given quote without creating a task.
      operationId: createLanguageCombination_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/createLanguageCombination.json#requestBody
            schema:
              $ref: "#/components/schemas/CommonLanguageCombinationDTO"
        description: Created a new language combination for a given quote without creating a task.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/createLanguageCombination.json#responseBody
              schema:
                $ref: "#/components/schemas/CommonLanguageCombinationDTO"
          description: Success
      summary: Creates a new language combination for a given quote without creating a task.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/start":
    post:
      description: Starts a quote.
      operationId: start
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success
      summary: Starts a quote.
      tags:
        - Quotes (Classic)
  "/quotes/{quoteId}/tasks":
    post:
      description: Creates a new task for a given quote. Required fields are presented in the example.
      operationId: createTask_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/quotes/createTask.json#requestBody
            schema:
              $ref: "#/components/schemas/TaskDTO"
        description: Updated custom fields of a given quote.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/quotes/createTask.json#responseBody
              schema:
                $ref: "#/components/schemas/TaskDTO"
          description: Success
      summary: Creates a new task for a given quote.
      tags:
        - Quotes (Classic)
  /reports/export/xml:
    post:
      description: Exports reports definition to XML.
      operationId: exportToXML
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/reports/exportToXML.json#requestBody
            schema:
              $ref: "#/components/schemas/ExportRequestDTO"
        description: Exported reports definition to XML.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/reports/exportToXML.json#responseBody
              schema:
                $ref: "#/components/schemas/ReportResultDTO"
          description: Success
      summary: Exports reports definition to XML.
      tags:
        - Reports
  /reports/import/xml:
    post:
      description: Imports a report definition from an XML using a file token. To obtain the token, you first need to upload a temporary XML file, as specified in the Files section. Note that the name of the imported report must be unique.
      operationId: importFromXML
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/reports/importFromXML.json#requestBody
            schema:
              $ref: "#/components/schemas/ImportRequestDTO"
        description: Imported reports definition from XML.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/reports/importFromXML.json#responseBody
              schema:
                $ref: "#/components/schemas/ImportResultDTO"
          description: Success
      summary: Imports reports definition from XML.
      tags:
        - Reports
  "/reports/{reportId}":
    delete:
      description: Removes a report.
      operationId: delete_11
      parameters:
        - description: report's internal identifier
          in: path
          name: reportId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Removes a report.
      tags:
        - Reports
  "/reports/{reportId}/duplicate":
    post:
      description: Duplicates a report.
      operationId: duplicate_1
      parameters:
        - description: report's internal identifier
          in: path
          name: reportId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Duplicates a report.
      tags:
        - Reports
  "/reports/{reportId}/preferred":
    put:
      description: Marks report as preferred or not.
      operationId: setPreferred
      parameters:
        - description: report's internal identifier
          in: path
          name: reportId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/PreferredRequestDTO"
        description: Marked report as preferred or not.
        required: true
      responses:
        "204":
          description: Success
      summary: Marks report as preferred or not.
      tags:
        - Reports
  "/reports/{reportId}/result/csv":
    get:
      description: Generates CSV content for a report.
      operationId: generateCSV
      parameters:
        - description: report's internal identifier
          in: path
          name: reportId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/reports//generateCSV.json#responseBody
              schema:
                $ref: "#/components/schemas/ReportResultDTO"
          description: Success
      summary: Generates CSV content for a report.
      tags:
        - Reports
  "/reports/{reportId}/result/printerFriendly":
    get:
      description: Generates printer friendly content for a report.
      operationId: generatePrinterFriendly
      parameters:
        - description: report's internal identifier
          in: path
          name: reportId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/reports//generatePrinterFriendly.json#responseBody
              schema:
                $ref: "#/components/schemas/ReportResultDTO"
          description: Success
      summary: Generates printer friendly content for a report.
      tags:
        - Reports
  /services/active:
    get:
      description: Returns active workflows list
      operationId: getAllActive
      parameters:
        - description: exact name of entity
          in: query
          name: nameEquals
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/services/active-v1.json#responseBody
              schema:
                $ref: "#/components/schemas/ServiceDTO"
          description: Success
      summary: Returns active services list
      tags:
        - Dictionaries
  /services/all:
    get:
      description: Returns workflows list. Both active and not active ones.
      operationId: getAll_3
      parameters:
        - description: exact name of entity
          in: query
          name: nameEquals
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/services/all-v1.json#responseBody
              schema:
                $ref: "#/components/schemas/ServiceDTO"
          description: Success
      summary: Returns services list
      tags:
        - Dictionaries
  /subscription:
    get:
      description: Returns all subscriptions. Subscriptions are automatically removed if they do not work (ie. if 404 status is returned). To improve notification reliability one can use this method to check if subscription is still active and re-subscribe if necessary.
      operationId: getAll_4
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/subscription/getAll.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/ActiveSubscriptionDTO"
                type: array
          description: Success
      summary: Returns all subscriptions
      tags:
        - Subscription
    post:
      description: Subscribe to event. Returns subscription Id.
      operationId: subscribe
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: "#/components/schemas/SubscriptionDTO"
        description: Returns subscription Id.
        required: true
      responses:
        "201":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/subscription/subscribe_created.json#responseBody
              schema:
                type: string
          description: Success
        "409":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/subscription/subscribe_conflict.json#responseBody
              schema:
                type: string
          description: Success
      summary: Subscribe to event
      tags:
        - Subscription
  /subscription/supports:
    get:
      description: This method can be used to determine if hooks are supported.
      operationId: areHooksSupported
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              schema:
                type: boolean
          description: Success
      summary: This method can be used to determine if hooks are supported.
      tags:
        - Subscription
  "/subscription/{subscriptionId}":
    delete:
      description: Unsubscribe from job status changed event
      operationId: unsubscribe
      parameters:
        - in: path
          name: subscriptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
      summary: Unsubscribe from event
      tags:
        - Subscription
  "/tasks/{taskId}":
    delete:
      description: Removes a task.
      operationId: delete_14
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
        - description: remove files from disc
          in: query
          name: removeFilesFromDisc
          schema:
            type: boolean
        - description: remove external projects (ie. from CAT Tool)
          in: query
          name: removeExternalProjects
          schema:
            type: boolean
        - description: force jobs removal (ie. started or ready)
          in: query
          name: forceJobsRemoval
          schema:
            type: boolean
      responses:
        "204":
          description: Success
      summary: Removes a task.
      tags:
        - Tasks (Classic)
  "/tasks/{taskId}/clientTaskPONumber":
    put:
      description: Updates Client Task PO Number of a given task.
      operationId: updateClientTaskPONumber
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateClientTaskPONumber.json#requestBody
            schema:
              $ref: "#/components/schemas/StringDTO"
        description: Updated Client Task PO Number of a given task.
        required: true
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/updateClientTaskPONumber.json#responseBody
              schema:
                $ref: "#/components/schemas/StringDTO"
          description: Success
      summary: Updates Client Task PO Number of a given task.
      tags:
        - Tasks (Classic)
  "/tasks/{taskId}/contacts":
    get:
      description: Returns contacts of a given task.
      operationId: getContacts_1
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getContacts.json#responseBody
              schema:
                $ref: "#/components/schemas/ContactsDTO"
          description: Success
      summary: Returns contacts of a given task.
      tags:
        - Tasks (Classic)
    put:
      description: Updates contacts of a given task.
      operationId: updateContacts_1
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateContacts.json#requestBody
            schema:
              $ref: "#/components/schemas/ContactsDTO"
        description: Updated contacts of given task.
        required: true
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/ContactsDTO"
          description: Success
      summary: Updates contacts of a given task.
      tags:
        - Tasks (Classic)
  "/tasks/{taskId}/customFields":
    get:
      description: Returns custom fields of a given task.
      operationId: getCustomFields_7
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Returns custom fields of a given task.
      tags:
        - Tasks (Classic)
    put:
      description: Updates custom fields of a given task.
      operationId: updateCustomFields_5
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateCustomFields.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomFieldsDTO"
        description: Updated custom fields
        required: true
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/updateCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Updates custom fields of a given task.
      tags:
        - Tasks (Classic)
  "/tasks/{taskId}/dates":
    get:
      description: Returns dates of a given task.
      operationId: getDates_3
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getDates.json#responseBody
              schema:
                $ref: "#/components/schemas/ProjectDatesDTO"
          description: Success
      summary: Returns dates of a given task.
      tags:
        - Tasks (Classic)
    put:
      description: Updates dates of a given task.
      operationId: updateDates_2
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateDates.json#requestBody
            schema:
              $ref: "#/components/schemas/ProjectDatesDTO"
        description: Updated dates of a given task.
        required: true
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/ProjectDatesDTO"
          description: Success
      summary: Updates dates of a given task.
      tags:
        - Tasks (Classic)
  "/tasks/{taskId}/files":
    get:
      description: "Returns several lists of files for a given task: input files divided by type, output files, bundles, files per job, preview files."
      operationId: getTaskFiles
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getTaskFiles.json#responseBody
              schema:
                $ref: "#/components/schemas/TaskFilesDTO"
          description: Success
      summary: Returns lists of files of a given task.
      tags:
        - Tasks (Classic)
  "/tasks/{taskId}/files/input":
    post:
      description: Adds files to a given task.
      operationId: addFile
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/addFile.json#requestBody
            schema:
              $ref: "#/components/schemas/FileDTO"
        required: true
      responses:
        "204":
          description: Success
      summary: Adds files to a given task.
      tags:
        - Tasks (Classic)
  "/tasks/{taskId}/instructions":
    get:
      description: Returns instructions of a given task.
      operationId: getInstructions_2
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getInstructions.json#responseBody
              schema:
                $ref: "#/components/schemas/InstructionsDTO"
          description: Success
      summary: Returns instructions of a given task.
      tags:
        - Tasks (Classic)
    put:
      description: Updates instructions of a given task.
      operationId: updateInstructions_3
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateInstructions.json#requestBody
            schema:
              $ref: "#/components/schemas/InstructionsDTO"
        description: Updated instructions of a given task.
        required: true
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/updateInstructions.json#responseBody
              schema:
                $ref: "#/components/schemas/InstructionsDTO"
          description: Success
      summary: Updates instructions of a given task.
      tags:
        - Tasks (Classic)
  "/tasks/{taskId}/name":
    put:
      description: Updates name of a given task.
      operationId: updateName
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v1/tasks/updateName.json#requestBody
            schema:
              $ref: "#/components/schemas/StringDTO"
        required: true
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/updateName.json#responseBody
              schema:
                $ref: "#/components/schemas/StringDTO"
          description: Success
      summary: Updates name of a given task.
      tags:
        - Tasks (Classic)
  "/tasks/{taskId}/progress":
    get:
      description: Returns progress of a given task. Progress contains information about task's status (ie. opened or ready) and current phase (ie. translation). Workflow phase is defined as the first one which contains not ready jobs (ie. opened or started). When no such job exists then workflow phase is not included.
      operationId: getProgress
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v1/tasks/getProgress.json#responseBody
              schema:
                $ref: "#/components/schemas/TaskProgressDTO"
          description: Success
      summary: Returns progress of a given task.
      tags:
        - Tasks (Classic)
  "/tasks/{taskId}/start":
    post:
      description: Starts a task.
      operationId: start_1
      parameters:
        - description: task's internal identifier
          in: path
          name: taskId
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Success
      summary: Starts a task.
      tags:
        - Tasks (Classic)
  /users:
    get:
      description: Returns list of simple users representations
      operationId: getAllNamesWithIds_1
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getAllNamesWithIds.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/EntityWithNameDTO"
                type: array
          description: Success
      summary: Returns list of simple users representations
      tags:
        - Users
  /users/me:
    get:
      description: Returns currently signed in user details.
      operationId: getMe
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getMe.json#responseBody
              schema:
                $ref: "#/components/schemas/UserDTO"
          description: Success
      summary: Returns currently signed in user details.
      tags:
        - Users
  /users/me/timeZone:
    get:
      description: Returns time zone preferred by user currently signed in.
      operationId: getTimeZone
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getTimeZone.json#responseBody
              schema:
                $ref: "#/components/schemas/TimeZoneDTO"
          description: Success
      summary: Returns time zone preferred by user currently signed in.
      tags:
        - Users
  "/users/{userId}":
    get:
      description: Returns user details.
      operationId: getById_6
      parameters:
        - description: user's internal identifier
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/UserDTO"
          description: Success
      summary: Returns user details.
      tags:
        - Users
    put:
      description: Updates an existing user.
      operationId: update_3
      parameters:
        - description: user's internal identifier
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/users/update2.json#requestBody
            schema:
              $ref: "#/components/schemas/UserDTO"
        description: Updated existing user.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/update2.json#responseBody
              schema:
                $ref: "#/components/schemas/UserDTO"
          description: Success
      summary: Updates an existing user.
      tags:
        - Users
  "/users/{userId}/customFields":
    get:
      description: Returns custom fields of a given user.
      operationId: getCustomFields_4
      parameters:
        - description: user's internal identifier
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Returns custom fields of a given user.
      tags:
        - Users
    put:
      description: Updates custom fields of a given user.
      operationId: updateCustomFields_2
      parameters:
        - description: user's internal identifier
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/users/updateCustomFields.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomFieldsDTO"
        description: Updated custom fields of a given user.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/updateCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Updates custom fields of a given user.
      tags:
        - Users
  "/users/{userId}/customFields/{customFieldKey}":
    get:
      description: Returns custom field of a given user.
      operationId: getCustomField_1
      parameters:
        - description: user's internal identifier
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
        - description: custom field's key
          in: path
          name: customFieldKey
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/getCustomField.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldDTO"
          description: Success
      summary: Returns custom field of a given user.
      tags:
        - Users
    put:
      description: Updates given custom field of a given user.
      operationId: updateCustomField_1
      parameters:
        - description: user's internal identifier
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
        - description: custom field's key
          in: path
          name: customFieldKey
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/users/updateCustomField.json#requestBody
            schema:
              $ref: "#/components/schemas/CustomFieldDTO"
        description: Updated custom fields of a given user.
        required: true
      responses:
        default:
          content:
            application/vnd.xtrf-v1+json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/users/updateCustomField.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldDTO"
          description: Success
      summary: Updates given custom field of a given user.
      tags:
        - Users
  "/users/{userId}/password":
    put:
      description: Sets user's password to a new value.
      operationId: changePassword
      parameters:
        - description: user's internal identifier
          in: path
          name: userId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                newPassword:
                  description: new password
                  type: string
                oldPassword:
                  description: old password
                  type: string
              type: object
      responses:
        "204":
          description: Success
      summary: Sets user's password to a new value.
      tags:
        - Users
  /v2/jobs/for-external-id:
    get:
      operationId: getByExternalId
      parameters:
        - description: job's externalProjectId
          in: query
          name: externalProjectId
          schema:
            type: string
        - description: job's external identifier
          in: query
          name: externalId
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8: {}
          description: default response
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}":
    get:
      description: Returns details for a job.
      operationId: getFileById_1
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/ProjectFileDto"
          description: Success
      summary: Returns details for a job.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/dates":
    put:
      description: Updates dates of a given job.
      operationId: changeDates
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/changeDates.json#requestBody
            schema:
              $ref: "#/components/schemas/JobDatesDto"
        description: New job dates.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates dates of a given job.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/files/addExternalLink":
    post:
      operationId: addExternalFileLink
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExternalFileDto"
        description: Added file links to the project as added by PM.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8: {}
          description: default response
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/files/delivered":
    get:
      description: Returns list of files delivered in the job.
      operationId: getDeliveredFiles
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/getDeliveredFiles.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/ProjectFileDto"
                type: array
          description: Success
      summary: Returns list of files delivered in the job.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/files/delivered/add":
    put:
      description: Adds files to the project as delivered in the job. The files have to be uploaded beforehand (see "POST /jobs/{jobId}/files/upload" operation). The following properties can be specified for each file:<ul><li>category (required, 400 Bad Request is returned otherwise)</li><li>languageIds – when the file category depends on a list of languages</li><li>languageCombinationIds – when the file category depends on a list of language combinations</li></ul>
      operationId: addFiles
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/addFiles.json#requestBody
            schema:
              $ref: "#/components/schemas/FileCategorizationsDto"
        description: Added files to the project as delivered in the job.
        required: true
      responses:
        "204":
          description: Success
      summary: Adds files to the project as delivered in the job.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/files/delivered/addLink":
    post:
      description: Adds file link to the project as a link delivered in the job. The following properties can be specified for each file link:<ul><li>url (required, 400 Bad Request is returned otherwise)</li><li>category (required, 400 Bad Request is returned otherwise)</li><li>languageIds – when the file category depends on a list of languages</li><li>languageCombinationIds – when the file category depends on a list of language combinations</li></ul>
      operationId: addFileLinks
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/addFileLinksToJob.json#requestBody
            schema:
              $ref: "#/components/schemas/FileLinkCategorizationsDto"
        description: Adds file link to the project as a link delivered in the job.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/addFileLinksToJob.json#responseBody
              schema:
                $ref: "#/components/schemas/FilesDto"
          description: Success
      summary: Adds file link to the project as a link delivered in the job.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/files/delivered/upload":
    post:
      description: Uploads file to the project as a file delivered in the job. Only one file can be uploaded at once. When the upload is finished the file has to be added by specifying its category and languages (see "PUT /jobs/{jobId}/files/add" operation).
      operationId: uploadFile_1
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/FileToUploadDto"
        description: Uploaded file to the project as a file delivered in the job.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/uploadFile.json#responseBody
              schema:
                $ref: "#/components/schemas/FileDto"
          description: Success
      summary: Uploads file to the project as a file delivered in the job.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/files/sharedReferenceFiles":
    get:
      description: Returns list of files shared with the job as Reference Files.
      operationId: getSharedReferenceFiles
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/getSharedReferenceFiles.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/ProjectFileDto"
                type: array
          description: Success
      summary: Returns list of files shared with the job as Reference Files.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/files/sharedReferenceFiles/share":
    put:
      description: Shares selected files as Reference Files with a job in a project. The files and the job have to be part of the same project. The operation is finished successfully even if some of the selected files were already shared with the job. If a file was shared with the job as Work File, it will now be shared as Reference File (and not as Work File).
      operationId: shareAsReferenceFiles
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/shareAsReferenceFiles.json#requestBody
            schema:
              $ref: "#/components/schemas/FilesDto"
        description: Shared selected files as Reference Files with a job in a project.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/shareAsReferenceFiles.json#responseBody
              schema:
                $ref: "#/components/schemas/FilesShareStatusDto"
          description: Success
      summary: Shares selected files as Reference Files with a job in a project.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/files/sharedWorkFiles":
    get:
      description: Returns list of files shared with the job as Work Files.
      operationId: getSharedWorkFiles
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/getSharedWorkFiles.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/ProjectFileDto"
                type: array
          description: Success
      summary: Returns list of files shared with the job as Work Files.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/files/sharedWorkFiles/share":
    put:
      description: Shares selected files as Work Files with a job in a project. The files and the job have to be part of the same project. The operation is finished successfully even if some of the selected files were already shared with the job. If a file was shared with the job as Reference File, it will now be shared as Work File (and not as Reference File).
      operationId: shareAsWorkFiles
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/shareAsWorkFiles.json#requestBody
            schema:
              $ref: "#/components/schemas/FilesDto"
        description: Shared selected files as Work Files with a job in a project.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/shareAsWorkFiles.json#responseBody
              schema:
                $ref: "#/components/schemas/FilesShareStatusDto"
          description: Success
      summary: Shares selected files as Work Files with a job in a project.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/files/stopSharing":
    put:
      description: Stops sharing selected files with a job in a project. The files and the job have to be part of the same project. The operation is finished successfully even if some of the selected files were not shared with the job.
      operationId: stopSharing
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/stopSharing.json#requestBody
            schema:
              $ref: "#/components/schemas/FilesDto"
        description: File sharing stopped for a project task.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/jobs/stopSharing.json#responseBody
              schema:
                $ref: "#/components/schemas/FilesShareStatusDto"
          description: Success
      summary: Stops sharing selected files with a job in a project.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/instructions":
    put:
      description: Updates instructions for a job. See also "PUT /projects/{projectId}/vendorInstructions" and "PUT /quotes/{quoteId}/vendorInstructions" for updating instructions for all jobs in a project or quote.
      operationId: updateInstructions_4
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/updateInstructionsForJob.json#requestBody
            schema:
              $ref: "#/components/schemas/StringDTO"
        description: Updated instructions for a job.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates instructions for a job.
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/status":
    put:
      description: "Changes job status if possible (400 Bad Request is returned otherwise). The status has to be specified using one of the following keys:<ul><li>OPEN – available when the job has one of the following statuses: ACCEPTED, CANCELED</li><li>ACCEPTED – available when the job has one of the following statuses: OPEN (Vendor and dates have to be set before calling the operation), STARTED</li><li>STARTED – available when the job has one of the following statuses: ACCEPTED, READY</li><li>READY – available when the job has one of the following statuses: STARTED</li><li>CANCELLED – available when the job has one of the following statuses: OPEN, ACCEPTED, STARTED, OFFERS_SENT</li><li>OFFERS_SENT – not available as a target status for this operation</li></ul>"
      operationId: changeStatus_1
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/changeStatus.json#requestBody
            schema:
              $ref: "#/components/schemas/JobStatusDTO"
        description: Changed job status.
        required: true
      responses:
        "204":
          description: Success
      summary: Changes job status if possible (400 Bad Request is returned otherwise).
      tags:
        - Jobs (Smart)(v2)
  "/v2/jobs/{jobId}/vendor":
    put:
      description: Assigns vendor to a job in a project.
      operationId: assignVendor_1
      parameters:
        - description: job's internal identifier
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/jobs/assignVendor.json#requestBody
            schema:
              $ref: "#/components/schemas/VendorPriceProfileDTO"
        description: Assigned vendor to a job in a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Assigns vendor to a job in a project.
      tags:
        - Jobs (Smart)(v2)
  /v2/projects:
    post:
      description: Creates a new Smart Project. If the specified service ID refers to Classic Project, 400 Bad Request is returned instead.
      operationId: create_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCreateDTO"
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/createProject.json#responseBody
              schema:
                $ref: "#/components/schemas/ProjectDTOv2"
          description: Success
      summary: Creates a new Smart Project.
      tags:
        - Projects (Smart)(v2)
  /v2/projects/files/archive:
    post:
      description: Prepares a ZIP archive that contains the specified files.
      operationId: archive
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/archive.json#requestBody
            schema:
              $ref: "#/components/schemas/FilesDto"
        description: Prepared ZIP archive that contains the specified files.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/archive.json#responseBody
              schema:
                $ref: "#/components/schemas/FilesArchiveDto"
          description: Success
      summary: Prepares a ZIP archive that contains the specified files.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/files/{fileId}":
    get:
      description: Returns details of a file.
      operationId: getFileById_2
      parameters:
        - description: file's internal identifier
          in: path
          name: fileId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getFileById.json#responseBody
              schema:
                $ref: "#/components/schemas/ProjectFileDto"
          description: Success
      summary: Returns details of a file.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/files/{fileId}/download/{fileName}":
    get:
      description: Downloads a file content.
      operationId: getFileContentById
      parameters:
        - description: file's internal identifier
          in: path
          name: fileId
          required: true
          schema:
            type: string
        - description: file's name
          in: path
          name: fileName
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            multipart/form-data: {}
          description: Success
      summary: Downloads a file content.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/for-external-id/{externalProjectId}":
    get:
      description: Returns project details.
      operationId: getByExternalId_1
      parameters:
        - description: project's external identifier
          in: path
          name: externalProjectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/ProjectDTOv2"
          description: Success
      summary: Returns project details.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}":
    get:
      description: Returns project details. If the specified project ID refers to Classic Project, 400 Bad Request is returned instead.
      operationId: getById_9
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/ProjectDTOv2"
          description: Success
      summary: Returns project details.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/addJob":
    post:
      operationId: addJobToProcess
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/CATToolProjectDTO"
          description: Success
      summary: Returns process id.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/catToolProject":
    get:
      operationId: getCATToolProjectInfo
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/CATToolProjectDTO"
          description: Success
      summary: Returns if cat tool project is created or queued.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/clientContacts":
    get:
      description: Returns Client Contacts information for a project
      operationId: getContacts_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getClientContacts.json#responseBody
              schema:
                $ref: "#/components/schemas/SmartContactsDTO"
          description: Success
      summary: Returns Client Contacts information for a project.
      tags:
        - Projects (Smart)(v2)
    put:
      description: Updates Client Contacts for a project.
      operationId: updateContacts_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateClientContacts.json#requestBody
            schema:
              $ref: "#/components/schemas/SmartContactsDTO"
        description: Updated Client Contacts for a project.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/updateClientContacts.json#responseBody
              schema:
                $ref: "#/components/schemas/SmartContactsDTO"
          description: Success
      summary: Updates Client Contacts for a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/clientDeadline":
    put:
      description: Updates Client Deadline for a project.
      operationId: updateClientDeadline
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateClientDeadline.json#requestBody
            schema:
              $ref: "#/components/schemas/TimeDTO"
        description: Updated Client Deadline for a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates Client Deadline for a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/clientNotes":
    put:
      description: Updates Client Notes for a project.
      operationId: updateClientNotes
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateClientNotes.json#requestBody
            schema:
              $ref: "#/components/schemas/StringDTO"
        description: Updated Client Notes for a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates Client Notes for a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/clientReferenceNumber":
    put:
      description: Updates Client Reference Number for a project.
      operationId: updateClientReferenceNumber
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateClientReferenceNumber.json#requestBody
            schema:
              $ref: "#/components/schemas/StringDTO"
        description: Updated Client Reference Number for a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates Client Reference Number for a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/customFields":
    get:
      description: Returns a list of custom field keys and values for a project.
      operationId: getCustomFields_8
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Returns a list of custom field keys and values for a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/customFields/{key}":
    put:
      description: Updates a custom field with a specified key in a project
      operationId: updateCustomField_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: custom field's key
          in: path
          name: key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateCustomField.json#requestBody
            schema:
              $ref: "#/components/schemas/SmartCustomFieldDTO"
        description: Updated custom field with a specified key in a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates a custom field with a specified key in a project
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/files":
    get:
      description: Returns list of files in a project. Only files added to the project (i.e. files that have assigned category and languages) are listed.
      operationId: getFiles
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getFiles.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/ProjectFileDto"
                type: array
          description: Success
      summary: Returns list of files in a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/files/add":
    put:
      description: Adds files to the project as added by PM. The files have to be uploaded beforehand (see "POST /v2/projects/{projectId}/files/upload" operation). The following properties can be specified for each file:<ul><li>category (required, 400 Bad Request is returned otherwise)</li><li>languageIds – when the file category depends on a list of languages</li><li>languageCombinationIds – when the file category depends on a list of language combinations</li></ul>
      operationId: addFiles_1
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/addFiles.json#requestBody
            schema:
              $ref: "#/components/schemas/FileCategorizationsDto"
        description: Added files to the project as added by PM.
        required: true
      responses:
        "204":
          description: Success
      summary: Adds files to the project as added by PM.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/files/addExternalLink":
    post:
      operationId: addExternalFileLinks
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExternalFileDto"
        description: Added file links to the project as added by PM.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8: {}
          description: default response
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/files/addLink":
    post:
      description: Adds file links to the project as added by PM. The following properties can be specified for each file link:<ul><li>url (required, 400 Bad Request is returned otherwise)</li><li>category (required, 400 Bad Request is returned otherwise)</li><li>languageIds – when the file category depends on a list of languages</li><li>languageCombinationIds – when the file category depends on a list of language combinations</li></ul>
      operationId: addFileLinks_1
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/addFileLinks.json#requestBody
            schema:
              $ref: "#/components/schemas/FileLinkCategorizationsDto"
        description: Added file links to the project as added by PM.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/addFileLinks.json#responseBody
              schema:
                $ref: "#/components/schemas/FilesDto"
          description: Success
      summary: Adds file links to the project as added by PM.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/files/deliverable":
    get:
      description: Returns list of files in a project, that are ready to be delivered to client. A file is considered deliverable to client when all of the following criteria are met:<ul><li>the file was added to a job in the last step in the process</li><li>the file is marked as verified (if it was added in a verification step and the file is verifiable, according to its category)</li><li>the job is finished (has Ready status)</li></ul>
      operationId: getDeliverableFiles
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getDeliverableFiles.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/ProjectFileDto"
                type: array
          description: Success
      summary: Returns list of files in a project, that are ready to be delivered to client.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/files/upload":
    post:
      description: Uploads file to the project as a file uploaded by PM. Only one file can be uploaded at once. When the upload is finished the file has to be added by specifying its category and languages (see "PUT /v2/projects/{projectId}/files/add" operation
      operationId: uploadFile_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/FileToUploadDto"
        description: Uploaded file
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/uploadFile.json#responseBody
              schema:
                $ref: "#/components/schemas/FileDto"
          description: Success
      summary: Uploads file to the project as a file uploaded by PM.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/finance":
    get:
      description: Returns finance information for a project.
      operationId: getFinance_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getFinance.json#responseBody
              schema:
                $ref: "#/components/schemas/FinanceDTO"
          description: Success
      summary: Returns finance information for a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/finance/payables":
    post:
      description: Adds a payable to a project.
      operationId: createPayable_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/createPayable.json#requestBody
            schema:
              $ref: "#/components/schemas/PayableCreateDTO"
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/createPayable.json#responseBody
              schema:
                $ref: "#/components/schemas/PayableDTO"
          description: Success
      summary: Adds a payable to a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/finance/payables/{payableId}":
    delete:
      description: Deletes a payable.
      operationId: deletePayable_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: payable's internal identifier
          in: path
          name: payableId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Deletes a payable.
      tags:
        - Projects (Smart)(v2)
    put:
      description: Updates a payable.
      operationId: updatePayable_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: payable's internal identifier
          in: path
          name: payableId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updatePayable.json#requestBody
            schema:
              $ref: "#/components/schemas/PayableDTO"
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/updatePayable.json#responseBody
              schema:
                $ref: "#/components/schemas/PayableDTO"
          description: Success
      summary: Updates a payable.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/finance/receivables":
    post:
      description: Adds a receivable to a project.
      operationId: createReceivable_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/createReceivable.json#requestBody
            schema:
              $ref: "#/components/schemas/ReceivableCreateDTO"
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/createReceivable.json#responseBody
              schema:
                $ref: "#/components/schemas/ReceivableDTO"
          description: Success
      summary: Adds a receivable to a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/finance/receivables/{receivableId}":
    delete:
      description: Deletes a receivable.
      operationId: deleteReceivable_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: receivable's internal identifier
          in: path
          name: receivableId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Deletes a receivable.
      tags:
        - Projects (Smart)(v2)
    put:
      description: Updates a receivable.
      operationId: updateReceivable_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: receivable's internal identifier
          in: path
          name: receivableId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateReceivable.json#requestBody
            schema:
              $ref: "#/components/schemas/ReceivableDTO"
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/updateReceivable.json#responseBody
              schema:
                $ref: "#/components/schemas/ReceivableDTO"
          description: Success
      summary: Updates a receivable.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/internalNotes":
    put:
      description: Updates Internal Notes for a project.
      operationId: updateInternalNotes
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateInternalNotes.json#requestBody
            schema:
              $ref: "#/components/schemas/StringDTO"
        description: Updated Internal Notes for a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates Internal Notes for a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/jobs":
    get:
      description: Returns list of jobs in a project.
      operationId: getJobs
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/projects/getJobs.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/JobDto"
                type: array
          description: Success
      summary: Returns list of jobs in a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/orderDate":
    put:
      description: Updates Order Date for a project.
      operationId: updateOrderedOn
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateOrderedOn.json#requestBody
            schema:
              $ref: "#/components/schemas/TimeDTO"
        description: Updated Order Date for a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates Order Date for a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/process":
    get:
      operationId: getProcessId
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: "#/components/schemas/CATToolProjectDTO"
          description: Success
      summary: Returns process id.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/sourceLanguage":
    put:
      description: Updates source language for a project.
      operationId: updateSourceLanguage
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateSourceLanguage.json#requestBody
            schema:
              $ref: "#/components/schemas/SourceLanguageDTO"
        description: Updated source language for a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates source language for a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/specialization":
    put:
      description: Updates specialization for a project.
      operationId: updateSpecialization
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateSpecialization.json#requestBody
            schema:
              $ref: "#/components/schemas/SpecializationDTO"
        description: Updated specialization for a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates specialization for a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/status":
    put:
      description: "Changes project status if possible (400 Bad Request is returned otherwise). The status has to be specified using one of the following keys: <ul><li>CANCELLED – available when the job has one of the following statuses: OPEN, STARTED</li></ul>"
      operationId: changeStatus_2
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/changeStatus.json#requestBody
            schema:
              $ref: "#/components/schemas/ProjectStatusDTO"
        description: Changed project status.
        required: true
      responses:
        "204":
          description: Success
      summary: Changes project status if possible (400 Bad Request is returned otherwise).
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/targetLanguages":
    put:
      description: Updates target languages for a project.
      operationId: updateTargetLanguages
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateTargetLanguages.json#requestBody
            schema:
              $ref: "#/components/schemas/TargetLanguagesDTO"
        description: Updated target languages for a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates target languages for a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/vendorInstructions":
    put:
      description: Updates instructions for all vendors performing the jobs in a project. See also "PUT /jobs/{jobId}/instructions" for updating instructions for a specific job in a project or quote.
      operationId: updateVendorInstructions
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateSpecialization.json#requestBody
            schema:
              $ref: "#/components/schemas/StringDTO"
        description: Updated instructions for all vendors performing the jobs in a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates instructions for all vendors performing the jobs in a project.
      tags:
        - Projects (Smart)(v2)
  "/v2/projects/{projectId}/volume":
    put:
      description: Updates volume for a project.
      operationId: updateVolume
      parameters:
        - description: project's internal identifier
          in: path
          name: projectId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/projects/updateVolume.json#requestBody
            schema:
              $ref: "#/components/schemas/BigDecimalDTO"
        description: Updated volume for a project.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates volume for a project.
      tags:
        - Projects (Smart)(v2)
  /v2/quotes:
    post:
      description: Creates a new Smart Quote. If the specified service ID refers to Classic Quote, 400 Bad Request is returned instead.
      operationId: create_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuoteCreateDTO"
        description: Project to create
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/createQuote.json#responseBody
              schema:
                $ref: "#/components/schemas/QuoteDTOv2"
          description: Success
      summary: Creates a new Smart Quote.
      tags:
        - Quotes (Smart)(v2)
  /v2/quotes/files/archive:
    post:
      description: Prepares a ZIP archive that contains the specified files.
      operationId: archive_1
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/archive.json#requestBody
            schema:
              $ref: "#/components/schemas/FilesDto"
        description: Prepared ZIP archive that contains the specified files.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/archive.json#responseBody
              schema:
                $ref: "#/components/schemas/FilesArchiveDto"
          description: Success
      summary: Prepares a ZIP archive that contains the specified files.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/files/{fileId}":
    get:
      description: Returns details of a file.
      operationId: getFileById_3
      parameters:
        - description: file's internal identifier
          in: path
          name: fileId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getFileById.json#responseBody
              schema:
                $ref: "#/components/schemas/ProjectFileDto"
          description: Success
      summary: Returns details of a file.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/files/{fileId}/download/{fileName}":
    get:
      description: Downloads a file content.
      operationId: getFileContentById_1
      parameters:
        - description: file's internal identifier
          in: path
          name: fileId
          required: true
          schema:
            type: string
        - description: file's name
          in: path
          name: fileName
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            multipart/form-data:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getFileContentById.json#responseBody
          description: Success
      summary: Downloads a file content.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}":
    get:
      description: Returns quote details. If the specified quote ID refers to Classic Quote, 400 Bad Request is returned instead.
      operationId: getById_10
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getById.json#responseBody
              schema:
                $ref: "#/components/schemas/QuoteDTOv2"
          description: Success
      summary: Returns quote details.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/businessDays":
    put:
      description: Updates Business Days for a quote.
      operationId: updateBusinessDays
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateBusinessDays.json#requestBody
            schema:
              format: int32
              type: integer
        description: Updated Business Days for a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates Business Days for a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/clientContacts":
    get:
      description: Returns Client Contacts information for a quote.
      operationId: getContacts_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getClientContacts.json#responseBody
              schema:
                $ref: "#/components/schemas/SmartContactsDTO"
          description: Success
      summary: Returns Client Contacts information for a quote.
      tags:
        - Quotes (Smart)(v2)
    put:
      description: Updates Client Contacts for a quote.
      operationId: updateContacts_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateClientContacts.json#requestBody
            schema:
              $ref: "#/components/schemas/SmartContactsDTO"
        description: Updated Client Contacts for a quote.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/updateClientContacts.json#responseBody
              schema:
                $ref: "#/components/schemas/SmartContactsDTO"
          description: Success
      summary: Updates Client Contacts for a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/clientNotes":
    put:
      description: Updates Client Notes for a quote.
      operationId: updateClientNotes_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateClientNotes.json#requestBody
            schema:
              $ref: "#/components/schemas/StringDTO"
        description: Updated Client Notes for a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates Client Notes for a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/clientReferenceNumber":
    put:
      description: Updates Client Reference Number for a quote.
      operationId: updateClientReferenceNumber_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateClientReferenceNumber.json#requestBody
            schema:
              $ref: "#/components/schemas/StringDTO"
        description: Updated Client Reference Number for a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates Client Reference Number for a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/customFields":
    get:
      description: Returns a list of custom field keys and values for a project.
      operationId: getCustomFields_9
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getCustomFields.json#responseBody
              schema:
                $ref: "#/components/schemas/CustomFieldsDTO"
          description: Success
      summary: Returns a list of custom field keys and values for a project.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/customFields/{key}":
    put:
      description: Updates a custom field with a specified key in a quote.
      operationId: updateCustomField_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
        - description: custom field's key
          in: path
          name: key
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateCustomField.json#requestBody
            schema:
              $ref: "#/components/schemas/SmartCustomFieldDTO"
        description: Updated custom field with a specified key in a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates a custom field with a specified key in a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/expectedDeliveryDate":
    put:
      description: Updates Expected Delivery Date for a quote.
      operationId: updateExpectedDeliveryDate
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateExpectedDeliveryDate.json#requestBody
            schema:
              $ref: "#/components/schemas/TimeDTO"
        description: Updated Expected Delivery Date for a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates Expected Delivery Date for a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/files":
    get:
      description: Returns list of files in a quote. Only files added to the quote (i.e. files that have assigned category and languages) are listed.
      operationId: getFiles_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getFiles.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/ProjectFileDto"
                type: array
          description: ok
      summary: Returns list of files in a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/files/add":
    put:
      description: Adds files to the quote as added by PM. The files have to be uploaded beforehand (see "POST v2/quotes/{quoteId}/files/upload" operation). The following properties can be specified for each file:<ul><li>category (required, 400 Bad Request is returned otherwise)</li><li>languageIds – when the file category depends on a list of languages</li><li>languageCombinationIds – when the file category depends on a list of language combinations</li></ul>
      operationId: addFiles_2
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/addFiles.json#requestBody
            schema:
              $ref: "#/components/schemas/TimeDTO"
        description: Added files to the quote as added by PM.
        required: true
      responses:
        "204":
          description: Success
      summary: Adds files to the quote as added by PM.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/files/upload":
    post:
      description: Uploads file to the quote as a file uploaded by PM. Only one file can be uploaded at once. When the upload is finished the file has to be added by specifying its category and languages (see "PUT /v2/quotes/{quoteId}/files/add" operation).
      operationId: uploadFile_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/uploadFile.json#requestBody
            schema:
              $ref: "#/components/schemas/FileToUploadDto"
        description: Uploaded file to the quote as a file uploaded by PM.
        required: true
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/uploadFile.json#responseBody
              schema:
                $ref: "#/components/schemas/FileDto"
          description: Success
      summary: Uploads file to the quote as a file uploaded by PM.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/finance":
    get:
      description: Returns finance information for a quote.
      operationId: getFinance_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getFinance.json#responseBody
              schema:
                $ref: "#/components/schemas/FinanceDTO"
          description: Success
      summary: Returns finance information for a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/finance/payables":
    post:
      description: Adds a payable to a quote.
      operationId: createPayable_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/createPayable.json#requestBody
            schema:
              $ref: "#/components/schemas/PayableCreateDTO"
        required: true
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/createPayable.json#responseBody
              schema:
                $ref: "#/components/schemas/PayableDTO"
          description: Success
      summary: Adds a payable to a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/finance/payables/{payableId}":
    delete:
      description: Deletes a payable.
      operationId: deletePayable_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
        - description: payable's internal identifier
          in: path
          name: payableId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Deletes a payable.
      tags:
        - Quotes (Smart)(v2)
    put:
      description: Updates a payable.
      operationId: updatePayable_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
        - description: payable's internal identifier
          in: path
          name: payableId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updatePayable.json#requestBody
            schema:
              $ref: "#/components/schemas/PayableDTO"
        required: true
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/updatePayable.json#responseBody
              schema:
                $ref: "#/components/schemas/PayableDTO"
          description: Success
      summary: Updates a payable.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/finance/receivables":
    post:
      description: Adds a receivable to a quote.
      operationId: createReceivable_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/createReceivable.json#requestBody
            schema:
              $ref: "#/components/schemas/ReceivableCreateDTO"
        required: true
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/createReceivable.json#responseBody
              schema:
                $ref: "#/components/schemas/ReceivableDTO"
          description: Success
      summary: Adds a receivable to a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/finance/receivables/{receivableId}":
    delete:
      description: Deletes a receivable.
      operationId: deleteReceivable_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
        - description: receivable's internal identifier
          in: path
          name: receivableId
          required: true
          schema:
            format: int64
            type: integer
      responses:
        "204":
          description: Success
      summary: Deletes a receivable.
      tags:
        - Quotes (Smart)(v2)
    put:
      description: Updates a receivable.
      operationId: updateReceivable_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
        - description: receivable's internal identifier
          in: path
          name: receivableId
          required: true
          schema:
            format: int64
            type: integer
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateReceivable.json#requestBody
            schema:
              $ref: "#/components/schemas/ReceivableDTO"
        required: true
      responses:
        default:
          content:
            application/json:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/updateReceivable.json#responseBody
              schema:
                $ref: "#/components/schemas/ReceivableDTO"
          description: Success
      summary: Updates a receivable.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/internalNotes":
    put:
      description: Updates Internal Notes for a quote.
      operationId: updateInternalNotes_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateInternalNotes.json#requestBody
            schema:
              $ref: "#/components/schemas/StringDTO"
        description: Updated Internal Notes for a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates Internal Notes for a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/jobs":
    get:
      description: Returns list of jobs in a quote.
      operationId: getJobs_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      responses:
        default:
          content:
            application/json;charset=UTF-8:
              examples:
                ref:
                  description: ref
                  value: /home-api/assets/examples/v2/quotes/getJobs.json#responseBody
              schema:
                items:
                  $ref: "#/components/schemas/JobDto"
                type: array
          description: Success
      summary: Returns list of jobs in a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/quoteExpiry":
    put:
      description: Updates Quote Expiry Date for a quote.
      operationId: updateQuoteExpiry
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateQuoteExpiry.json#requestBody
            schema:
              $ref: "#/components/schemas/TimeDTO"
        description: Updated Quote Expiry Date for a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates Quote Expiry Date for a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/sourceLanguage":
    put:
      description: Updates source language for a quote.
      operationId: updateSourceLanguage_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateSourceLanguage.json#requestBody
            schema:
              $ref: "#/components/schemas/SourceLanguageDTO"
        description: Updated source language for a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates source language for a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/specialization":
    put:
      description: Updates specialization for a quote.
      operationId: updateSpecialization_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateSpecialization.json#requestBody
            schema:
              $ref: "#/components/schemas/SpecializationDTO"
        description: Updated specialization for a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates specialization for a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/status":
    put:
      description: "Changes quote status if possible (400 Bad Request is returned otherwise). The status has to be specified using one of the following keys: <ul><li>PENDING – available when the job has one of the following statuses: REQUESTED, REJECTED</li><li>SENT – available when the job has one of the following statuses: PENDING</li><li>APPROVED – available when the job has one of the following statuses: REQUESTED, PENDING, SENT, APPROVED_BY_CLIENT</li><li>REJECTED – available when the job has one of the following statuses: REQUESTED, PENDING, SENT</li></ul>"
      operationId: changeStatus_3
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/changeStatus.json#requestBody
            schema:
              $ref: "#/components/schemas/ProjectStatusDTO"
        description: Changed Quote status.
        required: true
      responses:
        "204":
          description: Success
      summary: Changes quote status if possible (400 Bad Request is returned otherwise).
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/targetLanguages":
    put:
      description: Updates target languages for a quote.
      operationId: updateTargetLanguages_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateTargetLanguages.json#requestBody
            schema:
              $ref: "#/components/schemas/TargetLanguagesDTO"
        description: Updated target languages for a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates target languages for a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/vendorInstructions":
    put:
      description: Updates instructions for all vendors performing the jobs in a quote. See also "PUT /jobs/{jobId}/instructions" for updating instructions for a specific job in a project or quote.
      operationId: updateVendorInstructions_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateInstructionsForAllJobs.json#requestBody
            schema:
              $ref: "#/components/schemas/StringDTO"
        description: Updated instructions for all vendors performing the jobs in a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates instructions for all vendors performing the jobs in a quote.
      tags:
        - Quotes (Smart)(v2)
  "/v2/quotes/{quoteId}/volume":
    put:
      description: Updates volume for a quote.
      operationId: updateVolume_1
      parameters:
        - description: quote's internal identifier
          in: path
          name: quoteId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            examples:
              ref:
                description: ref
                value: /home-api/assets/examples/v2/quotes/updateVolume.json#requestBody
            schema:
              $ref: "#/components/schemas/BigDecimalDTO"
        description: Updated volume for a quote.
        required: true
      responses:
        "204":
          description: Success
      summary: Updates volume for a quote.
      tags:
        - Quotes (Smart)(v2)
components:
  schemas:
    AccessDTO:
      properties:
        change:
          type: boolean
        delete:
          type: boolean
      type: object
    AccessTokenDTO:
      properties:
        token:
          type: string
        url:
          type: string
      type: object
    AccessTokenRequestDTO:
      properties:
        loginOrEmail:
          type: string
      type: object
    ActionDTO:
      properties:
        header:
          type: string
        name:
          type: string
      type: object
    ActionStartedDTO:
      properties:
        actionId:
          type: string
        resultUrl:
          type: string
        statusUrl:
          type: string
      type: object
    ActiveSubscriptionDTO:
      properties:
        embed:
          description: additional fields which should be embedded in the event
          type: string
        event:
          description: event to which you want to subscribe
          type: string
        filter:
          description: filter expression in the form 'attribute=value'
          type: string
        subscriptionId:
          description: subscription identifier
          type: string
        url:
          description: url that will be invoked by XTRF on event
          type: string
      type: object
    AddJobToProcessDTO:
      properties:
        externalInfo:
          $ref: "#/components/schemas/ExternalInfo"
        externalProjectId:
          type: string
        previousStepNumber:
          format: int32
          type: integer
        stepTypeId:
          type: string
      type: object
    AddressDTO:
      properties:
        addressLine1:
          description: first line of address
          type: string
        addressLine2:
          description: second line of address
          type: string
        city:
          description: city
          type: string
        countryId:
          description: country
          format: int64
          type: integer
        postalCode:
          description: postal code
          type: string
        provinceId:
          description: province
          format: int64
          type: integer
        sameAsBillingAddress:
          description: should billing address be used instead of this one
          type: boolean
      type: object
    AssignVendorDTO:
      properties:
        recalculateRates:
          type: boolean
        vendorPriceProfileId:
          format: int64
          type: integer
      type: object
    BigDecimalDTO:
      properties:
        value:
          type: number
      type: object
    BodyPart:
      properties:
        contentDisposition:
          $ref: "#/components/schemas/ContentDisposition"
        entity:
          type: object
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          properties:
            empty:
              type: boolean
          type: object
        mediaType:
          properties:
            parameters:
              additionalProperties:
                type: string
              type: object
            subtype:
              type: string
            type:
              type: string
            wildcardSubtype:
              type: boolean
            wildcardType:
              type: boolean
          type: object
        messageBodyWorkers:
          $ref: "#/components/schemas/MessageBodyWorkers"
        parameterizedHeaders:
          additionalProperties:
            items:
              $ref: "#/components/schemas/ParameterizedHeader"
            type: array
          properties:
            empty:
              type: boolean
          type: object
        parent:
          $ref: "#/components/schemas/MultiPart"
        providers:
          type: object
      type: object
    CATToolProjectDTO:
      properties:
        projectCreatedInCatToolOrCreationIsQueued:
          type: boolean
      type: object
    CalculationUnitDTO:
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        canBeUsedInCatAnalysis:
          type: boolean
        catQuantityConversionExpression:
          type: string
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        exchangeRatio:
          type: number
        fileStatsConversionExpression:
          type: string
        id:
          description: internal identifier
          format: int64
          type: integer
        jobTypeIds:
          items:
            format: int64
            type: integer
          type: array
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
        symbol:
          type: string
        timeToQuantityConversionExpression:
          type: string
        type:
          enum:
            - TIME
            - VOLUME
            - PERCENT
          type: string
      type: object
    CategoriesDTO:
      items:
        format: int64
        type: integer
      properties:
        empty:
          type: boolean
      type: array
    CategoryDTO:
      description: group of things (ie. customers or projects) similar in some way (ie. VIP customers)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
        supportedClasses:
          description: set of types for which this category can be selected
          items:
            description: set of types for which this category can be selected
            enum:
              - PROJECT
              - QUOTE
              - QUOTE_TASK
              - TASK
              - PROVIDER
              - CUSTOMER
              - CUSTOMER_PERSON
              - PROVIDER_PERSON
              - FINANCIAL_REPORT
              - REMINDER
              - PROVIDER_INVOICE
              - CUSTOMER_INVOICE
              - PROJECT_GROUP
            type: string
          type: array
          uniqueItems: true
      type: object
    ChargeDTO:
      properties:
        calculationUnitId:
          format: int64
          type: integer
        currencyId:
          format: int64
          type: integer
        description:
          type: string
        id:
          format: int64
          type: integer
        ignoreMinimumCharge:
          type: boolean
        invoiceId:
          type: string
        jobTypeId:
          format: int64
          type: integer
        languageCombination:
          $ref: "#/components/schemas/ChargeLanguageCombinationDTO"
        languageCombinationIdNumber:
          type: string
        minimumCharge:
          type: number
        rateOrigin:
          enum:
            - PRICE_PROFILE
            - PRICE_LIST
            - FILLED_MANUALLY
            - AUTOCALCULATED
          type: string
        total:
          type: number
        type:
          enum:
            - SIMPLE
            - CAT
          type: string
      type: object
    ChargeLanguageCombinationDTO:
      properties:
        sourceLanguageId:
          format: int64
          type: integer
        targetLanguageId:
          format: int64
          type: integer
      type: object
    ClassicPeopleDTO:
      description: people
      properties:
        customerContacts:
          $ref: "#/components/schemas/ContactsDTO"
        responsiblePersons:
          $ref: "#/components/schemas/ResponsiblePersonsDTO"
      type: object
    ClassicProjectCreateDTO:
      properties:
        categoriesIds:
          description: list of language categories
          items:
            description: list of language categories
            format: int64
            type: integer
          type: array
        customerId:
          format: int64
          type: integer
        dates:
          $ref: "#/components/schemas/ProjectDatesDTO"
        inputFiles:
          description: input files
          items:
            $ref: "#/components/schemas/TaskFileDTO"
          type: array
        instructions:
          $ref: "#/components/schemas/InstructionsDTO"
        name:
          type: string
        people:
          $ref: "#/components/schemas/ClassicPeopleDTO"
        serviceId:
          format: int64
          type: integer
        sourceLanguageId:
          format: int64
          type: integer
        specializationId:
          format: int64
          type: integer
        targetLanguagesIds:
          items:
            format: int64
            type: integer
          type: array
      required:
        - customerId
        - serviceId
        - specializationId
      type: object
    ColumnDTO:
      properties:
        name:
          type: string
        settings:
          $ref: "#/components/schemas/JsonNode"
      type: object
    CommonLanguageCombinationDTO:
      description: language combination (ie. PL -> EN)
      properties:
        sourceLanguageId:
          format: int64
          type: integer
        targetLanguageId:
          format: int64
          type: integer
      type: object
    CompetenciesDTO:
      properties:
        languageCombinations:
          items:
            $ref: "#/components/schemas/CommonLanguageCombinationDTO"
          type: array
      type: object
    ContactDTO:
      properties:
        emails:
          $ref: "#/components/schemas/CustomerContactEmailsDTO"
        fax:
          description: fax number
          type: string
        phones:
          description: phones' numbers
          items:
            description: phones' numbers
            type: string
          type: array
        sms:
          description: mobile phone for which SMS notifications will be sent (if configured)
          type: string
        websites:
          description: websites
          items:
            description: websites
            type: string
          type: array
      type: object
    ContactsDTO:
      properties:
        additionalIds:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        primaryId:
          format: int64
          type: integer
        sendBackToId:
          format: int64
          type: integer
      type: object
    ContentDisposition:
      properties:
        creationDate:
          format: date-time
          type: string
        fileName:
          type: string
        modificationDate:
          format: date-time
          type: string
        parameters:
          additionalProperties:
            type: string
          type: object
        readDate:
          format: date-time
          type: string
        size:
          format: int64
          type: integer
        type:
          type: string
      type: object
    CountryDTO:
      description: distinct entity in political geography (ie. Poland)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
        symbol:
          description: specific symbol or abbreviation
          type: string
      type: object
    CurrencyDTO:
      description: medium of money exchange (ie. euro or dollar)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        isoCode:
          description: <a href="http://en.wikipedia.org/wiki/ISO_4217">ISO 4217 code</a>
          type: string
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
        symbol:
          description: specific symbol or abbreviation
          type: string
      type: object
    CurrencyHistoryDTO:
      properties:
        dateFrom:
          $ref: "#/components/schemas/TimeDTO"
        exchangeRate:
          type: string
        lastModification:
          $ref: "#/components/schemas/TimeDTO"
        originDetails:
          type: string
        publicationDate:
          $ref: "#/components/schemas/TimeDTO"
      type: object
    CustomFieldDTO:
      properties:
        key:
          type: string
        name:
          type: string
        type:
          enum:
            - TEXT
            - DATE
            - DATE_AND_TIME
            - NUMBER
            - CHECKBOX
            - SELECTION
            - MULTI_SELECTION
          type: string
        value:
          type: object
      type: object
      xml:
        name: customField
    CustomFieldsDTO:
      items:
        $ref: "#/components/schemas/CustomFieldDTO"
      properties:
        customFields:
          items:
            $ref: "#/components/schemas/CustomFieldDTO"
          type: array
          xml:
            name: customField
        empty:
          type: boolean
      type: array
      xml:
        name: customFields
    CustomerAccountingDTO:
      properties:
        taxNumbers:
          items:
            $ref: "#/components/schemas/CustomerTaxNoDTO"
          type: array
      type: object
    CustomerContactEmailsDTO:
      description: emails
      properties:
        additional:
          description: additional e-mails addresses
          items:
            description: additional e-mails addresses
            type: string
          type: array
        cc:
          description: e-mails which will be included in the CC list
          items:
            description: e-mails which will be included in the CC list
            type: string
          type: array
        primary:
          description: primary e-mail
          type: string
      required:
        - primary
      type: object
    CustomerDTO:
      properties:
        accountOnCustomerServer:
          type: string
        accounting:
          $ref: "#/components/schemas/CustomerAccountingDTO"
        billingAddress:
          $ref: "#/components/schemas/AddressDTO"
        branchId:
          format: int64
          type: integer
        categoriesIds:
          items:
            format: int64
            type: integer
          properties:
            empty:
              type: boolean
          type: array
        clientFirstProjectDate:
          format: date-time
          type: string
        clientFirstQuoteDate:
          format: date-time
          type: string
        clientLastProjectDate:
          format: date-time
          type: string
        clientLastQuoteDate:
          format: date-time
          type: string
        clientNumberOfProjects:
          format: int32
          type: integer
        clientNumberOfQuotes:
          format: int32
          type: integer
        contact:
          $ref: "#/components/schemas/ContactDTO"
        contractNumber:
          type: string
        correspondenceAddress:
          $ref: "#/components/schemas/AddressDTO"
        customFields:
          items:
            $ref: "#/components/schemas/CustomFieldDTO"
          properties:
            customFields:
              items:
                $ref: "#/components/schemas/CustomFieldDTO"
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          type: array
          xml:
            name: customFields
        fullName:
          type: string
        id:
          format: int64
          type: integer
        idNumber:
          type: string
        industriesIds:
          items:
            format: int64
            type: integer
          properties:
            empty:
              type: boolean
          type: array
        leadSourceId:
          format: int64
          type: integer
        limitAccessToPeopleResponsible:
          type: boolean
        name:
          type: string
        notes:
          type: string
        persons:
          items:
            $ref: "#/components/schemas/CustomerPersonDTO"
          type: array
        responsiblePersons:
          $ref: "#/components/schemas/CustomerResponsiblePersonsDTO"
        salesNotes:
          type: string
        status:
          enum:
            - ACTIVE
            - INACTIVE
            - POTENTIAL
          type: string
      type: object
    CustomerDetailsDTO:
      properties:
        addressLine:
          type: string
        city:
          type: string
        country:
          type: string
        countryId:
          format: int64
          type: integer
        name:
          type: string
        postalCode:
          type: string
        vatUE:
          type: string
      type: object
    CustomerInvoiceCreateDTO:
      properties:
        prepaymentsIds:
          items:
            format: int64
            type: integer
          type: array
        tasksIds:
          items:
            format: int64
            type: integer
          type: array
        type:
          enum:
            - FINAL
            - DRAFT
            - CREDIT_NOTE
          type: string
      type: object
    CustomerInvoiceCreateResultDTO:
      properties:
        invoiceUrl:
          type: string
        invoicesIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    CustomerInvoiceDTO:
      properties:
        currencyId:
          format: int64
          type: integer
        customerDetails:
          $ref: "#/components/schemas/CustomerDetailsDTO"
        customerId:
          format: int64
          type: integer
        dates:
          $ref: "#/components/schemas/CustomerInvoiceDatesDTO"
        id:
          format: int64
          type: integer
        invoiceNumber:
          type: string
        paymentMethodId:
          format: int64
          type: integer
        paymentTerms:
          $ref: "#/components/schemas/PaymentTermsDTO"
        status:
          enum:
            - NOT_READY
            - READY
            - SENT
          type: string
        tasks:
          items:
            $ref: "#/components/schemas/TaskDTO"
          type: array
        tasksValue:
          type: number
        totalGross:
          type: number
        totalInWords:
          type: string
        totalNetto:
          type: number
        type:
          enum:
            - FINAL
            - DRAFT
            - CREDIT_NOTE
          type: string
        vatCalculationRule:
          enum:
            - SUM_ITEMS
            - BY_NET_TOTAL
          type: string
      type: object
    CustomerInvoiceDatesDTO:
      properties:
        draftDate:
          $ref: "#/components/schemas/TimeDTO"
        finalDate:
          $ref: "#/components/schemas/TimeDTO"
        invoiceDate:
          $ref: "#/components/schemas/TimeDTO"
        paymentDueDate:
          $ref: "#/components/schemas/TimeDTO"
      type: object
    CustomerPersonDTO:
      description: CustomerPerson
      properties:
        active:
          type: boolean
        contact:
          $ref: "#/components/schemas/PersonContactDTO"
        customFields:
          items:
            $ref: "#/components/schemas/CustomFieldDTO"
          properties:
            customFields:
              items:
                $ref: "#/components/schemas/CustomFieldDTO"
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          type: array
          xml:
            name: customFields
        customerId:
          format: int64
          type: integer
        firstProjectDate:
          format: date-time
          type: string
        firstQuoteDate:
          format: date-time
          type: string
        gender:
          enum:
            - FEMALE
            - MALE
          type: string
        id:
          format: int64
          type: integer
        lastName:
          type: string
        lastProjectDate:
          format: date-time
          type: string
        lastQuoteDate:
          format: date-time
          type: string
        motherTonguesIds:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        name:
          type: string
        numberOfProjects:
          format: int32
          type: integer
        numberOfQuotes:
          format: int32
          type: integer
        positionId:
          format: int64
          type: integer
      type: object
    CustomerResponsiblePersonsDTO:
      properties:
        accountManagerId:
          description: account manager
          format: int64
          type: integer
        projectCoordinatorId:
          description: project coordinator
          format: int64
          type: integer
        projectManagerId:
          description: project manager
          format: int64
          type: integer
        salesPersonId:
          description: sales person
          format: int64
          type: integer
      required:
        - projectManagerId
        - salesPersonId
      type: object
    CustomerTaxNoDTO:
      properties:
        number:
          description: tax number
          type: string
        type:
          description: type (ie. NIP, VAT Reg No, P.IVA) or empty value if unknown
          type: string
      type: object
    DictionaryEntity:
      properties:
        active:
          type: boolean
        andClearEventsQueue:
          $ref: "#/components/schemas/EventsQueue"
        auditDisplayName:
          type: string
        auditPath:
          type: string
        classNameKey:
          type: string
        classSimpleName:
          type: string
        compoundId:
          type: string
        defaultEntity:
          type: boolean
        displayName:
          type: string
        entityMarkedAsNotSupposedToBePersisted:
          type: boolean
        eventsQueueReadyToBeDispatched:
          type: boolean
        id:
          format: int64
          type: integer
        identifier:
          $ref: "#/components/schemas/Identifier"
        internalDescription:
          type: string
        lastModificationDate:
          format: date-time
          type: string
        name:
          type: string
        packedCompoundId:
          type: string
        preferedEntity:
          type: boolean
        preferred:
          type: boolean
        version:
          format: int32
          type: integer
      required:
        - name
        - preferedEntity
      type: object
    DocumentsDTO:
      properties:
        projectConfirmationStatus:
          type: string
      type: object
    DownloadDocumentsRequestDTO:
      properties:
        ids:
          items:
            format: int64
            type: integer
          type: array
      type: object
    EntityWithNameDTO:
      properties:
        id:
          format: int64
          type: integer
        name:
          type: string
      type: object
    Event:
      properties:
        raiseTime:
          format: int64
          type: integer
          writeOnly: true
      type: object
    EventsQueue:
      properties:
        all:
          items:
            $ref: "#/components/schemas/Event"
          type: array
        empty:
          type: boolean
        readyToBeDispatched:
          type: boolean
      type: object
    ExportRequestDTO:
      properties:
        ids:
          items:
            format: int64
            type: integer
          type: array
      type: object
    ExternalFileDto:
      properties:
        category:
          type: string
        externalInfo:
          additionalProperties:
            type: string
          type: object
        filename:
          type: string
        languageCombinationIds:
          items:
            $ref: "#/components/schemas/LanguageCombinationDto"
          type: array
        languageIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    ExternalInfo:
      properties:
        steps:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
      type: object
    FileCategorizationDto:
      properties:
        category:
          type: string
        fileId:
          type: string
        languageCombinationIds:
          items:
            $ref: "#/components/schemas/LanguageCombinationDto"
          type: array
        languageIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    FileCategorizationsDto:
      properties:
        files:
          items:
            $ref: "#/components/schemas/FileCategorizationDto"
          type: array
      type: object
    FileDTO:
      properties:
        content:
          type: string
        name:
          type: string
        token:
          type: string
        url:
          type: string
      type: object
    FileDto:
      properties:
        fileId:
          type: string
      type: object
    FileLinkCategorizationDto:
      properties:
        category:
          type: string
        externalInfo:
          additionalProperties:
            type: string
          type: object
        filename:
          type: string
        languageCombinationIds:
          items:
            $ref: "#/components/schemas/LanguageCombinationDto"
          type: array
        languageIds:
          items:
            format: int64
            type: integer
          type: array
        toBeGenerated:
          type: boolean
        url:
          type: string
      type: object
    FileLinkCategorizationsDto:
      properties:
        fileLinks:
          items:
            $ref: "#/components/schemas/FileLinkCategorizationDto"
          type: array
      type: object
    FileMetadataDTO:
      properties:
        categoryKey:
          type: string
        id:
          format: int64
          type: integer
        lastModifiedOn:
          format: int64
          type: integer
        name:
          type: string
        size:
          format: int64
          type: integer
      type: object
    FileShareStatusDto:
      properties:
        fileId:
          type: string
        message:
          type: string
        successful:
          type: boolean
      type: object
    FileToUploadDto:
      properties:
        file:
          format: binary
          type: string
      type: object
    FilesArchiveDto:
      properties:
        archiveUrl:
          type: string
      type: object
    FilesDto:
      properties:
        files:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    FilesShareStatusDto:
      properties:
        statuses:
          items:
            $ref: "#/components/schemas/FileShareStatusDto"
          type: array
          uniqueItems: true
      type: object
    FilterDTO:
      properties:
        properties:
          items:
            type: object
          type: array
      type: object
    FilterPropertyDTO:
      properties:
        name:
          type: string
        settings:
          type: object
        settingsPresent:
          type: boolean
        type:
          type: string
      type: object
    FinanceDTO:
      properties:
        ROI:
          type: number
        currencyId:
          format: int64
          type: integer
        margin:
          type: number
        payables:
          items:
            $ref: "#/components/schemas/ChargeDTO"
          type: array
        profit:
          type: number
        receivables:
          items:
            $ref: "#/components/schemas/ChargeDTO"
          type: array
        totalAgreed:
          type: number
        totalCost:
          type: number
      type: object
    FormDataBodyPart:
      properties:
        contentDisposition:
          $ref: "#/components/schemas/ContentDisposition"
        entity:
          type: object
        formDataContentDisposition:
          $ref: "#/components/schemas/FormDataContentDisposition"
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          properties:
            empty:
              type: boolean
          type: object
        mediaType:
          properties:
            parameters:
              additionalProperties:
                type: string
              type: object
            subtype:
              type: string
            type:
              type: string
            wildcardSubtype:
              type: boolean
            wildcardType:
              type: boolean
          type: object
        messageBodyWorkers:
          $ref: "#/components/schemas/MessageBodyWorkers"
        name:
          type: string
        parameterizedHeaders:
          additionalProperties:
            items:
              $ref: "#/components/schemas/ParameterizedHeader"
            type: array
          properties:
            empty:
              type: boolean
          type: object
        parent:
          $ref: "#/components/schemas/MultiPart"
        providers:
          type: object
        simple:
          type: boolean
        value:
          type: string
      type: object
    FormDataContentDisposition:
      properties:
        creationDate:
          format: date-time
          type: string
        fileName:
          type: string
        modificationDate:
          format: date-time
          type: string
        name:
          type: string
        parameters:
          additionalProperties:
            type: string
          type: object
        readDate:
          format: date-time
          type: string
        size:
          format: int64
          type: integer
        type:
          type: string
      type: object
    FormDataMultiPart:
      properties:
        bodyParts:
          items:
            $ref: "#/components/schemas/BodyPart"
          type: array
        contentDisposition:
          $ref: "#/components/schemas/ContentDisposition"
        entity:
          type: object
        fields:
          additionalProperties:
            items:
              $ref: "#/components/schemas/FormDataBodyPart"
            type: array
          type: object
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          properties:
            empty:
              type: boolean
          type: object
        mediaType:
          properties:
            parameters:
              additionalProperties:
                type: string
              type: object
            subtype:
              type: string
            type:
              type: string
            wildcardSubtype:
              type: boolean
            wildcardType:
              type: boolean
          type: object
        messageBodyWorkers:
          $ref: "#/components/schemas/MessageBodyWorkers"
        parameterizedHeaders:
          additionalProperties:
            items:
              $ref: "#/components/schemas/ParameterizedHeader"
            type: array
          properties:
            empty:
              type: boolean
          type: object
        parent:
          $ref: "#/components/schemas/MultiPart"
        providers:
          type: object
      type: object
    GetLicenseResult:
      properties:
        clientId:
          type: string
        parameters:
          additionalProperties:
            $ref: "#/components/schemas/Parameter"
          type: object
      type: object
    Identifier:
      properties:
        compoundId:
          type: string
        id:
          format: int64
          type: integer
      type: object
    ImportRequestDTO:
      properties:
        fileToken:
          type: string
      type: object
    ImportResultDTO:
      properties:
        currentSystemVersion:
          type: string
        importedReportsNames:
          items:
            type: string
          type: array
        invalidReportsNames:
          items:
            type: string
          type: array
        targetSystemVersion:
          type: string
      type: object
    IndustriesDTO:
      items:
        format: int64
        type: integer
      properties:
        empty:
          type: boolean
      type: array
    IndustryDTO:
      description: industry related with translation (ie. biotechnology)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
      type: object
    InputFilesDTO:
      properties:
        logFiles:
          items:
            $ref: "#/components/schemas/FileDTO"
          type: array
        referenceFiles:
          items:
            $ref: "#/components/schemas/FileDTO"
          type: array
        terminology:
          items:
            $ref: "#/components/schemas/FileDTO"
          type: array
        tm:
          items:
            $ref: "#/components/schemas/FileDTO"
          type: array
        workFiles:
          items:
            $ref: "#/components/schemas/FileDTO"
          type: array
      type: object
    InstructionsDTO:
      properties:
        forProvider:
          type: string
        fromCustomer:
          type: string
        internal:
          type: string
        notes:
          type: string
        paymentNoteForCustomer:
          type: string
        paymentNoteForVendor:
          type: string
      type: object
    InvitationStatisticsDTO:
      properties:
        alreadyRegisteredPersonsCount:
          format: int32
          type: integer
        invitedPersonsCount:
          format: int32
          type: integer
        providersWithAlreadyRegisteredPersonCount:
          format: int32
          type: integer
        providersWithInvitedPersonCount:
          format: int32
          type: integer
        providersWithoutPersonCount:
          format: int32
          type: integer
      type: object
    JobCommunicationDto:
      properties:
        instructionsForAllJobs:
          type: string
        instructionsForJob:
          type: string
        noteFromVendor:
          type: string
      type: object
    JobDTO:
      properties:
        files:
          $ref: "#/components/schemas/JobFilesDTO"
        id:
          format: int64
          type: integer
        idNumber:
          type: string
        name:
          type: string
      type: object
    JobDatesDto:
      properties:
        actualEndDate:
          format: int64
          type: integer
        actualStartDate:
          format: int64
          type: integer
        deadline:
          format: int64
          type: integer
        startDate:
          format: int64
          type: integer
      type: object
    JobDocumentsDto:
      properties:
        purchaseOrderStatus:
          type: string
      type: object
    JobDto:
      properties:
        communication:
          $ref: "#/components/schemas/JobCommunicationDto"
        dates:
          $ref: "#/components/schemas/JobDatesDto"
        documents:
          $ref: "#/components/schemas/JobDocumentsDto"
        files:
          $ref: "#/components/schemas/JobFilesDto"
        id:
          type: string
        idNumber:
          type: string
        languages:
          items:
            $ref: "#/components/schemas/JobLanguageCombinationDto"
          type: array
        name:
          type: string
        status:
          type: string
        stepNumber:
          format: int32
          type: integer
        stepType:
          $ref: "#/components/schemas/StepTypeDto"
        vendorId:
          format: int64
          type: integer
        vendorPriceProfileId:
          format: int64
          type: integer
      type: object
    JobFilesDTO:
      properties:
        inputFiles:
          items:
            $ref: "#/components/schemas/FileDTO"
          type: array
        outputFiles:
          items:
            $ref: "#/components/schemas/FileDTO"
          type: array
      type: object
    JobFilesDto:
      properties:
        deliveredInJobFiles:
          items:
            type: string
          type: array
          uniqueItems: true
        sharedReferenceFiles:
          items:
            type: string
          type: array
          uniqueItems: true
        sharedWorkFiles:
          items:
            type: string
          type: array
          uniqueItems: true
      type: object
    JobLanguageCombinationDto:
      properties:
        sourceLanguageId:
          format: int64
          type: integer
        specializationId:
          format: int64
          type: integer
        targetLanguageId:
          format: int64
          type: integer
      type: object
    JobStatusDTO:
      properties:
        externalId:
          type: string
        status:
          type: string
      type: object
    JobTypeDTO:
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        calculationUnitIds:
          items:
            format: int64
            type: integer
          type: array
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        filesNeeded:
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
        providedByClient:
          type: boolean
        relationToLanguage:
          enum:
            - LANGUAGE_COMBINATION_RELATED
            - SOURCE_LANGUAGE_RELATED_ONLY
            - TARGET_LANGUAGE_RELATED_ONLY
            - LANGUAGE_INDEPENDENT
          type: string
        vendorProductivity:
          type: number
        vendorProductivityCalculationUnitId:
          format: int64
          type: integer
      type: object
    JsonNode:
      type: object
    LanguageCombinationDTO:
      properties:
        sourceLanguageId:
          format: int64
          type: integer
        specializationId:
          format: int64
          type: integer
        targetLanguageId:
          format: int64
          type: integer
      type: object
    LanguageCombinationDto:
      properties:
        sourceLanguageId:
          format: int64
          type: integer
        targetLanguageId:
          format: int64
          type: integer
      type: object
    LanguageDTO:
      description: language (ie. Polish)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        iso6391:
          description: <a href="http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO 639-1 code</a>
          type: string
        iso6392:
          description: <a href="http://en.wikipedia.org/wiki/List_of_ISO_639-2_codes">ISO 639-2 code</a>
          type: string
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
        symbol:
          description: specific symbol or abbreviation
          type: string
      type: object
    LanguageRelationDto:
      properties:
        languageCombinations:
          items:
            $ref: "#/components/schemas/LanguageCombinationDto"
          type: array
        languages:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
      type: object
    LanguageSpecializationDTO:
      description: language specialization (ie. railways)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
      type: object
    LastModificationDTO:
      properties:
        date:
          type: string
        modifier:
          type: string
      type: object
    LeadSourceDTO:
      description: origin of a customer (ie. recomendation from another customer)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        availableForCustomer:
          description: should be available for customer
          type: boolean
        availableForProvider:
          description: should be available for provider
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
      type: object
    LocalSettingsDTO:
      properties:
        maxLinesInRow:
          format: int32
          type: integer
        maxRows:
          format: int32
          type: integer
      type: object
    LongDTO:
      properties:
        value:
          format: int64
          type: integer
      type: object
    MacroRequestDTO:
      properties:
        async:
          description: "indicates whether the macro should be executed asynchronously or synchronously (default: false)"
          type: boolean
        ids:
          description: list of internal identifiers of elements to be processed by the macro, can be empty for certain macros
          items:
            description: list of internal identifiers of elements to be processed by the macro, can be empty for certain macros
            format: int64
            type: integer
          type: array
        params:
          additionalProperties:
            description: map of custom key-value pairs that can optionally parametrize the macro execution
            type: object
          description: map of custom key-value pairs that can optionally parametrize the macro execution
          type: object
      type: object
    ManyValuesPerTypeDTO:
      properties:
        calculationUnit:
          items:
            $ref: "#/components/schemas/CalculationUnitDTO"
          type: array
        category:
          items:
            $ref: "#/components/schemas/CategoryDTO"
          type: array
        country:
          items:
            $ref: "#/components/schemas/CountryDTO"
          type: array
        currency:
          items:
            $ref: "#/components/schemas/CurrencyDTO"
          type: array
        industry:
          items:
            $ref: "#/components/schemas/IndustryDTO"
          type: array
        jobType:
          items:
            $ref: "#/components/schemas/JobTypeDTO"
          type: array
        language:
          items:
            $ref: "#/components/schemas/LanguageDTO"
          type: array
        leadSource:
          items:
            $ref: "#/components/schemas/LeadSourceDTO"
          type: array
        personDepartment:
          items:
            $ref: "#/components/schemas/PersonDepartmentDTO"
          type: array
        personPosition:
          items:
            $ref: "#/components/schemas/PersonPositionDTO"
          type: array
        province:
          items:
            $ref: "#/components/schemas/ProvinceDTO"
          type: array
        specialization:
          items:
            $ref: "#/components/schemas/LanguageSpecializationDTO"
          type: array
      type: object
    MessageBodyWorkers:
      type: object
    MultiPart:
      properties:
        bodyParts:
          items:
            $ref: "#/components/schemas/BodyPart"
          type: array
        contentDisposition:
          $ref: "#/components/schemas/ContentDisposition"
        entity:
          type: object
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          properties:
            empty:
              type: boolean
          type: object
        mediaType:
          properties:
            parameters:
              additionalProperties:
                type: string
              type: object
            subtype:
              type: string
            type:
              type: string
            wildcardSubtype:
              type: boolean
            wildcardType:
              type: boolean
          type: object
        messageBodyWorkers:
          $ref: "#/components/schemas/MessageBodyWorkers"
        parameterizedHeaders:
          additionalProperties:
            items:
              $ref: "#/components/schemas/ParameterizedHeader"
            type: array
          properties:
            empty:
              type: boolean
          type: object
        parent:
          $ref: "#/components/schemas/MultiPart"
        providers:
          type: object
      type: object
    OrderDTO:
      properties:
        column:
          type: string
        type:
          type: string
      type: object
    Parameter:
      properties:
        type:
          type: string
        value:
          type: string
      type: object
    ParameterizedHeader:
      properties:
        parameters:
          additionalProperties:
            type: string
          type: object
        value:
          type: string
      type: object
    PayableCreateDTO:
      properties:
        calculationUnitId:
          format: int64
          type: integer
        catLogFile:
          $ref: "#/components/schemas/FileDTO"
        currencyId:
          format: int64
          type: integer
        description:
          type: string
        id:
          format: int64
          type: integer
        ignoreMinimumCharge:
          type: boolean
        invoiceId:
          type: string
        jobId:
          type: object
        jobTypeId:
          format: int64
          type: integer
        languageCombination:
          $ref: "#/components/schemas/ChargeLanguageCombinationDTO"
        languageCombinationIdNumber:
          type: string
        minimumCharge:
          type: number
        quantity:
          type: number
        rate:
          type: number
        rateOrigin:
          enum:
            - PRICE_PROFILE
            - PRICE_LIST
            - FILLED_MANUALLY
            - AUTOCALCULATED
          type: string
        total:
          type: number
        type:
          enum:
            - SIMPLE
            - CAT
          type: string
      type: object
    PayableDTO:
      properties:
        calculationUnitId:
          format: int64
          type: integer
        currencyId:
          format: int64
          type: integer
        description:
          type: string
        id:
          format: int64
          type: integer
        ignoreMinimumCharge:
          type: boolean
        invoiceId:
          type: string
        jobId:
          type: object
        jobTypeId:
          format: int64
          type: integer
        languageCombination:
          $ref: "#/components/schemas/ChargeLanguageCombinationDTO"
        languageCombinationIdNumber:
          type: string
        minimumCharge:
          type: number
        quantity:
          type: number
        rate:
          type: number
        rateOrigin:
          enum:
            - PRICE_PROFILE
            - PRICE_LIST
            - FILLED_MANUALLY
            - AUTOCALCULATED
          type: string
        total:
          type: number
        type:
          enum:
            - SIMPLE
            - CAT
          type: string
      type: object
    PaymentDTO:
      properties:
        amount:
          type: number
        notes:
          type: string
        paymentDate:
          $ref: "#/components/schemas/TimeDTO"
        paymentMethodId:
          format: int64
          type: integer
      type: object
    PaymentTermsDTO:
      properties:
        description:
          type: string
        name:
          type: string
      type: object
    PeopleDTO:
      properties:
        projectManagerId:
          format: int64
          type: integer
      type: object
    PermissionsDTO:
      properties:
        sharedGroups:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
      type: object
    PersonContactDTO:
      properties:
        emails:
          $ref: "#/components/schemas/PersonContactEmailsDTO"
        fax:
          description: fax number
          type: string
        phones:
          description: phones' numbers
          items:
            description: phones' numbers
            type: string
          type: array
        sms:
          description: mobile phone for which SMS notifications will be sent (if configured)
          type: string
      type: object
    PersonContactEmailsDTO:
      description: emails
      properties:
        additional:
          description: additional e-mails addresses
          items:
            description: additional e-mails addresses
            type: string
          type: array
        primary:
          description: primary e-mail
          type: string
      required:
        - primary
      type: object
    PersonDepartmentDTO:
      description: person's department (ie. human resources)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
      type: object
    PersonPositionDTO:
      description: person's position (ie. proofreader)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
      type: object
    PreferredRequestDTO:
      properties:
        preferred:
          type: boolean
      type: object
    ProjectCreateDTO:
      properties:
        clientId:
          format: int64
          type: integer
        externalId:
          type: string
        name:
          type: string
        serviceId:
          format: int64
          type: integer
      type: object
    ProjectDTOv1:
      properties:
        categoriesIds:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        contactPersonId:
          format: int64
          type: integer
        contacts:
          $ref: "#/components/schemas/ContactsDTO"
        customFields:
          items:
            $ref: "#/components/schemas/CustomFieldDTO"
          properties:
            customFields:
              items:
                $ref: "#/components/schemas/CustomFieldDTO"
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          type: array
          xml:
            name: customFields
        customerId:
          format: int64
          type: integer
        dates:
          $ref: "#/components/schemas/ProjectDatesDTO"
        finance:
          $ref: "#/components/schemas/FinanceDTO"
        id:
          format: int64
          type: integer
        idNumber:
          type: string
        instructions:
          $ref: "#/components/schemas/InstructionsDTO"
        isClassicProject:
          type: boolean
        name:
          type: string
        projectId:
          type: string
        projectManagerId:
          format: int64
          type: integer
        specializationId:
          format: int64
          type: integer
        status:
          enum:
            - REQUESTED_PROJECT
            - OPENED
            - CLOSED
            - CANCELLED
            - CLAIM
          type: string
        tasks:
          items:
            $ref: "#/components/schemas/TaskDTO"
          type: array
      type: object
    ProjectDTOv2:
      properties:
        budgetCode:
          type: string
        categoryIds:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        clientDeadline:
          format: int64
          type: integer
        clientId:
          format: int64
          type: integer
        clientNotes:
          type: string
        clientReferenceNumber:
          type: string
        documents:
          $ref: "#/components/schemas/DocumentsDTO"
        id:
          type: string
        instructionsForAllJobs:
          type: string
        internalNotes:
          type: string
        isClassicProject:
          type: boolean
        languages:
          $ref: "#/components/schemas/ProjectLanguagesDTO"
        name:
          type: string
        orderedOn:
          format: int64
          type: integer
        origin:
          type: string
        people:
          $ref: "#/components/schemas/PeopleDTO"
        projectId:
          type: string
        projectIdNumber:
          type: string
        quoteIdNumber:
          type: string
        serviceId:
          format: int64
          type: integer
        status:
          type: string
        volume:
          $ref: "#/components/schemas/VolumeDTO"
      type: object
    ProjectDatesDTO:
      properties:
        actualDeliveryDate:
          $ref: "#/components/schemas/TimeDTO"
        actualStartDate:
          $ref: "#/components/schemas/TimeDTO"
        deadline:
          $ref: "#/components/schemas/TimeDTO"
        startDate:
          $ref: "#/components/schemas/TimeDTO"
      type: object
    ProjectFileAddedByDto:
      properties:
        userType:
          type: string
        vendorId:
          format: int64
          type: integer
      type: object
    ProjectFileDto:
      properties:
        addedBy:
          $ref: "#/components/schemas/ProjectFileAddedByDto"
        addedInJob:
          type: string
        addedInLastStep:
          type: boolean
        addedInStep:
          format: int64
          type: integer
        categoryKey:
          type: string
        id:
          type: string
        isAccepted:
          type: boolean
        isLink:
          type: boolean
        isRemote:
          type: boolean
        languageRelation:
          $ref: "#/components/schemas/LanguageRelationDto"
        lastModifiedOn:
          format: int64
          type: integer
        name:
          type: string
        remoteCATToolReferences:
          $ref: "#/components/schemas/RemoteCATToolReferencesDto"
        sharedWithJobs:
          items:
            type: string
          type: array
          uniqueItems: true
        size:
          format: int64
          type: integer
        url:
          type: string
      type: object
    ProjectLanguagesDTO:
      properties:
        languageCombinations:
          items:
            $ref: "#/components/schemas/LanguageCombinationDTO"
          type: array
        sourceLanguageId:
          format: int64
          type: integer
        specializationId:
          format: int64
          type: integer
        targetLanguageIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    ProjectStatusDTO:
      properties:
        status:
          type: string
      type: object
    ProviderDTO:
      properties:
        billingAddress:
          $ref: "#/components/schemas/AddressDTO"
        branchId:
          format: int64
          type: integer
        competencies:
          $ref: "#/components/schemas/CompetenciesDTO"
        contact:
          $ref: "#/components/schemas/ContactDTO"
        correspondenceAddress:
          $ref: "#/components/schemas/AddressDTO"
        customFields:
          items:
            $ref: "#/components/schemas/CustomFieldDTO"
          properties:
            customFields:
              items:
                $ref: "#/components/schemas/CustomFieldDTO"
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          type: array
          xml:
            name: customFields
        fullName:
          type: string
        id:
          format: int64
          type: integer
        idNumber:
          type: string
        leadSourceId:
          format: int64
          type: integer
        name:
          type: string
        notes:
          type: string
        persons:
          items:
            $ref: "#/components/schemas/ProviderPersonDTO"
          type: array
        status:
          enum:
            - ACTIVE
            - INACTIVE
            - WAITING_FOR_APPROVAL
            - REJECTED
            - TOO_EXPENSIVE
            - INCOMPLETE_DATA
            - POTENTIAL
            - NOT_CONFIRMED
          type: string
      type: object
    ProviderInvoiceCreateDTO:
      properties:
        jobsIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    ProviderInvoiceCreateResultDTO:
      properties:
        invoiceUrl:
          type: string
        invoicesIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    ProviderInvoiceDTO:
      properties:
        currencyId:
          format: int64
          type: integer
        dates:
          $ref: "#/components/schemas/ProviderInvoiceDatesDTO"
        draftNumber:
          type: string
        finalNumber:
          type: string
        id:
          format: int64
          type: integer
        internalNumber:
          type: string
        jobsNetValue:
          type: number
        notesFromProvider:
          type: string
        paymentStatus:
          enum:
            - NOT_PAID
            - FULLY_PAID
            - IRRECOVERABLE
            - PARTIALLY_PAID
          type: string
        providerId:
          format: int64
          type: integer
        status:
          enum:
            - POSTPONED
            - TO_BE_SENT
            - SENT
            - CONFIRMED
            - BILL_CREATED
          type: string
        totalGross:
          type: number
        totalGrossInWords:
          type: string
        totalNetto:
          type: number
      type: object
    ProviderInvoiceDatesDTO:
      properties:
        draftDate:
          $ref: "#/components/schemas/TimeDTO"
        finalDate:
          $ref: "#/components/schemas/TimeDTO"
        invoiceUploadedDate:
          $ref: "#/components/schemas/TimeDTO"
        paymentDueDate:
          $ref: "#/components/schemas/TimeDTO"
      type: object
    ProviderPersonDTO:
      properties:
        active:
          type: boolean
        contact:
          $ref: "#/components/schemas/PersonContactDTO"
        customFields:
          items:
            $ref: "#/components/schemas/CustomFieldDTO"
          properties:
            customFields:
              items:
                $ref: "#/components/schemas/CustomFieldDTO"
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          type: array
          xml:
            name: customFields
        gender:
          enum:
            - FEMALE
            - MALE
          type: string
        id:
          format: int64
          type: integer
        lastName:
          type: string
        motherTonguesIds:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        name:
          type: string
        positionId:
          format: int64
          type: integer
        providerId:
          format: int64
          type: integer
      type: object
    ProvinceDTO:
      description: territorial unit within a country (ie. Nebraska)
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        countryId:
          description: country's identifier
          format: int64
          type: integer
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
      type: object
    QuoteCreateDTO:
      properties:
        clientId:
          format: int64
          type: integer
        name:
          type: string
        opportunityOfferId:
          format: int64
          type: integer
        serviceId:
          format: int64
          type: integer
      type: object
    QuoteDTOv1:
      properties:
        automaticallyAcceptSentQuote:
          type: boolean
        categoriesIds:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        contactPersonId:
          format: int64
          type: integer
        customFields:
          items:
            $ref: "#/components/schemas/CustomFieldDTO"
          properties:
            customFields:
              items:
                $ref: "#/components/schemas/CustomFieldDTO"
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          type: array
          xml:
            name: customFields
        customerId:
          format: int64
          type: integer
        dates:
          $ref: "#/components/schemas/QuoteDatesDTO"
        finance:
          $ref: "#/components/schemas/FinanceDTO"
        id:
          format: int64
          type: integer
        idNumber:
          type: string
        instructions:
          $ref: "#/components/schemas/InstructionsDTO"
        isClassicQuote:
          type: boolean
        name:
          type: string
        quoteId:
          type: string
        salesPersonId:
          format: int64
          type: integer
        status:
          type: string
        tasks:
          items:
            $ref: "#/components/schemas/TaskDTO"
          type: array
      type: object
    QuoteDTOv2:
      properties:
        budgetCode:
          type: string
        businessDays:
          format: int64
          type: integer
        categoryIds:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        clientDeadline:
          format: int64
          type: integer
        clientId:
          format: int64
          type: integer
        clientNotes:
          type: string
        clientReferenceNumber:
          type: string
        createdOn:
          format: int64
          type: integer
        documents:
          $ref: "#/components/schemas/DocumentsDTO"
        expectedDeliveryDate:
          format: int64
          type: integer
        id:
          type: string
        instructionsForAllJobs:
          type: string
        internalNotes:
          type: string
        isClassicQuote:
          type: boolean
        languages:
          $ref: "#/components/schemas/ProjectLanguagesDTO"
        name:
          type: string
        origin:
          type: string
        people:
          $ref: "#/components/schemas/PeopleDTO"
        quoteExpiry:
          format: int64
          type: integer
        quoteId:
          type: string
        quoteIdNumber:
          type: string
        serviceId:
          format: int64
          type: integer
        status:
          type: string
        volume:
          $ref: "#/components/schemas/VolumeDTO"
      type: object
    QuoteDatesDTO:
      properties:
        createdOn:
          $ref: "#/components/schemas/TimeDTO"
        deadline:
          $ref: "#/components/schemas/TimeDTO"
        offerExpiry:
          $ref: "#/components/schemas/TimeDTO"
        startDate:
          $ref: "#/components/schemas/TimeDTO"
      type: object
    ReceivableCreateDTO:
      properties:
        calculationUnitId:
          format: int64
          type: integer
        catLogFile:
          $ref: "#/components/schemas/FileDTO"
        currencyId:
          format: int64
          type: integer
        description:
          type: string
        id:
          format: int64
          type: integer
        ignoreMinimumCharge:
          type: boolean
        invoiceId:
          type: string
        jobTypeId:
          format: int64
          type: integer
        languageCombination:
          $ref: "#/components/schemas/ChargeLanguageCombinationDTO"
        languageCombinationIdNumber:
          type: string
        minimumCharge:
          type: number
        quantity:
          type: number
        rate:
          type: number
        rateOrigin:
          enum:
            - PRICE_PROFILE
            - PRICE_LIST
            - FILLED_MANUALLY
            - AUTOCALCULATED
          type: string
        taskId:
          format: int64
          type: integer
        total:
          type: number
        type:
          enum:
            - SIMPLE
            - CAT
          type: string
      type: object
    ReceivableDTO:
      properties:
        calculationUnitId:
          format: int64
          type: integer
        currencyId:
          format: int64
          type: integer
        description:
          type: string
        id:
          format: int64
          type: integer
        ignoreMinimumCharge:
          type: boolean
        invoiceId:
          type: string
        jobTypeId:
          format: int64
          type: integer
        languageCombination:
          $ref: "#/components/schemas/ChargeLanguageCombinationDTO"
        languageCombinationIdNumber:
          type: string
        minimumCharge:
          type: number
        quantity:
          type: number
        rate:
          type: number
        rateOrigin:
          enum:
            - PRICE_PROFILE
            - PRICE_LIST
            - FILLED_MANUALLY
            - AUTOCALCULATED
          type: string
        taskId:
          format: int64
          type: integer
        total:
          type: number
        type:
          enum:
            - SIMPLE
            - CAT
          type: string
      type: object
    RemoteCATToolReferencesDto:
      properties:
        catResourceId:
          type: string
        catToolDocumentId:
          type: string
        editorUrl:
          type: string
      type: object
    ReportResultDTO:
      properties:
        url:
          type: string
      type: object
    ResponsiblePersonsDTO:
      properties:
        projectCoordinatorId:
          format: int64
          type: integer
        projectManagerId:
          format: int64
          type: integer
      type: object
    SendRemindersRequestDTO:
      properties:
        ids:
          items:
            format: int64
            type: integer
          type: array
      type: object
    SendRemindersResponseDTO:
      properties:
        numberOfSentEmails:
          format: int32
          type: integer
      type: object
    ServiceDTO:
      properties:
        active:
          description: should this value be available on the XTRF selection lists
          type: boolean
        default:
          description: should this value be set by default in XTRF selection lists
          type: boolean
        id:
          description: internal identifier
          format: int64
          type: integer
        name:
          description: localised name (formatted in the current user's locale)
          type: string
        preferred:
          description: should this value be available on the top of XTRF selection lists, in the Preferred section
          type: boolean
      type: object
    SettingsDTO:
      properties:
        local:
          $ref: "#/components/schemas/LocalSettingsDTO"
        name:
          type: string
      type: object
    SmartContactsDTO:
      properties:
        additionalIds:
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        primaryId:
          format: int64
          type: integer
      type: object
    SmartCustomFieldDTO:
      properties:
        value:
          type: object
      type: object
    SourceLanguageDTO:
      properties:
        sourceLanguageId:
          format: int64
          type: integer
      type: object
    SpecializationDTO:
      properties:
        specializationId:
          format: int64
          type: integer
      type: object
    StatusRequestDTO:
      properties:
        status:
          enum:
            - POSTPONED
            - TO_BE_SENT
            - SENT
            - CONFIRMED
            - BILL_CREATED
          type: string
      type: object
    StepTypeDto:
      properties:
        id:
          type: string
        jobTypeId:
          format: int64
          type: integer
        name:
          type: string
        semantics:
          $ref: "#/components/schemas/StepTypeSemanticsDto"
      type: object
    StepTypeSemanticsDto:
      properties:
        canVerifyFiles:
          type: boolean
        isScripted:
          type: boolean
      type: object
    StringDTO:
      properties:
        value:
          type: string
      type: object
    SubscriptionDTO:
      properties:
        embed:
          description: additional fields which should be embedded in the event
          type: string
        event:
          description: event to which you want to subscribe
          type: string
        filter:
          description: filter expression in the form 'attribute=value'
          type: string
        url:
          description: url that will be invoked by XTRF on event
          type: string
      type: object
    TargetLanguagesDTO:
      properties:
        targetLanguageIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    TaskCreateDTO:
      properties:
        clientTaskPONumber:
          description: client task PO number
          type: string
        dates:
          $ref: "#/components/schemas/ProjectDatesDTO"
        files:
          description: files
          items:
            $ref: "#/components/schemas/TaskFileDTO"
          type: array
        instructions:
          $ref: "#/components/schemas/InstructionsDTO"
        languageCombination:
          $ref: "#/components/schemas/CommonLanguageCombinationDTO"
        name:
          description: name
          type: string
        people:
          $ref: "#/components/schemas/ClassicPeopleDTO"
        specializationId:
          description: specialization
          format: int64
          type: integer
        workflowId:
          description: workflow
          format: int64
          type: integer
      type: object
    TaskDTO:
      properties:
        clientTaskPONumber:
          description: client task PO number
          type: string
        customFields:
          items:
            $ref: "#/components/schemas/CustomFieldDTO"
          properties:
            customFields:
              items:
                $ref: "#/components/schemas/CustomFieldDTO"
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          type: array
          xml:
            name: customFields
        dates:
          $ref: "#/components/schemas/ProjectDatesDTO"
        finance:
          $ref: "#/components/schemas/TaskFinanceDTO"
        id:
          description: internal identifier
          format: int64
          type: integer
        idNumber:
          description: identifier
          type: string
        instructions:
          $ref: "#/components/schemas/InstructionsDTO"
        jobs:
          $ref: "#/components/schemas/TaskJobsDTO"
        languageCombination:
          $ref: "#/components/schemas/CommonLanguageCombinationDTO"
        name:
          description: name
          type: string
        people:
          $ref: "#/components/schemas/ClassicPeopleDTO"
        projectId:
          description: project's internal identifier
          format: int64
          type: integer
        quoteId:
          description: quote's internal identifier
          format: int64
          type: integer
      type: object
    TaskFileDTO:
      description: describes files; remember that either url, content or token should be filled
      properties:
        category:
          description: file category
          enum:
            - WORKFILE
            - TM
            - DICTIONARY
            - REF
            - LOG_FILE
          type: string
        content:
          type: string
        name:
          type: string
        token:
          type: string
        url:
          type: string
      type: object
    TaskFilesDTO:
      properties:
        bundles:
          additionalProperties:
            items:
              $ref: "#/components/schemas/FileDTO"
            type: array
          type: object
        inputFiles:
          $ref: "#/components/schemas/InputFilesDTO"
        jobs:
          items:
            $ref: "#/components/schemas/JobDTO"
          type: array
        outputFiles:
          items:
            $ref: "#/components/schemas/FileDTO"
          type: array
      type: object
    TaskFinanceDTO:
      description: finance
      properties:
        invoiceable:
          description: is this task invoiceable or not
          type: boolean
      type: object
    TaskJobsDTO:
      properties:
        jobCount:
          format: int32
          type: integer
        jobIds:
          items:
            format: int64
            type: integer
          type: array
      type: object
    TaskProgressDTO:
      properties:
        phase:
          type: string
        status:
          type: string
      type: object
    TimeDTO:
      properties:
        value:
          format: int64
          type: integer
      type: object
    TimeZoneDTO:
      properties:
        displayName:
          type: string
        id:
          type: string
        offset:
          format: int32
          type: integer
      type: object
    UrlResultDTO:
      properties:
        url:
          type: string
      type: object
    UserDTO:
      properties:
        customFields:
          items:
            $ref: "#/components/schemas/CustomFieldDTO"
          properties:
            customFields:
              items:
                $ref: "#/components/schemas/CustomFieldDTO"
              type: array
              xml:
                name: customField
            empty:
              type: boolean
          type: array
          xml:
            name: customFields
        email:
          type: string
        firstName:
          type: string
        gender:
          type: string
        id:
          format: int64
          type: integer
        lastName:
          type: string
        login:
          type: string
        mobilePhone:
          type: string
        phone:
          type: string
        positionName:
          type: string
        timeZoneId:
          type: string
        userGroupName:
          type: string
      type: object
    VendorPriceProfileDTO:
      properties:
        vendorPriceProfileId:
          format: int64
          type: integer
      type: object
    ViewBriefDTO:
      properties:
        access:
          $ref: "#/components/schemas/AccessDTO"
        current:
          type: boolean
        id:
          format: int64
          type: integer
        lastModification:
          $ref: "#/components/schemas/LastModificationDTO"
        mine:
          type: boolean
        name:
          type: string
        owner:
          type: string
      type: object
    ViewDTO:
      properties:
        columns:
          items:
            $ref: "#/components/schemas/ColumnDTO"
          type: array
        order:
          $ref: "#/components/schemas/OrderDTO"
        permissions:
          $ref: "#/components/schemas/PermissionsDTO"
        settings:
          $ref: "#/components/schemas/SettingsDTO"
      type: object
    ViewDetailsDTO:
      properties:
        access:
          $ref: "#/components/schemas/AccessDTO"
        actions:
          items:
            $ref: "#/components/schemas/ActionDTO"
          type: array
        filter:
          $ref: "#/components/schemas/FilterDTO"
        view:
          $ref: "#/components/schemas/ViewDTO"
        viewId:
          format: int64
          type: integer
      type: object
    ViewWithIdDTO:
      properties:
        columns:
          items:
            $ref: "#/components/schemas/ColumnDTO"
          type: array
        order:
          $ref: "#/components/schemas/OrderDTO"
        permissions:
          $ref: "#/components/schemas/PermissionsDTO"
        settings:
          $ref: "#/components/schemas/SettingsDTO"
        viewId:
          format: int64
          type: integer
      type: object
    ViewsBriefDTO:
      properties:
        access:
          $ref: "#/components/schemas/AccessDTO"
        list:
          items:
            $ref: "#/components/schemas/ViewBriefDTO"
          type: array
      type: object
    VolumeDTO:
      properties:
        unitId:
          format: int64
          type: integer
        value:
          type: number
      type: object
  securitySchemes:
    X-AUTH-ACCESS-TOKEN:
      in: header
      name: X-AUTH-ACCESS-TOKEN
      type: apiKey
